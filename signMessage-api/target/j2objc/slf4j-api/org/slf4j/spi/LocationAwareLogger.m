//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/slf4j-api/org/slf4j/spi/LocationAwareLogger.java
//

#include "J2ObjC_source.h"
#include "org/slf4j/spi/LocationAwareLogger.h"

@interface OrgSlf4jSpiLocationAwareLogger : NSObject

@end

@implementation OrgSlf4jSpiLocationAwareLogger

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(logWithOrgSlf4jMarker:withNSString:withInt:withNSString:withNSObjectArray:withJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TRACE_INT", "I", .constantValue.asInt = OrgSlf4jSpiLocationAwareLogger_TRACE_INT, 0x19, -1, -1, -1, -1 },
    { "DEBUG_INT", "I", .constantValue.asInt = OrgSlf4jSpiLocationAwareLogger_DEBUG_INT, 0x19, -1, -1, -1, -1 },
    { "INFO_INT", "I", .constantValue.asInt = OrgSlf4jSpiLocationAwareLogger_INFO_INT, 0x19, -1, -1, -1, -1 },
    { "WARN_INT", "I", .constantValue.asInt = OrgSlf4jSpiLocationAwareLogger_WARN_INT, 0x19, -1, -1, -1, -1 },
    { "ERROR_INT", "I", .constantValue.asInt = OrgSlf4jSpiLocationAwareLogger_ERROR_INT, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "log", "LOrgSlf4jMarker;LNSString;ILNSString;[LNSObject;LJavaLangThrowable;" };
  static const J2ObjcClassInfo _OrgSlf4jSpiLocationAwareLogger = { "LocationAwareLogger", "org.slf4j.spi", ptrTable, methods, fields, 7, 0x609, 1, 5, -1, -1, -1, -1, -1 };
  return &_OrgSlf4jSpiLocationAwareLogger;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSlf4jSpiLocationAwareLogger)
