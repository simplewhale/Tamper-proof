//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/slf4j-api/org/slf4j/event/LoggingEvent.java
//

#include "J2ObjC_source.h"
#include "org/slf4j/event/LoggingEvent.h"

@interface OrgSlf4jEventLoggingEvent : NSObject

@end

@implementation OrgSlf4jEventLoggingEvent

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSlf4jEventLevel;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSlf4jMarker;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getLevel);
  methods[1].selector = @selector(getMarker);
  methods[2].selector = @selector(getLoggerName);
  methods[3].selector = @selector(getMessage);
  methods[4].selector = @selector(getThreadName);
  methods[5].selector = @selector(getArgumentArray);
  methods[6].selector = @selector(getTimeStamp);
  methods[7].selector = @selector(getThrowable);
  #pragma clang diagnostic pop
  static const J2ObjcClassInfo _OrgSlf4jEventLoggingEvent = { "LoggingEvent", "org.slf4j.event", NULL, methods, NULL, 7, 0x609, 8, 0, -1, -1, -1, -1, -1 };
  return &_OrgSlf4jEventLoggingEvent;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSlf4jEventLoggingEvent)
