//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/slf4j-api/org/slf4j/event/EventRecodingLogger.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSlf4jEventEventRecodingLogger")
#ifdef RESTRICT_OrgSlf4jEventEventRecodingLogger
#define INCLUDE_ALL_OrgSlf4jEventEventRecodingLogger 0
#else
#define INCLUDE_ALL_OrgSlf4jEventEventRecodingLogger 1
#endif
#undef RESTRICT_OrgSlf4jEventEventRecodingLogger

#if !defined (OrgSlf4jEventEventRecodingLogger_) && (INCLUDE_ALL_OrgSlf4jEventEventRecodingLogger || defined(INCLUDE_OrgSlf4jEventEventRecodingLogger))
#define OrgSlf4jEventEventRecodingLogger_

#define RESTRICT_OrgSlf4jLogger 1
#define INCLUDE_OrgSlf4jLogger 1
#include "org/slf4j/Logger.h"

@class IOSObjectArray;
@class JavaLangThrowable;
@class OrgSlf4jHelpersSubstituteLogger;
@protocol JavaUtilQueue;
@protocol OrgSlf4jMarker;

@interface OrgSlf4jEventEventRecodingLogger : NSObject < OrgSlf4jLogger > {
 @public
  NSString *name_;
  OrgSlf4jHelpersSubstituteLogger *logger_;
  id<JavaUtilQueue> eventQueue_;
}

#pragma mark Public

- (instancetype)initWithOrgSlf4jHelpersSubstituteLogger:(OrgSlf4jHelpersSubstituteLogger *)logger
                                      withJavaUtilQueue:(id<JavaUtilQueue>)eventQueue;

- (void)debugWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)msg;

- (void)debugWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
                         withId:(id)arg;

- (void)debugWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
              withNSObjectArray:(IOSObjectArray *)arguments;

- (void)debugWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
                         withId:(id)arg1
                         withId:(id)arg2;

- (void)debugWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)msg
          withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)debugWithNSString:(NSString *)msg;

- (void)debugWithNSString:(NSString *)format
                   withId:(id)arg;

- (void)debugWithNSString:(NSString *)format
        withNSObjectArray:(IOSObjectArray *)arguments;

- (void)debugWithNSString:(NSString *)format
                   withId:(id)arg1
                   withId:(id)arg2;

- (void)debugWithNSString:(NSString *)msg
    withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)errorWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)msg;

- (void)errorWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
                         withId:(id)arg;

- (void)errorWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
              withNSObjectArray:(IOSObjectArray *)arguments;

- (void)errorWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
                         withId:(id)arg1
                         withId:(id)arg2;

- (void)errorWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)msg
          withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)errorWithNSString:(NSString *)msg;

- (void)errorWithNSString:(NSString *)format
                   withId:(id)arg;

- (void)errorWithNSString:(NSString *)format
        withNSObjectArray:(IOSObjectArray *)arguments;

- (void)errorWithNSString:(NSString *)format
                   withId:(id)arg1
                   withId:(id)arg2;

- (void)errorWithNSString:(NSString *)msg
    withJavaLangThrowable:(JavaLangThrowable *)t;

- (NSString *)getName;

- (void)infoWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)msg;

- (void)infoWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)format
                        withId:(id)arg;

- (void)infoWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)format
             withNSObjectArray:(IOSObjectArray *)arguments;

- (void)infoWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)format
                        withId:(id)arg1
                        withId:(id)arg2;

- (void)infoWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)msg
         withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)infoWithNSString:(NSString *)msg;

- (void)infoWithNSString:(NSString *)format
                  withId:(id)arg;

- (void)infoWithNSString:(NSString *)format
       withNSObjectArray:(IOSObjectArray *)arguments;

- (void)infoWithNSString:(NSString *)format
                  withId:(id)arg1
                  withId:(id)arg2;

- (void)infoWithNSString:(NSString *)msg
   withJavaLangThrowable:(JavaLangThrowable *)t;

- (jboolean)isDebugEnabled;

- (jboolean)isDebugEnabledWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker;

- (jboolean)isErrorEnabled;

- (jboolean)isErrorEnabledWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker;

- (jboolean)isInfoEnabled;

- (jboolean)isInfoEnabledWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker;

- (jboolean)isTraceEnabled;

- (jboolean)isTraceEnabledWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker;

- (jboolean)isWarnEnabled;

- (jboolean)isWarnEnabledWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker;

- (void)traceWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)msg;

- (void)traceWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
                         withId:(id)arg;

- (void)traceWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
              withNSObjectArray:(IOSObjectArray *)argArray;

- (void)traceWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)format
                         withId:(id)arg1
                         withId:(id)arg2;

- (void)traceWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                   withNSString:(NSString *)msg
          withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)traceWithNSString:(NSString *)msg;

- (void)traceWithNSString:(NSString *)format
                   withId:(id)arg;

- (void)traceWithNSString:(NSString *)format
        withNSObjectArray:(IOSObjectArray *)arguments;

- (void)traceWithNSString:(NSString *)format
                   withId:(id)arg1
                   withId:(id)arg2;

- (void)traceWithNSString:(NSString *)msg
    withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)warnWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)msg;

- (void)warnWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)format
                        withId:(id)arg;

- (void)warnWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)format
             withNSObjectArray:(IOSObjectArray *)arguments;

- (void)warnWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)format
                        withId:(id)arg1
                        withId:(id)arg2;

- (void)warnWithOrgSlf4jMarker:(id<OrgSlf4jMarker>)marker
                  withNSString:(NSString *)msg
         withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)warnWithNSString:(NSString *)msg;

- (void)warnWithNSString:(NSString *)format
                  withId:(id)arg;

- (void)warnWithNSString:(NSString *)format
       withNSObjectArray:(IOSObjectArray *)arguments;

- (void)warnWithNSString:(NSString *)format
                  withId:(id)arg1
                  withId:(id)arg2;

- (void)warnWithNSString:(NSString *)msg
   withJavaLangThrowable:(JavaLangThrowable *)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSlf4jEventEventRecodingLogger)

J2OBJC_FIELD_SETTER(OrgSlf4jEventEventRecodingLogger, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgSlf4jEventEventRecodingLogger, logger_, OrgSlf4jHelpersSubstituteLogger *)
J2OBJC_FIELD_SETTER(OrgSlf4jEventEventRecodingLogger, eventQueue_, id<JavaUtilQueue>)

FOUNDATION_EXPORT void OrgSlf4jEventEventRecodingLogger_initWithOrgSlf4jHelpersSubstituteLogger_withJavaUtilQueue_(OrgSlf4jEventEventRecodingLogger *self, OrgSlf4jHelpersSubstituteLogger *logger, id<JavaUtilQueue> eventQueue);

FOUNDATION_EXPORT OrgSlf4jEventEventRecodingLogger *new_OrgSlf4jEventEventRecodingLogger_initWithOrgSlf4jHelpersSubstituteLogger_withJavaUtilQueue_(OrgSlf4jHelpersSubstituteLogger *logger, id<JavaUtilQueue> eventQueue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSlf4jEventEventRecodingLogger *create_OrgSlf4jEventEventRecodingLogger_initWithOrgSlf4jHelpersSubstituteLogger_withJavaUtilQueue_(OrgSlf4jHelpersSubstituteLogger *logger, id<JavaUtilQueue> eventQueue);

J2OBJC_TYPE_LITERAL_HEADER(OrgSlf4jEventEventRecodingLogger)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSlf4jEventEventRecodingLogger")
