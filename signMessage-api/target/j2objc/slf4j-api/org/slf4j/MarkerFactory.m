//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/slf4j-api/org/slf4j/MarkerFactory.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/NoClassDefFoundError.h"
#include "java/lang/NoSuchMethodError.h"
#include "org/slf4j/IMarkerFactory.h"
#include "org/slf4j/Marker.h"
#include "org/slf4j/MarkerFactory.h"
#include "org/slf4j/helpers/BasicMarkerFactory.h"
#include "org/slf4j/helpers/Util.h"
#include "org/slf4j/impl/StaticMarkerBinder.h"

@interface OrgSlf4jMarkerFactory ()

- (instancetype)init;

+ (id<OrgSlf4jIMarkerFactory>)bwCompatibleGetMarkerFactoryFromBinder;

@end

__attribute__((unused)) static void OrgSlf4jMarkerFactory_init(OrgSlf4jMarkerFactory *self);

__attribute__((unused)) static OrgSlf4jMarkerFactory *new_OrgSlf4jMarkerFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSlf4jMarkerFactory *create_OrgSlf4jMarkerFactory_init(void);

__attribute__((unused)) static id<OrgSlf4jIMarkerFactory> OrgSlf4jMarkerFactory_bwCompatibleGetMarkerFactoryFromBinder(void);

J2OBJC_INITIALIZED_DEFN(OrgSlf4jMarkerFactory)

id<OrgSlf4jIMarkerFactory> OrgSlf4jMarkerFactory_MARKER_FACTORY;

@implementation OrgSlf4jMarkerFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSlf4jMarkerFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<OrgSlf4jIMarkerFactory>)bwCompatibleGetMarkerFactoryFromBinder {
  return OrgSlf4jMarkerFactory_bwCompatibleGetMarkerFactoryFromBinder();
}

+ (id<OrgSlf4jMarker>)getMarkerWithNSString:(NSString *)name {
  return OrgSlf4jMarkerFactory_getMarkerWithNSString_(name);
}

+ (id<OrgSlf4jMarker>)getDetachedMarkerWithNSString:(NSString *)name {
  return OrgSlf4jMarkerFactory_getDetachedMarkerWithNSString_(name);
}

+ (id<OrgSlf4jIMarkerFactory>)getIMarkerFactory {
  return OrgSlf4jMarkerFactory_getIMarkerFactory();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSlf4jIMarkerFactory;", 0xa, -1, -1, 0, -1, -1, -1 },
    { NULL, "LOrgSlf4jMarker;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSlf4jMarker;", 0x9, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSlf4jIMarkerFactory;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(bwCompatibleGetMarkerFactoryFromBinder);
  methods[2].selector = @selector(getMarkerWithNSString:);
  methods[3].selector = @selector(getDetachedMarkerWithNSString:);
  methods[4].selector = @selector(getIMarkerFactory);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MARKER_FACTORY", "LOrgSlf4jIMarkerFactory;", .constantValue.asLong = 0, 0x8, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangNoClassDefFoundError;", "getMarker", "LNSString;", "getDetachedMarker", &OrgSlf4jMarkerFactory_MARKER_FACTORY };
  static const J2ObjcClassInfo _OrgSlf4jMarkerFactory = { "MarkerFactory", "org.slf4j", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgSlf4jMarkerFactory;
}

+ (void)initialize {
  if (self == [OrgSlf4jMarkerFactory class]) {
    {
      @try {
        OrgSlf4jMarkerFactory_MARKER_FACTORY = OrgSlf4jMarkerFactory_bwCompatibleGetMarkerFactoryFromBinder();
      }
      @catch (JavaLangNoClassDefFoundError *e) {
        OrgSlf4jMarkerFactory_MARKER_FACTORY = new_OrgSlf4jHelpersBasicMarkerFactory_init();
      }
      @catch (JavaLangException *e) {
        OrgSlf4jHelpersUtil_reportWithNSString_withJavaLangThrowable_(@"Unexpected failure while binding MarkerFactory", e);
      }
    }
    J2OBJC_SET_INITIALIZED(OrgSlf4jMarkerFactory)
  }
}

@end

void OrgSlf4jMarkerFactory_init(OrgSlf4jMarkerFactory *self) {
  NSObject_init(self);
}

OrgSlf4jMarkerFactory *new_OrgSlf4jMarkerFactory_init() {
  J2OBJC_NEW_IMPL(OrgSlf4jMarkerFactory, init)
}

OrgSlf4jMarkerFactory *create_OrgSlf4jMarkerFactory_init() {
  J2OBJC_CREATE_IMPL(OrgSlf4jMarkerFactory, init)
}

id<OrgSlf4jIMarkerFactory> OrgSlf4jMarkerFactory_bwCompatibleGetMarkerFactoryFromBinder() {
  OrgSlf4jMarkerFactory_initialize();
  @try {
    return [((OrgSlf4jImplStaticMarkerBinder *) nil_chk(OrgSlf4jImplStaticMarkerBinder_getSingleton())) getMarkerFactory];
  }
  @catch (JavaLangNoSuchMethodError *nsme) {
    return [((OrgSlf4jImplStaticMarkerBinder *) nil_chk(JreLoadStatic(OrgSlf4jImplStaticMarkerBinder, SINGLETON))) getMarkerFactory];
  }
}

id<OrgSlf4jMarker> OrgSlf4jMarkerFactory_getMarkerWithNSString_(NSString *name) {
  OrgSlf4jMarkerFactory_initialize();
  return [((id<OrgSlf4jIMarkerFactory>) nil_chk(OrgSlf4jMarkerFactory_MARKER_FACTORY)) getMarkerWithNSString:name];
}

id<OrgSlf4jMarker> OrgSlf4jMarkerFactory_getDetachedMarkerWithNSString_(NSString *name) {
  OrgSlf4jMarkerFactory_initialize();
  return [((id<OrgSlf4jIMarkerFactory>) nil_chk(OrgSlf4jMarkerFactory_MARKER_FACTORY)) getDetachedMarkerWithNSString:name];
}

id<OrgSlf4jIMarkerFactory> OrgSlf4jMarkerFactory_getIMarkerFactory() {
  OrgSlf4jMarkerFactory_initialize();
  return OrgSlf4jMarkerFactory_MARKER_FACTORY;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSlf4jMarkerFactory)
