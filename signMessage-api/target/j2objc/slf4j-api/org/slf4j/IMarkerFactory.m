//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/slf4j-api/org/slf4j/IMarkerFactory.java
//

#include "J2ObjC_source.h"
#include "org/slf4j/IMarkerFactory.h"

@interface OrgSlf4jIMarkerFactory : NSObject

@end

@implementation OrgSlf4jIMarkerFactory

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSlf4jMarker;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 3, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSlf4jMarker;", 0x401, 4, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getMarkerWithNSString:);
  methods[1].selector = @selector(existsWithNSString:);
  methods[2].selector = @selector(detachMarkerWithNSString:);
  methods[3].selector = @selector(getDetachedMarkerWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getMarker", "LNSString;", "exists", "detachMarker", "getDetachedMarker" };
  static const J2ObjcClassInfo _OrgSlf4jIMarkerFactory = { "IMarkerFactory", "org.slf4j", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgSlf4jIMarkerFactory;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSlf4jIMarkerFactory)
