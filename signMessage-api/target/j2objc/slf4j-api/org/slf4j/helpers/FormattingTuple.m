//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/slf4j-api/org/slf4j/helpers/FormattingTuple.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "org/slf4j/helpers/FormattingTuple.h"

@interface OrgSlf4jHelpersFormattingTuple () {
 @public
  NSString *message_;
  JavaLangThrowable *throwable_;
  IOSObjectArray *argArray_;
}

@end

J2OBJC_FIELD_SETTER(OrgSlf4jHelpersFormattingTuple, message_, NSString *)
J2OBJC_FIELD_SETTER(OrgSlf4jHelpersFormattingTuple, throwable_, JavaLangThrowable *)
J2OBJC_FIELD_SETTER(OrgSlf4jHelpersFormattingTuple, argArray_, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(OrgSlf4jHelpersFormattingTuple)

OrgSlf4jHelpersFormattingTuple *OrgSlf4jHelpersFormattingTuple_NULL;

@implementation OrgSlf4jHelpersFormattingTuple

- (instancetype)initWithNSString:(NSString *)message {
  OrgSlf4jHelpersFormattingTuple_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
               withNSObjectArray:(IOSObjectArray *)argArray
           withJavaLangThrowable:(JavaLangThrowable *)throwable {
  OrgSlf4jHelpersFormattingTuple_initWithNSString_withNSObjectArray_withJavaLangThrowable_(self, message, argArray, throwable);
  return self;
}

- (NSString *)getMessage {
  return message_;
}

- (IOSObjectArray *)getArgArray {
  return argArray_;
}

- (JavaLangThrowable *)getThrowable {
  return throwable_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withNSObjectArray:withJavaLangThrowable:);
  methods[2].selector = @selector(getMessage);
  methods[3].selector = @selector(getArgArray);
  methods[4].selector = @selector(getThrowable);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NULL", "LOrgSlf4jHelpersFormattingTuple;", .constantValue.asLong = 0, 0x9, -1, 2, -1, -1 },
    { "message_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "throwable_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "argArray_", "[LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;[LNSObject;LJavaLangThrowable;", &OrgSlf4jHelpersFormattingTuple_NULL };
  static const J2ObjcClassInfo _OrgSlf4jHelpersFormattingTuple = { "FormattingTuple", "org.slf4j.helpers", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, -1, -1 };
  return &_OrgSlf4jHelpersFormattingTuple;
}

+ (void)initialize {
  if (self == [OrgSlf4jHelpersFormattingTuple class]) {
    OrgSlf4jHelpersFormattingTuple_NULL = new_OrgSlf4jHelpersFormattingTuple_initWithNSString_(nil);
    J2OBJC_SET_INITIALIZED(OrgSlf4jHelpersFormattingTuple)
  }
}

@end

void OrgSlf4jHelpersFormattingTuple_initWithNSString_(OrgSlf4jHelpersFormattingTuple *self, NSString *message) {
  OrgSlf4jHelpersFormattingTuple_initWithNSString_withNSObjectArray_withJavaLangThrowable_(self, message, nil, nil);
}

OrgSlf4jHelpersFormattingTuple *new_OrgSlf4jHelpersFormattingTuple_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgSlf4jHelpersFormattingTuple, initWithNSString_, message)
}

OrgSlf4jHelpersFormattingTuple *create_OrgSlf4jHelpersFormattingTuple_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgSlf4jHelpersFormattingTuple, initWithNSString_, message)
}

void OrgSlf4jHelpersFormattingTuple_initWithNSString_withNSObjectArray_withJavaLangThrowable_(OrgSlf4jHelpersFormattingTuple *self, NSString *message, IOSObjectArray *argArray, JavaLangThrowable *throwable) {
  NSObject_init(self);
  self->message_ = message;
  self->throwable_ = throwable;
  self->argArray_ = argArray;
}

OrgSlf4jHelpersFormattingTuple *new_OrgSlf4jHelpersFormattingTuple_initWithNSString_withNSObjectArray_withJavaLangThrowable_(NSString *message, IOSObjectArray *argArray, JavaLangThrowable *throwable) {
  J2OBJC_NEW_IMPL(OrgSlf4jHelpersFormattingTuple, initWithNSString_withNSObjectArray_withJavaLangThrowable_, message, argArray, throwable)
}

OrgSlf4jHelpersFormattingTuple *create_OrgSlf4jHelpersFormattingTuple_initWithNSString_withNSObjectArray_withJavaLangThrowable_(NSString *message, IOSObjectArray *argArray, JavaLangThrowable *throwable) {
  J2OBJC_CREATE_IMPL(OrgSlf4jHelpersFormattingTuple, initWithNSString_withNSObjectArray_withJavaLangThrowable_, message, argArray, throwable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSlf4jHelpersFormattingTuple)
