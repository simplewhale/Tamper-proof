//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/slf4j-api/org/slf4j/helpers/NOPLoggerFactory.java
//

#include "J2ObjC_source.h"
#include "org/slf4j/Logger.h"
#include "org/slf4j/helpers/NOPLogger.h"
#include "org/slf4j/helpers/NOPLoggerFactory.h"

@implementation OrgSlf4jHelpersNOPLoggerFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSlf4jHelpersNOPLoggerFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgSlf4jLogger>)getLoggerWithNSString:(NSString *)name {
  return JreLoadStatic(OrgSlf4jHelpersNOPLogger, NOP_LOGGER);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSlf4jLogger;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getLoggerWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getLogger", "LNSString;" };
  static const J2ObjcClassInfo _OrgSlf4jHelpersNOPLoggerFactory = { "NOPLoggerFactory", "org.slf4j.helpers", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgSlf4jHelpersNOPLoggerFactory;
}

@end

void OrgSlf4jHelpersNOPLoggerFactory_init(OrgSlf4jHelpersNOPLoggerFactory *self) {
  NSObject_init(self);
}

OrgSlf4jHelpersNOPLoggerFactory *new_OrgSlf4jHelpersNOPLoggerFactory_init() {
  J2OBJC_NEW_IMPL(OrgSlf4jHelpersNOPLoggerFactory, init)
}

OrgSlf4jHelpersNOPLoggerFactory *create_OrgSlf4jHelpersNOPLoggerFactory_init() {
  J2OBJC_CREATE_IMPL(OrgSlf4jHelpersNOPLoggerFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSlf4jHelpersNOPLoggerFactory)
