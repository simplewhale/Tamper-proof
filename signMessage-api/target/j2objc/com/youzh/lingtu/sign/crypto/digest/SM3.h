//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/digest/SM3.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoDigestSM3")
#ifdef RESTRICT_ComYouzhLingtuSignCryptoDigestSM3
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoDigestSM3 0
#else
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoDigestSM3 1
#endif
#undef RESTRICT_ComYouzhLingtuSignCryptoDigestSM3

#if !defined (ComYouzhLingtuSignCryptoDigestSM3_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoDigestSM3 || defined(INCLUDE_ComYouzhLingtuSignCryptoDigestSM3))
#define ComYouzhLingtuSignCryptoDigestSM3_

@interface ComYouzhLingtuSignCryptoDigestSM3 : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoDigestSM3)

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoDigestSM3)

#endif

#if !defined (ComYouzhLingtuSignCryptoDigestSM3_Digest_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoDigestSM3 || defined(INCLUDE_ComYouzhLingtuSignCryptoDigestSM3_Digest))
#define ComYouzhLingtuSignCryptoDigestSM3_Digest_

#define RESTRICT_ComYouzhLingtuSignCryptoDigestBCMessageDigest 1
#define INCLUDE_ComYouzhLingtuSignCryptoDigestBCMessageDigest 1
#include "com/youzh/lingtu/sign/crypto/digest/BCMessageDigest.h"

@protocol OrgSpongycastleCryptoDigest;

@interface ComYouzhLingtuSignCryptoDigestSM3_Digest : ComYouzhLingtuSignCryptoDigestBCMessageDigest < NSCopying >

#pragma mark Public

- (instancetype)init;

- (id)java_clone;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoDigestSM3_Digest)

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoDigestSM3_Digest_init(ComYouzhLingtuSignCryptoDigestSM3_Digest *self);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoDigestSM3_Digest *new_ComYouzhLingtuSignCryptoDigestSM3_Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoDigestSM3_Digest *create_ComYouzhLingtuSignCryptoDigestSM3_Digest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoDigestSM3_Digest)

#endif

#if !defined (ComYouzhLingtuSignCryptoDigestSM3_Mappings_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoDigestSM3 || defined(INCLUDE_ComYouzhLingtuSignCryptoDigestSM3_Mappings))
#define ComYouzhLingtuSignCryptoDigestSM3_Mappings_

#define RESTRICT_ComYouzhLingtuSignCryptoDigestDigestAlgorithmProvider 1
#define INCLUDE_ComYouzhLingtuSignCryptoDigestDigestAlgorithmProvider 1
#include "com/youzh/lingtu/sign/crypto/digest/DigestAlgorithmProvider.h"

@protocol ComYouzhLingtuSignCryptoConfigConfigurableProvider;

@interface ComYouzhLingtuSignCryptoDigestSM3_Mappings : ComYouzhLingtuSignCryptoDigestDigestAlgorithmProvider

#pragma mark Public

- (instancetype)init;

- (void)configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:(id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(ComYouzhLingtuSignCryptoDigestSM3_Mappings)

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoDigestSM3_Mappings_init(ComYouzhLingtuSignCryptoDigestSM3_Mappings *self);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoDigestSM3_Mappings *new_ComYouzhLingtuSignCryptoDigestSM3_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoDigestSM3_Mappings *create_ComYouzhLingtuSignCryptoDigestSM3_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoDigestSM3_Mappings)

#endif

#pragma pop_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoDigestSM3")
