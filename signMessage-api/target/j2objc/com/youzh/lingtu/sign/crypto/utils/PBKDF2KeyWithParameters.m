//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/PBKDF2KeyWithParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/utils/PBKDF2Key.h"
#include "com/youzh/lingtu/sign/crypto/utils/PBKDF2KeyWithParameters.h"
#include "org/spongycastle/crypto/CharToByteConverter.h"
#include "org/spongycastle/util/Arrays.h"

@interface ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters () {
 @public
  IOSByteArray *salt_;
  jint iterationCount_;
}

@end

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters, salt_, IOSByteArray *)

@implementation ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters

- (instancetype)initWithCharArray:(IOSCharArray *)password
withOrgSpongycastleCryptoCharToByteConverter:(id<OrgSpongycastleCryptoCharToByteConverter>)converter
                    withByteArray:(IOSByteArray *)salt
                          withInt:(jint)iterationCount {
  ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters_initWithCharArray_withOrgSpongycastleCryptoCharToByteConverter_withByteArray_withInt_(self, password, converter, salt, iterationCount);
  return self;
}

- (IOSByteArray *)getSalt {
  return salt_;
}

- (jint)getIterationCount {
  return iterationCount_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCharArray:withOrgSpongycastleCryptoCharToByteConverter:withByteArray:withInt:);
  methods[1].selector = @selector(getSalt);
  methods[2].selector = @selector(getIterationCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "salt_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iterationCount_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[CLOrgSpongycastleCryptoCharToByteConverter;[BI" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters = { "PBKDF2KeyWithParameters", "com.youzh.lingtu.sign.crypto.utils", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters;
}

@end

void ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters_initWithCharArray_withOrgSpongycastleCryptoCharToByteConverter_withByteArray_withInt_(ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters *self, IOSCharArray *password, id<OrgSpongycastleCryptoCharToByteConverter> converter, IOSByteArray *salt, jint iterationCount) {
  ComYouzhLingtuSignCryptoUtilsPBKDF2Key_initWithCharArray_withOrgSpongycastleCryptoCharToByteConverter_(self, password, converter);
  self->salt_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(salt);
  self->iterationCount_ = iterationCount;
}

ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters *new_ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters_initWithCharArray_withOrgSpongycastleCryptoCharToByteConverter_withByteArray_withInt_(IOSCharArray *password, id<OrgSpongycastleCryptoCharToByteConverter> converter, IOSByteArray *salt, jint iterationCount) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters, initWithCharArray_withOrgSpongycastleCryptoCharToByteConverter_withByteArray_withInt_, password, converter, salt, iterationCount)
}

ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters *create_ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters_initWithCharArray_withOrgSpongycastleCryptoCharToByteConverter_withByteArray_withInt_(IOSCharArray *password, id<OrgSpongycastleCryptoCharToByteConverter> converter, IOSByteArray *salt, jint iterationCount) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters, initWithCharArray_withOrgSpongycastleCryptoCharToByteConverter_withByteArray_withInt_, password, converter, salt, iterationCount)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoUtilsPBKDF2KeyWithParameters)
