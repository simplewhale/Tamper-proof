//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/EC5Util.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsEC5Util")
#ifdef RESTRICT_ComYouzhLingtuSignCryptoUtilsEC5Util
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsEC5Util 0
#else
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsEC5Util 1
#endif
#undef RESTRICT_ComYouzhLingtuSignCryptoUtilsEC5Util

#if !defined (ComYouzhLingtuSignCryptoUtilsEC5Util_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsEC5Util || defined(INCLUDE_ComYouzhLingtuSignCryptoUtilsEC5Util))
#define ComYouzhLingtuSignCryptoUtilsEC5Util_

@class ComYouzhLingtuSignCryptoUtilsECParameterSpec;
@class IOSByteArray;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPoint;
@class JavaSecuritySpecEllipticCurve;
@class OrgSpongycastleAsn1X9X962Parameters;
@class OrgSpongycastleAsn1X9X9ECParameters;
@class OrgSpongycastleMathEcECCurve;
@class OrgSpongycastleMathEcECPoint;
@protocol ComYouzhLingtuSignCryptoConfigProviderConfiguration;
@protocol JavaSecuritySpecECField;
@protocol OrgSpongycastleMathFieldFiniteField;

@interface ComYouzhLingtuSignCryptoUtilsEC5Util : NSObject

#pragma mark Public

- (instancetype)init;

+ (JavaSecuritySpecEllipticCurve *)convertCurveWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                                                                  withByteArray:(IOSByteArray *)seed;

+ (OrgSpongycastleMathEcECCurve *)convertCurveWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ec;

+ (id<JavaSecuritySpecECField>)convertFieldWithOrgSpongycastleMathFieldFiniteField:(id<OrgSpongycastleMathFieldFiniteField>)field;

+ (OrgSpongycastleMathEcECPoint *)convertPointWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                                                   withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point
                                                                   withBoolean:(jboolean)withCompression;

+ (OrgSpongycastleMathEcECPoint *)convertPointWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec
                                                      withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point
                                                                      withBoolean:(jboolean)withCompression;

+ (ComYouzhLingtuSignCryptoUtilsECParameterSpec *)convertSpecWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec
                                                                                     withBoolean:(jboolean)withCompression;

+ (JavaSecuritySpecECParameterSpec *)convertSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                                 withComYouzhLingtuSignCryptoUtilsECParameterSpec:(ComYouzhLingtuSignCryptoUtilsECParameterSpec *)spec;

+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgSpongycastleAsn1X9X962Parameters:(OrgSpongycastleAsn1X9X962Parameters *)params
                                                         withOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve;

+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgSpongycastleAsn1X9X9ECParameters:(OrgSpongycastleAsn1X9X9ECParameters *)domainParameters;

+ (OrgSpongycastleMathEcECCurve *)getCurveWithComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration
                                                          withOrgSpongycastleAsn1X9X962Parameters:(OrgSpongycastleAsn1X9X962Parameters *)params;

@end

J2OBJC_STATIC_INIT(ComYouzhLingtuSignCryptoUtilsEC5Util)

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsEC5Util_init(ComYouzhLingtuSignCryptoUtilsEC5Util *self);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsEC5Util *new_ComYouzhLingtuSignCryptoUtilsEC5Util_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsEC5Util *create_ComYouzhLingtuSignCryptoUtilsEC5Util_init(void);

FOUNDATION_EXPORT OrgSpongycastleMathEcECCurve *ComYouzhLingtuSignCryptoUtilsEC5Util_getCurveWithComYouzhLingtuSignCryptoConfigProviderConfiguration_withOrgSpongycastleAsn1X9X962Parameters_(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration, OrgSpongycastleAsn1X9X962Parameters *params);

FOUNDATION_EXPORT JavaSecuritySpecECParameterSpec *ComYouzhLingtuSignCryptoUtilsEC5Util_convertToSpecWithOrgSpongycastleAsn1X9X962Parameters_withOrgSpongycastleMathEcECCurve_(OrgSpongycastleAsn1X9X962Parameters *params, OrgSpongycastleMathEcECCurve *curve);

FOUNDATION_EXPORT JavaSecuritySpecECParameterSpec *ComYouzhLingtuSignCryptoUtilsEC5Util_convertToSpecWithOrgSpongycastleAsn1X9X9ECParameters_(OrgSpongycastleAsn1X9X9ECParameters *domainParameters);

FOUNDATION_EXPORT JavaSecuritySpecEllipticCurve *ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(OrgSpongycastleMathEcECCurve *curve, IOSByteArray *seed);

FOUNDATION_EXPORT OrgSpongycastleMathEcECCurve *ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_(JavaSecuritySpecEllipticCurve *ec);

FOUNDATION_EXPORT id<JavaSecuritySpecECField> ComYouzhLingtuSignCryptoUtilsEC5Util_convertFieldWithOrgSpongycastleMathFieldFiniteField_(id<OrgSpongycastleMathFieldFiniteField> field);

FOUNDATION_EXPORT JavaSecuritySpecECParameterSpec *ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(JavaSecuritySpecEllipticCurve *ellipticCurve, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsECParameterSpec *ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(JavaSecuritySpecECParameterSpec *ecSpec, jboolean withCompression);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *ComYouzhLingtuSignCryptoUtilsEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(JavaSecuritySpecECParameterSpec *ecSpec, JavaSecuritySpecECPoint *point, jboolean withCompression);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *ComYouzhLingtuSignCryptoUtilsEC5Util_convertPointWithOrgSpongycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(OrgSpongycastleMathEcECCurve *curve, JavaSecuritySpecECPoint *point, jboolean withCompression);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoUtilsEC5Util)

#endif

#pragma pop_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsEC5Util")
