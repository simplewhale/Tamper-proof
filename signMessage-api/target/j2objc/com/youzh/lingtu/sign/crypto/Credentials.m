//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/Credentials.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/Credentials.h"
#include "com/youzh/lingtu/sign/crypto/ECKeyPair.h"
#include "com/youzh/lingtu/sign/crypto/Keys.h"
#include "com/youzh/lingtu/sign/crypto/utils/Numeric.h"
#include "java/math/BigInteger.h"

@interface ComYouzhLingtuSignCryptoCredentials () {
 @public
  ComYouzhLingtuSignCryptoECKeyPair *ecKeyPair_;
  NSString *address_;
}

- (instancetype)initWithComYouzhLingtuSignCryptoECKeyPair:(ComYouzhLingtuSignCryptoECKeyPair *)ecKeyPair
                                             withNSString:(NSString *)address;

@end

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoCredentials, ecKeyPair_, ComYouzhLingtuSignCryptoECKeyPair *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoCredentials, address_, NSString *)

__attribute__((unused)) static void ComYouzhLingtuSignCryptoCredentials_initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_(ComYouzhLingtuSignCryptoCredentials *self, ComYouzhLingtuSignCryptoECKeyPair *ecKeyPair, NSString *address);

__attribute__((unused)) static ComYouzhLingtuSignCryptoCredentials *new_ComYouzhLingtuSignCryptoCredentials_initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_(ComYouzhLingtuSignCryptoECKeyPair *ecKeyPair, NSString *address) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYouzhLingtuSignCryptoCredentials *create_ComYouzhLingtuSignCryptoCredentials_initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_(ComYouzhLingtuSignCryptoECKeyPair *ecKeyPair, NSString *address);

@implementation ComYouzhLingtuSignCryptoCredentials

- (instancetype)initWithComYouzhLingtuSignCryptoECKeyPair:(ComYouzhLingtuSignCryptoECKeyPair *)ecKeyPair
                                             withNSString:(NSString *)address {
  ComYouzhLingtuSignCryptoCredentials_initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_(self, ecKeyPair, address);
  return self;
}

- (ComYouzhLingtuSignCryptoECKeyPair *)getEcKeyPair {
  return ecKeyPair_;
}

- (NSString *)getAddress {
  return address_;
}

+ (ComYouzhLingtuSignCryptoCredentials *)createWithComYouzhLingtuSignCryptoECKeyPair:(ComYouzhLingtuSignCryptoECKeyPair *)ecKeyPair {
  return ComYouzhLingtuSignCryptoCredentials_createWithComYouzhLingtuSignCryptoECKeyPair_(ecKeyPair);
}

+ (ComYouzhLingtuSignCryptoCredentials *)createWithNSString:(NSString *)privateKey
                                               withNSString:(NSString *)publicKey {
  return ComYouzhLingtuSignCryptoCredentials_createWithNSString_withNSString_(privateKey, publicKey);
}

+ (ComYouzhLingtuSignCryptoCredentials *)createWithNSString:(NSString *)privateKey {
  return ComYouzhLingtuSignCryptoCredentials_createWithNSString_(privateKey);
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return true;
  }
  if (o == nil || [self java_getClass] != [o java_getClass]) {
    return false;
  }
  ComYouzhLingtuSignCryptoCredentials *that = (ComYouzhLingtuSignCryptoCredentials *) cast_chk(o, [ComYouzhLingtuSignCryptoCredentials class]);
  if (ecKeyPair_ != nil ? ![ecKeyPair_ isEqual:that->ecKeyPair_] : that->ecKeyPair_ != nil) {
    return false;
  }
  return address_ != nil ? [address_ isEqual:that->address_] : that->address_ == nil;
}

- (NSUInteger)hash {
  jint result = ecKeyPair_ != nil ? ((jint) [ecKeyPair_ hash]) : 0;
  result = 31 * result + (address_ != nil ? ((jint) [address_ hash]) : 0);
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoECKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoCredentials;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoCredentials;", 0x9, 1, 3, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoCredentials;", 0x9, 1, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComYouzhLingtuSignCryptoECKeyPair:withNSString:);
  methods[1].selector = @selector(getEcKeyPair);
  methods[2].selector = @selector(getAddress);
  methods[3].selector = @selector(createWithComYouzhLingtuSignCryptoECKeyPair:);
  methods[4].selector = @selector(createWithNSString:withNSString:);
  methods[5].selector = @selector(createWithNSString:);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ecKeyPair_", "LComYouzhLingtuSignCryptoECKeyPair;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "address_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoECKeyPair;LNSString;", "create", "LComYouzhLingtuSignCryptoECKeyPair;", "LNSString;LNSString;", "LNSString;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoCredentials = { "Credentials", "com.youzh.lingtu.sign.crypto", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoCredentials;
}

@end

void ComYouzhLingtuSignCryptoCredentials_initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_(ComYouzhLingtuSignCryptoCredentials *self, ComYouzhLingtuSignCryptoECKeyPair *ecKeyPair, NSString *address) {
  NSObject_init(self);
  self->ecKeyPair_ = ecKeyPair;
  self->address_ = address;
}

ComYouzhLingtuSignCryptoCredentials *new_ComYouzhLingtuSignCryptoCredentials_initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_(ComYouzhLingtuSignCryptoECKeyPair *ecKeyPair, NSString *address) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoCredentials, initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_, ecKeyPair, address)
}

ComYouzhLingtuSignCryptoCredentials *create_ComYouzhLingtuSignCryptoCredentials_initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_(ComYouzhLingtuSignCryptoECKeyPair *ecKeyPair, NSString *address) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoCredentials, initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_, ecKeyPair, address)
}

ComYouzhLingtuSignCryptoCredentials *ComYouzhLingtuSignCryptoCredentials_createWithComYouzhLingtuSignCryptoECKeyPair_(ComYouzhLingtuSignCryptoECKeyPair *ecKeyPair) {
  ComYouzhLingtuSignCryptoCredentials_initialize();
  NSString *address = ComYouzhLingtuSignCryptoUtilsNumeric_prependHexPrefixWithNSString_(ComYouzhLingtuSignCryptoKeys_getAddressWithComYouzhLingtuSignCryptoECKeyPair_(ecKeyPair));
  return new_ComYouzhLingtuSignCryptoCredentials_initWithComYouzhLingtuSignCryptoECKeyPair_withNSString_(ecKeyPair, address);
}

ComYouzhLingtuSignCryptoCredentials *ComYouzhLingtuSignCryptoCredentials_createWithNSString_withNSString_(NSString *privateKey, NSString *publicKey) {
  ComYouzhLingtuSignCryptoCredentials_initialize();
  return ComYouzhLingtuSignCryptoCredentials_createWithComYouzhLingtuSignCryptoECKeyPair_(new_ComYouzhLingtuSignCryptoECKeyPair_initWithJavaMathBigInteger_withJavaMathBigInteger_(ComYouzhLingtuSignCryptoUtilsNumeric_toBigIntWithNSString_(privateKey), ComYouzhLingtuSignCryptoUtilsNumeric_toBigIntWithNSString_(publicKey)));
}

ComYouzhLingtuSignCryptoCredentials *ComYouzhLingtuSignCryptoCredentials_createWithNSString_(NSString *privateKey) {
  ComYouzhLingtuSignCryptoCredentials_initialize();
  return ComYouzhLingtuSignCryptoCredentials_createWithComYouzhLingtuSignCryptoECKeyPair_(ComYouzhLingtuSignCryptoECKeyPair_createWithJavaMathBigInteger_(ComYouzhLingtuSignCryptoUtilsNumeric_toBigIntWithNSString_(privateKey)));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoCredentials)
