//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/dstu/BCDSTU4145PublicKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/config/BouncyCastleProvider.h"
#include "com/youzh/lingtu/sign/crypto/config/ProviderConfiguration.h"
#include "com/youzh/lingtu/sign/crypto/dstu/BCDSTU4145PublicKey.h"
#include "com/youzh/lingtu/sign/crypto/utils/EC5Util.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECNamedCurveParameterSpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECNamedCurveSpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECParameterSpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECPublicKeySpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/KeyUtil.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/security/interfaces/ECPublicKey.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/ECPublicKeySpec.h"
#include "java/security/spec/EllipticCurve.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/DERBitString.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/asn1/ua/DSTU4145BinaryField.h"
#include "org/spongycastle/asn1/ua/DSTU4145ECBinary.h"
#include "org/spongycastle/asn1/ua/DSTU4145NamedCurves.h"
#include "org/spongycastle/asn1/ua/DSTU4145Params.h"
#include "org/spongycastle/asn1/ua/DSTU4145PointEncoder.h"
#include "org/spongycastle/asn1/ua/UAObjectIdentifiers.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/spongycastle/asn1/x9/X962Parameters.h"
#include "org/spongycastle/asn1/x9/X9ECParameters.h"
#include "org/spongycastle/crypto/params/ECDomainParameters.h"
#include "org/spongycastle/crypto/params/ECPublicKeyParameters.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/util/Strings.h"

@interface ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey () {
 @public
  NSString *algorithm_;
  jboolean withCompression_;
  OrgSpongycastleMathEcECPoint *q_;
  JavaSecuritySpecECParameterSpec *ecSpec_;
  OrgSpongycastleAsn1UaDSTU4145Params *dstuParams_;
}

- (JavaSecuritySpecECParameterSpec *)createSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                               withOrgSpongycastleCryptoParamsECDomainParameters:(OrgSpongycastleCryptoParamsECDomainParameters *)dp;

- (void)reverseBytesWithByteArray:(IOSByteArray *)bytes;

- (void)populateFromPubKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)info;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, algorithm_, NSString *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, q_, OrgSpongycastleMathEcECPoint *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, ecSpec_, JavaSecuritySpecECParameterSpec *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, dstuParams_, OrgSpongycastleAsn1UaDSTU4145Params *)

__attribute__((unused)) static JavaSecuritySpecECParameterSpec *ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withOrgSpongycastleCryptoParamsECDomainParameters_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, JavaSecuritySpecEllipticCurve *ellipticCurve, OrgSpongycastleCryptoParamsECDomainParameters *dp);

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, IOSByteArray *bytes);

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info);

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_readObjectWithJavaIoObjectInputStream_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_writeObjectWithJavaIoObjectOutputStream_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, JavaIoObjectOutputStream *outArg);

@implementation ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey

- (instancetype)initWithComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey:(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *)key {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_(self, key);
  return self;
}

- (instancetype)initWithJavaSecuritySpecECPublicKeySpec:(JavaSecuritySpecECPublicKeySpec *)spec {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(self, spec);
  return self;
}

- (instancetype)initWithComYouzhLingtuSignCryptoUtilsECPublicKeySpec:(ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *)spec {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithComYouzhLingtuSignCryptoUtilsECPublicKeySpec_(self, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPublicKeyParameters:(OrgSpongycastleCryptoParamsECPublicKeyParameters *)params
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(self, algorithm, params, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPublicKeyParameters:(OrgSpongycastleCryptoParamsECPublicKeyParameters *)params
withComYouzhLingtuSignCryptoUtilsECParameterSpec:(ComYouzhLingtuSignCryptoUtilsECParameterSpec *)spec {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(self, algorithm, params, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPublicKeyParameters:(OrgSpongycastleCryptoParamsECPublicKeyParameters *)params {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_(self, algorithm, params);
  return self;
}

- (JavaSecuritySpecECParameterSpec *)createSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                               withOrgSpongycastleCryptoParamsECDomainParameters:(OrgSpongycastleCryptoParamsECDomainParameters *)dp {
  return ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withOrgSpongycastleCryptoParamsECDomainParameters_(self, ellipticCurve, dp);
}

- (instancetype)initWithJavaSecurityInterfacesECPublicKey:(id<JavaSecurityInterfacesECPublicKey>)key {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithJavaSecurityInterfacesECPublicKey_(self, key);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)info {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(self, info);
  return self;
}

- (void)reverseBytesWithByteArray:(IOSByteArray *)bytes {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(self, bytes);
}

- (void)populateFromPubKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)info {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(self, info);
}

- (IOSByteArray *)getSbox {
  if (nil != dstuParams_) {
    return [dstuParams_ getDKE];
  }
  else {
    return OrgSpongycastleAsn1UaDSTU4145Params_getDefaultDKE();
  }
}

- (NSString *)getAlgorithm {
  return algorithm_;
}

- (NSString *)getFormat {
  return @"X.509";
}

- (IOSByteArray *)getEncoded {
  id<OrgSpongycastleAsn1ASN1Encodable> params;
  OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info;
  if (dstuParams_ != nil) {
    params = dstuParams_;
  }
  else {
    if ([ecSpec_ isKindOfClass:[ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec class]]) {
      params = new_OrgSpongycastleAsn1UaDSTU4145Params_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *) nil_chk(((ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *) ecSpec_))) getName]));
    }
    else {
      OrgSpongycastleMathEcECCurve *curve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCurve]);
      OrgSpongycastleAsn1X9X9ECParameters *ecP = new_OrgSpongycastleAsn1X9X9ECParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(curve, ComYouzhLingtuSignCryptoUtilsEC5Util_convertPointWithOrgSpongycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(curve, [((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getGenerator], withCompression_), [((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getOrder], JavaMathBigInteger_valueOfWithLong_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCofactor]), [((JavaSecuritySpecEllipticCurve *) nil_chk([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCurve])) getSeed]);
      params = new_OrgSpongycastleAsn1X9X962Parameters_initWithOrgSpongycastleAsn1X9X9ECParameters_(ecP);
    }
  }
  IOSByteArray *encKey = OrgSpongycastleAsn1UaDSTU4145PointEncoder_encodePointWithOrgSpongycastleMathEcECPoint_(self->q_);
  @try {
    info = new_OrgSpongycastleAsn1X509SubjectPublicKeyInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(new_OrgSpongycastleAsn1X509AlgorithmIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(JreLoadStatic(OrgSpongycastleAsn1UaUAObjectIdentifiers, dstu4145be), params), new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(encKey));
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
  return ComYouzhLingtuSignCryptoUtilsKeyUtil_getEncodedSubjectPublicKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(info);
}

- (JavaSecuritySpecECParameterSpec *)getParams {
  return ecSpec_;
}

- (ComYouzhLingtuSignCryptoUtilsECParameterSpec *)getParameters {
  if (ecSpec_ == nil) {
    return nil;
  }
  return ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
}

- (JavaSecuritySpecECPoint *)getW {
  return new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(q_)) getAffineXCoord])) toBigInteger], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(q_)) getAffineYCoord])) toBigInteger]);
}

- (OrgSpongycastleMathEcECPoint *)getQ {
  if (ecSpec_ == nil) {
    return [((OrgSpongycastleMathEcECPoint *) nil_chk(q_)) getDetachedPoint];
  }
  return q_;
}

- (OrgSpongycastleMathEcECPoint *)engineGetQ {
  return q_;
}

- (ComYouzhLingtuSignCryptoUtilsECParameterSpec *)engineGetSpec {
  if (ecSpec_ != nil) {
    return ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
  }
  return [((id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>) nil_chk(JreLoadStatic(ComYouzhLingtuSignCryptoConfigBouncyCastleProvider, CONFIGURATION))) getEcImplicitlyCa];
}

- (NSString *)description {
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = OrgSpongycastleUtilStrings_lineSeparator();
  (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"EC Public Key"])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"            X: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(self->q_)) getAffineXCoord])) toBigInteger])) toStringWithInt:16]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"            Y: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(self->q_)) getAffineYCoord])) toBigInteger])) toStringWithInt:16]])) appendWithNSString:nl];
  return [buf description];
}

- (void)setPointFormatWithNSString:(NSString *)style {
  withCompression_ = !([@"UNCOMPRESSED" java_equalsIgnoreCase:style]);
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey class]])) {
    return false;
  }
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *other = (ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *) cast_chk(o, [ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey class]);
  return [((OrgSpongycastleMathEcECPoint *) nil_chk([self engineGetQ])) equalsWithOrgSpongycastleMathEcECPoint:[((ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *) nil_chk(other)) engineGetQ]] && ([((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk([self engineGetSpec])) isEqual:[other engineGetSpec]]);
}

- (NSUInteger)hash {
  return ((jint) [((OrgSpongycastleMathEcECPoint *) nil_chk([self engineGetQ])) hash]) ^ ((jint) [((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk([self engineGetSpec])) hash]);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 9, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoUtilsECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoUtilsECParameterSpec;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 18, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 20, 21, -1, -1, -1 },
    { NULL, "V", 0x2, 22, 23, 24, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey:);
  methods[1].selector = @selector(initWithJavaSecuritySpecECPublicKeySpec:);
  methods[2].selector = @selector(initWithComYouzhLingtuSignCryptoUtilsECPublicKeySpec:);
  methods[3].selector = @selector(initWithNSString:withOrgSpongycastleCryptoParamsECPublicKeyParameters:withJavaSecuritySpecECParameterSpec:);
  methods[4].selector = @selector(initWithNSString:withOrgSpongycastleCryptoParamsECPublicKeyParameters:withComYouzhLingtuSignCryptoUtilsECParameterSpec:);
  methods[5].selector = @selector(initWithNSString:withOrgSpongycastleCryptoParamsECPublicKeyParameters:);
  methods[6].selector = @selector(createSpecWithJavaSecuritySpecEllipticCurve:withOrgSpongycastleCryptoParamsECDomainParameters:);
  methods[7].selector = @selector(initWithJavaSecurityInterfacesECPublicKey:);
  methods[8].selector = @selector(initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:);
  methods[9].selector = @selector(reverseBytesWithByteArray:);
  methods[10].selector = @selector(populateFromPubKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:);
  methods[11].selector = @selector(getSbox);
  methods[12].selector = @selector(getAlgorithm);
  methods[13].selector = @selector(getFormat);
  methods[14].selector = @selector(getEncoded);
  methods[15].selector = @selector(getParams);
  methods[16].selector = @selector(getParameters);
  methods[17].selector = @selector(getW);
  methods[18].selector = @selector(getQ);
  methods[19].selector = @selector(engineGetQ);
  methods[20].selector = @selector(engineGetSpec);
  methods[21].selector = @selector(description);
  methods[22].selector = @selector(setPointFormatWithNSString:);
  methods[23].selector = @selector(isEqual:);
  methods[24].selector = @selector(hash);
  methods[25].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[26].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_serialVersionUID, 0x18, -1, -1, -1, -1 },
    { "algorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "withCompression_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "q_", "LOrgSpongycastleMathEcECPoint;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "ecSpec_", "LJavaSecuritySpecECParameterSpec;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "dstuParams_", "LOrgSpongycastleAsn1UaDSTU4145Params;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey;", "LJavaSecuritySpecECPublicKeySpec;", "LComYouzhLingtuSignCryptoUtilsECPublicKeySpec;", "LNSString;LOrgSpongycastleCryptoParamsECPublicKeyParameters;LJavaSecuritySpecECParameterSpec;", "LNSString;LOrgSpongycastleCryptoParamsECPublicKeyParameters;LComYouzhLingtuSignCryptoUtilsECParameterSpec;", "LNSString;LOrgSpongycastleCryptoParamsECPublicKeyParameters;", "createSpec", "LJavaSecuritySpecEllipticCurve;LOrgSpongycastleCryptoParamsECDomainParameters;", "LJavaSecurityInterfacesECPublicKey;", "LOrgSpongycastleAsn1X509SubjectPublicKeyInfo;", "reverseBytes", "[B", "populateFromPubKeyInfo", "toString", "setPointFormat", "LNSString;", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey = { "BCDSTU4145PublicKey", "com.youzh.lingtu.sign.crypto.dstu", ptrTable, methods, fields, 7, 0x1, 27, 6, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey;
}

@end

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *key) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  self->q_ = ((ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *) nil_chk(key))->q_;
  self->ecSpec_ = key->ecSpec_;
  self->withCompression_ = key->withCompression_;
  self->dstuParams_ = key->dstuParams_;
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *new_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *key) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_, key)
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *create_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *key) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_, key)
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, JavaSecuritySpecECPublicKeySpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  self->ecSpec_ = [((JavaSecuritySpecECPublicKeySpec *) nil_chk(spec)) getParams];
  self->q_ = ComYouzhLingtuSignCryptoUtilsEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(self->ecSpec_, [spec getW], false);
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *new_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(JavaSecuritySpecECPublicKeySpec *spec) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithJavaSecuritySpecECPublicKeySpec_, spec)
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *create_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(JavaSecuritySpecECPublicKeySpec *spec) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithJavaSecuritySpecECPublicKeySpec_, spec)
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithComYouzhLingtuSignCryptoUtilsECPublicKeySpec_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  self->q_ = [((ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *) nil_chk(spec)) getQ];
  if ([spec getParams] != nil) {
    OrgSpongycastleMathEcECCurve *curve = [((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk([spec getParams])) getCurve];
    JavaSecuritySpecEllipticCurve *ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, [((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk([spec getParams])) getSeed]);
    self->ecSpec_ = ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(ellipticCurve, [spec getParams]);
  }
  else {
    if ([((OrgSpongycastleMathEcECPoint *) nil_chk(self->q_)) getCurve] == nil) {
      ComYouzhLingtuSignCryptoUtilsECParameterSpec *s = [((id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>) nil_chk(JreLoadStatic(ComYouzhLingtuSignCryptoConfigBouncyCastleProvider, CONFIGURATION))) getEcImplicitlyCa];
      self->q_ = [((OrgSpongycastleMathEcECCurve *) nil_chk([((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk(s)) getCurve])) createPointWithJavaMathBigInteger:[((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(self->q_)) getAffineXCoord])) toBigInteger] withJavaMathBigInteger:[((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(self->q_)) getAffineYCoord])) toBigInteger]];
    }
    self->ecSpec_ = nil;
  }
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *new_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithComYouzhLingtuSignCryptoUtilsECPublicKeySpec_(ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *spec) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithComYouzhLingtuSignCryptoUtilsECPublicKeySpec_, spec)
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *create_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithComYouzhLingtuSignCryptoUtilsECPublicKeySpec_(ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *spec) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithComYouzhLingtuSignCryptoUtilsECPublicKeySpec_, spec)
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  OrgSpongycastleCryptoParamsECDomainParameters *dp = [((OrgSpongycastleCryptoParamsECPublicKeyParameters *) nil_chk(params)) getParameters];
  self->algorithm_ = algorithm;
  self->q_ = [params getQ];
  if (spec == nil) {
    JavaSecuritySpecEllipticCurve *ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withOrgSpongycastleCryptoParamsECDomainParameters_(self, ellipticCurve, dp);
  }
  else {
    self->ecSpec_ = spec;
  }
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *new_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_, algorithm, params, spec)
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *create_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_, algorithm, params, spec)
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  OrgSpongycastleCryptoParamsECDomainParameters *dp = [((OrgSpongycastleCryptoParamsECPublicKeyParameters *) nil_chk(params)) getParameters];
  self->algorithm_ = algorithm;
  self->q_ = [params getQ];
  if (spec == nil) {
    JavaSecuritySpecEllipticCurve *ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withOrgSpongycastleCryptoParamsECDomainParameters_(self, ellipticCurve, dp);
  }
  else {
    JavaSecuritySpecEllipticCurve *ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_([spec getCurve], [spec getSeed]);
    self->ecSpec_ = ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(ellipticCurve, spec);
  }
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *new_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_, algorithm, params, spec)
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *create_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_, algorithm, params, spec)
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  self->algorithm_ = algorithm;
  self->q_ = [((OrgSpongycastleCryptoParamsECPublicKeyParameters *) nil_chk(params)) getQ];
  self->ecSpec_ = nil;
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *new_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_, algorithm, params)
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *create_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_, algorithm, params)
}

JavaSecuritySpecECParameterSpec *ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withOrgSpongycastleCryptoParamsECDomainParameters_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, JavaSecuritySpecEllipticCurve *ellipticCurve, OrgSpongycastleCryptoParamsECDomainParameters *dp) {
  return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getG])) getAffineXCoord])) toBigInteger], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([dp getG])) getAffineYCoord])) toBigInteger]), [dp getN], [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithJavaSecurityInterfacesECPublicKey_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, id<JavaSecurityInterfacesECPublicKey> key) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  self->algorithm_ = [((id<JavaSecurityInterfacesECPublicKey>) nil_chk(key)) getAlgorithm];
  self->ecSpec_ = [key getParams];
  self->q_ = ComYouzhLingtuSignCryptoUtilsEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(self->ecSpec_, [key getW], false);
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *new_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithJavaSecurityInterfacesECPublicKey_(id<JavaSecurityInterfacesECPublicKey> key) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithJavaSecurityInterfacesECPublicKey_, key)
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *create_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithJavaSecurityInterfacesECPublicKey_(id<JavaSecurityInterfacesECPublicKey> key) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithJavaSecurityInterfacesECPublicKey_, key)
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(self, info);
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *new_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_, info)
}

ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *create_ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey, initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_, info)
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, IOSByteArray *bytes) {
  jbyte tmp;
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(bytes))->size_ / 2; i++) {
    tmp = IOSByteArray_Get(bytes, i);
    *IOSByteArray_GetRef(bytes, i) = IOSByteArray_Get(bytes, bytes->size_ - 1 - i);
    *IOSByteArray_GetRef(bytes, bytes->size_ - 1 - i) = tmp;
  }
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info) {
  OrgSpongycastleAsn1DERBitString *bits = [((OrgSpongycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(info)) getPublicKeyData];
  OrgSpongycastleAsn1ASN1OctetString *key;
  self->algorithm_ = @"DSTU4145";
  @try {
    key = (OrgSpongycastleAsn1ASN1OctetString *) cast_chk(OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((OrgSpongycastleAsn1DERBitString *) nil_chk(bits)) getBytes]), [OrgSpongycastleAsn1ASN1OctetString class]);
  }
  @catch (JavaIoIOException *ex) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"error recovering public key");
  }
  IOSByteArray *keyEnc = [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(key)) getOctets];
  if ([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getAlgorithm])) isEqual:JreLoadStatic(OrgSpongycastleAsn1UaUAObjectIdentifiers, dstu4145le)]) {
    ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(self, keyEnc);
  }
  self->dstuParams_ = OrgSpongycastleAsn1UaDSTU4145Params_getInstanceWithId_((OrgSpongycastleAsn1ASN1Sequence *) cast_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getParameters], [OrgSpongycastleAsn1ASN1Sequence class]));
  ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec = nil;
  if ([((OrgSpongycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) isNamedCurve]) {
    OrgSpongycastleAsn1ASN1ObjectIdentifier *curveOid = [((OrgSpongycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) getNamedCurve];
    OrgSpongycastleCryptoParamsECDomainParameters *ecP = OrgSpongycastleAsn1UaDSTU4145NamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(curveOid);
    spec = new_ComYouzhLingtuSignCryptoUtilsECNamedCurveParameterSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(curveOid)) getId], [((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(ecP)) getCurve], [ecP getG], [ecP getN], [ecP getH], [ecP getSeed]);
  }
  else {
    OrgSpongycastleAsn1UaDSTU4145ECBinary *binary = [((OrgSpongycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) getECBinary];
    IOSByteArray *b_bytes = [((OrgSpongycastleAsn1UaDSTU4145ECBinary *) nil_chk(binary)) getB];
    if ([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getAlgorithm])) isEqual:JreLoadStatic(OrgSpongycastleAsn1UaUAObjectIdentifiers, dstu4145le)]) {
      ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(self, b_bytes);
    }
    OrgSpongycastleAsn1UaDSTU4145BinaryField *field = [binary getField];
    OrgSpongycastleMathEcECCurve *curve = new_OrgSpongycastleMathEcECCurve_F2m_initWithInt_withInt_withInt_withInt_withJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleAsn1UaDSTU4145BinaryField *) nil_chk(field)) getM], [field getK1], [field getK2], [field getK3], [binary getA], new_JavaMathBigInteger_initWithInt_withByteArray_(1, b_bytes));
    IOSByteArray *g_bytes = [binary getG];
    if ([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getAlgorithm])) isEqual:JreLoadStatic(OrgSpongycastleAsn1UaUAObjectIdentifiers, dstu4145le)]) {
      ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(self, g_bytes);
    }
    spec = new_ComYouzhLingtuSignCryptoUtilsECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(curve, OrgSpongycastleAsn1UaDSTU4145PointEncoder_decodePointWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, g_bytes), [binary getN]);
  }
  OrgSpongycastleMathEcECCurve *curve = [spec getCurve];
  JavaSecuritySpecEllipticCurve *ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, [spec getSeed]);
  self->q_ = OrgSpongycastleAsn1UaDSTU4145PointEncoder_decodePointWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, keyEnc);
  if ([((OrgSpongycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) isNamedCurve]) {
    self->ecSpec_ = new_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) getNamedCurve])) getId], ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([spec getG])) getAffineXCoord])) toBigInteger], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([spec getG])) getAffineYCoord])) toBigInteger]), [spec getN], [spec getH]);
  }
  else {
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([spec getG])) getAffineXCoord])) toBigInteger], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([spec getG])) getAffineYCoord])) toBigInteger]), [spec getN], [((JavaMathBigInteger *) nil_chk([spec getH])) intValue]);
  }
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_readObjectWithJavaIoObjectInputStream_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, JavaIoObjectInputStream *inArg) {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(self, OrgSpongycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(enc)));
}

void ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey_writeObjectWithJavaIoObjectOutputStream_(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDstuBCDSTU4145PublicKey)
