//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/BaseKeyGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator")
#ifdef RESTRICT_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator 0
#else
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator 1
#endif
#undef RESTRICT_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator

#if !defined (ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator || defined(INCLUDE_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator))
#define ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_

#define RESTRICT_JavaxCryptoKeyGeneratorSpi 1
#define INCLUDE_JavaxCryptoKeyGeneratorSpi 1
#include "javax/crypto/KeyGeneratorSpi.h"

@class JavaSecuritySecureRandom;
@class OrgSpongycastleCryptoCipherKeyGenerator;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol JavaxCryptoSecretKey;

@interface ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator : JavaxCryptoKeyGeneratorSpi {
 @public
  NSString *algName_;
  jint keySize_;
  jint defaultKeySize_;
  OrgSpongycastleCryptoCipherKeyGenerator *engine_;
  jboolean uninitialised_;
}

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)algName
                         withInt:(jint)defaultKeySize
withOrgSpongycastleCryptoCipherKeyGenerator:(OrgSpongycastleCryptoCipherKeyGenerator *)engine;

- (id<JavaxCryptoSecretKey>)engineGenerateKey;

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineInitWithInt:(jint)keySize
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineInitWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator)

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator, algName_, NSString *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator, engine_, OrgSpongycastleCryptoCipherKeyGenerator *)

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator *self, NSString *algName, jint defaultKeySize, OrgSpongycastleCryptoCipherKeyGenerator *engine);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator *new_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(NSString *algName, jint defaultKeySize, OrgSpongycastleCryptoCipherKeyGenerator *engine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator *create_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(NSString *algName, jint defaultKeySize, OrgSpongycastleCryptoCipherKeyGenerator *engine);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator")
