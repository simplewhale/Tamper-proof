//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/dstu/SignatureSpiLe.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/dstu/SignatureSpi.h"
#include "com/youzh/lingtu/sign/crypto/dstu/SignatureSpiLe.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/security/SignatureException.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/DEROctetString.h"

@implementation ComYouzhLingtuSignCryptoDstuSignatureSpiLe

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDstuSignatureSpiLe_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)reverseBytesWithByteArray:(IOSByteArray *)bytes {
  jbyte tmp;
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(bytes))->size_ / 2; i++) {
    tmp = IOSByteArray_Get(bytes, i);
    *IOSByteArray_GetRef(bytes, i) = IOSByteArray_Get(bytes, bytes->size_ - 1 - i);
    *IOSByteArray_GetRef(bytes, bytes->size_ - 1 - i) = tmp;
  }
}

- (IOSByteArray *)engineSign {
  IOSByteArray *signature = [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([super engineSign]))) getOctets];
  [self reverseBytesWithByteArray:signature];
  @try {
    return [(new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(signature)) getEncoded];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaSecuritySignatureException_initWithNSString_([e description]);
  }
}

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes {
  IOSByteArray *bytes = nil;
  @try {
    bytes = [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(((OrgSpongycastleAsn1ASN1OctetString *) cast_chk(OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(sigBytes), [OrgSpongycastleAsn1ASN1OctetString class])))) getOctets];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaSecuritySignatureException_initWithNSString_(@"error decoding signature bytes.");
  }
  [self reverseBytesWithByteArray:bytes];
  @try {
    return [super engineVerifyWithByteArray:[(new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(bytes)) getEncoded]];
  }
  @catch (JavaSecuritySignatureException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw new_JavaSecuritySignatureException_initWithNSString_([e description]);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 2, -1, -1, -1 },
    { NULL, "Z", 0x4, 3, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reverseBytesWithByteArray:);
  methods[2].selector = @selector(engineSign);
  methods[3].selector = @selector(engineVerifyWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "reverseBytes", "[B", "LJavaSecuritySignatureException;", "engineVerify" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDstuSignatureSpiLe = { "SignatureSpiLe", "com.youzh.lingtu.sign.crypto.dstu", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDstuSignatureSpiLe;
}

@end

void ComYouzhLingtuSignCryptoDstuSignatureSpiLe_init(ComYouzhLingtuSignCryptoDstuSignatureSpiLe *self) {
  ComYouzhLingtuSignCryptoDstuSignatureSpi_init(self);
}

ComYouzhLingtuSignCryptoDstuSignatureSpiLe *new_ComYouzhLingtuSignCryptoDstuSignatureSpiLe_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDstuSignatureSpiLe, init)
}

ComYouzhLingtuSignCryptoDstuSignatureSpiLe *create_ComYouzhLingtuSignCryptoDstuSignatureSpiLe_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDstuSignatureSpiLe, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDstuSignatureSpiLe)
