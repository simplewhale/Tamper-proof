//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/BCJcaJceHelper.java
//

#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/config/BouncyCastleProvider.h"
#include "com/youzh/lingtu/sign/crypto/utils/BCJcaJceHelper.h"
#include "com/youzh/lingtu/sign/crypto/utils/ProviderJcaJceHelper.h"
#include "java/security/Provider.h"
#include "java/security/Security.h"

@interface ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper ()

+ (JavaSecurityProvider *)getBouncyCastleProvider;

@end

__attribute__((unused)) static JavaSecurityProvider *ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_getBouncyCastleProvider(void);

@implementation ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper

+ (JavaSecurityProvider *)getBouncyCastleProvider {
  return ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_getBouncyCastleProvider();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaSecurityProvider;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getBouncyCastleProvider);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper = { "BCJcaJceHelper", "com.youzh.lingtu.sign.crypto.utils", NULL, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper;
}

@end

JavaSecurityProvider *ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_getBouncyCastleProvider() {
  ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_initialize();
  if (JavaSecuritySecurity_getProviderWithNSString_(@"SC") != nil) {
    return JavaSecuritySecurity_getProviderWithNSString_(@"SC");
  }
  else {
    return new_ComYouzhLingtuSignCryptoConfigBouncyCastleProvider_init();
  }
}

void ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_init(ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper *self) {
  ComYouzhLingtuSignCryptoUtilsProviderJcaJceHelper_initWithJavaSecurityProvider_(self, ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_getBouncyCastleProvider());
}

ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper *new_ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper, init)
}

ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper *create_ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoUtilsBCJcaJceHelper)
