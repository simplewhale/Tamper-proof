//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/LinuxSecureRandom.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/LinuxSecureRandom.h"
#include "java/io/DataInputStream.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/lang/RuntimeException.h"
#include "java/security/Provider.h"
#include "java/security/SecureRandomSpi.h"
#include "java/security/Security.h"
#include "org/slf4j/Logger.h"
#include "org/slf4j/LoggerFactory.h"

@interface ComYouzhLingtuSignCryptoLinuxSecureRandom () {
 @public
  JavaIoDataInputStream *dis_;
}

@end

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoLinuxSecureRandom, dis_, JavaIoDataInputStream *)

inline JavaIoFileInputStream *ComYouzhLingtuSignCryptoLinuxSecureRandom_get_urandom(void);
static JavaIoFileInputStream *ComYouzhLingtuSignCryptoLinuxSecureRandom_urandom;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYouzhLingtuSignCryptoLinuxSecureRandom, urandom, JavaIoFileInputStream *)

inline id<OrgSlf4jLogger> ComYouzhLingtuSignCryptoLinuxSecureRandom_get_log(void);
static id<OrgSlf4jLogger> ComYouzhLingtuSignCryptoLinuxSecureRandom_log;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYouzhLingtuSignCryptoLinuxSecureRandom, log, id<OrgSlf4jLogger>)

@interface ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider : JavaSecurityProvider

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider)

__attribute__((unused)) static void ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider_init(ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider *self);

__attribute__((unused)) static ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider *new_ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider *create_ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider)

J2OBJC_INITIALIZED_DEFN(ComYouzhLingtuSignCryptoLinuxSecureRandom)

@implementation ComYouzhLingtuSignCryptoLinuxSecureRandom

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoLinuxSecureRandom_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineSetSeedWithByteArray:(IOSByteArray *)bytes {
}

- (void)engineNextBytesWithByteArray:(IOSByteArray *)bytes {
  @try {
    [((JavaIoDataInputStream *) nil_chk(dis_)) readFullyWithByteArray:bytes];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

- (IOSByteArray *)engineGenerateSeedWithInt:(jint)i {
  IOSByteArray *bits = [IOSByteArray newArrayWithLength:i];
  [self engineNextBytesWithByteArray:bits];
  return bits;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineSetSeedWithByteArray:);
  methods[2].selector = @selector(engineNextBytesWithByteArray:);
  methods[3].selector = @selector(engineGenerateSeedWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "urandom", "LJavaIoFileInputStream;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "log", "LOrgSlf4jLogger;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "dis_", "LJavaIoDataInputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "engineSetSeed", "[B", "engineNextBytes", "engineGenerateSeed", "I", &ComYouzhLingtuSignCryptoLinuxSecureRandom_urandom, &ComYouzhLingtuSignCryptoLinuxSecureRandom_log, "LComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoLinuxSecureRandom = { "LinuxSecureRandom", "com.youzh.lingtu.sign.crypto", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, 7, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoLinuxSecureRandom;
}

+ (void)initialize {
  if (self == [ComYouzhLingtuSignCryptoLinuxSecureRandom class]) {
    ComYouzhLingtuSignCryptoLinuxSecureRandom_log = OrgSlf4jLoggerFactory_getLoggerWithIOSClass_(ComYouzhLingtuSignCryptoLinuxSecureRandom_class_());
    {
      @try {
        JavaIoFile *file = new_JavaIoFile_initWithNSString_(@"/dev/urandom");
        ComYouzhLingtuSignCryptoLinuxSecureRandom_urandom = new_JavaIoFileInputStream_initWithJavaIoFile_(file);
        if ([ComYouzhLingtuSignCryptoLinuxSecureRandom_urandom read] == -1) {
          @throw new_JavaLangRuntimeException_initWithNSString_(@"/dev/urandom not readable?");
        }
        jint position = JavaSecuritySecurity_insertProviderAtWithJavaSecurityProvider_withInt_(new_ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider_init(), 1);
        if (position != -1) {
          [((id<OrgSlf4jLogger>) nil_chk(ComYouzhLingtuSignCryptoLinuxSecureRandom_log)) infoWithNSString:@"Secure randomness will be read from {} only." withId:file];
        }
        else {
          [((id<OrgSlf4jLogger>) nil_chk(ComYouzhLingtuSignCryptoLinuxSecureRandom_log)) infoWithNSString:@"Randomness is already secure."];
        }
      }
      @catch (JavaIoFileNotFoundException *e) {
        [((id<OrgSlf4jLogger>) nil_chk(ComYouzhLingtuSignCryptoLinuxSecureRandom_log)) errorWithNSString:@"/dev/urandom does not appear to exist or is not openable"];
        @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
      }
      @catch (JavaIoIOException *e) {
        [((id<OrgSlf4jLogger>) nil_chk(ComYouzhLingtuSignCryptoLinuxSecureRandom_log)) errorWithNSString:@"/dev/urandom does not appear to be readable"];
        @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
      }
    }
    J2OBJC_SET_INITIALIZED(ComYouzhLingtuSignCryptoLinuxSecureRandom)
  }
}

@end

void ComYouzhLingtuSignCryptoLinuxSecureRandom_init(ComYouzhLingtuSignCryptoLinuxSecureRandom *self) {
  JavaSecuritySecureRandomSpi_init(self);
  self->dis_ = new_JavaIoDataInputStream_initWithJavaIoInputStream_(ComYouzhLingtuSignCryptoLinuxSecureRandom_urandom);
}

ComYouzhLingtuSignCryptoLinuxSecureRandom *new_ComYouzhLingtuSignCryptoLinuxSecureRandom_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoLinuxSecureRandom, init)
}

ComYouzhLingtuSignCryptoLinuxSecureRandom *create_ComYouzhLingtuSignCryptoLinuxSecureRandom_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoLinuxSecureRandom, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoLinuxSecureRandom)

@implementation ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoLinuxSecureRandom;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider = { "LinuxSecureRandomProvider", "com.youzh.lingtu.sign.crypto", ptrTable, methods, NULL, 7, 0xa, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider;
}

@end

void ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider_init(ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider *self) {
  JavaSecurityProvider_initWithNSString_withDouble_withNSString_(self, @"LinuxSecureRandom", 1.0, @"A Linux specific random number provider that uses /dev/urandom");
  (void) [self putWithId:@"SecureRandom.LinuxSecureRandom" withId:[ComYouzhLingtuSignCryptoLinuxSecureRandom_class_() getName]];
}

ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider *new_ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider, init)
}

ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider *create_ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoLinuxSecureRandom_LinuxSecureRandomProvider)
