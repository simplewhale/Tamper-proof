//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/Assertions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsAssertions")
#ifdef RESTRICT_ComYouzhLingtuSignCryptoUtilsAssertions
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsAssertions 0
#else
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsAssertions 1
#endif
#undef RESTRICT_ComYouzhLingtuSignCryptoUtilsAssertions

#if !defined (ComYouzhLingtuSignCryptoUtilsAssertions_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsAssertions || defined(INCLUDE_ComYouzhLingtuSignCryptoUtilsAssertions))
#define ComYouzhLingtuSignCryptoUtilsAssertions_

@interface ComYouzhLingtuSignCryptoUtilsAssertions : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)verifyPreconditionWithBoolean:(jboolean)assertionResult
                         withNSString:(NSString *)errorMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoUtilsAssertions)

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsAssertions_init(ComYouzhLingtuSignCryptoUtilsAssertions *self);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsAssertions *new_ComYouzhLingtuSignCryptoUtilsAssertions_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsAssertions *create_ComYouzhLingtuSignCryptoUtilsAssertions_init(void);

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsAssertions_verifyPreconditionWithBoolean_withNSString_(jboolean assertionResult, NSString *errorMessage);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoUtilsAssertions)

#endif

#pragma pop_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsAssertions")
