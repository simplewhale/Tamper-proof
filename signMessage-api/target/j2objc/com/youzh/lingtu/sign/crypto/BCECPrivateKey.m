//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/BCECPrivateKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/BCECPrivateKey.h"
#include "com/youzh/lingtu/sign/crypto/BCECPublicKey.h"
#include "com/youzh/lingtu/sign/crypto/config/BouncyCastleProvider.h"
#include "com/youzh/lingtu/sign/crypto/config/ProviderConfiguration.h"
#include "com/youzh/lingtu/sign/crypto/utils/EC5Util.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECNamedCurveSpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECParameterSpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECPrivateKeySpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECUtil.h"
#include "com/youzh/lingtu/sign/crypto/utils/PKCS12BagAttributeCarrierImpl.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/security/interfaces/ECPrivateKey.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/ECPrivateKeySpec.h"
#include "java/security/spec/EllipticCurve.h"
#include "java/util/Enumeration.h"
#include "javax/security/auth/Destroyable.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1Encoding.h"
#include "org/spongycastle/asn1/ASN1Integer.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/DERBitString.h"
#include "org/spongycastle/asn1/DERNull.h"
#include "org/spongycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/spongycastle/asn1/sec/ECPrivateKey.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/spongycastle/asn1/x9/X962Parameters.h"
#include "org/spongycastle/asn1/x9/X9ECParameters.h"
#include "org/spongycastle/asn1/x9/X9ObjectIdentifiers.h"
#include "org/spongycastle/crypto/params/ECDomainParameters.h"
#include "org/spongycastle/crypto/params/ECPrivateKeyParameters.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/util/Strings.h"

@interface ComYouzhLingtuSignCryptoBCECPrivateKey () {
 @public
  NSString *algorithm_;
  jboolean withCompression_;
  JavaMathBigInteger *d_;
  JavaSecuritySpecECParameterSpec *ecSpec_;
  id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration_;
  OrgSpongycastleAsn1DERBitString *publicKey_;
  ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl *attrCarrier_;
}

- (void)populateFromPrivKeyInfoWithOrgSpongycastleAsn1PkcsPrivateKeyInfo:(OrgSpongycastleAsn1PkcsPrivateKeyInfo *)info;

- (OrgSpongycastleAsn1DERBitString *)getPublicKeyDetailsWithComYouzhLingtuSignCryptoBCECPublicKey:(ComYouzhLingtuSignCryptoBCECPublicKey *)pub;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoBCECPrivateKey, algorithm_, NSString *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoBCECPrivateKey, d_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoBCECPrivateKey, ecSpec_, JavaSecuritySpecECParameterSpec *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoBCECPrivateKey, configuration_, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoBCECPrivateKey, publicKey_, OrgSpongycastleAsn1DERBitString *)
J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoBCECPrivateKey, attrCarrier_, ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl *)

__attribute__((unused)) static void ComYouzhLingtuSignCryptoBCECPrivateKey_populateFromPrivKeyInfoWithOrgSpongycastleAsn1PkcsPrivateKeyInfo_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, OrgSpongycastleAsn1PkcsPrivateKeyInfo *info);

__attribute__((unused)) static OrgSpongycastleAsn1DERBitString *ComYouzhLingtuSignCryptoBCECPrivateKey_getPublicKeyDetailsWithComYouzhLingtuSignCryptoBCECPublicKey_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, ComYouzhLingtuSignCryptoBCECPublicKey *pub);

__attribute__((unused)) static void ComYouzhLingtuSignCryptoBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void ComYouzhLingtuSignCryptoBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, JavaIoObjectOutputStream *outArg);

@implementation ComYouzhLingtuSignCryptoBCECPrivateKey

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoBCECPrivateKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaSecurityInterfacesECPrivateKey:(id<JavaSecurityInterfacesECPrivateKey>)key
   withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration {
  ComYouzhLingtuSignCryptoBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(self, key, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withComYouzhLingtuSignCryptoUtilsECPrivateKeySpec:(ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec *)spec
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration {
  ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(self, algorithm, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withJavaSecuritySpecECPrivateKeySpec:(JavaSecuritySpecECPrivateKeySpec *)spec
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration {
  ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(self, algorithm, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withComYouzhLingtuSignCryptoBCECPrivateKey:(ComYouzhLingtuSignCryptoBCECPrivateKey *)key {
  ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withComYouzhLingtuSignCryptoBCECPrivateKey_(self, algorithm, key);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPrivateKeyParameters:(OrgSpongycastleCryptoParamsECPrivateKeyParameters *)params
withComYouzhLingtuSignCryptoBCECPublicKey:(ComYouzhLingtuSignCryptoBCECPublicKey *)pubKey
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration {
  ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(self, algorithm, params, pubKey, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPrivateKeyParameters:(OrgSpongycastleCryptoParamsECPrivateKeyParameters *)params
withComYouzhLingtuSignCryptoBCECPublicKey:(ComYouzhLingtuSignCryptoBCECPublicKey *)pubKey
withComYouzhLingtuSignCryptoUtilsECParameterSpec:(ComYouzhLingtuSignCryptoUtilsECParameterSpec *)spec
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration {
  ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(self, algorithm, params, pubKey, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPrivateKeyParameters:(OrgSpongycastleCryptoParamsECPrivateKeyParameters *)params
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration {
  ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(self, algorithm, params, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleAsn1PkcsPrivateKeyInfo:(OrgSpongycastleAsn1PkcsPrivateKeyInfo *)info
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration {
  ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleAsn1PkcsPrivateKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(self, algorithm, info, configuration);
  return self;
}

- (void)populateFromPrivKeyInfoWithOrgSpongycastleAsn1PkcsPrivateKeyInfo:(OrgSpongycastleAsn1PkcsPrivateKeyInfo *)info {
  ComYouzhLingtuSignCryptoBCECPrivateKey_populateFromPrivKeyInfoWithOrgSpongycastleAsn1PkcsPrivateKeyInfo_(self, info);
}

- (NSString *)getAlgorithm {
  return algorithm_;
}

- (NSString *)getFormat {
  return @"PKCS#8";
}

- (IOSByteArray *)getEncoded {
  OrgSpongycastleAsn1X9X962Parameters *params;
  jint orderBitLength;
  if ([ecSpec_ isKindOfClass:[ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec class]]) {
    OrgSpongycastleAsn1ASN1ObjectIdentifier *curveOid = ComYouzhLingtuSignCryptoUtilsECUtil_getNamedCurveOidWithNSString_([((ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *) nil_chk(((ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *) ecSpec_))) getName]);
    if (curveOid == nil) {
      curveOid = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *) nil_chk(((ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *) ecSpec_))) getName]);
    }
    params = new_OrgSpongycastleAsn1X9X962Parameters_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(curveOid);
    orderBitLength = ComYouzhLingtuSignCryptoUtilsECUtil_getOrderBitLengthWithJavaMathBigInteger_withJavaMathBigInteger_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getOrder], [self getS]);
  }
  else if (ecSpec_ == nil) {
    params = new_OrgSpongycastleAsn1X9X962Parameters_initWithOrgSpongycastleAsn1ASN1Null_(JreLoadStatic(OrgSpongycastleAsn1DERNull, INSTANCE));
    orderBitLength = ComYouzhLingtuSignCryptoUtilsECUtil_getOrderBitLengthWithJavaMathBigInteger_withJavaMathBigInteger_(nil, [self getS]);
  }
  else {
    OrgSpongycastleMathEcECCurve *curve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([ecSpec_ getCurve]);
    OrgSpongycastleAsn1X9X9ECParameters *ecP = new_OrgSpongycastleAsn1X9X9ECParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(curve, ComYouzhLingtuSignCryptoUtilsEC5Util_convertPointWithOrgSpongycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(curve, [((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getGenerator], withCompression_), [((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getOrder], JavaMathBigInteger_valueOfWithLong_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCofactor]), [((JavaSecuritySpecEllipticCurve *) nil_chk([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCurve])) getSeed]);
    params = new_OrgSpongycastleAsn1X9X962Parameters_initWithOrgSpongycastleAsn1X9X9ECParameters_(ecP);
    orderBitLength = ComYouzhLingtuSignCryptoUtilsECUtil_getOrderBitLengthWithJavaMathBigInteger_withJavaMathBigInteger_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getOrder], [self getS]);
  }
  OrgSpongycastleAsn1PkcsPrivateKeyInfo *info;
  OrgSpongycastleAsn1SecECPrivateKey *keyStructure;
  if (publicKey_ != nil) {
    keyStructure = new_OrgSpongycastleAsn1SecECPrivateKey_initWithInt_withJavaMathBigInteger_withOrgSpongycastleAsn1DERBitString_withOrgSpongycastleAsn1ASN1Encodable_(orderBitLength, [self getS], publicKey_, params);
  }
  else {
    keyStructure = new_OrgSpongycastleAsn1SecECPrivateKey_initWithInt_withJavaMathBigInteger_withOrgSpongycastleAsn1ASN1Encodable_(orderBitLength, [self getS], params);
  }
  @try {
    info = new_OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(new_OrgSpongycastleAsn1X509AlgorithmIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(JreLoadStatic(OrgSpongycastleAsn1X9X9ObjectIdentifiers, id_ecPublicKey), params), keyStructure);
    return [info getEncodedWithNSString:OrgSpongycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (JavaSecuritySpecECParameterSpec *)getParams {
  return ecSpec_;
}

- (ComYouzhLingtuSignCryptoUtilsECParameterSpec *)getParameters {
  if (ecSpec_ == nil) {
    return nil;
  }
  return ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
}

- (ComYouzhLingtuSignCryptoUtilsECParameterSpec *)engineGetSpec {
  if (ecSpec_ != nil) {
    return ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
  }
  return [((id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>) nil_chk(configuration_)) getEcImplicitlyCa];
}

- (JavaMathBigInteger *)getS {
  return d_;
}

- (JavaMathBigInteger *)getD {
  return d_;
}

- (void)setBagAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                              withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)attribute {
  [((ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) setBagAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid withOrgSpongycastleAsn1ASN1Encodable:attribute];
}

- (id<OrgSpongycastleAsn1ASN1Encodable>)getBagAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid {
  return [((ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) getBagAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid];
}

- (id<JavaUtilEnumeration>)getBagAttributeKeys {
  return [((ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) getBagAttributeKeys];
}

- (void)setPointFormatWithNSString:(NSString *)style {
  withCompression_ = !([@"UNCOMPRESSED" java_equalsIgnoreCase:style]);
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[ComYouzhLingtuSignCryptoBCECPrivateKey class]])) {
    return false;
  }
  ComYouzhLingtuSignCryptoBCECPrivateKey *other = (ComYouzhLingtuSignCryptoBCECPrivateKey *) cast_chk(o, [ComYouzhLingtuSignCryptoBCECPrivateKey class]);
  return [((JavaMathBigInteger *) nil_chk([self getD])) isEqual:[((ComYouzhLingtuSignCryptoBCECPrivateKey *) nil_chk(other)) getD]] && ([((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk([self engineGetSpec])) isEqual:[other engineGetSpec]]);
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk([self getD])) hash]) ^ ((jint) [((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk([self engineGetSpec])) hash]);
}

- (NSString *)description {
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = OrgSpongycastleUtilStrings_lineSeparator();
  (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"EC Private Key"])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"             S: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk(self->d_)) toStringWithInt:16]])) appendWithNSString:nl];
  return [buf description];
}

- (OrgSpongycastleAsn1DERBitString *)getPublicKeyDetailsWithComYouzhLingtuSignCryptoBCECPublicKey:(ComYouzhLingtuSignCryptoBCECPublicKey *)pub {
  return ComYouzhLingtuSignCryptoBCECPrivateKey_getPublicKeyDetailsWithComYouzhLingtuSignCryptoBCECPublicKey_(self, pub);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  ComYouzhLingtuSignCryptoBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  ComYouzhLingtuSignCryptoBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoUtilsECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoUtilsECParameterSpec;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Encodable;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERBitString;", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 23, 24, 25, -1, -1, -1 },
    { NULL, "V", 0x2, 26, 27, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaSecurityInterfacesECPrivateKey:withComYouzhLingtuSignCryptoConfigProviderConfiguration:);
  methods[2].selector = @selector(initWithNSString:withComYouzhLingtuSignCryptoUtilsECPrivateKeySpec:withComYouzhLingtuSignCryptoConfigProviderConfiguration:);
  methods[3].selector = @selector(initWithNSString:withJavaSecuritySpecECPrivateKeySpec:withComYouzhLingtuSignCryptoConfigProviderConfiguration:);
  methods[4].selector = @selector(initWithNSString:withComYouzhLingtuSignCryptoBCECPrivateKey:);
  methods[5].selector = @selector(initWithNSString:withOrgSpongycastleCryptoParamsECPrivateKeyParameters:withComYouzhLingtuSignCryptoBCECPublicKey:withJavaSecuritySpecECParameterSpec:withComYouzhLingtuSignCryptoConfigProviderConfiguration:);
  methods[6].selector = @selector(initWithNSString:withOrgSpongycastleCryptoParamsECPrivateKeyParameters:withComYouzhLingtuSignCryptoBCECPublicKey:withComYouzhLingtuSignCryptoUtilsECParameterSpec:withComYouzhLingtuSignCryptoConfigProviderConfiguration:);
  methods[7].selector = @selector(initWithNSString:withOrgSpongycastleCryptoParamsECPrivateKeyParameters:withComYouzhLingtuSignCryptoConfigProviderConfiguration:);
  methods[8].selector = @selector(initWithNSString:withOrgSpongycastleAsn1PkcsPrivateKeyInfo:withComYouzhLingtuSignCryptoConfigProviderConfiguration:);
  methods[9].selector = @selector(populateFromPrivKeyInfoWithOrgSpongycastleAsn1PkcsPrivateKeyInfo:);
  methods[10].selector = @selector(getAlgorithm);
  methods[11].selector = @selector(getFormat);
  methods[12].selector = @selector(getEncoded);
  methods[13].selector = @selector(getParams);
  methods[14].selector = @selector(getParameters);
  methods[15].selector = @selector(engineGetSpec);
  methods[16].selector = @selector(getS);
  methods[17].selector = @selector(getD);
  methods[18].selector = @selector(setBagAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:withOrgSpongycastleAsn1ASN1Encodable:);
  methods[19].selector = @selector(getBagAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[20].selector = @selector(getBagAttributeKeys);
  methods[21].selector = @selector(setPointFormatWithNSString:);
  methods[22].selector = @selector(isEqual:);
  methods[23].selector = @selector(hash);
  methods[24].selector = @selector(description);
  methods[25].selector = @selector(getPublicKeyDetailsWithComYouzhLingtuSignCryptoBCECPublicKey:);
  methods[26].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[27].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComYouzhLingtuSignCryptoBCECPrivateKey_serialVersionUID, 0x18, -1, -1, -1, -1 },
    { "algorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "withCompression_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "d_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "ecSpec_", "LJavaSecuritySpecECParameterSpec;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "configuration_", "LComYouzhLingtuSignCryptoConfigProviderConfiguration;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "publicKey_", "LOrgSpongycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "attrCarrier_", "LComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityInterfacesECPrivateKey;LComYouzhLingtuSignCryptoConfigProviderConfiguration;", "LNSString;LComYouzhLingtuSignCryptoUtilsECPrivateKeySpec;LComYouzhLingtuSignCryptoConfigProviderConfiguration;", "LNSString;LJavaSecuritySpecECPrivateKeySpec;LComYouzhLingtuSignCryptoConfigProviderConfiguration;", "LNSString;LComYouzhLingtuSignCryptoBCECPrivateKey;", "LNSString;LOrgSpongycastleCryptoParamsECPrivateKeyParameters;LComYouzhLingtuSignCryptoBCECPublicKey;LJavaSecuritySpecECParameterSpec;LComYouzhLingtuSignCryptoConfigProviderConfiguration;", "LNSString;LOrgSpongycastleCryptoParamsECPrivateKeyParameters;LComYouzhLingtuSignCryptoBCECPublicKey;LComYouzhLingtuSignCryptoUtilsECParameterSpec;LComYouzhLingtuSignCryptoConfigProviderConfiguration;", "LNSString;LOrgSpongycastleCryptoParamsECPrivateKeyParameters;LComYouzhLingtuSignCryptoConfigProviderConfiguration;", "LNSString;LOrgSpongycastleAsn1PkcsPrivateKeyInfo;LComYouzhLingtuSignCryptoConfigProviderConfiguration;", "LJavaIoIOException;", "populateFromPrivKeyInfo", "LOrgSpongycastleAsn1PkcsPrivateKeyInfo;", "setBagAttribute", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;LOrgSpongycastleAsn1ASN1Encodable;", "getBagAttribute", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", "setPointFormat", "LNSString;", "equals", "LNSObject;", "hashCode", "toString", "getPublicKeyDetails", "LComYouzhLingtuSignCryptoBCECPublicKey;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoBCECPrivateKey = { "BCECPrivateKey", "com.youzh.lingtu.sign.crypto", ptrTable, methods, fields, 7, 0x1, 28, 8, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoBCECPrivateKey;
}

@end

void ComYouzhLingtuSignCryptoBCECPrivateKey_init(ComYouzhLingtuSignCryptoBCECPrivateKey *self) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, init)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, init)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, id<JavaSecurityInterfacesECPrivateKey> key, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
  self->d_ = [((id<JavaSecurityInterfacesECPrivateKey>) nil_chk(key)) getS];
  self->algorithm_ = [key getAlgorithm];
  self->ecSpec_ = [key getParams];
  self->configuration_ = configuration;
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithJavaSecurityInterfacesECPrivateKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, key, configuration)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithJavaSecurityInterfacesECPrivateKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, key, configuration)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, NSString *algorithm, ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec *) nil_chk(spec)) getD];
  if ([spec getParams] != nil) {
    OrgSpongycastleMathEcECCurve *curve = [((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk([spec getParams])) getCurve];
    JavaSecuritySpecEllipticCurve *ellipticCurve;
    ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, [((ComYouzhLingtuSignCryptoUtilsECParameterSpec *) nil_chk([spec getParams])) getSeed]);
    self->ecSpec_ = ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(ellipticCurve, [spec getParams]);
  }
  else {
    self->ecSpec_ = nil;
  }
  self->configuration_ = configuration;
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, spec, configuration)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, spec, configuration)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((JavaSecuritySpecECPrivateKeySpec *) nil_chk(spec)) getS];
  self->ecSpec_ = [spec getParams];
  self->configuration_ = configuration;
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, spec, configuration)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, spec, configuration)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withComYouzhLingtuSignCryptoBCECPrivateKey_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, NSString *algorithm, ComYouzhLingtuSignCryptoBCECPrivateKey *key) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = ((ComYouzhLingtuSignCryptoBCECPrivateKey *) nil_chk(key))->d_;
  self->ecSpec_ = key->ecSpec_;
  self->withCompression_ = key->withCompression_;
  self->attrCarrier_ = key->attrCarrier_;
  self->publicKey_ = key->publicKey_;
  self->configuration_ = key->configuration_;
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withComYouzhLingtuSignCryptoBCECPrivateKey_(NSString *algorithm, ComYouzhLingtuSignCryptoBCECPrivateKey *key) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withComYouzhLingtuSignCryptoBCECPrivateKey_, algorithm, key)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withComYouzhLingtuSignCryptoBCECPrivateKey_(NSString *algorithm, ComYouzhLingtuSignCryptoBCECPrivateKey *key) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withComYouzhLingtuSignCryptoBCECPrivateKey_, algorithm, key)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, ComYouzhLingtuSignCryptoBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
  OrgSpongycastleCryptoParamsECDomainParameters *dp = [((OrgSpongycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getParameters];
  self->algorithm_ = algorithm;
  self->d_ = [params getD];
  self->configuration_ = configuration;
  if (spec == nil) {
    JavaSecuritySpecEllipticCurve *ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([dp getG])) getAffineXCoord])) toBigInteger], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([dp getG])) getAffineYCoord])) toBigInteger]), [dp getN], [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
  }
  else {
    self->ecSpec_ = spec;
  }
  self->publicKey_ = ComYouzhLingtuSignCryptoBCECPrivateKey_getPublicKeyDetailsWithComYouzhLingtuSignCryptoBCECPublicKey_(self, pubKey);
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, ComYouzhLingtuSignCryptoBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, ComYouzhLingtuSignCryptoBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, ComYouzhLingtuSignCryptoBCECPublicKey *pubKey, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
  OrgSpongycastleCryptoParamsECDomainParameters *dp = [((OrgSpongycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getParameters];
  self->algorithm_ = algorithm;
  self->d_ = [params getD];
  self->configuration_ = configuration;
  if (spec == nil) {
    JavaSecuritySpecEllipticCurve *ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([dp getG])) getAffineXCoord])) toBigInteger], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([dp getG])) getAffineYCoord])) toBigInteger]), [dp getN], [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
  }
  else {
    JavaSecuritySpecEllipticCurve *ellipticCurve = ComYouzhLingtuSignCryptoUtilsEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_([spec getCurve], [spec getSeed]);
    self->ecSpec_ = ComYouzhLingtuSignCryptoUtilsEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(ellipticCurve, spec);
  }
  self->publicKey_ = ComYouzhLingtuSignCryptoBCECPrivateKey_getPublicKeyDetailsWithComYouzhLingtuSignCryptoBCECPublicKey_(self, pubKey);
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, ComYouzhLingtuSignCryptoBCECPublicKey *pubKey, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, ComYouzhLingtuSignCryptoBCECPublicKey *pubKey, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoBCECPublicKey_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((OrgSpongycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  self->ecSpec_ = nil;
  self->configuration_ = configuration;
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, params, configuration)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPrivateKeyParameters *params, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, params, configuration)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleAsn1PkcsPrivateKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, NSString *algorithm, OrgSpongycastleAsn1PkcsPrivateKeyInfo *info, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->configuration_ = configuration;
  ComYouzhLingtuSignCryptoBCECPrivateKey_populateFromPrivKeyInfoWithOrgSpongycastleAsn1PkcsPrivateKeyInfo_(self, info);
}

ComYouzhLingtuSignCryptoBCECPrivateKey *new_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleAsn1PkcsPrivateKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleAsn1PkcsPrivateKeyInfo *info, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withOrgSpongycastleAsn1PkcsPrivateKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, info, configuration)
}

ComYouzhLingtuSignCryptoBCECPrivateKey *create_ComYouzhLingtuSignCryptoBCECPrivateKey_initWithNSString_withOrgSpongycastleAsn1PkcsPrivateKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleAsn1PkcsPrivateKeyInfo *info, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoBCECPrivateKey, initWithNSString_withOrgSpongycastleAsn1PkcsPrivateKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_, algorithm, info, configuration)
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_populateFromPrivKeyInfoWithOrgSpongycastleAsn1PkcsPrivateKeyInfo_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, OrgSpongycastleAsn1PkcsPrivateKeyInfo *info) {
  OrgSpongycastleAsn1X9X962Parameters *params = OrgSpongycastleAsn1X9X962Parameters_getInstanceWithId_([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgSpongycastleAsn1PkcsPrivateKeyInfo *) nil_chk(info)) getPrivateKeyAlgorithm])) getParameters]);
  OrgSpongycastleMathEcECCurve *curve = ComYouzhLingtuSignCryptoUtilsEC5Util_getCurveWithComYouzhLingtuSignCryptoConfigProviderConfiguration_withOrgSpongycastleAsn1X9X962Parameters_(self->configuration_, params);
  self->ecSpec_ = ComYouzhLingtuSignCryptoUtilsEC5Util_convertToSpecWithOrgSpongycastleAsn1X9X962Parameters_withOrgSpongycastleMathEcECCurve_(params, curve);
  id<OrgSpongycastleAsn1ASN1Encodable> privKey = [info parsePrivateKey];
  if ([privKey isKindOfClass:[OrgSpongycastleAsn1ASN1Integer class]]) {
    OrgSpongycastleAsn1ASN1Integer *derD = OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_(privKey);
    self->d_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(derD)) getValue];
  }
  else {
    OrgSpongycastleAsn1SecECPrivateKey *ec = OrgSpongycastleAsn1SecECPrivateKey_getInstanceWithId_(privKey);
    self->d_ = [((OrgSpongycastleAsn1SecECPrivateKey *) nil_chk(ec)) getKey];
    self->publicKey_ = [ec getPublicKey];
  }
}

OrgSpongycastleAsn1DERBitString *ComYouzhLingtuSignCryptoBCECPrivateKey_getPublicKeyDetailsWithComYouzhLingtuSignCryptoBCECPublicKey_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, ComYouzhLingtuSignCryptoBCECPublicKey *pub) {
  @try {
    OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info = OrgSpongycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((ComYouzhLingtuSignCryptoBCECPublicKey *) nil_chk(pub)) getEncoded]));
    return [((OrgSpongycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(info)) getPublicKeyData];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, JavaIoObjectInputStream *inArg) {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  ComYouzhLingtuSignCryptoBCECPrivateKey_populateFromPrivKeyInfoWithOrgSpongycastleAsn1PkcsPrivateKeyInfo_(self, OrgSpongycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(enc)));
  self->configuration_ = JreLoadStatic(ComYouzhLingtuSignCryptoConfigBouncyCastleProvider, CONFIGURATION);
  self->attrCarrier_ = new_ComYouzhLingtuSignCryptoUtilsPKCS12BagAttributeCarrierImpl_init();
}

void ComYouzhLingtuSignCryptoBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(ComYouzhLingtuSignCryptoBCECPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoBCECPrivateKey)
