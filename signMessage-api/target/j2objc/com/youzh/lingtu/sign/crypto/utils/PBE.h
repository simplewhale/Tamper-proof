//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/PBE.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsPBE")
#ifdef RESTRICT_ComYouzhLingtuSignCryptoUtilsPBE
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsPBE 0
#else
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsPBE 1
#endif
#undef RESTRICT_ComYouzhLingtuSignCryptoUtilsPBE

#if !defined (ComYouzhLingtuSignCryptoUtilsPBE_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsPBE || defined(INCLUDE_ComYouzhLingtuSignCryptoUtilsPBE))
#define ComYouzhLingtuSignCryptoUtilsPBE_

@protocol ComYouzhLingtuSignCryptoUtilsPBE < JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoUtilsPBE)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_MD5(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_MD5 0
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, MD5, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_SHA1(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_SHA1 1
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, SHA1, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_RIPEMD160(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_RIPEMD160 2
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, RIPEMD160, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_TIGER(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_TIGER 3
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, TIGER, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_SHA256(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_SHA256 4
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, SHA256, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_MD2(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_MD2 5
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, MD2, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_GOST3411(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_GOST3411 6
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, GOST3411, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_PKCS5S1(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_PKCS5S1 0
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, PKCS5S1, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_PKCS5S2(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_PKCS5S2 1
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, PKCS5S2, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_PKCS12(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_PKCS12 2
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, PKCS12, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_OPENSSL(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_OPENSSL 3
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, OPENSSL, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_PKCS5S1_UTF8(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_PKCS5S1_UTF8 4
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, PKCS5S1_UTF8, jint)

inline jint ComYouzhLingtuSignCryptoUtilsPBE_get_PKCS5S2_UTF8(void);
#define ComYouzhLingtuSignCryptoUtilsPBE_PKCS5S2_UTF8 5
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsPBE, PKCS5S2_UTF8, jint)

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoUtilsPBE)

#endif

#if !defined (ComYouzhLingtuSignCryptoUtilsPBE_Util_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsPBE || defined(INCLUDE_ComYouzhLingtuSignCryptoUtilsPBE_Util))
#define ComYouzhLingtuSignCryptoUtilsPBE_Util_

@class ComYouzhLingtuSignCryptoUtilsBCPBEKey;
@class IOSByteArray;
@class JavaxCryptoSpecPBEKeySpec;
@class JavaxCryptoSpecPBEParameterSpec;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol JavaxCryptoSecretKey;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface ComYouzhLingtuSignCryptoUtilsPBE_Util : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<OrgSpongycastleCryptoCipherParameters>)makePBEMacParametersWithComYouzhLingtuSignCryptoUtilsBCPBEKey:(ComYouzhLingtuSignCryptoUtilsBCPBEKey *)pbeKey
                                                                withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)spec;

+ (id<OrgSpongycastleCryptoCipherParameters>)makePBEMacParametersWithJavaxCryptoSpecPBEKeySpec:(JavaxCryptoSpecPBEKeySpec *)keySpec
                                                                                       withInt:(jint)type
                                                                                       withInt:(jint)hash_
                                                                                       withInt:(jint)keySize;

+ (id<OrgSpongycastleCryptoCipherParameters>)makePBEMacParametersWithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                                                                  withInt:(jint)type
                                                                                  withInt:(jint)hash_
                                                                                  withInt:(jint)keySize
                                                      withJavaxCryptoSpecPBEParameterSpec:(JavaxCryptoSpecPBEParameterSpec *)pbeSpec;

+ (id<OrgSpongycastleCryptoCipherParameters>)makePBEParametersWithComYouzhLingtuSignCryptoUtilsBCPBEKey:(ComYouzhLingtuSignCryptoUtilsBCPBEKey *)pbeKey
                                                             withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)spec
                                                                                           withNSString:(NSString *)targetAlgorithm;

+ (id<OrgSpongycastleCryptoCipherParameters>)makePBEParametersWithByteArray:(IOSByteArray *)pbeKey
                                                                    withInt:(jint)scheme
                                                                    withInt:(jint)digest
                                                                    withInt:(jint)keySize
                                                                    withInt:(jint)ivSize
                                 withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)spec
                                                               withNSString:(NSString *)targetAlgorithm;

+ (id<OrgSpongycastleCryptoCipherParameters>)makePBEParametersWithJavaxCryptoSpecPBEKeySpec:(JavaxCryptoSpecPBEKeySpec *)keySpec
                                                                                    withInt:(jint)type
                                                                                    withInt:(jint)hash_
                                                                                    withInt:(jint)keySize
                                                                                    withInt:(jint)ivSize;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoUtilsPBE_Util)

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsPBE_Util_init(ComYouzhLingtuSignCryptoUtilsPBE_Util *self);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsPBE_Util *new_ComYouzhLingtuSignCryptoUtilsPBE_Util_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsPBE_Util *create_ComYouzhLingtuSignCryptoUtilsPBE_Util_init(void);

FOUNDATION_EXPORT id<OrgSpongycastleCryptoCipherParameters> ComYouzhLingtuSignCryptoUtilsPBE_Util_makePBEParametersWithByteArray_withInt_withInt_withInt_withInt_withJavaSecuritySpecAlgorithmParameterSpec_withNSString_(IOSByteArray *pbeKey, jint scheme, jint digest, jint keySize, jint ivSize, id<JavaSecuritySpecAlgorithmParameterSpec> spec, NSString *targetAlgorithm);

FOUNDATION_EXPORT id<OrgSpongycastleCryptoCipherParameters> ComYouzhLingtuSignCryptoUtilsPBE_Util_makePBEParametersWithComYouzhLingtuSignCryptoUtilsBCPBEKey_withJavaSecuritySpecAlgorithmParameterSpec_withNSString_(ComYouzhLingtuSignCryptoUtilsBCPBEKey *pbeKey, id<JavaSecuritySpecAlgorithmParameterSpec> spec, NSString *targetAlgorithm);

FOUNDATION_EXPORT id<OrgSpongycastleCryptoCipherParameters> ComYouzhLingtuSignCryptoUtilsPBE_Util_makePBEMacParametersWithComYouzhLingtuSignCryptoUtilsBCPBEKey_withJavaSecuritySpecAlgorithmParameterSpec_(ComYouzhLingtuSignCryptoUtilsBCPBEKey *pbeKey, id<JavaSecuritySpecAlgorithmParameterSpec> spec);

FOUNDATION_EXPORT id<OrgSpongycastleCryptoCipherParameters> ComYouzhLingtuSignCryptoUtilsPBE_Util_makePBEMacParametersWithJavaxCryptoSpecPBEKeySpec_withInt_withInt_withInt_(JavaxCryptoSpecPBEKeySpec *keySpec, jint type, jint hash_, jint keySize);

FOUNDATION_EXPORT id<OrgSpongycastleCryptoCipherParameters> ComYouzhLingtuSignCryptoUtilsPBE_Util_makePBEParametersWithJavaxCryptoSpecPBEKeySpec_withInt_withInt_withInt_withInt_(JavaxCryptoSpecPBEKeySpec *keySpec, jint type, jint hash_, jint keySize, jint ivSize);

FOUNDATION_EXPORT id<OrgSpongycastleCryptoCipherParameters> ComYouzhLingtuSignCryptoUtilsPBE_Util_makePBEMacParametersWithJavaxCryptoSecretKey_withInt_withInt_withInt_withJavaxCryptoSpecPBEParameterSpec_(id<JavaxCryptoSecretKey> key, jint type, jint hash_, jint keySize, JavaxCryptoSpecPBEParameterSpec *pbeSpec);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoUtilsPBE_Util)

#endif

#pragma pop_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsPBE")
