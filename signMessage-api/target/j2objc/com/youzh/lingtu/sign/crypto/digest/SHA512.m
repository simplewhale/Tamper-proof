//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/digest/SHA512.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/config/ConfigurableProvider.h"
#include "com/youzh/lingtu/sign/crypto/digest/BCMessageDigest.h"
#include "com/youzh/lingtu/sign/crypto/digest/DigestAlgorithmProvider.h"
#include "com/youzh/lingtu/sign/crypto/digest/SHA512.h"
#include "com/youzh/lingtu/sign/crypto/utils/BaseKeyGenerator.h"
#include "com/youzh/lingtu/sign/crypto/utils/BaseMac.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/nist/NISTObjectIdentifiers.h"
#include "org/spongycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/spongycastle/crypto/CipherKeyGenerator.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/digests/SHA512Digest.h"
#include "org/spongycastle/crypto/digests/SHA512tDigest.h"
#include "org/spongycastle/crypto/macs/HMac.h"
#include "org/spongycastle/crypto/macs/OldHMac.h"

@interface ComYouzhLingtuSignCryptoDigestSHA512 ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDigestSHA512_init(ComYouzhLingtuSignCryptoDigestSHA512 *self);

__attribute__((unused)) static ComYouzhLingtuSignCryptoDigestSHA512 *new_ComYouzhLingtuSignCryptoDigestSHA512_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYouzhLingtuSignCryptoDigestSHA512 *create_ComYouzhLingtuSignCryptoDigestSHA512_init(void);

inline NSString *ComYouzhLingtuSignCryptoDigestSHA512_Mappings_get_PREFIX(void);
static NSString *ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYouzhLingtuSignCryptoDigestSHA512_Mappings, PREFIX, NSString *)

@implementation ComYouzhLingtuSignCryptoDigestSHA512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512_Digest;LComYouzhLingtuSignCryptoDigestSHA512_DigestT;LComYouzhLingtuSignCryptoDigestSHA512_DigestT224;LComYouzhLingtuSignCryptoDigestSHA512_DigestT256;LComYouzhLingtuSignCryptoDigestSHA512_HashMac;LComYouzhLingtuSignCryptoDigestSHA512_HashMacT224;LComYouzhLingtuSignCryptoDigestSHA512_HashMacT256;LComYouzhLingtuSignCryptoDigestSHA512_OldSHA512;LComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator;LComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224;LComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256;LComYouzhLingtuSignCryptoDigestSHA512_Mappings;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512 = { "SHA512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_init(ComYouzhLingtuSignCryptoDigestSHA512 *self) {
  NSObject_init(self);
}

ComYouzhLingtuSignCryptoDigestSHA512 *new_ComYouzhLingtuSignCryptoDigestSHA512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512, init)
}

ComYouzhLingtuSignCryptoDigestSHA512 *create_ComYouzhLingtuSignCryptoDigestSHA512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  ComYouzhLingtuSignCryptoDigestSHA512_Digest *d = (ComYouzhLingtuSignCryptoDigestSHA512_Digest *) cast_chk([super java_clone], [ComYouzhLingtuSignCryptoDigestSHA512_Digest class]);
  ((ComYouzhLingtuSignCryptoDigestSHA512_Digest *) nil_chk(d))->digest_ = new_OrgSpongycastleCryptoDigestsSHA512Digest_initWithOrgSpongycastleCryptoDigestsSHA512Digest_((OrgSpongycastleCryptoDigestsSHA512Digest *) cast_chk(digest_, [OrgSpongycastleCryptoDigestsSHA512Digest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_Digest = { "Digest", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_Digest;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_Digest_init(ComYouzhLingtuSignCryptoDigestSHA512_Digest *self) {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest_initWithOrgSpongycastleCryptoDigest_(self, new_OrgSpongycastleCryptoDigestsSHA512Digest_init());
}

ComYouzhLingtuSignCryptoDigestSHA512_Digest *new_ComYouzhLingtuSignCryptoDigestSHA512_Digest_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_Digest, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_Digest *create_ComYouzhLingtuSignCryptoDigestSHA512_Digest_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_Digest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_Digest)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_DigestT

- (instancetype)initWithInt:(jint)bitLength {
  ComYouzhLingtuSignCryptoDigestSHA512_DigestT_initWithInt_(self, bitLength);
  return self;
}

- (id)java_clone {
  ComYouzhLingtuSignCryptoDigestSHA512_DigestT *d = (ComYouzhLingtuSignCryptoDigestSHA512_DigestT *) cast_chk([super java_clone], [ComYouzhLingtuSignCryptoDigestSHA512_DigestT class]);
  ((ComYouzhLingtuSignCryptoDigestSHA512_DigestT *) nil_chk(d))->digest_ = new_OrgSpongycastleCryptoDigestsSHA512tDigest_initWithOrgSpongycastleCryptoDigestsSHA512tDigest_((OrgSpongycastleCryptoDigestsSHA512tDigest *) cast_chk(digest_, [OrgSpongycastleCryptoDigestsSHA512tDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "clone", "LJavaLangCloneNotSupportedException;", "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_DigestT = { "DigestT", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_DigestT;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_DigestT_initWithInt_(ComYouzhLingtuSignCryptoDigestSHA512_DigestT *self, jint bitLength) {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest_initWithOrgSpongycastleCryptoDigest_(self, new_OrgSpongycastleCryptoDigestsSHA512tDigest_initWithInt_(bitLength));
}

ComYouzhLingtuSignCryptoDigestSHA512_DigestT *new_ComYouzhLingtuSignCryptoDigestSHA512_DigestT_initWithInt_(jint bitLength) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_DigestT, initWithInt_, bitLength)
}

ComYouzhLingtuSignCryptoDigestSHA512_DigestT *create_ComYouzhLingtuSignCryptoDigestSHA512_DigestT_initWithInt_(jint bitLength) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_DigestT, initWithInt_, bitLength)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_DigestT)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_DigestT224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_DigestT224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_DigestT224 = { "DigestT224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_DigestT224;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_DigestT224_init(ComYouzhLingtuSignCryptoDigestSHA512_DigestT224 *self) {
  ComYouzhLingtuSignCryptoDigestSHA512_DigestT_initWithInt_(self, 224);
}

ComYouzhLingtuSignCryptoDigestSHA512_DigestT224 *new_ComYouzhLingtuSignCryptoDigestSHA512_DigestT224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_DigestT224, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_DigestT224 *create_ComYouzhLingtuSignCryptoDigestSHA512_DigestT224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_DigestT224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_DigestT224)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_DigestT256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_DigestT256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_DigestT256 = { "DigestT256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_DigestT256;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_DigestT256_init(ComYouzhLingtuSignCryptoDigestSHA512_DigestT256 *self) {
  ComYouzhLingtuSignCryptoDigestSHA512_DigestT_initWithInt_(self, 256);
}

ComYouzhLingtuSignCryptoDigestSHA512_DigestT256 *new_ComYouzhLingtuSignCryptoDigestSHA512_DigestT256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_DigestT256, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_DigestT256 *create_ComYouzhLingtuSignCryptoDigestSHA512_DigestT256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_DigestT256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_DigestT256)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_HashMac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_HashMac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_HashMac = { "HashMac", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_HashMac;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_HashMac_init(ComYouzhLingtuSignCryptoDigestSHA512_HashMac *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSHA512Digest_init()));
}

ComYouzhLingtuSignCryptoDigestSHA512_HashMac *new_ComYouzhLingtuSignCryptoDigestSHA512_HashMac_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_HashMac, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_HashMac *create_ComYouzhLingtuSignCryptoDigestSHA512_HashMac_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_HashMac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_HashMac)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224 = { "HashMacT224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224_init(ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSHA512tDigest_initWithInt_(224)));
}

ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224 *new_ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224 *create_ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_HashMacT224)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256 = { "HashMacT256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256_init(ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSHA512tDigest_initWithInt_(256)));
}

ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256 *new_ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256 *create_ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_HashMacT256)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512 = { "OldSHA512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512_init(ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsOldHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSHA512Digest_init()));
}

ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512 *new_ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512 *create_ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_OldSHA512)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator = { "KeyGenerator", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator_init(ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSHA512", 512, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator *new_ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator *create_ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_KeyGenerator)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224 = { "KeyGeneratorT224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224_init(ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSHA512/224", 224, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224 *new_ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224 *create_ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT224)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256 = { "KeyGeneratorT256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256;
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256_init(ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSHA512/256", 256, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256 *new_ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256 *create_ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_KeyGeneratorT256)

J2OBJC_INITIALIZED_DEFN(ComYouzhLingtuSignCryptoDigestSHA512_Mappings)

@implementation ComYouzhLingtuSignCryptoDigestSHA512_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSHA512_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:(id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>)provider {
  [((id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.SHA-512" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$Digest")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.MessageDigest.SHA512" withNSString:@"SHA-512"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(OrgSpongycastleAsn1NistNISTObjectIdentifiers, id_sha512)) withNSString:@"SHA-512"];
  [provider addAlgorithmWithNSString:@"MessageDigest.SHA-512/224" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$DigestT224")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.MessageDigest.SHA512/224" withNSString:@"SHA-512/224"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(OrgSpongycastleAsn1NistNISTObjectIdentifiers, id_sha512_224)) withNSString:@"SHA-512/224"];
  [provider addAlgorithmWithNSString:@"MessageDigest.SHA-512/256" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$DigestT256")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.MessageDigest.SHA512256" withNSString:@"SHA-512/256"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(OrgSpongycastleAsn1NistNISTObjectIdentifiers, id_sha512_256)) withNSString:@"SHA-512/256"];
  [provider addAlgorithmWithNSString:@"Mac.OLDHMACSHA512" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$OldSHA512")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"SHA512" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$HashMac") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$KeyGenerator")];
  [self addHMACAliasWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"SHA512" withOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA512)];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"SHA512/224" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$HashMacT224") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$KeyGeneratorT224")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"SHA512/256" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$HashMacT256") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, @"$KeyGeneratorT256")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LComYouzhLingtuSignCryptoConfigConfigurableProvider;", &ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX, "LComYouzhLingtuSignCryptoDigestSHA512;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSHA512_Mappings = { "Mappings", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSHA512_Mappings;
}

+ (void)initialize {
  if (self == [ComYouzhLingtuSignCryptoDigestSHA512_Mappings class]) {
    ComYouzhLingtuSignCryptoDigestSHA512_Mappings_PREFIX = [ComYouzhLingtuSignCryptoDigestSHA512_class_() getName];
    J2OBJC_SET_INITIALIZED(ComYouzhLingtuSignCryptoDigestSHA512_Mappings)
  }
}

@end

void ComYouzhLingtuSignCryptoDigestSHA512_Mappings_init(ComYouzhLingtuSignCryptoDigestSHA512_Mappings *self) {
  ComYouzhLingtuSignCryptoDigestDigestAlgorithmProvider_init(self);
}

ComYouzhLingtuSignCryptoDigestSHA512_Mappings *new_ComYouzhLingtuSignCryptoDigestSHA512_Mappings_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_Mappings, init)
}

ComYouzhLingtuSignCryptoDigestSHA512_Mappings *create_ComYouzhLingtuSignCryptoDigestSHA512_Mappings_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSHA512_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSHA512_Mappings)
