//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/ECUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsECUtil")
#ifdef RESTRICT_ComYouzhLingtuSignCryptoUtilsECUtil
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsECUtil 0
#else
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsECUtil 1
#endif
#undef RESTRICT_ComYouzhLingtuSignCryptoUtilsECUtil

#if !defined (ComYouzhLingtuSignCryptoUtilsECUtil_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsECUtil || defined(INCLUDE_ComYouzhLingtuSignCryptoUtilsECUtil))
#define ComYouzhLingtuSignCryptoUtilsECUtil_

@class ComYouzhLingtuSignCryptoUtilsECParameterSpec;
@class IOSIntArray;
@class JavaMathBigInteger;
@class OrgSpongycastleAsn1ASN1ObjectIdentifier;
@class OrgSpongycastleAsn1X9X9ECParameters;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;

@interface ComYouzhLingtuSignCryptoUtilsECUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)generatePrivateKeyParameterWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)generatePublicKeyParameterWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key;

+ (NSString *)getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid;

+ (OrgSpongycastleAsn1X9X9ECParameters *)getNamedCurveByNameWithNSString:(NSString *)curveName;

+ (OrgSpongycastleAsn1X9X9ECParameters *)getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid;

+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getNamedCurveOidWithComYouzhLingtuSignCryptoUtilsECParameterSpec:(ComYouzhLingtuSignCryptoUtilsECParameterSpec *)ecParameterSpec;

+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getNamedCurveOidWithNSString:(NSString *)curveName;

+ (jint)getOrderBitLengthWithJavaMathBigInteger:(JavaMathBigInteger *)order
                         withJavaMathBigInteger:(JavaMathBigInteger *)privateValue;

#pragma mark Package-Private

+ (IOSIntArray *)convertMidTermsWithIntArray:(IOSIntArray *)k;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoUtilsECUtil)

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsECUtil_init(ComYouzhLingtuSignCryptoUtilsECUtil *self);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsECUtil *new_ComYouzhLingtuSignCryptoUtilsECUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsECUtil *create_ComYouzhLingtuSignCryptoUtilsECUtil_init(void);

FOUNDATION_EXPORT IOSIntArray *ComYouzhLingtuSignCryptoUtilsECUtil_convertMidTermsWithIntArray_(IOSIntArray *k);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *ComYouzhLingtuSignCryptoUtilsECUtil_generatePublicKeyParameterWithJavaSecurityPublicKey_(id<JavaSecurityPublicKey> key);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *ComYouzhLingtuSignCryptoUtilsECUtil_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(id<JavaSecurityPrivateKey> key);

FOUNDATION_EXPORT jint ComYouzhLingtuSignCryptoUtilsECUtil_getOrderBitLengthWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *order, JavaMathBigInteger *privateValue);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *ComYouzhLingtuSignCryptoUtilsECUtil_getNamedCurveOidWithNSString_(NSString *curveName);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *ComYouzhLingtuSignCryptoUtilsECUtil_getNamedCurveOidWithComYouzhLingtuSignCryptoUtilsECParameterSpec_(ComYouzhLingtuSignCryptoUtilsECParameterSpec *ecParameterSpec);

FOUNDATION_EXPORT OrgSpongycastleAsn1X9X9ECParameters *ComYouzhLingtuSignCryptoUtilsECUtil_getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT OrgSpongycastleAsn1X9X9ECParameters *ComYouzhLingtuSignCryptoUtilsECUtil_getNamedCurveByNameWithNSString_(NSString *curveName);

FOUNDATION_EXPORT NSString *ComYouzhLingtuSignCryptoUtilsECUtil_getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoUtilsECUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsECUtil")
