//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/ECPrivateKeySpec.java
//

#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECKeySpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECParameterSpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECPrivateKeySpec.h"
#include "java/math/BigInteger.h"

@interface ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec () {
 @public
  JavaMathBigInteger *d_;
}

@end

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec, d_, JavaMathBigInteger *)

@implementation ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)d
withComYouzhLingtuSignCryptoUtilsECParameterSpec:(ComYouzhLingtuSignCryptoUtilsECParameterSpec *)spec {
  ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_initWithJavaMathBigInteger_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(self, d, spec);
  return self;
}

- (JavaMathBigInteger *)getD {
  return d_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:withComYouzhLingtuSignCryptoUtilsECParameterSpec:);
  methods[1].selector = @selector(getD);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "d_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LComYouzhLingtuSignCryptoUtilsECParameterSpec;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec = { "ECPrivateKeySpec", "com.youzh.lingtu.sign.crypto.utils", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec;
}

@end

void ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_initWithJavaMathBigInteger_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec *self, JavaMathBigInteger *d, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  ComYouzhLingtuSignCryptoUtilsECKeySpec_initWithComYouzhLingtuSignCryptoUtilsECParameterSpec_(self, spec);
  self->d_ = d;
}

ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec *new_ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_initWithJavaMathBigInteger_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(JavaMathBigInteger *d, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec, initWithJavaMathBigInteger_withComYouzhLingtuSignCryptoUtilsECParameterSpec_, d, spec)
}

ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec *create_ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec_initWithJavaMathBigInteger_withComYouzhLingtuSignCryptoUtilsECParameterSpec_(JavaMathBigInteger *d, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec, initWithJavaMathBigInteger_withComYouzhLingtuSignCryptoUtilsECParameterSpec_, d, spec)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoUtilsECPrivateKeySpec)
