//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/BCECPublicKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBCECPublicKey")
#ifdef RESTRICT_ComYouzhLingtuSignCryptoUtilsBCECPublicKey
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBCECPublicKey 0
#else
#define INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBCECPublicKey 1
#endif
#undef RESTRICT_ComYouzhLingtuSignCryptoUtilsBCECPublicKey

#if !defined (ComYouzhLingtuSignCryptoUtilsBCECPublicKey_) && (INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBCECPublicKey || defined(INCLUDE_ComYouzhLingtuSignCryptoUtilsBCECPublicKey))
#define ComYouzhLingtuSignCryptoUtilsBCECPublicKey_

#define RESTRICT_JavaSecurityInterfacesECPublicKey 1
#define INCLUDE_JavaSecurityInterfacesECPublicKey 1
#include "java/security/interfaces/ECPublicKey.h"

#define RESTRICT_ComYouzhLingtuSignCryptoUtilsECPublicKey 1
#define INCLUDE_ComYouzhLingtuSignCryptoUtilsECPublicKey 1
#include "com/youzh/lingtu/sign/crypto/utils/ECPublicKey.h"

#define RESTRICT_ComYouzhLingtuSignCryptoUtilsECPointEncoder 1
#define INCLUDE_ComYouzhLingtuSignCryptoUtilsECPointEncoder 1
#include "com/youzh/lingtu/sign/crypto/utils/ECPointEncoder.h"

@class ComYouzhLingtuSignCryptoUtilsECParameterSpec;
@class ComYouzhLingtuSignCryptoUtilsECPublicKeySpec;
@class IOSByteArray;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPoint;
@class JavaSecuritySpecECPublicKeySpec;
@class OrgSpongycastleAsn1X509SubjectPublicKeyInfo;
@class OrgSpongycastleCryptoParamsECPublicKeyParameters;
@class OrgSpongycastleMathEcECPoint;
@protocol ComYouzhLingtuSignCryptoConfigProviderConfiguration;

@interface ComYouzhLingtuSignCryptoUtilsBCECPublicKey : NSObject < JavaSecurityInterfacesECPublicKey, ComYouzhLingtuSignCryptoUtilsECPublicKey, ComYouzhLingtuSignCryptoUtilsECPointEncoder >

#pragma mark Public

- (instancetype)initWithJavaSecurityInterfacesECPublicKey:(id<JavaSecurityInterfacesECPublicKey>)key
  withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withComYouzhLingtuSignCryptoUtilsBCECPublicKey:(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *)key;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPublicKeyParameters:(OrgSpongycastleCryptoParamsECPublicKeyParameters *)params
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPublicKeyParameters:(OrgSpongycastleCryptoParamsECPublicKeyParameters *)params
withComYouzhLingtuSignCryptoUtilsECParameterSpec:(ComYouzhLingtuSignCryptoUtilsECParameterSpec *)spec
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleCryptoParamsECPublicKeyParameters:(OrgSpongycastleCryptoParamsECPublicKeyParameters *)params
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withJavaSecuritySpecECPublicKeySpec:(JavaSecuritySpecECPublicKeySpec *)spec
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withComYouzhLingtuSignCryptoUtilsECPublicKeySpec:(ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *)spec
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration;

- (OrgSpongycastleMathEcECPoint *)engineGetQ;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (ComYouzhLingtuSignCryptoUtilsECParameterSpec *)getParameters;

- (JavaSecuritySpecECParameterSpec *)getParams;

- (OrgSpongycastleMathEcECPoint *)getQ;

- (JavaSecuritySpecECPoint *)getW;

- (NSUInteger)hash;

- (void)setPointFormatWithNSString:(NSString *)style;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgSpongycastleAsn1X509SubjectPublicKeyInfo:(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)info
withComYouzhLingtuSignCryptoConfigProviderConfiguration:(id<ComYouzhLingtuSignCryptoConfigProviderConfiguration>)configuration;

- (ComYouzhLingtuSignCryptoUtilsECParameterSpec *)engineGetSpec;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYouzhLingtuSignCryptoUtilsBCECPublicKey)

inline jlong ComYouzhLingtuSignCryptoUtilsBCECPublicKey_get_serialVersionUID(void);
#define ComYouzhLingtuSignCryptoUtilsBCECPublicKey_serialVersionUID 2422789860422731812LL
J2OBJC_STATIC_FIELD_CONSTANT(ComYouzhLingtuSignCryptoUtilsBCECPublicKey, serialVersionUID, jlong)

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsBCECPublicKey_(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *self, NSString *algorithm, ComYouzhLingtuSignCryptoUtilsBCECPublicKey *key);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *new_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsBCECPublicKey_(NSString *algorithm, ComYouzhLingtuSignCryptoUtilsBCECPublicKey *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *create_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsBCECPublicKey_(NSString *algorithm, ComYouzhLingtuSignCryptoUtilsBCECPublicKey *key);

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *self, NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *new_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *create_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsECPublicKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *self, NSString *algorithm, ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *new_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsECPublicKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *create_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withComYouzhLingtuSignCryptoUtilsECPublicKeySpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, ComYouzhLingtuSignCryptoUtilsECPublicKeySpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *new_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *create_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *new_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *create_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoUtilsECParameterSpec_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *self, NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *new_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *create_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleCryptoParamsECPublicKeyParameters_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleCryptoParamsECPublicKeyParameters *params, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *self, id<JavaSecurityInterfacesECPublicKey> key, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *new_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(id<JavaSecurityInterfacesECPublicKey> key, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *create_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(id<JavaSecurityInterfacesECPublicKey> key, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(ComYouzhLingtuSignCryptoUtilsBCECPublicKey *self, NSString *algorithm, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *new_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYouzhLingtuSignCryptoUtilsBCECPublicKey *create_ComYouzhLingtuSignCryptoUtilsBCECPublicKey_initWithNSString_withOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withComYouzhLingtuSignCryptoConfigProviderConfiguration_(NSString *algorithm, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *info, id<ComYouzhLingtuSignCryptoConfigProviderConfiguration> configuration);

J2OBJC_TYPE_LITERAL_HEADER(ComYouzhLingtuSignCryptoUtilsBCECPublicKey)

#endif

#pragma pop_macro("INCLUDE_ALL_ComYouzhLingtuSignCryptoUtilsBCECPublicKey")
