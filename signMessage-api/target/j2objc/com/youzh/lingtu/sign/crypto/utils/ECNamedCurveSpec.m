//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/ECNamedCurveSpec.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECNamedCurveSpec.h"
#include "java/math/BigInteger.h"
#include "java/security/spec/ECField.h"
#include "java/security/spec/ECFieldF2m.h"
#include "java/security/spec/ECFieldFp.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/EllipticCurve.h"
#include "org/spongycastle/math/ec/ECAlgorithms.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/math/field/FiniteField.h"
#include "org/spongycastle/math/field/Polynomial.h"
#include "org/spongycastle/math/field/PolynomialExtensionField.h"
#include "org/spongycastle/util/Arrays.h"

@interface ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec () {
 @public
  NSString *name_;
}

+ (JavaSecuritySpecEllipticCurve *)convertCurveWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                                                                  withByteArray:(IOSByteArray *)seed;

+ (id<JavaSecuritySpecECField>)convertFieldWithOrgSpongycastleMathFieldFiniteField:(id<OrgSpongycastleMathFieldFiniteField>)field;

+ (JavaSecuritySpecECPoint *)convertPointWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)g;

@end

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, name_, NSString *)

__attribute__((unused)) static JavaSecuritySpecEllipticCurve *ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(OrgSpongycastleMathEcECCurve *curve, IOSByteArray *seed);

__attribute__((unused)) static id<JavaSecuritySpecECField> ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertFieldWithOrgSpongycastleMathFieldFiniteField_(id<OrgSpongycastleMathFieldFiniteField> field);

__attribute__((unused)) static JavaSecuritySpecECPoint *ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertPointWithOrgSpongycastleMathEcECPoint_(OrgSpongycastleMathEcECPoint *g);

@implementation ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec

+ (JavaSecuritySpecEllipticCurve *)convertCurveWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                                                                  withByteArray:(IOSByteArray *)seed {
  return ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, seed);
}

+ (id<JavaSecuritySpecECField>)convertFieldWithOrgSpongycastleMathFieldFiniteField:(id<OrgSpongycastleMathFieldFiniteField>)field {
  return ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertFieldWithOrgSpongycastleMathFieldFiniteField_(field);
}

+ (JavaSecuritySpecECPoint *)convertPointWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)g {
  return ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertPointWithOrgSpongycastleMathEcECPoint_(g);
}

- (instancetype)initWithNSString:(NSString *)name
withOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n {
  ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(self, name, curve, g, n);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
     withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n {
  ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(self, name, curve, g, n);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h {
  ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, name, curve, g, n, h);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
     withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h {
  ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, name, curve, g, n, h);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h
                   withByteArray:(IOSByteArray *)seed {
  ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, name, curve, g, n, h, seed);
  return self;
}

- (NSString *)getName {
  return name_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaSecuritySpecEllipticCurve;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECField;", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECPoint;", 0xa, 4, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(convertCurveWithOrgSpongycastleMathEcECCurve:withByteArray:);
  methods[1].selector = @selector(convertFieldWithOrgSpongycastleMathFieldFiniteField:);
  methods[2].selector = @selector(convertPointWithOrgSpongycastleMathEcECPoint:);
  methods[3].selector = @selector(initWithNSString:withOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECPoint:withJavaMathBigInteger:);
  methods[4].selector = @selector(initWithNSString:withJavaSecuritySpecEllipticCurve:withJavaSecuritySpecECPoint:withJavaMathBigInteger:);
  methods[5].selector = @selector(initWithNSString:withOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[6].selector = @selector(initWithNSString:withJavaSecuritySpecEllipticCurve:withJavaSecuritySpecECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[7].selector = @selector(initWithNSString:withOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:);
  methods[8].selector = @selector(getName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "convertCurve", "LOrgSpongycastleMathEcECCurve;[B", "convertField", "LOrgSpongycastleMathFieldFiniteField;", "convertPoint", "LOrgSpongycastleMathEcECPoint;", "LNSString;LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECPoint;LJavaMathBigInteger;", "LNSString;LJavaSecuritySpecEllipticCurve;LJavaSecuritySpecECPoint;LJavaMathBigInteger;", "LNSString;LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LNSString;LJavaSecuritySpecEllipticCurve;LJavaSecuritySpecECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LNSString;LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;[B" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec = { "ECNamedCurveSpec", "com.youzh.lingtu.sign.crypto.utils", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec;
}

@end

JavaSecuritySpecEllipticCurve *ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(OrgSpongycastleMathEcECCurve *curve, IOSByteArray *seed) {
  ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initialize();
  id<JavaSecuritySpecECField> field = ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertFieldWithOrgSpongycastleMathFieldFiniteField_([((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getField]);
  JavaMathBigInteger *a = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger];
  JavaMathBigInteger *b = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getB])) toBigInteger];
  return new_JavaSecuritySpecEllipticCurve_initWithJavaSecuritySpecECField_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(field, a, b, seed);
}

id<JavaSecuritySpecECField> ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertFieldWithOrgSpongycastleMathFieldFiniteField_(id<OrgSpongycastleMathFieldFiniteField> field) {
  ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initialize();
  if (OrgSpongycastleMathEcECAlgorithms_isFpFieldWithOrgSpongycastleMathFieldFiniteField_(field)) {
    return new_JavaSecuritySpecECFieldFp_initWithJavaMathBigInteger_([((id<OrgSpongycastleMathFieldFiniteField>) nil_chk(field)) getCharacteristic]);
  }
  else {
    id<OrgSpongycastleMathFieldPolynomial> poly = [((id<OrgSpongycastleMathFieldPolynomialExtensionField>) nil_chk(((id<OrgSpongycastleMathFieldPolynomialExtensionField>) cast_check(field, OrgSpongycastleMathFieldPolynomialExtensionField_class_())))) getMinimalPolynomial];
    IOSIntArray *exponents = [((id<OrgSpongycastleMathFieldPolynomial>) nil_chk(poly)) getExponentsPresent];
    IOSIntArray *ks = OrgSpongycastleUtilArrays_reverseWithIntArray_(OrgSpongycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(exponents, 1, ((IOSIntArray *) nil_chk(exponents))->size_ - 1));
    return new_JavaSecuritySpecECFieldF2m_initWithInt_withIntArray_([poly getDegree], ks);
  }
}

JavaSecuritySpecECPoint *ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertPointWithOrgSpongycastleMathEcECPoint_(OrgSpongycastleMathEcECPoint *g) {
  ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initialize();
  g = [((OrgSpongycastleMathEcECPoint *) nil_chk(g)) normalize];
  return new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(g)) getAffineXCoord])) toBigInteger], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([g getAffineYCoord])) toBigInteger]);
}

void ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *self, NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, nil), ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertPointWithOrgSpongycastleMathEcECPoint_(g), n, 1);
  self->name_ = name;
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *new_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_, name, curve, g, n)
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *create_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_, name, curve, g, n)
}

void ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *self, NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, curve, g, n, 1);
  self->name_ = name;
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *new_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_, name, curve, g, n)
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *create_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_, name, curve, g, n)
}

void ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *self, NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, nil), ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertPointWithOrgSpongycastleMathEcECPoint_(g), n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  self->name_ = name;
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *new_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *create_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}

void ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *self, NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, curve, g, n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  self->name_ = name;
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *new_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *create_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}

void ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *self, NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, seed), ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_convertPointWithOrgSpongycastleMathEcECPoint_(g), n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  self->name_ = name;
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *new_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, name, curve, g, n, h, seed)
}

ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec *create_ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec_initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec, initWithNSString_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, name, curve, g, n, h, seed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoUtilsECNamedCurveSpec)
