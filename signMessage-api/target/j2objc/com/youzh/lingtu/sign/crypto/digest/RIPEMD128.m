//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/digest/RIPEMD128.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/config/ConfigurableProvider.h"
#include "com/youzh/lingtu/sign/crypto/digest/BCMessageDigest.h"
#include "com/youzh/lingtu/sign/crypto/digest/DigestAlgorithmProvider.h"
#include "com/youzh/lingtu/sign/crypto/digest/RIPEMD128.h"
#include "com/youzh/lingtu/sign/crypto/utils/BaseKeyGenerator.h"
#include "com/youzh/lingtu/sign/crypto/utils/BaseMac.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/teletrust/TeleTrusTObjectIdentifiers.h"
#include "org/spongycastle/crypto/CipherKeyGenerator.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/digests/RIPEMD128Digest.h"
#include "org/spongycastle/crypto/macs/HMac.h"

@interface ComYouzhLingtuSignCryptoDigestRIPEMD128 ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDigestRIPEMD128_init(ComYouzhLingtuSignCryptoDigestRIPEMD128 *self);

__attribute__((unused)) static ComYouzhLingtuSignCryptoDigestRIPEMD128 *new_ComYouzhLingtuSignCryptoDigestRIPEMD128_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYouzhLingtuSignCryptoDigestRIPEMD128 *create_ComYouzhLingtuSignCryptoDigestRIPEMD128_init(void);

inline NSString *ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_get_PREFIX(void);
static NSString *ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings, PREFIX, NSString *)

@implementation ComYouzhLingtuSignCryptoDigestRIPEMD128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestRIPEMD128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestRIPEMD128_Digest;LComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac;LComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator;LComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestRIPEMD128 = { "RIPEMD128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestRIPEMD128;
}

@end

void ComYouzhLingtuSignCryptoDigestRIPEMD128_init(ComYouzhLingtuSignCryptoDigestRIPEMD128 *self) {
  NSObject_init(self);
}

ComYouzhLingtuSignCryptoDigestRIPEMD128 *new_ComYouzhLingtuSignCryptoDigestRIPEMD128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128, init)
}

ComYouzhLingtuSignCryptoDigestRIPEMD128 *create_ComYouzhLingtuSignCryptoDigestRIPEMD128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestRIPEMD128)

@implementation ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest *d = (ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest *) cast_chk([super java_clone], [ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest class]);
  ((ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest *) nil_chk(d))->digest_ = new_OrgSpongycastleCryptoDigestsRIPEMD128Digest_initWithOrgSpongycastleCryptoDigestsRIPEMD128Digest_((OrgSpongycastleCryptoDigestsRIPEMD128Digest *) cast_chk(digest_, [OrgSpongycastleCryptoDigestsRIPEMD128Digest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LComYouzhLingtuSignCryptoDigestRIPEMD128;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest = { "Digest", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest_init(ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest *self) {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest_initWithOrgSpongycastleCryptoDigest_(self, new_OrgSpongycastleCryptoDigestsRIPEMD128Digest_init());
}

ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest *new_ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest, init)
}

ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest *create_ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestRIPEMD128_Digest)

@implementation ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestRIPEMD128;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac = { "HashMac", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac;
}

@end

void ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac_init(ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsRIPEMD128Digest_init()));
}

ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac *new_ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac, init)
}

ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac *create_ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestRIPEMD128_HashMac)

@implementation ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestRIPEMD128;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator = { "KeyGenerator", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator;
}

@end

void ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator_init(ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACRIPEMD128", 128, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator *new_ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator, init)
}

ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator *create_ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestRIPEMD128_KeyGenerator)

J2OBJC_INITIALIZED_DEFN(ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings)

@implementation ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:(id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>)provider {
  [((id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.RIPEMD128" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_PREFIX, @"$Digest")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(OrgSpongycastleAsn1TeletrustTeleTrusTObjectIdentifiers, ripemd128)) withNSString:@"RIPEMD128"];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"RIPEMD128" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_PREFIX, @"$HashMac") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_PREFIX, @"$KeyGenerator")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LComYouzhLingtuSignCryptoConfigConfigurableProvider;", &ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_PREFIX, "LComYouzhLingtuSignCryptoDigestRIPEMD128;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings = { "Mappings", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings;
}

+ (void)initialize {
  if (self == [ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings class]) {
    ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_PREFIX = [ComYouzhLingtuSignCryptoDigestRIPEMD128_class_() getName];
    J2OBJC_SET_INITIALIZED(ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings)
  }
}

@end

void ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_init(ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings *self) {
  ComYouzhLingtuSignCryptoDigestDigestAlgorithmProvider_init(self);
}

ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings *new_ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings, init)
}

ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings *create_ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestRIPEMD128_Mappings)
