//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/utils/ECKeySpec.java
//

#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECKeySpec.h"
#include "com/youzh/lingtu/sign/crypto/utils/ECParameterSpec.h"

@interface ComYouzhLingtuSignCryptoUtilsECKeySpec () {
 @public
  ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec_;
}

@end

J2OBJC_FIELD_SETTER(ComYouzhLingtuSignCryptoUtilsECKeySpec, spec_, ComYouzhLingtuSignCryptoUtilsECParameterSpec *)

@implementation ComYouzhLingtuSignCryptoUtilsECKeySpec

- (instancetype)initWithComYouzhLingtuSignCryptoUtilsECParameterSpec:(ComYouzhLingtuSignCryptoUtilsECParameterSpec *)spec {
  ComYouzhLingtuSignCryptoUtilsECKeySpec_initWithComYouzhLingtuSignCryptoUtilsECParameterSpec_(self, spec);
  return self;
}

- (ComYouzhLingtuSignCryptoUtilsECParameterSpec *)getParams {
  return spec_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComYouzhLingtuSignCryptoUtilsECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComYouzhLingtuSignCryptoUtilsECParameterSpec:);
  methods[1].selector = @selector(getParams);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "spec_", "LComYouzhLingtuSignCryptoUtilsECParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoUtilsECParameterSpec;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoUtilsECKeySpec = { "ECKeySpec", "com.youzh.lingtu.sign.crypto.utils", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoUtilsECKeySpec;
}

@end

void ComYouzhLingtuSignCryptoUtilsECKeySpec_initWithComYouzhLingtuSignCryptoUtilsECParameterSpec_(ComYouzhLingtuSignCryptoUtilsECKeySpec *self, ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  NSObject_init(self);
  self->spec_ = spec;
}

ComYouzhLingtuSignCryptoUtilsECKeySpec *new_ComYouzhLingtuSignCryptoUtilsECKeySpec_initWithComYouzhLingtuSignCryptoUtilsECParameterSpec_(ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoUtilsECKeySpec, initWithComYouzhLingtuSignCryptoUtilsECParameterSpec_, spec)
}

ComYouzhLingtuSignCryptoUtilsECKeySpec *create_ComYouzhLingtuSignCryptoUtilsECKeySpec_initWithComYouzhLingtuSignCryptoUtilsECParameterSpec_(ComYouzhLingtuSignCryptoUtilsECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoUtilsECKeySpec, initWithComYouzhLingtuSignCryptoUtilsECParameterSpec_, spec)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoUtilsECKeySpec)
