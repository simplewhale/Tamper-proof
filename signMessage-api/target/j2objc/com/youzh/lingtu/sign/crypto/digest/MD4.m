//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/digest/MD4.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/config/ConfigurableProvider.h"
#include "com/youzh/lingtu/sign/crypto/digest/BCMessageDigest.h"
#include "com/youzh/lingtu/sign/crypto/digest/DigestAlgorithmProvider.h"
#include "com/youzh/lingtu/sign/crypto/digest/MD4.h"
#include "com/youzh/lingtu/sign/crypto/utils/BaseKeyGenerator.h"
#include "com/youzh/lingtu/sign/crypto/utils/BaseMac.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/spongycastle/crypto/CipherKeyGenerator.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/digests/MD4Digest.h"
#include "org/spongycastle/crypto/macs/HMac.h"

@interface ComYouzhLingtuSignCryptoDigestMD4 ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDigestMD4_init(ComYouzhLingtuSignCryptoDigestMD4 *self);

__attribute__((unused)) static ComYouzhLingtuSignCryptoDigestMD4 *new_ComYouzhLingtuSignCryptoDigestMD4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYouzhLingtuSignCryptoDigestMD4 *create_ComYouzhLingtuSignCryptoDigestMD4_init(void);

inline NSString *ComYouzhLingtuSignCryptoDigestMD4_Mappings_get_PREFIX(void);
static NSString *ComYouzhLingtuSignCryptoDigestMD4_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYouzhLingtuSignCryptoDigestMD4_Mappings, PREFIX, NSString *)

@implementation ComYouzhLingtuSignCryptoDigestMD4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestMD4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestMD4_HashMac;LComYouzhLingtuSignCryptoDigestMD4_KeyGenerator;LComYouzhLingtuSignCryptoDigestMD4_Digest;LComYouzhLingtuSignCryptoDigestMD4_Mappings;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestMD4 = { "MD4", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestMD4;
}

@end

void ComYouzhLingtuSignCryptoDigestMD4_init(ComYouzhLingtuSignCryptoDigestMD4 *self) {
  NSObject_init(self);
}

ComYouzhLingtuSignCryptoDigestMD4 *new_ComYouzhLingtuSignCryptoDigestMD4_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestMD4, init)
}

ComYouzhLingtuSignCryptoDigestMD4 *create_ComYouzhLingtuSignCryptoDigestMD4_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestMD4, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestMD4)

@implementation ComYouzhLingtuSignCryptoDigestMD4_HashMac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestMD4_HashMac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestMD4;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestMD4_HashMac = { "HashMac", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestMD4_HashMac;
}

@end

void ComYouzhLingtuSignCryptoDigestMD4_HashMac_init(ComYouzhLingtuSignCryptoDigestMD4_HashMac *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsMD4Digest_init()));
}

ComYouzhLingtuSignCryptoDigestMD4_HashMac *new_ComYouzhLingtuSignCryptoDigestMD4_HashMac_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestMD4_HashMac, init)
}

ComYouzhLingtuSignCryptoDigestMD4_HashMac *create_ComYouzhLingtuSignCryptoDigestMD4_HashMac_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestMD4_HashMac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestMD4_HashMac)

@implementation ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestMD4;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator = { "KeyGenerator", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator;
}

@end

void ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator_init(ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACMD4", 128, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator *new_ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator, init)
}

ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator *create_ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestMD4_KeyGenerator)

@implementation ComYouzhLingtuSignCryptoDigestMD4_Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestMD4_Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  ComYouzhLingtuSignCryptoDigestMD4_Digest *d = (ComYouzhLingtuSignCryptoDigestMD4_Digest *) cast_chk([super java_clone], [ComYouzhLingtuSignCryptoDigestMD4_Digest class]);
  ((ComYouzhLingtuSignCryptoDigestMD4_Digest *) nil_chk(d))->digest_ = new_OrgSpongycastleCryptoDigestsMD4Digest_initWithOrgSpongycastleCryptoDigestsMD4Digest_((OrgSpongycastleCryptoDigestsMD4Digest *) cast_chk(digest_, [OrgSpongycastleCryptoDigestsMD4Digest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LComYouzhLingtuSignCryptoDigestMD4;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestMD4_Digest = { "Digest", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestMD4_Digest;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void ComYouzhLingtuSignCryptoDigestMD4_Digest_init(ComYouzhLingtuSignCryptoDigestMD4_Digest *self) {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest_initWithOrgSpongycastleCryptoDigest_(self, new_OrgSpongycastleCryptoDigestsMD4Digest_init());
}

ComYouzhLingtuSignCryptoDigestMD4_Digest *new_ComYouzhLingtuSignCryptoDigestMD4_Digest_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestMD4_Digest, init)
}

ComYouzhLingtuSignCryptoDigestMD4_Digest *create_ComYouzhLingtuSignCryptoDigestMD4_Digest_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestMD4_Digest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestMD4_Digest)

J2OBJC_INITIALIZED_DEFN(ComYouzhLingtuSignCryptoDigestMD4_Mappings)

@implementation ComYouzhLingtuSignCryptoDigestMD4_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestMD4_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:(id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>)provider {
  [((id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.MD4" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestMD4_Mappings_PREFIX, @"$Digest")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, md4)) withNSString:@"MD4"];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"MD4" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestMD4_Mappings_PREFIX, @"$HashMac") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestMD4_Mappings_PREFIX, @"$KeyGenerator")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LComYouzhLingtuSignCryptoConfigConfigurableProvider;", &ComYouzhLingtuSignCryptoDigestMD4_Mappings_PREFIX, "LComYouzhLingtuSignCryptoDigestMD4;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestMD4_Mappings = { "Mappings", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestMD4_Mappings;
}

+ (void)initialize {
  if (self == [ComYouzhLingtuSignCryptoDigestMD4_Mappings class]) {
    ComYouzhLingtuSignCryptoDigestMD4_Mappings_PREFIX = [ComYouzhLingtuSignCryptoDigestMD4_class_() getName];
    J2OBJC_SET_INITIALIZED(ComYouzhLingtuSignCryptoDigestMD4_Mappings)
  }
}

@end

void ComYouzhLingtuSignCryptoDigestMD4_Mappings_init(ComYouzhLingtuSignCryptoDigestMD4_Mappings *self) {
  ComYouzhLingtuSignCryptoDigestDigestAlgorithmProvider_init(self);
}

ComYouzhLingtuSignCryptoDigestMD4_Mappings *new_ComYouzhLingtuSignCryptoDigestMD4_Mappings_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestMD4_Mappings, init)
}

ComYouzhLingtuSignCryptoDigestMD4_Mappings *create_ComYouzhLingtuSignCryptoDigestMD4_Mappings_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestMD4_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestMD4_Mappings)
