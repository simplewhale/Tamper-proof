//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/src/main/java/com/youzh/lingtu/sign/crypto/digest/Skein.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/youzh/lingtu/sign/crypto/config/ConfigurableProvider.h"
#include "com/youzh/lingtu/sign/crypto/digest/BCMessageDigest.h"
#include "com/youzh/lingtu/sign/crypto/digest/DigestAlgorithmProvider.h"
#include "com/youzh/lingtu/sign/crypto/digest/Skein.h"
#include "com/youzh/lingtu/sign/crypto/utils/BaseKeyGenerator.h"
#include "com/youzh/lingtu/sign/crypto/utils/BaseMac.h"
#include "org/spongycastle/crypto/CipherKeyGenerator.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/digests/SkeinDigest.h"
#include "org/spongycastle/crypto/macs/HMac.h"
#include "org/spongycastle/crypto/macs/SkeinMac.h"

@interface ComYouzhLingtuSignCryptoDigestSkein ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDigestSkein_init(ComYouzhLingtuSignCryptoDigestSkein *self);

__attribute__((unused)) static ComYouzhLingtuSignCryptoDigestSkein *new_ComYouzhLingtuSignCryptoDigestSkein_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYouzhLingtuSignCryptoDigestSkein *create_ComYouzhLingtuSignCryptoDigestSkein_init(void);

@interface ComYouzhLingtuSignCryptoDigestSkein_Mappings ()

- (void)addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:(id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>)provider
                                                                           withInt:(jint)blockSize
                                                                           withInt:(jint)outputSize;

@end

inline NSString *ComYouzhLingtuSignCryptoDigestSkein_Mappings_get_PREFIX(void);
static NSString *ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYouzhLingtuSignCryptoDigestSkein_Mappings, PREFIX, NSString *)

__attribute__((unused)) static void ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(ComYouzhLingtuSignCryptoDigestSkein_Mappings *self, id<ComYouzhLingtuSignCryptoConfigConfigurableProvider> provider, jint blockSize, jint outputSize);

@implementation ComYouzhLingtuSignCryptoDigestSkein

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein_DigestSkein256;LComYouzhLingtuSignCryptoDigestSkein_Digest_256_128;LComYouzhLingtuSignCryptoDigestSkein_Digest_256_160;LComYouzhLingtuSignCryptoDigestSkein_Digest_256_224;LComYouzhLingtuSignCryptoDigestSkein_Digest_256_256;LComYouzhLingtuSignCryptoDigestSkein_DigestSkein512;LComYouzhLingtuSignCryptoDigestSkein_Digest_512_128;LComYouzhLingtuSignCryptoDigestSkein_Digest_512_160;LComYouzhLingtuSignCryptoDigestSkein_Digest_512_224;LComYouzhLingtuSignCryptoDigestSkein_Digest_512_256;LComYouzhLingtuSignCryptoDigestSkein_Digest_512_384;LComYouzhLingtuSignCryptoDigestSkein_Digest_512_512;LComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024;LComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384;LComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512;LComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024;LComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128;LComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160;LComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224;LComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256;LComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128;LComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160;LComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224;LComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256;LComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384;LComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512;LComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384;LComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512;LComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512;LComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512;LComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512;LComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024;LComYouzhLingtuSignCryptoDigestSkein_Mappings;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein = { "Skein", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_init(ComYouzhLingtuSignCryptoDigestSkein *self) {
  NSObject_init(self);
}

ComYouzhLingtuSignCryptoDigestSkein *new_ComYouzhLingtuSignCryptoDigestSkein_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein, init)
}

ComYouzhLingtuSignCryptoDigestSkein *create_ComYouzhLingtuSignCryptoDigestSkein_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein)

@implementation ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256

- (instancetype)initWithInt:(jint)outputSize {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256_initWithInt_(self, outputSize);
  return self;
}

- (id)java_clone {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest *d = (ComYouzhLingtuSignCryptoDigestBCMessageDigest *) cast_chk([super java_clone], [ComYouzhLingtuSignCryptoDigestBCMessageDigest class]);
  ((ComYouzhLingtuSignCryptoDigestBCMessageDigest *) nil_chk(d))->digest_ = new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithOrgSpongycastleCryptoDigestsSkeinDigest_((OrgSpongycastleCryptoDigestsSkeinDigest *) cast_chk(digest_, [OrgSpongycastleCryptoDigestsSkeinDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "clone", "LJavaLangCloneNotSupportedException;", "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256 = { "DigestSkein256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256_initWithInt_(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256 *self, jint outputSize) {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest_initWithOrgSpongycastleCryptoDigest_(self, new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_256, outputSize));
}

ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256 *new_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256_initWithInt_(jint outputSize) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256, initWithInt_, outputSize)
}

ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256 *create_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256_initWithInt_(jint outputSize) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256, initWithInt_, outputSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128 = { "Digest_256_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256_initWithInt_(self, 128);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160 = { "Digest_256_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256_initWithInt_(self, 160);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224 = { "Digest_256_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256_initWithInt_(self, 224);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256 = { "Digest_256_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein256_initWithInt_(self, 256);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_256_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512

- (instancetype)initWithInt:(jint)outputSize {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(self, outputSize);
  return self;
}

- (id)java_clone {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest *d = (ComYouzhLingtuSignCryptoDigestBCMessageDigest *) cast_chk([super java_clone], [ComYouzhLingtuSignCryptoDigestBCMessageDigest class]);
  ((ComYouzhLingtuSignCryptoDigestBCMessageDigest *) nil_chk(d))->digest_ = new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithOrgSpongycastleCryptoDigestsSkeinDigest_((OrgSpongycastleCryptoDigestsSkeinDigest *) cast_chk(digest_, [OrgSpongycastleCryptoDigestsSkeinDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "clone", "LJavaLangCloneNotSupportedException;", "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512 = { "DigestSkein512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512 *self, jint outputSize) {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest_initWithOrgSpongycastleCryptoDigest_(self, new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_512, outputSize));
}

ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512 *new_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(jint outputSize) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512, initWithInt_, outputSize)
}

ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512 *create_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(jint outputSize) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512, initWithInt_, outputSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128 = { "Digest_512_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(self, 128);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160 = { "Digest_512_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(self, 160);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224 = { "Digest_512_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(self, 224);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256 = { "Digest_512_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(self, 256);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384 = { "Digest_512_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(self, 384);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512 = { "Digest_512_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein512_initWithInt_(self, 512);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_512_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024

- (instancetype)initWithInt:(jint)outputSize {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024_initWithInt_(self, outputSize);
  return self;
}

- (id)java_clone {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest *d = (ComYouzhLingtuSignCryptoDigestBCMessageDigest *) cast_chk([super java_clone], [ComYouzhLingtuSignCryptoDigestBCMessageDigest class]);
  ((ComYouzhLingtuSignCryptoDigestBCMessageDigest *) nil_chk(d))->digest_ = new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithOrgSpongycastleCryptoDigestsSkeinDigest_((OrgSpongycastleCryptoDigestsSkeinDigest *) cast_chk(digest_, [OrgSpongycastleCryptoDigestsSkeinDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "clone", "LJavaLangCloneNotSupportedException;", "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024 = { "DigestSkein1024", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024_initWithInt_(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024 *self, jint outputSize) {
  ComYouzhLingtuSignCryptoDigestBCMessageDigest_initWithOrgSpongycastleCryptoDigest_(self, new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_1024, outputSize));
}

ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024 *new_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024_initWithInt_(jint outputSize) {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024, initWithInt_, outputSize)
}

ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024 *create_ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024_initWithInt_(jint outputSize) {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024, initWithInt_, outputSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384 = { "Digest_1024_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024_initWithInt_(self, 384);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512 = { "Digest_1024_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024_initWithInt_(self, 512);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024 = { "Digest_1024_1024", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024_init(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024 *self) {
  ComYouzhLingtuSignCryptoDigestSkein_DigestSkein1024_initWithInt_(self, 1024);
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024 *new_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024 *create_ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Digest_1024_1024)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128 = { "HashMac_256_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_256, 128)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160 = { "HashMac_256_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_256, 160)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224 = { "HashMac_256_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_256, 224)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256 = { "HashMac_256_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_256, 256)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_256_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128 = { "HashMac_512_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_512, 128)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160 = { "HashMac_512_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_512, 160)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224 = { "HashMac_512_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_512, 224)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256 = { "HashMac_512_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_512, 256)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384 = { "HashMac_512_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_512, 384)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512 = { "HashMac_512_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_512, 512)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_512_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384 = { "HashMac_1024_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_1024, 384)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512 = { "HashMac_1024_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_1024, 512)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024 = { "HashMac_1024_1024", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024_init(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsHMac_initWithOrgSpongycastleCryptoDigest_(new_OrgSpongycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(OrgSpongycastleCryptoDigestsSkeinDigest_SKEIN_1024, 1024)));
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024 *new_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024 *create_ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HashMac_1024_1024)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128 = { "HMacKeyGenerator_256_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-256-128", 128, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160 = { "HMacKeyGenerator_256_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-256-160", 160, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224 = { "HMacKeyGenerator_256_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-256-224", 224, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256 = { "HMacKeyGenerator_256_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-256-256", 256, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_256_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128 = { "HMacKeyGenerator_512_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-128", 128, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160 = { "HMacKeyGenerator_512_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-160", 160, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224 = { "HMacKeyGenerator_512_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-224", 224, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256 = { "HMacKeyGenerator_512_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-256", 256, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384 = { "HMacKeyGenerator_512_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-384", 384, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512 = { "HMacKeyGenerator_512_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-512", 512, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_512_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384 = { "HMacKeyGenerator_1024_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-1024-384", 384, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512 = { "HMacKeyGenerator_1024_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-1024-512", 512, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024 = { "HMacKeyGenerator_1024_1024", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024_init(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-1024-1024", 1024, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024 *new_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024, init)
}

ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024 *create_ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_HMacKeyGenerator_1024_1024)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128 = { "SkeinMac_256_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_256, 128));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160 = { "SkeinMac_256_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_256, 160));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224 = { "SkeinMac_256_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_256, 224));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256 = { "SkeinMac_256_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_256, 256));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_256_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128 = { "SkeinMac_512_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_512, 128));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160 = { "SkeinMac_512_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_512, 160));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224 = { "SkeinMac_512_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_512, 224));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256 = { "SkeinMac_512_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_512, 256));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384 = { "SkeinMac_512_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_512, 384));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512 = { "SkeinMac_512_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_512, 512));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_512_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384 = { "SkeinMac_1024_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_1024, 384));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512 = { "SkeinMac_1024_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_1024, 512));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024 = { "SkeinMac_1024_1024", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseMac_initWithOrgSpongycastleCryptoMac_(self, new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac_SKEIN_1024, 1024));
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMac_1024_1024)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128 = { "SkeinMacKeyGenerator_256_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-256-128", 128, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160 = { "SkeinMacKeyGenerator_256_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-256-160", 160, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224 = { "SkeinMacKeyGenerator_256_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-256-224", 224, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256 = { "SkeinMacKeyGenerator_256_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-256-256", 256, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_256_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128 = { "SkeinMacKeyGenerator_512_128", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-128", 128, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_128)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160 = { "SkeinMacKeyGenerator_512_160", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-160", 160, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_160)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224 = { "SkeinMacKeyGenerator_512_224", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-224", 224, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_224)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256 = { "SkeinMacKeyGenerator_512_256", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-256", 256, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_256)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384 = { "SkeinMacKeyGenerator_512_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-384", 384, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512 = { "SkeinMacKeyGenerator_512_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-512", 512, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_512_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384 = { "SkeinMacKeyGenerator_1024_384", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-1024-384", 384, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_384)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512 = { "SkeinMacKeyGenerator_1024_512", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-1024-512", 512, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_512)

@implementation ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024 = { "SkeinMacKeyGenerator_1024_1024", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024;
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024_init(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024 *self) {
  ComYouzhLingtuSignCryptoUtilsBaseKeyGenerator_initWithNSString_withInt_withOrgSpongycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-1024-1024", 1024, new_OrgSpongycastleCryptoCipherKeyGenerator_init());
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024 *new_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024, init)
}

ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024 *create_ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_SkeinMacKeyGenerator_1024_1024)

J2OBJC_INITIALIZED_DEFN(ComYouzhLingtuSignCryptoDigestSkein_Mappings)

@implementation ComYouzhLingtuSignCryptoDigestSkein_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:(id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>)provider {
  [((id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.Skein-256-128" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_256_128")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-256-160" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_256_160")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-256-224" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_256_224")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-256-256" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_256_256")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-128" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_512_128")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-160" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_512_160")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-224" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_512_224")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-256" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_512_256")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-384" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_512_384")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-512" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_512_512")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-1024-384" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_1024_384")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-1024-512" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_1024_512")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-1024-1024" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$Digest_1024_1024")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-256-128" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_256_128") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_256_128")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-256-160" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_256_160") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_256_160")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-256-224" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_256_224") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_256_224")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-256-256" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_256_256") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_256_256")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-512-128" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_512_128") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_128")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-512-160" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_512_160") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_160")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-512-224" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_512_224") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_224")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-512-256" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_512_256") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_256")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-512-384" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_512_384") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_384")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-512-512" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_512_512") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_512")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-1024-384" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_1024_384") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_1024_384")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-1024-512" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_1024_512") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_1024_512")];
  [self addHMACAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:provider withNSString:@"Skein-1024-1024" withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HashMac_1024_1024") withNSString:JreStrcat("$$", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_1024_1024")];
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 256, 128);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 256, 160);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 256, 224);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 256, 256);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 128);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 160);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 224);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 256);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 384);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 512);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 1024, 384);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 1024, 512);
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, 1024, 1024);
}

- (void)addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:(id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>)provider
                                                                           withInt:(jint)blockSize
                                                                           withInt:(jint)outputSize {
  ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(self, provider, blockSize, outputSize);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithComYouzhLingtuSignCryptoConfigConfigurableProvider:);
  methods[2].selector = @selector(addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LComYouzhLingtuSignCryptoConfigConfigurableProvider;", "addSkeinMacAlgorithm", "LComYouzhLingtuSignCryptoConfigConfigurableProvider;II", &ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, "LComYouzhLingtuSignCryptoDigestSkein;" };
  static const J2ObjcClassInfo _ComYouzhLingtuSignCryptoDigestSkein_Mappings = { "Mappings", "com.youzh.lingtu.sign.crypto.digest", ptrTable, methods, fields, 7, 0x9, 3, 1, 5, -1, -1, -1, -1 };
  return &_ComYouzhLingtuSignCryptoDigestSkein_Mappings;
}

+ (void)initialize {
  if (self == [ComYouzhLingtuSignCryptoDigestSkein_Mappings class]) {
    ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX = [ComYouzhLingtuSignCryptoDigestSkein_class_() getName];
    J2OBJC_SET_INITIALIZED(ComYouzhLingtuSignCryptoDigestSkein_Mappings)
  }
}

@end

void ComYouzhLingtuSignCryptoDigestSkein_Mappings_init(ComYouzhLingtuSignCryptoDigestSkein_Mappings *self) {
  ComYouzhLingtuSignCryptoDigestDigestAlgorithmProvider_init(self);
}

ComYouzhLingtuSignCryptoDigestSkein_Mappings *new_ComYouzhLingtuSignCryptoDigestSkein_Mappings_init() {
  J2OBJC_NEW_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Mappings, init)
}

ComYouzhLingtuSignCryptoDigestSkein_Mappings *create_ComYouzhLingtuSignCryptoDigestSkein_Mappings_init() {
  J2OBJC_CREATE_IMPL(ComYouzhLingtuSignCryptoDigestSkein_Mappings, init)
}

void ComYouzhLingtuSignCryptoDigestSkein_Mappings_addSkeinMacAlgorithmWithComYouzhLingtuSignCryptoConfigConfigurableProvider_withInt_withInt_(ComYouzhLingtuSignCryptoDigestSkein_Mappings *self, id<ComYouzhLingtuSignCryptoConfigConfigurableProvider> provider, jint blockSize, jint outputSize) {
  NSString *mainName = JreStrcat("$ICI", @"Skein-MAC-", blockSize, '-', outputSize);
  NSString *algorithmClassName = JreStrcat("$$ICI", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$SkeinMac_", blockSize, '_', outputSize);
  NSString *keyGeneratorClassName = JreStrcat("$$ICI", ComYouzhLingtuSignCryptoDigestSkein_Mappings_PREFIX, @"$SkeinMacKeyGenerator_", blockSize, '_', outputSize);
  [((id<ComYouzhLingtuSignCryptoConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:JreStrcat("$$", @"Mac.", mainName) withNSString:algorithmClassName];
  [provider addAlgorithmWithNSString:JreStrcat("$ICI", @"Alg.Alias.Mac.Skein-MAC", blockSize, '/', outputSize) withNSString:mainName];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"KeyGenerator.", mainName) withNSString:keyGeneratorClassName];
  [provider addAlgorithmWithNSString:JreStrcat("$ICI", @"Alg.Alias.KeyGenerator.Skein-MAC", blockSize, '/', outputSize) withNSString:mainName];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYouzhLingtuSignCryptoDigestSkein_Mappings)
