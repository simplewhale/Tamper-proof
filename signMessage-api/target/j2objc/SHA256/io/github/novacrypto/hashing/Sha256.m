//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/SHA256/io/github/novacrypto/hashing/Sha256.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "io/github/novacrypto/hashing/Sha256.h"
#include "io/github/novacrypto/toruntime/CheckedExceptionToRuntime.h"
#include "java/security/MessageDigest.h"

@interface IoGithubNovacryptoHashingSha256 ()

+ (JavaSecurityMessageDigest *)sha256;

@end

__attribute__((unused)) static JavaSecurityMessageDigest *IoGithubNovacryptoHashingSha256_sha256(void);

@interface IoGithubNovacryptoHashingSha256_1 : NSObject < IoGithubNovacryptoToruntimeCheckedExceptionToRuntime_Func >

- (instancetype)init;

- (JavaSecurityMessageDigest *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoGithubNovacryptoHashingSha256_1)

__attribute__((unused)) static void IoGithubNovacryptoHashingSha256_1_init(IoGithubNovacryptoHashingSha256_1 *self);

__attribute__((unused)) static IoGithubNovacryptoHashingSha256_1 *new_IoGithubNovacryptoHashingSha256_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoGithubNovacryptoHashingSha256_1 *create_IoGithubNovacryptoHashingSha256_1_init(void);

@implementation IoGithubNovacryptoHashingSha256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoGithubNovacryptoHashingSha256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSByteArray *)sha256WithByteArray:(IOSByteArray *)bytes {
  return IoGithubNovacryptoHashingSha256_sha256WithByteArray_(bytes);
}

+ (IOSByteArray *)sha256WithByteArray:(IOSByteArray *)bytes
                              withInt:(jint)offset
                              withInt:(jint)length {
  return IoGithubNovacryptoHashingSha256_sha256WithByteArray_withInt_withInt_(bytes, offset, length);
}

+ (IOSByteArray *)sha256TwiceWithByteArray:(IOSByteArray *)bytes {
  return IoGithubNovacryptoHashingSha256_sha256TwiceWithByteArray_(bytes);
}

+ (IOSByteArray *)sha256TwiceWithByteArray:(IOSByteArray *)bytes
                                   withInt:(jint)offset
                                   withInt:(jint)length {
  return IoGithubNovacryptoHashingSha256_sha256TwiceWithByteArray_withInt_withInt_(bytes, offset, length);
}

+ (JavaSecurityMessageDigest *)sha256 {
  return IoGithubNovacryptoHashingSha256_sha256();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 3, 2, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0xa, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(sha256WithByteArray:);
  methods[2].selector = @selector(sha256WithByteArray:withInt:withInt:);
  methods[3].selector = @selector(sha256TwiceWithByteArray:);
  methods[4].selector = @selector(sha256TwiceWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(sha256);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "sha256", "[B", "[BII", "sha256Twice" };
  static const J2ObjcClassInfo _IoGithubNovacryptoHashingSha256 = { "Sha256", "io.github.novacrypto.hashing", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, -1, -1 };
  return &_IoGithubNovacryptoHashingSha256;
}

@end

void IoGithubNovacryptoHashingSha256_init(IoGithubNovacryptoHashingSha256 *self) {
  NSObject_init(self);
}

IoGithubNovacryptoHashingSha256 *new_IoGithubNovacryptoHashingSha256_init() {
  J2OBJC_NEW_IMPL(IoGithubNovacryptoHashingSha256, init)
}

IoGithubNovacryptoHashingSha256 *create_IoGithubNovacryptoHashingSha256_init() {
  J2OBJC_CREATE_IMPL(IoGithubNovacryptoHashingSha256, init)
}

IOSByteArray *IoGithubNovacryptoHashingSha256_sha256WithByteArray_(IOSByteArray *bytes) {
  IoGithubNovacryptoHashingSha256_initialize();
  return IoGithubNovacryptoHashingSha256_sha256WithByteArray_withInt_withInt_(bytes, 0, ((IOSByteArray *) nil_chk(bytes))->size_);
}

IOSByteArray *IoGithubNovacryptoHashingSha256_sha256WithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
  IoGithubNovacryptoHashingSha256_initialize();
  JavaSecurityMessageDigest *digest = IoGithubNovacryptoHashingSha256_sha256();
  [((JavaSecurityMessageDigest *) nil_chk(digest)) updateWithByteArray:bytes withInt:offset withInt:length];
  return [digest digest];
}

IOSByteArray *IoGithubNovacryptoHashingSha256_sha256TwiceWithByteArray_(IOSByteArray *bytes) {
  IoGithubNovacryptoHashingSha256_initialize();
  return IoGithubNovacryptoHashingSha256_sha256TwiceWithByteArray_withInt_withInt_(bytes, 0, ((IOSByteArray *) nil_chk(bytes))->size_);
}

IOSByteArray *IoGithubNovacryptoHashingSha256_sha256TwiceWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
  IoGithubNovacryptoHashingSha256_initialize();
  JavaSecurityMessageDigest *digest = IoGithubNovacryptoHashingSha256_sha256();
  [((JavaSecurityMessageDigest *) nil_chk(digest)) updateWithByteArray:bytes withInt:offset withInt:length];
  [digest updateWithByteArray:[digest digest]];
  return [digest digest];
}

JavaSecurityMessageDigest *IoGithubNovacryptoHashingSha256_sha256() {
  IoGithubNovacryptoHashingSha256_initialize();
  return IoGithubNovacryptoToruntimeCheckedExceptionToRuntime_toRuntimeWithIoGithubNovacryptoToruntimeCheckedExceptionToRuntime_Func_(new_IoGithubNovacryptoHashingSha256_1_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoGithubNovacryptoHashingSha256)

@implementation IoGithubNovacryptoHashingSha256_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoGithubNovacryptoHashingSha256_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaSecurityMessageDigest *)run {
  return JavaSecurityMessageDigest_getInstanceWithNSString_(@"SHA-256");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangException;", "LIoGithubNovacryptoHashingSha256;", "sha256", "Ljava/lang/Object;Lio/github/novacrypto/toruntime/CheckedExceptionToRuntime$Func<Ljava/security/MessageDigest;>;" };
  static const J2ObjcClassInfo _IoGithubNovacryptoHashingSha256_1 = { "", "io.github.novacrypto.hashing", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_IoGithubNovacryptoHashingSha256_1;
}

@end

void IoGithubNovacryptoHashingSha256_1_init(IoGithubNovacryptoHashingSha256_1 *self) {
  NSObject_init(self);
}

IoGithubNovacryptoHashingSha256_1 *new_IoGithubNovacryptoHashingSha256_1_init() {
  J2OBJC_NEW_IMPL(IoGithubNovacryptoHashingSha256_1, init)
}

IoGithubNovacryptoHashingSha256_1 *create_IoGithubNovacryptoHashingSha256_1_init() {
  J2OBJC_CREATE_IMPL(IoGithubNovacryptoHashingSha256_1, init)
}
