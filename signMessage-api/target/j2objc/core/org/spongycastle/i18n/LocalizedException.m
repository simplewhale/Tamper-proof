//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/i18n/LocalizedException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/util/Locale.h"
#include "org/spongycastle/i18n/ErrorBundle.h"
#include "org/spongycastle/i18n/LocalizedException.h"

@interface OrgSpongycastleI18nLocalizedException () {
 @public
  JavaLangThrowable *cause_LocalizedException_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleI18nLocalizedException, cause_LocalizedException_, JavaLangThrowable *)

@implementation OrgSpongycastleI18nLocalizedException

- (instancetype)initWithOrgSpongycastleI18nErrorBundle:(OrgSpongycastleI18nErrorBundle *)message {
  OrgSpongycastleI18nLocalizedException_initWithOrgSpongycastleI18nErrorBundle_(self, message);
  return self;
}

- (instancetype)initWithOrgSpongycastleI18nErrorBundle:(OrgSpongycastleI18nErrorBundle *)message
                                 withJavaLangThrowable:(JavaLangThrowable *)throwable {
  OrgSpongycastleI18nLocalizedException_initWithOrgSpongycastleI18nErrorBundle_withJavaLangThrowable_(self, message, throwable);
  return self;
}

- (OrgSpongycastleI18nErrorBundle *)getErrorMessage {
  return message_;
}

- (JavaLangThrowable *)getCause {
  return cause_LocalizedException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleI18nErrorBundle;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleI18nErrorBundle:);
  methods[1].selector = @selector(initWithOrgSpongycastleI18nErrorBundle:withJavaLangThrowable:);
  methods[2].selector = @selector(getErrorMessage);
  methods[3].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "message_", "LOrgSpongycastleI18nErrorBundle;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "cause_LocalizedException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, 2, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleI18nErrorBundle;", "LOrgSpongycastleI18nErrorBundle;LJavaLangThrowable;", "cause" };
  static const J2ObjcClassInfo _OrgSpongycastleI18nLocalizedException = { "LocalizedException", "org.spongycastle.i18n", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleI18nLocalizedException;
}

@end

void OrgSpongycastleI18nLocalizedException_initWithOrgSpongycastleI18nErrorBundle_(OrgSpongycastleI18nLocalizedException *self, OrgSpongycastleI18nErrorBundle *message) {
  JavaLangException_initWithNSString_(self, [((OrgSpongycastleI18nErrorBundle *) nil_chk(message)) getTextWithJavaUtilLocale:JavaUtilLocale_getDefault()]);
  self->message_ = message;
}

OrgSpongycastleI18nLocalizedException *new_OrgSpongycastleI18nLocalizedException_initWithOrgSpongycastleI18nErrorBundle_(OrgSpongycastleI18nErrorBundle *message) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nLocalizedException, initWithOrgSpongycastleI18nErrorBundle_, message)
}

OrgSpongycastleI18nLocalizedException *create_OrgSpongycastleI18nLocalizedException_initWithOrgSpongycastleI18nErrorBundle_(OrgSpongycastleI18nErrorBundle *message) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nLocalizedException, initWithOrgSpongycastleI18nErrorBundle_, message)
}

void OrgSpongycastleI18nLocalizedException_initWithOrgSpongycastleI18nErrorBundle_withJavaLangThrowable_(OrgSpongycastleI18nLocalizedException *self, OrgSpongycastleI18nErrorBundle *message, JavaLangThrowable *throwable) {
  JavaLangException_initWithNSString_(self, [((OrgSpongycastleI18nErrorBundle *) nil_chk(message)) getTextWithJavaUtilLocale:JavaUtilLocale_getDefault()]);
  self->message_ = message;
  self->cause_LocalizedException_ = throwable;
}

OrgSpongycastleI18nLocalizedException *new_OrgSpongycastleI18nLocalizedException_initWithOrgSpongycastleI18nErrorBundle_withJavaLangThrowable_(OrgSpongycastleI18nErrorBundle *message, JavaLangThrowable *throwable) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nLocalizedException, initWithOrgSpongycastleI18nErrorBundle_withJavaLangThrowable_, message, throwable)
}

OrgSpongycastleI18nLocalizedException *create_OrgSpongycastleI18nLocalizedException_initWithOrgSpongycastleI18nErrorBundle_withJavaLangThrowable_(OrgSpongycastleI18nErrorBundle *message, JavaLangThrowable *throwable) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nLocalizedException, initWithOrgSpongycastleI18nErrorBundle_withJavaLangThrowable_, message, throwable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleI18nLocalizedException)
