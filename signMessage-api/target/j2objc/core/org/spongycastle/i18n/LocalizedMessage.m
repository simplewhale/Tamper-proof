//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/i18n/LocalizedMessage.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "java/nio/charset/Charset.h"
#include "java/text/DateFormat.h"
#include "java/text/Format.h"
#include "java/text/MessageFormat.h"
#include "java/util/Locale.h"
#include "java/util/MissingResourceException.h"
#include "java/util/ResourceBundle.h"
#include "java/util/TimeZone.h"
#include "org/spongycastle/i18n/LocaleString.h"
#include "org/spongycastle/i18n/LocalizedMessage.h"
#include "org/spongycastle/i18n/MissingEntryException.h"
#include "org/spongycastle/i18n/filter/Filter.h"
#include "org/spongycastle/i18n/filter/TrustedInput.h"
#include "org/spongycastle/i18n/filter/UntrustedInput.h"
#include "org/spongycastle/i18n/filter/UntrustedUrlInput.h"

@interface OrgSpongycastleI18nLocalizedMessage_FilteredArguments ()

- (id)filterWithInt:(jint)type
             withId:(id)obj;

@end

__attribute__((unused)) static id OrgSpongycastleI18nLocalizedMessage_FilteredArguments_filterWithInt_withId_(OrgSpongycastleI18nLocalizedMessage_FilteredArguments *self, jint type, id obj);

NSString *OrgSpongycastleI18nLocalizedMessage_DEFAULT_ENCODING = @"ISO-8859-1";

@implementation OrgSpongycastleI18nLocalizedMessage

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_ {
  OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_(self, resource, id_);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_
                    withNSString:(NSString *)encoding {
  OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_(self, resource, id_, encoding);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_
               withNSObjectArray:(IOSObjectArray *)arguments {
  OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSObjectArray_(self, resource, id_, arguments);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_
                    withNSString:(NSString *)encoding
               withNSObjectArray:(IOSObjectArray *)arguments {
  OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_withNSObjectArray_(self, resource, id_, encoding, arguments);
  return self;
}

- (NSString *)getEntryWithNSString:(NSString *)key
                withJavaUtilLocale:(JavaUtilLocale *)loc
              withJavaUtilTimeZone:(JavaUtilTimeZone *)timezone {
  NSString *entry_ = id__;
  if (key != nil) {
    (void) JreStrAppendStrong(&entry_, "C$", '.', key);
  }
  @try {
    JavaUtilResourceBundle *bundle;
    if (loader_ == nil) {
      bundle = JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_(resource_, loc);
    }
    else {
      bundle = JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_(resource_, loc, loader_);
    }
    NSString *result = [((JavaUtilResourceBundle *) nil_chk(bundle)) getStringWithNSString:entry_];
    if (![((NSString *) nil_chk(encoding_)) isEqual:OrgSpongycastleI18nLocalizedMessage_DEFAULT_ENCODING]) {
      result = [NSString java_stringWithBytes:[((NSString *) nil_chk(result)) java_getBytesWithCharsetName:OrgSpongycastleI18nLocalizedMessage_DEFAULT_ENCODING] charsetName:encoding_];
    }
    if (![((OrgSpongycastleI18nLocalizedMessage_FilteredArguments *) nil_chk(arguments_)) isEmpty]) {
      result = [self formatWithTimeZoneWithNSString:result withNSObjectArray:[((OrgSpongycastleI18nLocalizedMessage_FilteredArguments *) nil_chk(arguments_)) getFilteredArgsWithJavaUtilLocale:loc] withJavaUtilLocale:loc withJavaUtilTimeZone:timezone];
    }
    result = [self addExtraArgsWithNSString:result withJavaUtilLocale:loc];
    return result;
  }
  @catch (JavaUtilMissingResourceException *mre) {
    @throw new_OrgSpongycastleI18nMissingEntryException_initWithNSString_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(JreStrcat("$$$$C", @"Can't find entry ", entry_, @" in resource file ", resource_, '.'), resource_, entry_, loc, loader_ != nil ? loader_ : [self getClassLoader]);
  }
  @catch (JavaIoUnsupportedEncodingException *use) {
    @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(use);
  }
}

- (NSString *)formatWithTimeZoneWithNSString:(NSString *)template_
                           withNSObjectArray:(IOSObjectArray *)arguments
                          withJavaUtilLocale:(JavaUtilLocale *)locale
                        withJavaUtilTimeZone:(JavaUtilTimeZone *)timezone {
  JavaTextMessageFormat *mf = new_JavaTextMessageFormat_initWithNSString_(@" ");
  [mf setLocaleWithJavaUtilLocale:locale];
  [mf applyPatternWithNSString:template_];
  if (![((JavaUtilTimeZone *) nil_chk(timezone)) isEqual:JavaUtilTimeZone_getDefault()]) {
    IOSObjectArray *formats = [mf getFormats];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(formats))->size_; i++) {
      if ([IOSObjectArray_Get(formats, i) isKindOfClass:[JavaTextDateFormat class]]) {
        JavaTextDateFormat *temp = (JavaTextDateFormat *) cast_chk(IOSObjectArray_Get(formats, i), [JavaTextDateFormat class]);
        [((JavaTextDateFormat *) nil_chk(temp)) setTimeZoneWithJavaUtilTimeZone:timezone];
        [mf setFormatWithInt:i withJavaTextFormat:temp];
      }
    }
  }
  return [mf formatWithId:arguments];
}

- (NSString *)addExtraArgsWithNSString:(NSString *)msg
                    withJavaUtilLocale:(JavaUtilLocale *)locale {
  if (extraArgs_ != nil) {
    JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithNSString_(msg);
    IOSObjectArray *filteredArgs = [((OrgSpongycastleI18nLocalizedMessage_FilteredArguments *) nil_chk(extraArgs_)) getFilteredArgsWithJavaUtilLocale:locale];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(filteredArgs))->size_; i++) {
      (void) [sb appendWithId:IOSObjectArray_Get(filteredArgs, i)];
    }
    msg = [sb description];
  }
  return msg;
}

- (void)setFilterWithOrgSpongycastleI18nFilterFilter:(id<OrgSpongycastleI18nFilterFilter>)filter {
  [((OrgSpongycastleI18nLocalizedMessage_FilteredArguments *) nil_chk(arguments_)) setFilterWithOrgSpongycastleI18nFilterFilter:filter];
  if (extraArgs_ != nil) {
    [extraArgs_ setFilterWithOrgSpongycastleI18nFilterFilter:filter];
  }
  self->filter_ = filter;
}

- (id<OrgSpongycastleI18nFilterFilter>)getFilter {
  return filter_;
}

- (void)setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
  self->loader_ = loader;
}

- (JavaLangClassLoader *)getClassLoader {
  return loader_;
}

- (NSString *)getId {
  return id__;
}

- (NSString *)getResource {
  return resource_;
}

- (IOSObjectArray *)getArguments {
  return [((OrgSpongycastleI18nLocalizedMessage_FilteredArguments *) nil_chk(arguments_)) getArguments];
}

- (void)setExtraArgumentWithId:(id)extraArg {
  [self setExtraArgumentsWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ extraArg } count:1 type:NSObject_class_()]];
}

- (void)setExtraArgumentsWithNSObjectArray:(IOSObjectArray *)extraArgs {
  if (extraArgs != nil) {
    self->extraArgs_ = new_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_(self, extraArgs);
    [self->extraArgs_ setFilterWithOrgSpongycastleI18nFilterFilter:filter_];
  }
  else {
    self->extraArgs_ = nil;
  }
}

- (IOSObjectArray *)getExtraArgs {
  return (extraArgs_ == nil) ? nil : [((OrgSpongycastleI18nLocalizedMessage_FilteredArguments *) nil_chk(extraArgs_)) getArguments];
}

- (NSString *)description {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  (void) [((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@"Resource: \""])) appendWithNSString:resource_];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@"\" Id: \""])) appendWithNSString:id__])) appendWithNSString:@"\""];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@" Arguments: "])) appendWithInt:((IOSObjectArray *) nil_chk([((OrgSpongycastleI18nLocalizedMessage_FilteredArguments *) nil_chk(arguments_)) getArguments]))->size_])) appendWithNSString:@" normal"];
  if (extraArgs_ != nil && ((IOSObjectArray *) nil_chk([extraArgs_ getArguments]))->size_ > 0) {
    (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@", "])) appendWithInt:((IOSObjectArray *) nil_chk([((OrgSpongycastleI18nLocalizedMessage_FilteredArguments *) nil_chk(extraArgs_)) getArguments]))->size_])) appendWithNSString:@" extra"];
  }
  (void) [((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@" Encoding: "])) appendWithNSString:encoding_];
  (void) [((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@" ClassLoader: "])) appendWithId:loader_];
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 3, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 7, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleI18nFilterFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LJavaLangClassLoader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 21, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[2].selector = @selector(initWithNSString:withNSString:withNSObjectArray:);
  methods[3].selector = @selector(initWithNSString:withNSString:withNSString:withNSObjectArray:);
  methods[4].selector = @selector(getEntryWithNSString:withJavaUtilLocale:withJavaUtilTimeZone:);
  methods[5].selector = @selector(formatWithTimeZoneWithNSString:withNSObjectArray:withJavaUtilLocale:withJavaUtilTimeZone:);
  methods[6].selector = @selector(addExtraArgsWithNSString:withJavaUtilLocale:);
  methods[7].selector = @selector(setFilterWithOrgSpongycastleI18nFilterFilter:);
  methods[8].selector = @selector(getFilter);
  methods[9].selector = @selector(setClassLoaderWithJavaLangClassLoader:);
  methods[10].selector = @selector(getClassLoader);
  methods[11].selector = @selector(getId);
  methods[12].selector = @selector(getResource);
  methods[13].selector = @selector(getArguments);
  methods[14].selector = @selector(setExtraArgumentWithId:);
  methods[15].selector = @selector(setExtraArgumentsWithNSObjectArray:);
  methods[16].selector = @selector(getExtraArgs);
  methods[17].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LNSString;", .constantValue.asLong = 0, 0x14, 22, -1, -1, -1 },
    { "resource_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "DEFAULT_ENCODING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "encoding_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "arguments_", "LOrgSpongycastleI18nLocalizedMessage_FilteredArguments;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "extraArgs_", "LOrgSpongycastleI18nLocalizedMessage_FilteredArguments;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "filter_", "LOrgSpongycastleI18nFilterFilter;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "loader_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "LJavaLangNullPointerException;", "LNSString;LNSString;LNSString;", "LJavaLangNullPointerException;LJavaIoUnsupportedEncodingException;", "LNSString;LNSString;[LNSObject;", "LNSString;LNSString;LNSString;[LNSObject;", "getEntry", "LNSString;LJavaUtilLocale;LJavaUtilTimeZone;", "LOrgSpongycastleI18nMissingEntryException;", "formatWithTimeZone", "LNSString;[LNSObject;LJavaUtilLocale;LJavaUtilTimeZone;", "addExtraArgs", "LNSString;LJavaUtilLocale;", "setFilter", "LOrgSpongycastleI18nFilterFilter;", "setClassLoader", "LJavaLangClassLoader;", "setExtraArgument", "LNSObject;", "setExtraArguments", "[LNSObject;", "toString", "id", &OrgSpongycastleI18nLocalizedMessage_DEFAULT_ENCODING, "LOrgSpongycastleI18nLocalizedMessage_FilteredArguments;" };
  static const J2ObjcClassInfo _OrgSpongycastleI18nLocalizedMessage = { "LocalizedMessage", "org.spongycastle.i18n", ptrTable, methods, fields, 7, 0x1, 18, 8, -1, 24, -1, -1, -1 };
  return &_OrgSpongycastleI18nLocalizedMessage;
}

@end

void OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_(OrgSpongycastleI18nLocalizedMessage *self, NSString *resource, NSString *id_) {
  NSObject_init(self);
  self->encoding_ = OrgSpongycastleI18nLocalizedMessage_DEFAULT_ENCODING;
  self->extraArgs_ = nil;
  self->filter_ = nil;
  self->loader_ = nil;
  if (resource == nil || id_ == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  self->id__ = id_;
  self->resource_ = resource;
  self->arguments_ = new_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_(self);
}

OrgSpongycastleI18nLocalizedMessage *new_OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_(NSString *resource, NSString *id_) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nLocalizedMessage, initWithNSString_withNSString_, resource, id_)
}

OrgSpongycastleI18nLocalizedMessage *create_OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_(NSString *resource, NSString *id_) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nLocalizedMessage, initWithNSString_withNSString_, resource, id_)
}

void OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_(OrgSpongycastleI18nLocalizedMessage *self, NSString *resource, NSString *id_, NSString *encoding) {
  NSObject_init(self);
  self->encoding_ = OrgSpongycastleI18nLocalizedMessage_DEFAULT_ENCODING;
  self->extraArgs_ = nil;
  self->filter_ = nil;
  self->loader_ = nil;
  if (resource == nil || id_ == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  self->id__ = id_;
  self->resource_ = resource;
  self->arguments_ = new_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_(self);
  if (!JavaNioCharsetCharset_isSupportedWithNSString_(encoding)) {
    @throw new_JavaIoUnsupportedEncodingException_initWithNSString_(JreStrcat("$$$", @"The encoding \"", encoding, @"\" is not supported."));
  }
  self->encoding_ = encoding;
}

OrgSpongycastleI18nLocalizedMessage *new_OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_(NSString *resource, NSString *id_, NSString *encoding) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nLocalizedMessage, initWithNSString_withNSString_withNSString_, resource, id_, encoding)
}

OrgSpongycastleI18nLocalizedMessage *create_OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_(NSString *resource, NSString *id_, NSString *encoding) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nLocalizedMessage, initWithNSString_withNSString_withNSString_, resource, id_, encoding)
}

void OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSObjectArray_(OrgSpongycastleI18nLocalizedMessage *self, NSString *resource, NSString *id_, IOSObjectArray *arguments) {
  NSObject_init(self);
  self->encoding_ = OrgSpongycastleI18nLocalizedMessage_DEFAULT_ENCODING;
  self->extraArgs_ = nil;
  self->filter_ = nil;
  self->loader_ = nil;
  if (resource == nil || id_ == nil || arguments == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  self->id__ = id_;
  self->resource_ = resource;
  self->arguments_ = new_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_(self, arguments);
}

OrgSpongycastleI18nLocalizedMessage *new_OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, IOSObjectArray *arguments) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nLocalizedMessage, initWithNSString_withNSString_withNSObjectArray_, resource, id_, arguments)
}

OrgSpongycastleI18nLocalizedMessage *create_OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, IOSObjectArray *arguments) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nLocalizedMessage, initWithNSString_withNSString_withNSObjectArray_, resource, id_, arguments)
}

void OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_withNSObjectArray_(OrgSpongycastleI18nLocalizedMessage *self, NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  NSObject_init(self);
  self->encoding_ = OrgSpongycastleI18nLocalizedMessage_DEFAULT_ENCODING;
  self->extraArgs_ = nil;
  self->filter_ = nil;
  self->loader_ = nil;
  if (resource == nil || id_ == nil || arguments == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  self->id__ = id_;
  self->resource_ = resource;
  self->arguments_ = new_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_(self, arguments);
  if (!JavaNioCharsetCharset_isSupportedWithNSString_(encoding)) {
    @throw new_JavaIoUnsupportedEncodingException_initWithNSString_(JreStrcat("$$$", @"The encoding \"", encoding, @"\" is not supported."));
  }
  self->encoding_ = encoding;
}

OrgSpongycastleI18nLocalizedMessage *new_OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nLocalizedMessage, initWithNSString_withNSString_withNSString_withNSObjectArray_, resource, id_, encoding, arguments)
}

OrgSpongycastleI18nLocalizedMessage *create_OrgSpongycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nLocalizedMessage, initWithNSString_withNSString_withNSString_withNSObjectArray_, resource, id_, encoding, arguments)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleI18nLocalizedMessage)

@implementation OrgSpongycastleI18nLocalizedMessage_FilteredArguments

- (instancetype)initWithOrgSpongycastleI18nLocalizedMessage:(OrgSpongycastleI18nLocalizedMessage *)outer$ {
  OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_(self, outer$);
  return self;
}

- (instancetype)initWithOrgSpongycastleI18nLocalizedMessage:(OrgSpongycastleI18nLocalizedMessage *)outer$
                                          withNSObjectArray:(IOSObjectArray *)args {
  OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_(self, outer$, args);
  return self;
}

- (jboolean)isEmpty {
  return ((IOSObjectArray *) nil_chk(unpackedArgs_))->size_ == 0;
}

- (IOSObjectArray *)getArguments {
  return arguments_;
}

- (IOSObjectArray *)getFilteredArgsWithJavaUtilLocale:(JavaUtilLocale *)locale {
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(unpackedArgs_))->size_ type:NSObject_class_()];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(unpackedArgs_))->size_; i++) {
    id arg;
    if (IOSObjectArray_Get(nil_chk(filteredArgs_), i) != nil) {
      arg = IOSObjectArray_Get(filteredArgs_, i);
    }
    else {
      arg = IOSObjectArray_Get(unpackedArgs_, i);
      if (IOSBooleanArray_Get(nil_chk(isLocaleSpecific_), i)) {
        arg = [((OrgSpongycastleI18nLocaleString *) nil_chk(((OrgSpongycastleI18nLocaleString *) cast_chk(arg, [OrgSpongycastleI18nLocaleString class])))) getLocaleStringWithJavaUtilLocale:locale];
        arg = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_filterWithInt_withId_(self, IOSIntArray_Get(nil_chk(argFilterType_), i), arg);
      }
      else {
        arg = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_filterWithInt_withId_(self, IOSIntArray_Get(nil_chk(argFilterType_), i), arg);
        (void) IOSObjectArray_Set(nil_chk(filteredArgs_), i, arg);
      }
    }
    (void) IOSObjectArray_Set(result, i, arg);
  }
  return result;
}

- (id)filterWithInt:(jint)type
             withId:(id)obj {
  return OrgSpongycastleI18nLocalizedMessage_FilteredArguments_filterWithInt_withId_(self, type, obj);
}

- (id<OrgSpongycastleI18nFilterFilter>)getFilter {
  return filter_;
}

- (void)setFilterWithOrgSpongycastleI18nFilterFilter:(id<OrgSpongycastleI18nFilterFilter>)filter {
  if (filter != self->filter_) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(unpackedArgs_))->size_; i++) {
      (void) IOSObjectArray_Set(nil_chk(filteredArgs_), i, nil);
    }
  }
  self->filter_ = filter;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleI18nFilterFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleI18nLocalizedMessage:);
  methods[1].selector = @selector(initWithOrgSpongycastleI18nLocalizedMessage:withNSObjectArray:);
  methods[2].selector = @selector(isEmpty);
  methods[3].selector = @selector(getArguments);
  methods[4].selector = @selector(getFilteredArgsWithJavaUtilLocale:);
  methods[5].selector = @selector(filterWithInt:withId:);
  methods[6].selector = @selector(getFilter);
  methods[7].selector = @selector(setFilterWithOrgSpongycastleI18nFilterFilter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO_FILTER", "I", .constantValue.asInt = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_NO_FILTER, 0x1c, -1, -1, -1, -1 },
    { "FILTER", "I", .constantValue.asInt = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_FILTER, 0x1c, -1, -1, -1, -1 },
    { "FILTER_URL", "I", .constantValue.asInt = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_FILTER_URL, 0x1c, -1, -1, -1, -1 },
    { "filter_", "LOrgSpongycastleI18nFilterFilter;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "isLocaleSpecific_", "[Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "argFilterType_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "arguments_", "[LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "unpackedArgs_", "[LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "filteredArgs_", "[LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSObject;", "getFilteredArgs", "LJavaUtilLocale;", "filter", "ILNSObject;", "setFilter", "LOrgSpongycastleI18nFilterFilter;", "LOrgSpongycastleI18nLocalizedMessage;" };
  static const J2ObjcClassInfo _OrgSpongycastleI18nLocalizedMessage_FilteredArguments = { "FilteredArguments", "org.spongycastle.i18n", ptrTable, methods, fields, 7, 0x4, 8, 9, 7, -1, -1, -1, -1 };
  return &_OrgSpongycastleI18nLocalizedMessage_FilteredArguments;
}

@end

void OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_(OrgSpongycastleI18nLocalizedMessage_FilteredArguments *self, OrgSpongycastleI18nLocalizedMessage *outer$) {
  OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_(self, outer$, [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
}

OrgSpongycastleI18nLocalizedMessage_FilteredArguments *new_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_(OrgSpongycastleI18nLocalizedMessage *outer$) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nLocalizedMessage_FilteredArguments, initWithOrgSpongycastleI18nLocalizedMessage_, outer$)
}

OrgSpongycastleI18nLocalizedMessage_FilteredArguments *create_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_(OrgSpongycastleI18nLocalizedMessage *outer$) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nLocalizedMessage_FilteredArguments, initWithOrgSpongycastleI18nLocalizedMessage_, outer$)
}

void OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_(OrgSpongycastleI18nLocalizedMessage_FilteredArguments *self, OrgSpongycastleI18nLocalizedMessage *outer$, IOSObjectArray *args) {
  NSObject_init(self);
  self->filter_ = nil;
  self->arguments_ = args;
  self->unpackedArgs_ = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(args))->size_ type:NSObject_class_()];
  self->filteredArgs_ = [IOSObjectArray newArrayWithLength:args->size_ type:NSObject_class_()];
  self->isLocaleSpecific_ = [IOSBooleanArray newArrayWithLength:args->size_];
  self->argFilterType_ = [IOSIntArray newArrayWithLength:args->size_];
  for (jint i = 0; i < args->size_; i++) {
    if ([IOSObjectArray_Get(args, i) isKindOfClass:[OrgSpongycastleI18nFilterTrustedInput class]]) {
      (void) IOSObjectArray_Set(self->unpackedArgs_, i, [((OrgSpongycastleI18nFilterTrustedInput *) nil_chk(((OrgSpongycastleI18nFilterTrustedInput *) cast_chk(IOSObjectArray_Get(args, i), [OrgSpongycastleI18nFilterTrustedInput class])))) getInput]);
      *IOSIntArray_GetRef(nil_chk(self->argFilterType_), i) = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_NO_FILTER;
    }
    else if ([IOSObjectArray_Get(args, i) isKindOfClass:[OrgSpongycastleI18nFilterUntrustedInput class]]) {
      (void) IOSObjectArray_Set(self->unpackedArgs_, i, [((OrgSpongycastleI18nFilterUntrustedInput *) nil_chk(((OrgSpongycastleI18nFilterUntrustedInput *) cast_chk(IOSObjectArray_Get(args, i), [OrgSpongycastleI18nFilterUntrustedInput class])))) getInput]);
      if ([IOSObjectArray_Get(args, i) isKindOfClass:[OrgSpongycastleI18nFilterUntrustedUrlInput class]]) {
        *IOSIntArray_GetRef(nil_chk(self->argFilterType_), i) = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_FILTER_URL;
      }
      else {
        *IOSIntArray_GetRef(nil_chk(self->argFilterType_), i) = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_FILTER;
      }
    }
    else {
      (void) IOSObjectArray_Set(self->unpackedArgs_, i, IOSObjectArray_Get(args, i));
      *IOSIntArray_GetRef(self->argFilterType_, i) = OrgSpongycastleI18nLocalizedMessage_FilteredArguments_FILTER;
    }
    *IOSBooleanArray_GetRef(nil_chk(self->isLocaleSpecific_), i) = ([IOSObjectArray_Get(nil_chk(self->unpackedArgs_), i) isKindOfClass:[OrgSpongycastleI18nLocaleString class]]);
  }
}

OrgSpongycastleI18nLocalizedMessage_FilteredArguments *new_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_(OrgSpongycastleI18nLocalizedMessage *outer$, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nLocalizedMessage_FilteredArguments, initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_, outer$, args)
}

OrgSpongycastleI18nLocalizedMessage_FilteredArguments *create_OrgSpongycastleI18nLocalizedMessage_FilteredArguments_initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_(OrgSpongycastleI18nLocalizedMessage *outer$, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nLocalizedMessage_FilteredArguments, initWithOrgSpongycastleI18nLocalizedMessage_withNSObjectArray_, outer$, args)
}

id OrgSpongycastleI18nLocalizedMessage_FilteredArguments_filterWithInt_withId_(OrgSpongycastleI18nLocalizedMessage_FilteredArguments *self, jint type, id obj) {
  if (self->filter_ != nil) {
    id o = (nil == obj) ? @"null" : obj;
    switch (type) {
      case OrgSpongycastleI18nLocalizedMessage_FilteredArguments_NO_FILTER:
      return o;
      case OrgSpongycastleI18nLocalizedMessage_FilteredArguments_FILTER:
      return [self->filter_ doFilterWithNSString:[o description]];
      case OrgSpongycastleI18nLocalizedMessage_FilteredArguments_FILTER_URL:
      return [self->filter_ doFilterUrlWithNSString:[o description]];
      default:
      return nil;
    }
  }
  else {
    return obj;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleI18nLocalizedMessage_FilteredArguments)
