//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/i18n/MissingEntryException.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "java/net/URL.h"
#include "java/net/URLClassLoader.h"
#include "java/util/Locale.h"
#include "org/spongycastle/i18n/MissingEntryException.h"

@interface OrgSpongycastleI18nMissingEntryException () {
 @public
  NSString *debugMsg_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleI18nMissingEntryException, debugMsg_, NSString *)

@implementation OrgSpongycastleI18nMissingEntryException

- (instancetype)initWithNSString:(NSString *)message
                    withNSString:(NSString *)resource
                    withNSString:(NSString *)key
              withJavaUtilLocale:(JavaUtilLocale *)locale
         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  OrgSpongycastleI18nMissingEntryException_initWithNSString_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(self, message, resource, key, locale, loader);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause
                    withNSString:(NSString *)resource
                    withNSString:(NSString *)key
              withJavaUtilLocale:(JavaUtilLocale *)locale
         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  OrgSpongycastleI18nMissingEntryException_initWithNSString_withJavaLangThrowable_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(self, message, cause, resource, key, locale, loader);
  return self;
}

- (NSString *)getKey {
  return key_;
}

- (NSString *)getResource {
  return resource_;
}

- (JavaLangClassLoader *)getClassLoader {
  return loader_;
}

- (JavaUtilLocale *)getLocale {
  return locale_;
}

- (NSString *)getDebugMsg {
  if (debugMsg_ == nil) {
    debugMsg_ = JreStrcat("$$$$$@C", @"Can not find entry ", key_, @" in resource file ", resource_, @" for the locale ", locale_, '.');
    if ([loader_ isKindOfClass:[JavaNetURLClassLoader class]]) {
      IOSObjectArray *urls = [((JavaNetURLClassLoader *) nil_chk(((JavaNetURLClassLoader *) loader_))) getURLs];
      (void) JreStrAppendStrong(&debugMsg_, "$", @" The following entries in the classpath were searched: ");
      for (jint i = 0; i != ((IOSObjectArray *) nil_chk(urls))->size_; i++) {
        (void) JreStrAppendStrong(&debugMsg_, "@C", IOSObjectArray_Get(urls, i), ' ');
      }
    }
  }
  return debugMsg_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangClassLoader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilLocale;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:withJavaUtilLocale:withJavaLangClassLoader:);
  methods[1].selector = @selector(initWithNSString:withJavaLangThrowable:withNSString:withNSString:withJavaUtilLocale:withJavaLangClassLoader:);
  methods[2].selector = @selector(getKey);
  methods[3].selector = @selector(getResource);
  methods[4].selector = @selector(getClassLoader);
  methods[5].selector = @selector(getLocale);
  methods[6].selector = @selector(getDebugMsg);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "resource_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "loader_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "locale_", "LJavaUtilLocale;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "debugMsg_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;LJavaUtilLocale;LJavaLangClassLoader;", "LNSString;LJavaLangThrowable;LNSString;LNSString;LJavaUtilLocale;LJavaLangClassLoader;" };
  static const J2ObjcClassInfo _OrgSpongycastleI18nMissingEntryException = { "MissingEntryException", "org.spongycastle.i18n", ptrTable, methods, fields, 7, 0x1, 7, 5, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleI18nMissingEntryException;
}

@end

void OrgSpongycastleI18nMissingEntryException_initWithNSString_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(OrgSpongycastleI18nMissingEntryException *self, NSString *message, NSString *resource, NSString *key, JavaUtilLocale *locale, JavaLangClassLoader *loader) {
  JavaLangRuntimeException_initWithNSString_(self, message);
  self->resource_ = resource;
  self->key_ = key;
  self->locale_ = locale;
  self->loader_ = loader;
}

OrgSpongycastleI18nMissingEntryException *new_OrgSpongycastleI18nMissingEntryException_initWithNSString_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(NSString *message, NSString *resource, NSString *key, JavaUtilLocale *locale, JavaLangClassLoader *loader) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nMissingEntryException, initWithNSString_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_, message, resource, key, locale, loader)
}

OrgSpongycastleI18nMissingEntryException *create_OrgSpongycastleI18nMissingEntryException_initWithNSString_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(NSString *message, NSString *resource, NSString *key, JavaUtilLocale *locale, JavaLangClassLoader *loader) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nMissingEntryException, initWithNSString_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_, message, resource, key, locale, loader)
}

void OrgSpongycastleI18nMissingEntryException_initWithNSString_withJavaLangThrowable_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(OrgSpongycastleI18nMissingEntryException *self, NSString *message, JavaLangThrowable *cause, NSString *resource, NSString *key, JavaUtilLocale *locale, JavaLangClassLoader *loader) {
  JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  self->resource_ = resource;
  self->key_ = key;
  self->locale_ = locale;
  self->loader_ = loader;
}

OrgSpongycastleI18nMissingEntryException *new_OrgSpongycastleI18nMissingEntryException_initWithNSString_withJavaLangThrowable_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(NSString *message, JavaLangThrowable *cause, NSString *resource, NSString *key, JavaUtilLocale *locale, JavaLangClassLoader *loader) {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nMissingEntryException, initWithNSString_withJavaLangThrowable_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_, message, cause, resource, key, locale, loader)
}

OrgSpongycastleI18nMissingEntryException *create_OrgSpongycastleI18nMissingEntryException_initWithNSString_withJavaLangThrowable_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_(NSString *message, JavaLangThrowable *cause, NSString *resource, NSString *key, JavaUtilLocale *locale, JavaLangClassLoader *loader) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nMissingEntryException, initWithNSString_withJavaLangThrowable_withNSString_withNSString_withJavaUtilLocale_withJavaLangClassLoader_, message, cause, resource, key, locale, loader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleI18nMissingEntryException)
