//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/i18n/filter/SQLFilter.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuffer.h"
#include "org/spongycastle/i18n/filter/SQLFilter.h"

@implementation OrgSpongycastleI18nFilterSQLFilter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleI18nFilterSQLFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)doFilterWithNSString:(NSString *)input {
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithNSString_(input);
  jint i = 0;
  while (i < [buf java_length]) {
    jchar ch = [buf charAtWithInt:i];
    switch (ch) {
      case '\'':
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\'"];
      i += 1;
      break;
      case '"':
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\\""];
      i += 1;
      break;
      case '=':
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\="];
      i += 1;
      break;
      case '-':
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\-"];
      i += 1;
      break;
      case '/':
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\/"];
      i += 1;
      break;
      case '\\':
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\\\"];
      i += 1;
      break;
      case ';':
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\;"];
      i += 1;
      break;
      case 0x000d:
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\r"];
      i += 1;
      break;
      case 0x000a:
      (void) [buf replaceWithInt:i withInt:i + 1 withNSString:@"\\n"];
      i += 1;
      break;
      default:
      ;
    }
    i++;
  }
  return [buf description];
}

- (NSString *)doFilterUrlWithNSString:(NSString *)input {
  return [self doFilterWithNSString:input];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(doFilterWithNSString:);
  methods[2].selector = @selector(doFilterUrlWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "doFilter", "LNSString;", "doFilterUrl" };
  static const J2ObjcClassInfo _OrgSpongycastleI18nFilterSQLFilter = { "SQLFilter", "org.spongycastle.i18n.filter", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleI18nFilterSQLFilter;
}

@end

void OrgSpongycastleI18nFilterSQLFilter_init(OrgSpongycastleI18nFilterSQLFilter *self) {
  NSObject_init(self);
}

OrgSpongycastleI18nFilterSQLFilter *new_OrgSpongycastleI18nFilterSQLFilter_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleI18nFilterSQLFilter, init)
}

OrgSpongycastleI18nFilterSQLFilter *create_OrgSpongycastleI18nFilterSQLFilter_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleI18nFilterSQLFilter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleI18nFilterSQLFilter)
