//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial")
#ifdef RESTRICT_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial
#define INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial 1
#endif
#undef RESTRICT_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial

#if !defined (OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial_) && (INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial || defined(INCLUDE_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial))
#define OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial_

#define RESTRICT_OrgSpongycastlePqcMathNtruPolynomialPolynomial 1
#define INCLUDE_OrgSpongycastlePqcMathNtruPolynomialPolynomial 1
#include "org/spongycastle/pqc/math/ntru/polynomial/Polynomial.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaSecuritySecureRandom;
@class OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial;
@class OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;
@class OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial;

@interface OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial : NSObject < OrgSpongycastlePqcMathNtruPolynomialPolynomial >

#pragma mark Public

- (instancetype)initWithOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f1
                    withOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f2
                    withOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f3;

- (jboolean)isEqual:(id)obj;

+ (OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *)fromBinaryWithByteArray:(IOSByteArray *)data
                                                                               withInt:(jint)N
                                                                               withInt:(jint)df1
                                                                               withInt:(jint)df2
                                                                               withInt:(jint)df3Ones
                                                                               withInt:(jint)df3NegOnes;

+ (OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *)fromBinaryWithJavaIoInputStream:(JavaIoInputStream *)is
                                                                                       withInt:(jint)N
                                                                                       withInt:(jint)df1
                                                                                       withInt:(jint)df2
                                                                                       withInt:(jint)df3Ones
                                                                                       withInt:(jint)df3NegOnes;

+ (OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *)generateRandomWithInt:(jint)N
                                                                             withInt:(jint)df1
                                                                             withInt:(jint)df2
                                                                             withInt:(jint)df3Ones
                                                                             withInt:(jint)df3NegOnes
                                                        withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (NSUInteger)hash;

- (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)b;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)b;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)poly2
                                                                                                                 withInt:(jint)modulus;

- (IOSByteArray *)toBinary;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)toIntegerPolynomial;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial)

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *self, OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial_generateRandomWithInt_withInt_withInt_withInt_withInt_withJavaSecuritySecureRandom_(jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithByteArray_withInt_withInt_withInt_withInt_withInt_(IOSByteArray *data, jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial *OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_withInt_withInt_(JavaIoInputStream *is, jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialProductFormPolynomial")
