//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/linearalgebra/RandUtils.java
//

#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/pqc/math/linearalgebra/RandUtils.h"

@implementation OrgSpongycastlePqcMathLinearalgebraRandUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastlePqcMathLinearalgebraRandUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)nextIntWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)rand
                                    withInt:(jint)n {
  return OrgSpongycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(rand, n);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(nextIntWithJavaSecuritySecureRandom:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "nextInt", "LJavaSecuritySecureRandom;I" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcMathLinearalgebraRandUtils = { "RandUtils", "org.spongycastle.pqc.math.linearalgebra", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcMathLinearalgebraRandUtils;
}

@end

void OrgSpongycastlePqcMathLinearalgebraRandUtils_init(OrgSpongycastlePqcMathLinearalgebraRandUtils *self) {
  NSObject_init(self);
}

OrgSpongycastlePqcMathLinearalgebraRandUtils *new_OrgSpongycastlePqcMathLinearalgebraRandUtils_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathLinearalgebraRandUtils, init)
}

OrgSpongycastlePqcMathLinearalgebraRandUtils *create_OrgSpongycastlePqcMathLinearalgebraRandUtils_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathLinearalgebraRandUtils, init)
}

jint OrgSpongycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(JavaSecuritySecureRandom *rand, jint n) {
  OrgSpongycastlePqcMathLinearalgebraRandUtils_initialize();
  if ((n & -n) == n) {
    return (jint) (JreRShift64((n * (jlong) (JreURShift32([((JavaSecuritySecureRandom *) nil_chk(rand)) nextInt], 1))), 31));
  }
  jint bits;
  jint value;
  do {
    bits = JreURShift32([((JavaSecuritySecureRandom *) nil_chk(rand)) nextInt], 1);
    value = bits % n;
  }
  while (bits - value + (n - 1) < 0);
  return value;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcMathLinearalgebraRandUtils)
