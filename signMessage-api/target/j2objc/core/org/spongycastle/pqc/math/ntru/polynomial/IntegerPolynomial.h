//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial")
#ifdef RESTRICT_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial
#define INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial 1
#endif
#undef RESTRICT_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial

#if !defined (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_) && (INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial || defined(INCLUDE_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial))
#define OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_

#define RESTRICT_OrgSpongycastlePqcMathNtruPolynomialPolynomial 1
#define INCLUDE_OrgSpongycastlePqcMathNtruPolynomialPolynomial 1
#include "org/spongycastle/pqc/math/ntru/polynomial/Polynomial.h"

@class IOSByteArray;
@class IOSIntArray;
@class JavaIoInputStream;
@class OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial;
@class OrgSpongycastlePqcMathNtruPolynomialModularResultant;
@class OrgSpongycastlePqcMathNtruPolynomialResultant;

@interface OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial : NSObject < OrgSpongycastlePqcMathNtruPolynomialPolynomial > {
 @public
  IOSIntArray *coeffs_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)p;

- (instancetype)initWithInt:(jint)N;

- (instancetype)initWithIntArray:(IOSIntArray *)coeffs;

- (void)addWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)b;

- (void)addWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)b
                                                             withInt:(jint)modulus;

- (void)center0WithInt:(jint)q;

- (jlong)centeredNormSqWithInt:(jint)q;

- (void)clear;

- (id)java_clone;

- (jint)countWithInt:(jint)value;

- (void)divWithInt:(jint)k;

- (void)ensurePositiveWithInt:(jint)modulus;

- (jboolean)isEqual:(id)obj;

- (jboolean)equalsOne;

+ (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)fromBinaryWithByteArray:(IOSByteArray *)data
                                                                           withInt:(jint)N
                                                                           withInt:(jint)q;

+ (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)fromBinaryWithJavaIoInputStream:(JavaIoInputStream *)is
                                                                                   withInt:(jint)N
                                                                                   withInt:(jint)q;

+ (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)fromBinary3SvesWithByteArray:(IOSByteArray *)data
                                                                                withInt:(jint)N;

+ (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)fromBinary3TightWithByteArray:(IOSByteArray *)b
                                                                                 withInt:(jint)N;

+ (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)fromBinary3TightWithJavaIoInputStream:(JavaIoInputStream *)is
                                                                                         withInt:(jint)N;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)invertF3;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)invertFqWithInt:(jint)q;

- (void)modWithInt:(jint)modulus;

- (void)mod3;

- (void)modPositiveWithInt:(jint)modulus;

- (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)poly2;

- (void)multWithInt:(jint)factor;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)poly2;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)poly2
                                                                                                                 withInt:(jint)modulus;

- (void)mult3WithInt:(jint)modulus;

- (OrgSpongycastlePqcMathNtruPolynomialResultant *)resultant;

- (OrgSpongycastlePqcMathNtruPolynomialModularResultant *)resultantWithInt:(jint)p;

- (OrgSpongycastlePqcMathNtruPolynomialResultant *)resultantMultiThread;

- (void)rotate1;

- (void)subWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)b;

- (void)subWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)b
                                                             withInt:(jint)modulus;

- (jint)sumCoeffs;

- (IOSByteArray *)toBinaryWithInt:(jint)q;

- (IOSByteArray *)toBinary3Sves;

- (IOSByteArray *)toBinary3Tight;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)toIntegerPolynomial;

#pragma mark Package-Private

- (jint)degree;

- (void)modCenterWithInt:(jint)modulus;

- (void)shiftGapWithInt:(jint)q;

- (void)subWithInt:(jint)b;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial)

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial, coeffs_, IOSIntArray *)

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithInt_(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *self, jint N);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithInt_(jint N) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithInt_(jint N);

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithIntArray_(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *self, IOSIntArray *coeffs);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithIntArray_(IOSIntArray *coeffs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithIntArray_(IOSIntArray *coeffs);

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *self, OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *p);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *p);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_fromBinary3SvesWithByteArray_withInt_(IOSByteArray *data, jint N);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_fromBinary3TightWithByteArray_withInt_(IOSByteArray *b, jint N);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_fromBinary3TightWithJavaIoInputStream_withInt_(JavaIoInputStream *is, jint N);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_fromBinaryWithByteArray_withInt_withInt_(IOSByteArray *data, jint N, jint q);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_(JavaIoInputStream *is, jint N, jint q);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial")
