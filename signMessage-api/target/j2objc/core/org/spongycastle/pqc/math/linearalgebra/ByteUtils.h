//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/linearalgebra/ByteUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcMathLinearalgebraByteUtils")
#ifdef RESTRICT_OrgSpongycastlePqcMathLinearalgebraByteUtils
#define INCLUDE_ALL_OrgSpongycastlePqcMathLinearalgebraByteUtils 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcMathLinearalgebraByteUtils 1
#endif
#undef RESTRICT_OrgSpongycastlePqcMathLinearalgebraByteUtils

#if !defined (OrgSpongycastlePqcMathLinearalgebraByteUtils_) && (INCLUDE_ALL_OrgSpongycastlePqcMathLinearalgebraByteUtils || defined(INCLUDE_OrgSpongycastlePqcMathLinearalgebraByteUtils))
#define OrgSpongycastlePqcMathLinearalgebraByteUtils_

@class IOSByteArray;
@class IOSCharArray;
@class IOSObjectArray;

@interface OrgSpongycastlePqcMathLinearalgebraByteUtils : NSObject

#pragma mark Public

+ (IOSByteArray *)cloneWithByteArray:(IOSByteArray *)array;

+ (IOSByteArray *)concatenateWithByteArray:(IOSByteArray *)x1
                             withByteArray:(IOSByteArray *)x2;

+ (IOSByteArray *)concatenateWithByteArray2:(IOSObjectArray *)array;

+ (jint)deepHashCodeWithByteArray:(IOSByteArray *)array;

+ (jint)deepHashCodeWithByteArray2:(IOSObjectArray *)array;

+ (jint)deepHashCodeWithByteArray3:(IOSObjectArray *)array;

+ (jboolean)equalsWithByteArray:(IOSByteArray *)left
                  withByteArray:(IOSByteArray *)right;

+ (jboolean)equalsWithByteArray2:(IOSObjectArray *)left
                  withByteArray2:(IOSObjectArray *)right;

+ (jboolean)equalsWithByteArray3:(IOSObjectArray *)left
                  withByteArray3:(IOSObjectArray *)right;

+ (IOSByteArray *)fromHexStringWithNSString:(NSString *)s;

+ (IOSObjectArray *)splitWithByteArray:(IOSByteArray *)input
                               withInt:(jint)index;

+ (IOSByteArray *)subArrayWithByteArray:(IOSByteArray *)input
                                withInt:(jint)start;

+ (IOSByteArray *)subArrayWithByteArray:(IOSByteArray *)input
                                withInt:(jint)start
                                withInt:(jint)end;

+ (NSString *)toBinaryStringWithByteArray:(IOSByteArray *)input;

+ (IOSCharArray *)toCharArrayWithByteArray:(IOSByteArray *)input;

+ (NSString *)toHexStringWithByteArray:(IOSByteArray *)input;

+ (NSString *)toHexStringWithByteArray:(IOSByteArray *)input
                          withNSString:(NSString *)prefix
                          withNSString:(NSString *)seperator;

+ (IOSByteArray *)xor__WithByteArray:(IOSByteArray *)x1
                       withByteArray:(IOSByteArray *)x2;

@end

J2OBJC_STATIC_INIT(OrgSpongycastlePqcMathLinearalgebraByteUtils)

FOUNDATION_EXPORT jboolean OrgSpongycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray_withByteArray_(IOSByteArray *left, IOSByteArray *right);

FOUNDATION_EXPORT jboolean OrgSpongycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray2_withByteArray2_(IOSObjectArray *left, IOSObjectArray *right);

FOUNDATION_EXPORT jboolean OrgSpongycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray3_withByteArray3_(IOSObjectArray *left, IOSObjectArray *right);

FOUNDATION_EXPORT jint OrgSpongycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT jint OrgSpongycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray2_(IOSObjectArray *array);

FOUNDATION_EXPORT jint OrgSpongycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray3_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_cloneWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_fromHexStringWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *OrgSpongycastlePqcMathLinearalgebraByteUtils_toHexStringWithByteArray_(IOSByteArray *input);

FOUNDATION_EXPORT NSString *OrgSpongycastlePqcMathLinearalgebraByteUtils_toHexStringWithByteArray_withNSString_withNSString_(IOSByteArray *input, NSString *prefix, NSString *seperator);

FOUNDATION_EXPORT NSString *OrgSpongycastlePqcMathLinearalgebraByteUtils_toBinaryStringWithByteArray_(IOSByteArray *input);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_xor__WithByteArray_withByteArray_(IOSByteArray *x1, IOSByteArray *x2);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_concatenateWithByteArray_withByteArray_(IOSByteArray *x1, IOSByteArray *x2);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_concatenateWithByteArray2_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_splitWithByteArray_withInt_(IOSByteArray *input, jint index);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_subArrayWithByteArray_withInt_withInt_(IOSByteArray *input, jint start, jint end);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_subArrayWithByteArray_withInt_(IOSByteArray *input, jint start);

FOUNDATION_EXPORT IOSCharArray *OrgSpongycastlePqcMathLinearalgebraByteUtils_toCharArrayWithByteArray_(IOSByteArray *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcMathLinearalgebraByteUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcMathLinearalgebraByteUtils")
