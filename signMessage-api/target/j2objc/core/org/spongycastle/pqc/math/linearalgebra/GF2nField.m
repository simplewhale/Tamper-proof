//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/linearalgebra/GF2nField.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "java/util/Vector.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2Polynomial.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2nElement.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2nField.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2nONBElement.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2nONBField.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2nPolynomialElement.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField.h"

@implementation OrgSpongycastlePqcMathLinearalgebraGF2nField

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  OrgSpongycastlePqcMathLinearalgebraGF2nField_initWithJavaSecuritySecureRandom_(self, random);
  return self;
}

- (jint)getDegree {
  return mDegree_;
}

- (OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *)getFieldPolynomial {
  if (fieldPolynomial_ == nil) {
    [self computeFieldPolynomial];
  }
  return new_OrgSpongycastlePqcMathLinearalgebraGF2Polynomial_initWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial_(fieldPolynomial_);
}

- (jboolean)isEqual:(id)other {
  if (other == nil || !([other isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2nField class]])) {
    return false;
  }
  OrgSpongycastlePqcMathLinearalgebraGF2nField *otherField = (OrgSpongycastlePqcMathLinearalgebraGF2nField *) cast_chk(other, [OrgSpongycastlePqcMathLinearalgebraGF2nField class]);
  if (otherField->mDegree_ != mDegree_) {
    return false;
  }
  if (![((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(fieldPolynomial_)) isEqual:otherField->fieldPolynomial_]) {
    return false;
  }
  if (([self isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2nPolynomialField class]]) && !([otherField isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2nPolynomialField class]])) {
    return false;
  }
  if (([self isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2nONBField class]]) && !([otherField isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2nONBField class]])) {
    return false;
  }
  return true;
}

- (NSUInteger)hash {
  return mDegree_ + ((jint) [((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(fieldPolynomial_)) hash]);
}

- (OrgSpongycastlePqcMathLinearalgebraGF2nElement *)getRandomRootWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial:(OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *)B0FieldPolynomial {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)computeCOBMatrixWithOrgSpongycastlePqcMathLinearalgebraGF2nField:(OrgSpongycastlePqcMathLinearalgebraGF2nField *)B1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)computeFieldPolynomial {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (IOSObjectArray *)invertMatrixWithOrgSpongycastlePqcMathLinearalgebraGF2PolynomialArray:(IOSObjectArray *)matrix {
  IOSObjectArray *a = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(matrix))->size_ type:OrgSpongycastlePqcMathLinearalgebraGF2Polynomial_class_()];
  IOSObjectArray *inv = [IOSObjectArray newArrayWithLength:matrix->size_ type:OrgSpongycastlePqcMathLinearalgebraGF2Polynomial_class_()];
  OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *dummy;
  jint i;
  jint j;
  for (i = 0; i < mDegree_; i++) {
    @try {
      (void) IOSObjectArray_SetAndConsume(a, i, new_OrgSpongycastlePqcMathLinearalgebraGF2Polynomial_initWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial_(IOSObjectArray_Get(matrix, i)));
      (void) IOSObjectArray_SetAndConsume(inv, i, new_OrgSpongycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_(mDegree_));
      [((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(inv, i))) setBitWithInt:mDegree_ - 1 - i];
    }
    @catch (JavaLangRuntimeException *BDNEExc) {
      [BDNEExc printStackTrace];
    }
  }
  for (i = 0; i < mDegree_ - 1; i++) {
    j = i;
    while ((j < mDegree_) && ![((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(a, j))) testBitWithInt:mDegree_ - 1 - i]) {
      j++;
    }
    if (j >= mDegree_) {
      @throw new_JavaLangRuntimeException_initWithNSString_(@"GF2nField.invertMatrix: Matrix cannot be inverted!");
    }
    if (i != j) {
      dummy = IOSObjectArray_Get(a, i);
      (void) IOSObjectArray_Set(a, i, IOSObjectArray_Get(a, j));
      (void) IOSObjectArray_Set(a, j, dummy);
      dummy = IOSObjectArray_Get(inv, i);
      (void) IOSObjectArray_Set(inv, i, IOSObjectArray_Get(inv, j));
      (void) IOSObjectArray_Set(inv, j, dummy);
    }
    for (j = i + 1; j < mDegree_; j++) {
      if ([((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(a, j))) testBitWithInt:mDegree_ - 1 - i]) {
        [((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(a, j))) addToThisWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial:IOSObjectArray_Get(a, i)];
        [((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(inv, j))) addToThisWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial:IOSObjectArray_Get(inv, i)];
      }
    }
  }
  for (i = mDegree_ - 1; i > 0; i--) {
    for (j = i - 1; j >= 0; j--) {
      if ([((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(a, j))) testBitWithInt:mDegree_ - 1 - i]) {
        [((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(a, j))) addToThisWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial:IOSObjectArray_Get(a, i)];
        [((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(inv, j))) addToThisWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial:IOSObjectArray_Get(inv, i)];
      }
    }
  }
  return inv;
}

- (OrgSpongycastlePqcMathLinearalgebraGF2nElement *)convertWithOrgSpongycastlePqcMathLinearalgebraGF2nElement:(OrgSpongycastlePqcMathLinearalgebraGF2nElement *)elem
                                                             withOrgSpongycastlePqcMathLinearalgebraGF2nField:(OrgSpongycastlePqcMathLinearalgebraGF2nField *)basis {
  if (basis == self) {
    return (OrgSpongycastlePqcMathLinearalgebraGF2nElement *) cast_chk([((OrgSpongycastlePqcMathLinearalgebraGF2nElement *) nil_chk(elem)) java_clone], [OrgSpongycastlePqcMathLinearalgebraGF2nElement class]);
  }
  if ([((OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(fieldPolynomial_)) isEqual:((OrgSpongycastlePqcMathLinearalgebraGF2nField *) nil_chk(basis))->fieldPolynomial_]) {
    return (OrgSpongycastlePqcMathLinearalgebraGF2nElement *) cast_chk([((OrgSpongycastlePqcMathLinearalgebraGF2nElement *) nil_chk(elem)) java_clone], [OrgSpongycastlePqcMathLinearalgebraGF2nElement class]);
  }
  if (mDegree_ != basis->mDegree_) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"GF2nField.convert: B1 has a different degree and thus cannot be coverted to!");
  }
  jint i;
  IOSObjectArray *COBMatrix;
  i = [((JavaUtilVector *) nil_chk(fields_)) indexOfWithId:basis];
  if (i == -1) {
    [self computeCOBMatrixWithOrgSpongycastlePqcMathLinearalgebraGF2nField:basis];
    i = [((JavaUtilVector *) nil_chk(fields_)) indexOfWithId:basis];
  }
  COBMatrix = (IOSObjectArray *) cast_check([((JavaUtilVector *) nil_chk(matrices_)) elementAtWithInt:i], IOSClass_arrayType(OrgSpongycastlePqcMathLinearalgebraGF2Polynomial_class_(), 1));
  OrgSpongycastlePqcMathLinearalgebraGF2nElement *elemCopy = (OrgSpongycastlePqcMathLinearalgebraGF2nElement *) cast_chk([((OrgSpongycastlePqcMathLinearalgebraGF2nElement *) nil_chk(elem)) java_clone], [OrgSpongycastlePqcMathLinearalgebraGF2nElement class]);
  if ([elemCopy isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2nONBElement class]]) {
    [((OrgSpongycastlePqcMathLinearalgebraGF2nONBElement *) nil_chk(((OrgSpongycastlePqcMathLinearalgebraGF2nONBElement *) elemCopy))) reverseOrder];
  }
  OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *bs = new_OrgSpongycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_withJavaMathBigInteger_(mDegree_, [((OrgSpongycastlePqcMathLinearalgebraGF2nElement *) nil_chk(elemCopy)) toFlexiBigInt]);
  [bs expandNWithInt:mDegree_];
  OrgSpongycastlePqcMathLinearalgebraGF2Polynomial *result = new_OrgSpongycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_(mDegree_);
  for (i = 0; i < mDegree_; i++) {
    if ([bs vectorMultWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial:IOSObjectArray_Get(nil_chk(COBMatrix), i)]) {
      [result setBitWithInt:mDegree_ - 1 - i];
    }
  }
  if ([basis isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2nPolynomialField class]]) {
    return new_OrgSpongycastlePqcMathLinearalgebraGF2nPolynomialElement_initWithOrgSpongycastlePqcMathLinearalgebraGF2nPolynomialField_withOrgSpongycastlePqcMathLinearalgebraGF2Polynomial_((OrgSpongycastlePqcMathLinearalgebraGF2nPolynomialField *) basis, result);
  }
  else if ([basis isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2nONBField class]]) {
    OrgSpongycastlePqcMathLinearalgebraGF2nONBElement *res = new_OrgSpongycastlePqcMathLinearalgebraGF2nONBElement_initWithOrgSpongycastlePqcMathLinearalgebraGF2nONBField_withJavaMathBigInteger_((OrgSpongycastlePqcMathLinearalgebraGF2nONBField *) basis, [result toFlexiBigInt]);
    [res reverseOrder];
    return res;
  }
  else {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"GF2nField.convert: B1 must be an instance of GF2nPolynomialField or GF2nONBField!");
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathLinearalgebraGF2Polynomial;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathLinearalgebraGF2nElement;", 0x404, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastlePqcMathLinearalgebraGF2Polynomial;", 0x14, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathLinearalgebraGF2nElement;", 0x11, 10, 11, 12, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:);
  methods[1].selector = @selector(getDegree);
  methods[2].selector = @selector(getFieldPolynomial);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(getRandomRootWithOrgSpongycastlePqcMathLinearalgebraGF2Polynomial:);
  methods[6].selector = @selector(computeCOBMatrixWithOrgSpongycastlePqcMathLinearalgebraGF2nField:);
  methods[7].selector = @selector(computeFieldPolynomial);
  methods[8].selector = @selector(invertMatrixWithOrgSpongycastlePqcMathLinearalgebraGF2PolynomialArray:);
  methods[9].selector = @selector(convertWithOrgSpongycastlePqcMathLinearalgebraGF2nElement:withOrgSpongycastlePqcMathLinearalgebraGF2nField:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "mDegree_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "fieldPolynomial_", "LOrgSpongycastlePqcMathLinearalgebraGF2Polynomial;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "fields_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "matrices_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;", "equals", "LNSObject;", "hashCode", "getRandomRoot", "LOrgSpongycastlePqcMathLinearalgebraGF2Polynomial;", "computeCOBMatrix", "LOrgSpongycastlePqcMathLinearalgebraGF2nField;", "invertMatrix", "[LOrgSpongycastlePqcMathLinearalgebraGF2Polynomial;", "convert", "LOrgSpongycastlePqcMathLinearalgebraGF2nElement;LOrgSpongycastlePqcMathLinearalgebraGF2nField;", "LJavaLangRuntimeException;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcMathLinearalgebraGF2nField = { "GF2nField", "org.spongycastle.pqc.math.linearalgebra", ptrTable, methods, fields, 7, 0x401, 10, 5, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcMathLinearalgebraGF2nField;
}

@end

void OrgSpongycastlePqcMathLinearalgebraGF2nField_initWithJavaSecuritySecureRandom_(OrgSpongycastlePqcMathLinearalgebraGF2nField *self, JavaSecuritySecureRandom *random) {
  NSObject_init(self);
  self->random_ = random;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcMathLinearalgebraGF2nField)
