//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial")
#ifdef RESTRICT_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial
#define INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial 1
#endif
#undef RESTRICT_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial

#if !defined (OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_) && (INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial || defined(INCLUDE_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial))
#define OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_

#define RESTRICT_OrgSpongycastlePqcMathNtruPolynomialTernaryPolynomial 1
#define INCLUDE_OrgSpongycastlePqcMathNtruPolynomialTernaryPolynomial 1
#include "org/spongycastle/pqc/math/ntru/polynomial/TernaryPolynomial.h"

@class IOSByteArray;
@class IOSIntArray;
@class JavaIoInputStream;
@class JavaSecuritySecureRandom;
@class OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial;
@class OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;

@interface OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial : NSObject < OrgSpongycastlePqcMathNtruPolynomialTernaryPolynomial >

#pragma mark Public

- (instancetype)initWithIntArray:(IOSIntArray *)coeffs;

- (instancetype)initWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)intPoly;

- (void)clear;

- (jboolean)isEqual:(id)obj;

+ (OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)fromBinaryWithJavaIoInputStream:(JavaIoInputStream *)is
                                                                                         withInt:(jint)N
                                                                                         withInt:(jint)numOnes
                                                                                         withInt:(jint)numNegOnes;

+ (OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)generateRandomWithInt:(jint)N
                                                                               withInt:(jint)numOnes
                                                                               withInt:(jint)numNegOnes
                                                          withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (IOSIntArray *)getNegOnes;

- (IOSIntArray *)getOnes;

- (NSUInteger)hash;

- (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)poly2;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)poly2;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)poly2
                                                                                                                 withInt:(jint)modulus;

- (jint)size;

- (IOSByteArray *)toBinary;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)toIntegerPolynomial;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)N
               withIntArray:(IOSIntArray *)ones
               withIntArray:(IOSIntArray *)negOnes;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial)

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithInt_withIntArray_withIntArray_(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *self, jint N, IOSIntArray *ones, IOSIntArray *negOnes);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithInt_withIntArray_withIntArray_(jint N, IOSIntArray *ones, IOSIntArray *negOnes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithInt_withIntArray_withIntArray_(jint N, IOSIntArray *ones, IOSIntArray *negOnes);

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *self, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *intPoly);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *intPoly) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *intPoly);

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithIntArray_(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *self, IOSIntArray *coeffs);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithIntArray_(IOSIntArray *coeffs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_initWithIntArray_(IOSIntArray *coeffs);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_(JavaIoInputStream *is, jint N, jint numOnes, jint numNegOnes);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial *OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial_generateRandomWithInt_withInt_withInt_withJavaSecuritySecureRandom_(jint N, jint numOnes, jint numNegOnes, JavaSecuritySecureRandom *random);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialSparseTernaryPolynomial")
