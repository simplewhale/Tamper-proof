//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/linearalgebra/BigEndianConversions.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "org/spongycastle/pqc/math/linearalgebra/BigEndianConversions.h"
#include "org/spongycastle/pqc/math/linearalgebra/IntegerFunctions.h"

@interface OrgSpongycastlePqcMathLinearalgebraBigEndianConversions ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_init(OrgSpongycastlePqcMathLinearalgebraBigEndianConversions *self);

__attribute__((unused)) static OrgSpongycastlePqcMathLinearalgebraBigEndianConversions *new_OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastlePqcMathLinearalgebraBigEndianConversions *create_OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_init(void);

@implementation OrgSpongycastlePqcMathLinearalgebraBigEndianConversions

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSByteArray *)I2OSPWithInt:(jint)x {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_(x);
}

+ (IOSByteArray *)I2OSPWithInt:(jint)x
                       withInt:(jint)oLen {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withInt_(x, oLen);
}

+ (void)I2OSPWithInt:(jint)input
       withByteArray:(IOSByteArray *)output
             withInt:(jint)outOff {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withByteArray_withInt_(input, output, outOff);
}

+ (IOSByteArray *)I2OSPWithLong:(jlong)input {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithLong_(input);
}

+ (void)I2OSPWithLong:(jlong)input
        withByteArray:(IOSByteArray *)output
              withInt:(jint)outOff {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithLong_withByteArray_withInt_(input, output, outOff);
}

+ (void)I2OSPWithInt:(jint)input
       withByteArray:(IOSByteArray *)output
             withInt:(jint)outOff
             withInt:(jint)length {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withByteArray_withInt_withInt_(input, output, outOff, length);
}

+ (jint)OS2IPWithByteArray:(IOSByteArray *)input {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_(input);
}

+ (jint)OS2IPWithByteArray:(IOSByteArray *)input
                   withInt:(jint)inOff {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_withInt_(input, inOff);
}

+ (jint)OS2IPWithByteArray:(IOSByteArray *)input
                   withInt:(jint)inOff
                   withInt:(jint)inLen {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_withInt_withInt_(input, inOff, inLen);
}

+ (jlong)OS2LIPWithByteArray:(IOSByteArray *)input
                     withInt:(jint)inOff {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2LIPWithByteArray_withInt_(input, inOff);
}

+ (IOSByteArray *)toByteArrayWithIntArray:(IOSIntArray *)input {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_toByteArrayWithIntArray_(input);
}

+ (IOSByteArray *)toByteArrayWithIntArray:(IOSIntArray *)input
                                  withInt:(jint)length {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_toByteArrayWithIntArray_withInt_(input, length);
}

+ (IOSIntArray *)toIntArrayWithByteArray:(IOSByteArray *)input {
  return OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_toIntArrayWithByteArray_(input);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 8, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 8, 11, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 12, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 13, 15, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 16, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(I2OSPWithInt:);
  methods[2].selector = @selector(I2OSPWithInt:withInt:);
  methods[3].selector = @selector(I2OSPWithInt:withByteArray:withInt:);
  methods[4].selector = @selector(I2OSPWithLong:);
  methods[5].selector = @selector(I2OSPWithLong:withByteArray:withInt:);
  methods[6].selector = @selector(I2OSPWithInt:withByteArray:withInt:withInt:);
  methods[7].selector = @selector(OS2IPWithByteArray:);
  methods[8].selector = @selector(OS2IPWithByteArray:withInt:);
  methods[9].selector = @selector(OS2IPWithByteArray:withInt:withInt:);
  methods[10].selector = @selector(OS2LIPWithByteArray:withInt:);
  methods[11].selector = @selector(toByteArrayWithIntArray:);
  methods[12].selector = @selector(toByteArrayWithIntArray:withInt:);
  methods[13].selector = @selector(toIntArrayWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I2OSP", "I", "II", "LJavaLangArithmeticException;", "I[BI", "J", "J[BI", "I[BII", "OS2IP", "[B", "[BI", "[BII", "OS2LIP", "toByteArray", "[I", "[II", "toIntArray" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcMathLinearalgebraBigEndianConversions = { "BigEndianConversions", "org.spongycastle.pqc.math.linearalgebra", ptrTable, methods, NULL, 7, 0x11, 14, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcMathLinearalgebraBigEndianConversions;
}

@end

void OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_init(OrgSpongycastlePqcMathLinearalgebraBigEndianConversions *self) {
  NSObject_init(self);
}

OrgSpongycastlePqcMathLinearalgebraBigEndianConversions *new_OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathLinearalgebraBigEndianConversions, init)
}

OrgSpongycastlePqcMathLinearalgebraBigEndianConversions *create_OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathLinearalgebraBigEndianConversions, init)
}

IOSByteArray *OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_(jint x) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  IOSByteArray *result = [IOSByteArray newArrayWithLength:4];
  *IOSByteArray_GetRef(result, 0) = (jbyte) (JreURShift32(x, 24));
  *IOSByteArray_GetRef(result, 1) = (jbyte) (JreURShift32(x, 16));
  *IOSByteArray_GetRef(result, 2) = (jbyte) (JreURShift32(x, 8));
  *IOSByteArray_GetRef(result, 3) = (jbyte) x;
  return result;
}

IOSByteArray *OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withInt_(jint x, jint oLen) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  if (x < 0) {
    return nil;
  }
  jint octL = OrgSpongycastlePqcMathLinearalgebraIntegerFunctions_ceilLog256WithInt_(x);
  if (octL > oLen) {
    @throw new_JavaLangArithmeticException_initWithNSString_(@"Cannot encode given integer into specified number of octets.");
  }
  IOSByteArray *result = [IOSByteArray newArrayWithLength:oLen];
  for (jint i = oLen - 1; i >= oLen - octL; i--) {
    *IOSByteArray_GetRef(result, i) = (jbyte) (JreURShift32(x, (8 * (oLen - 1 - i))));
  }
  return result;
}

void OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withByteArray_withInt_(jint input, IOSByteArray *output, jint outOff) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  *IOSByteArray_GetRef(nil_chk(output), outOff++) = (jbyte) (JreURShift32(input, 24));
  *IOSByteArray_GetRef(output, outOff++) = (jbyte) (JreURShift32(input, 16));
  *IOSByteArray_GetRef(output, outOff++) = (jbyte) (JreURShift32(input, 8));
  *IOSByteArray_GetRef(output, outOff) = (jbyte) input;
}

IOSByteArray *OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithLong_(jlong input) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  IOSByteArray *output = [IOSByteArray newArrayWithLength:8];
  *IOSByteArray_GetRef(output, 0) = (jbyte) (JreURShift64(input, 56));
  *IOSByteArray_GetRef(output, 1) = (jbyte) (JreURShift64(input, 48));
  *IOSByteArray_GetRef(output, 2) = (jbyte) (JreURShift64(input, 40));
  *IOSByteArray_GetRef(output, 3) = (jbyte) (JreURShift64(input, 32));
  *IOSByteArray_GetRef(output, 4) = (jbyte) (JreURShift64(input, 24));
  *IOSByteArray_GetRef(output, 5) = (jbyte) (JreURShift64(input, 16));
  *IOSByteArray_GetRef(output, 6) = (jbyte) (JreURShift64(input, 8));
  *IOSByteArray_GetRef(output, 7) = (jbyte) input;
  return output;
}

void OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithLong_withByteArray_withInt_(jlong input, IOSByteArray *output, jint outOff) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  *IOSByteArray_GetRef(nil_chk(output), outOff++) = (jbyte) (JreURShift64(input, 56));
  *IOSByteArray_GetRef(output, outOff++) = (jbyte) (JreURShift64(input, 48));
  *IOSByteArray_GetRef(output, outOff++) = (jbyte) (JreURShift64(input, 40));
  *IOSByteArray_GetRef(output, outOff++) = (jbyte) (JreURShift64(input, 32));
  *IOSByteArray_GetRef(output, outOff++) = (jbyte) (JreURShift64(input, 24));
  *IOSByteArray_GetRef(output, outOff++) = (jbyte) (JreURShift64(input, 16));
  *IOSByteArray_GetRef(output, outOff++) = (jbyte) (JreURShift64(input, 8));
  *IOSByteArray_GetRef(output, outOff) = (jbyte) input;
}

void OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withByteArray_withInt_withInt_(jint input, IOSByteArray *output, jint outOff, jint length) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  for (jint i = length - 1; i >= 0; i--) {
    *IOSByteArray_GetRef(nil_chk(output), outOff + i) = (jbyte) (JreURShift32(input, (8 * (length - 1 - i))));
  }
}

jint OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_(IOSByteArray *input) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  if (((IOSByteArray *) nil_chk(input))->size_ > 4) {
    @throw new_JavaLangArithmeticException_initWithNSString_(@"invalid input length");
  }
  if (input->size_ == 0) {
    return 0;
  }
  jint result = 0;
  for (jint j = 0; j < input->size_; j++) {
    result |= JreLShift32((IOSByteArray_Get(input, j) & (jint) 0xff), (8 * (input->size_ - 1 - j)));
  }
  return result;
}

jint OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_withInt_(IOSByteArray *input, jint inOff) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  jint result = JreLShift32((IOSByteArray_Get(nil_chk(input), inOff++) & (jint) 0xff), 24);
  result |= JreLShift32((IOSByteArray_Get(input, inOff++) & (jint) 0xff), 16);
  result |= JreLShift32((IOSByteArray_Get(input, inOff++) & (jint) 0xff), 8);
  result |= IOSByteArray_Get(input, inOff) & (jint) 0xff;
  return result;
}

jint OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_withInt_withInt_(IOSByteArray *input, jint inOff, jint inLen) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  if ((((IOSByteArray *) nil_chk(input))->size_ == 0) || input->size_ < inOff + inLen - 1) {
    return 0;
  }
  jint result = 0;
  for (jint j = 0; j < inLen; j++) {
    result |= JreLShift32((IOSByteArray_Get(input, inOff + j) & (jint) 0xff), (8 * (inLen - j - 1)));
  }
  return result;
}

jlong OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2LIPWithByteArray_withInt_(IOSByteArray *input, jint inOff) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  jlong result = JreLShift64(((jlong) IOSByteArray_Get(nil_chk(input), inOff++) & (jint) 0xff), 56);
  result |= JreLShift64(((jlong) IOSByteArray_Get(input, inOff++) & (jint) 0xff), 48);
  result |= JreLShift64(((jlong) IOSByteArray_Get(input, inOff++) & (jint) 0xff), 40);
  result |= JreLShift64(((jlong) IOSByteArray_Get(input, inOff++) & (jint) 0xff), 32);
  result |= JreLShift64(((jlong) IOSByteArray_Get(input, inOff++) & (jint) 0xff), 24);
  result |= JreLShift32((IOSByteArray_Get(input, inOff++) & (jint) 0xff), 16);
  result |= JreLShift32((IOSByteArray_Get(input, inOff++) & (jint) 0xff), 8);
  result |= IOSByteArray_Get(input, inOff) & (jint) 0xff;
  return result;
}

IOSByteArray *OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_toByteArrayWithIntArray_(IOSIntArray *input) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  IOSByteArray *result = [IOSByteArray newArrayWithLength:JreLShift32(((IOSIntArray *) nil_chk(input))->size_, 2)];
  for (jint i = 0; i < input->size_; i++) {
    OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withByteArray_withInt_(IOSIntArray_Get(input, i), result, JreLShift32(i, 2));
  }
  return result;
}

IOSByteArray *OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_toByteArrayWithIntArray_withInt_(IOSIntArray *input, jint length) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  jint intLen = ((IOSIntArray *) nil_chk(input))->size_;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:length];
  jint index = 0;
  for (jint i = 0; i <= intLen - 2; i++, index += 4) {
    OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withByteArray_withInt_(IOSIntArray_Get(input, i), result, index);
  }
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_I2OSPWithInt_withByteArray_withInt_withInt_(IOSIntArray_Get(input, intLen - 1), result, index, length - index);
  return result;
}

IOSIntArray *OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_toIntArrayWithByteArray_(IOSByteArray *input) {
  OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_initialize();
  jint intLen = (((IOSByteArray *) nil_chk(input))->size_ + 3) / 4;
  jint lastLen = input->size_ & (jint) 0x03;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:intLen];
  jint index = 0;
  for (jint i = 0; i <= intLen - 2; i++, index += 4) {
    *IOSIntArray_GetRef(result, i) = OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_withInt_(input, index);
  }
  if (lastLen != 0) {
    *IOSIntArray_GetRef(result, intLen - 1) = OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_withInt_withInt_(input, index, lastLen);
  }
  else {
    *IOSIntArray_GetRef(result, intLen - 1) = OrgSpongycastlePqcMathLinearalgebraBigEndianConversions_OS2IPWithByteArray_withInt_(input, index);
  }
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcMathLinearalgebraBigEndianConversions)
