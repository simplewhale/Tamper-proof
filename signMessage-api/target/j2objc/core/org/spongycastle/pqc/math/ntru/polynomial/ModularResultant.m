//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/ntru/polynomial/ModularResultant.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/pqc/math/ntru/euclid/BigIntEuclidean.h"
#include "org/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial.h"
#include "org/spongycastle/pqc/math/ntru/polynomial/ModularResultant.h"
#include "org/spongycastle/pqc/math/ntru/polynomial/Resultant.h"

@implementation OrgSpongycastlePqcMathNtruPolynomialModularResultant

- (instancetype)initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)rho
                                                      withJavaMathBigInteger:(JavaMathBigInteger *)res
                                                      withJavaMathBigInteger:(JavaMathBigInteger *)modulus {
  OrgSpongycastlePqcMathNtruPolynomialModularResultant_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_withJavaMathBigInteger_withJavaMathBigInteger_(self, rho, res, modulus);
  return self;
}

+ (OrgSpongycastlePqcMathNtruPolynomialModularResultant *)combineRhoWithOrgSpongycastlePqcMathNtruPolynomialModularResultant:(OrgSpongycastlePqcMathNtruPolynomialModularResultant *)modRes1
                                                                    withOrgSpongycastlePqcMathNtruPolynomialModularResultant:(OrgSpongycastlePqcMathNtruPolynomialModularResultant *)modRes2 {
  return OrgSpongycastlePqcMathNtruPolynomialModularResultant_combineRhoWithOrgSpongycastlePqcMathNtruPolynomialModularResultant_withOrgSpongycastlePqcMathNtruPolynomialModularResultant_(modRes1, modRes2);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathNtruPolynomialModularResultant;", 0x8, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[1].selector = @selector(combineRhoWithOrgSpongycastlePqcMathNtruPolynomialModularResultant:withOrgSpongycastlePqcMathNtruPolynomialModularResultant:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "modulus_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial;LJavaMathBigInteger;LJavaMathBigInteger;", "combineRho", "LOrgSpongycastlePqcMathNtruPolynomialModularResultant;LOrgSpongycastlePqcMathNtruPolynomialModularResultant;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcMathNtruPolynomialModularResultant = { "ModularResultant", "org.spongycastle.pqc.math.ntru.polynomial", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcMathNtruPolynomialModularResultant;
}

@end

void OrgSpongycastlePqcMathNtruPolynomialModularResultant_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastlePqcMathNtruPolynomialModularResultant *self, OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *rho, JavaMathBigInteger *res, JavaMathBigInteger *modulus) {
  OrgSpongycastlePqcMathNtruPolynomialResultant_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_withJavaMathBigInteger_(self, rho, res);
  self->modulus_ = modulus;
}

OrgSpongycastlePqcMathNtruPolynomialModularResultant *new_OrgSpongycastlePqcMathNtruPolynomialModularResultant_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *rho, JavaMathBigInteger *res, JavaMathBigInteger *modulus) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathNtruPolynomialModularResultant, initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_withJavaMathBigInteger_withJavaMathBigInteger_, rho, res, modulus)
}

OrgSpongycastlePqcMathNtruPolynomialModularResultant *create_OrgSpongycastlePqcMathNtruPolynomialModularResultant_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *rho, JavaMathBigInteger *res, JavaMathBigInteger *modulus) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathNtruPolynomialModularResultant, initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_withJavaMathBigInteger_withJavaMathBigInteger_, rho, res, modulus)
}

OrgSpongycastlePqcMathNtruPolynomialModularResultant *OrgSpongycastlePqcMathNtruPolynomialModularResultant_combineRhoWithOrgSpongycastlePqcMathNtruPolynomialModularResultant_withOrgSpongycastlePqcMathNtruPolynomialModularResultant_(OrgSpongycastlePqcMathNtruPolynomialModularResultant *modRes1, OrgSpongycastlePqcMathNtruPolynomialModularResultant *modRes2) {
  OrgSpongycastlePqcMathNtruPolynomialModularResultant_initialize();
  JavaMathBigInteger *mod1 = ((OrgSpongycastlePqcMathNtruPolynomialModularResultant *) nil_chk(modRes1))->modulus_;
  JavaMathBigInteger *mod2 = ((OrgSpongycastlePqcMathNtruPolynomialModularResultant *) nil_chk(modRes2))->modulus_;
  JavaMathBigInteger *prod = [((JavaMathBigInteger *) nil_chk(mod1)) multiplyWithJavaMathBigInteger:mod2];
  OrgSpongycastlePqcMathNtruEuclidBigIntEuclidean *er = OrgSpongycastlePqcMathNtruEuclidBigIntEuclidean_calculateWithJavaMathBigInteger_withJavaMathBigInteger_(mod2, mod1);
  OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *rho1 = (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *) cast_chk([((OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *) nil_chk(modRes1->rho_)) java_clone], [OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial class]);
  [((OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *) nil_chk(rho1)) multWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(((OrgSpongycastlePqcMathNtruEuclidBigIntEuclidean *) nil_chk(er))->x_)) multiplyWithJavaMathBigInteger:mod2]];
  OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *rho2 = (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *) cast_chk([((OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *) nil_chk(modRes2->rho_)) java_clone], [OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial class]);
  [((OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *) nil_chk(rho2)) multWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(er->y_)) multiplyWithJavaMathBigInteger:mod1]];
  [rho1 addWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:rho2];
  [rho1 modWithJavaMathBigInteger:prod];
  return new_OrgSpongycastlePqcMathNtruPolynomialModularResultant_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_withJavaMathBigInteger_withJavaMathBigInteger_(rho1, nil, prod);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcMathNtruPolynomialModularResultant)
