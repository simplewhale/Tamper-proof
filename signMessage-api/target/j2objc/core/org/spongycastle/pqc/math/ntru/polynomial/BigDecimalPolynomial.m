//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial.h"
#include "org/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial.h"

@interface OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial ()

- (OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)poly2;

- (IOSObjectArray *)copyOfWithJavaMathBigDecimalArray:(IOSObjectArray *)a
                                              withInt:(jint)length OBJC_METHOD_FAMILY_NONE;

- (IOSObjectArray *)copyOfRangeWithJavaMathBigDecimalArray:(IOSObjectArray *)a
                                                   withInt:(jint)from
                                                   withInt:(jint)to OBJC_METHOD_FAMILY_NONE;

@end

inline JavaMathBigDecimal *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_get_ZERO(void);
static JavaMathBigDecimal *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial, ZERO, JavaMathBigDecimal *)

inline JavaMathBigDecimal *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_get_ONE_HALF(void);
static JavaMathBigDecimal *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ONE_HALF;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial, ONE_HALF, JavaMathBigDecimal *)

__attribute__((unused)) static OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *poly2);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *a, jint length);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *a, jint from, jint to);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial)

@implementation OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial

- (instancetype)initWithInt:(jint)N {
  OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(self, N);
  return self;
}

- (instancetype)initWithJavaMathBigDecimalArray:(IOSObjectArray *)coeffs {
  OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(self, coeffs);
  return self;
}

- (instancetype)initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)p {
  OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_(self, p);
  return self;
}

- (void)halve {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(coeffs_))->size_; i++) {
    (void) IOSObjectArray_Set(coeffs_, i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(coeffs_, i))) multiplyWithJavaMathBigDecimal:OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ONE_HALF]);
  }
}

- (OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)poly2 {
  return [self multWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_(poly2)];
}

- (OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)poly2 {
  jint N = ((IOSObjectArray *) nil_chk(coeffs_))->size_;
  if (((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(poly2))->coeffs_->size_ != N) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Number of coefficients must be the same");
  }
  OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *c = OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_(self, poly2);
  if (((IOSObjectArray *) nil_chk(((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(c))->coeffs_))->size_ > N) {
    for (jint k = N; k < ((IOSObjectArray *) nil_chk(c->coeffs_))->size_; k++) {
      (void) IOSObjectArray_Set(c->coeffs_, k - N, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(c->coeffs_, k - N))) addWithJavaMathBigDecimal:IOSObjectArray_Get(c->coeffs_, k)]);
    }
    c->coeffs_ = OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, c->coeffs_, N);
  }
  return c;
}

- (OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)poly2 {
  return OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_(self, poly2);
}

- (void)addWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)b {
  if (((IOSObjectArray *) nil_chk(((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(b))->coeffs_))->size_ > coeffs_->size_) {
    jint N = coeffs_->size_;
    coeffs_ = OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, coeffs_, b->coeffs_->size_);
    for (jint i = N; i < ((IOSObjectArray *) nil_chk(coeffs_))->size_; i++) {
      (void) IOSObjectArray_Set(coeffs_, i, OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO);
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(b->coeffs_))->size_; i++) {
    (void) IOSObjectArray_Set(coeffs_, i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(coeffs_, i))) addWithJavaMathBigDecimal:IOSObjectArray_Get(b->coeffs_, i)]);
  }
}

- (void)subWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)b {
  if (((IOSObjectArray *) nil_chk(((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(b))->coeffs_))->size_ > coeffs_->size_) {
    jint N = coeffs_->size_;
    coeffs_ = OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, coeffs_, b->coeffs_->size_);
    for (jint i = N; i < ((IOSObjectArray *) nil_chk(coeffs_))->size_; i++) {
      (void) IOSObjectArray_Set(coeffs_, i, OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO);
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(b->coeffs_))->size_; i++) {
    (void) IOSObjectArray_Set(coeffs_, i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(coeffs_, i))) subtractWithJavaMathBigDecimal:IOSObjectArray_Get(b->coeffs_, i)]);
  }
}

- (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)round {
  jint N = ((IOSObjectArray *) nil_chk(coeffs_))->size_;
  OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *p = new_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithInt_(N);
  for (jint i = 0; i < N; i++) {
    (void) IOSObjectArray_Set(nil_chk(p->coeffs_), i, [((JavaMathBigDecimal *) nil_chk([((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(nil_chk(coeffs_), i))) setScaleWithInt:0 withInt:JavaMathBigDecimal_ROUND_HALF_EVEN])) toBigInteger]);
  }
  return p;
}

- (id)java_clone {
  return new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_([((IOSObjectArray *) nil_chk(coeffs_)) java_clone]);
}

- (IOSObjectArray *)copyOfWithJavaMathBigDecimalArray:(IOSObjectArray *)a
                                              withInt:(jint)length {
  return OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, a, length);
}

- (IOSObjectArray *)copyOfRangeWithJavaMathBigDecimalArray:(IOSObjectArray *)a
                                                   withInt:(jint)from
                                                   withInt:(jint)to {
  return OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(self, a, from, to);
}

- (IOSObjectArray *)getCoeffs {
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(coeffs_))->size_ type:JavaMathBigDecimal_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(coeffs_, 0, tmp, 0, coeffs_->size_);
  return tmp;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial;", 0x2, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigDecimal;", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigDecimal;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigDecimal;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithJavaMathBigDecimalArray:);
  methods[2].selector = @selector(initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:);
  methods[3].selector = @selector(halve);
  methods[4].selector = @selector(multWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:);
  methods[5].selector = @selector(multWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:);
  methods[6].selector = @selector(multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:);
  methods[7].selector = @selector(addWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:);
  methods[8].selector = @selector(subWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:);
  methods[9].selector = @selector(round);
  methods[10].selector = @selector(java_clone);
  methods[11].selector = @selector(copyOfWithJavaMathBigDecimalArray:withInt:);
  methods[12].selector = @selector(copyOfRangeWithJavaMathBigDecimalArray:withInt:withInt:);
  methods[13].selector = @selector(getCoeffs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "ONE_HALF", "LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "coeffs_", "[LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "[LJavaMathBigDecimal;", "LOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial;", "mult", "LOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial;", "multRecursive", "add", "sub", "clone", "copyOf", "[LJavaMathBigDecimal;I", "copyOfRange", "[LJavaMathBigDecimal;II", &OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO, &OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ONE_HALF };
  static const J2ObjcClassInfo _OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial = { "BigDecimalPolynomial", "org.spongycastle.pqc.math.ntru.polynomial", ptrTable, methods, fields, 7, 0x1, 14, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial;
}

+ (void)initialize {
  if (self == [OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial class]) {
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO = new_JavaMathBigDecimal_initWithNSString_(@"0");
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ONE_HALF = new_JavaMathBigDecimal_initWithNSString_(@"0.5");
    J2OBJC_SET_INITIALIZED(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial)
  }
}

@end

void OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, jint N) {
  NSObject_init(self);
  self->coeffs_ = [IOSObjectArray newArrayWithLength:N type:JavaMathBigDecimal_class_()];
  for (jint i = 0; i < N; i++) {
    (void) IOSObjectArray_Set(self->coeffs_, i, OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO);
  }
}

OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(jint N) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithInt_, N)
}

OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(jint N) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithInt_, N)
}

void OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *coeffs) {
  NSObject_init(self);
  self->coeffs_ = coeffs;
}

OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(IOSObjectArray *coeffs) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithJavaMathBigDecimalArray_, coeffs)
}

OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(IOSObjectArray *coeffs) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithJavaMathBigDecimalArray_, coeffs)
}

void OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *p) {
  NSObject_init(self);
  jint N = ((IOSObjectArray *) nil_chk(((OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *) nil_chk(p))->coeffs_))->size_;
  self->coeffs_ = [IOSObjectArray newArrayWithLength:N type:JavaMathBigDecimal_class_()];
  for (jint i = 0; i < N; i++) {
    (void) IOSObjectArray_SetAndConsume(nil_chk(self->coeffs_), i, new_JavaMathBigDecimal_initWithJavaMathBigInteger_(IOSObjectArray_Get(nil_chk(p->coeffs_), i)));
  }
}

OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *p) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_, p)
}

OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *p) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_, p)
}

OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *poly2) {
  IOSObjectArray *a = self->coeffs_;
  IOSObjectArray *b = ((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(poly2))->coeffs_;
  jint n = ((IOSObjectArray *) nil_chk(poly2->coeffs_))->size_;
  if (n <= 1) {
    IOSObjectArray *c = [self->coeffs_ java_clone];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->coeffs_))->size_; i++) {
      (void) IOSObjectArray_Set(nil_chk(c), i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(c, i))) multiplyWithJavaMathBigDecimal:IOSObjectArray_Get(poly2->coeffs_, 0)]);
    }
    return new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(c);
  }
  else {
    jint n1 = n / 2;
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *a1 = new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, a, n1));
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *a2 = new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(self, a, n1, n));
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *b1 = new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, b, n1));
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *b2 = new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(self, b, n1, n));
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *A = (OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) cast_chk([a1 java_clone], [OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial class]);
    [((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(A)) addWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:a2];
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *B = (OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) cast_chk([b1 java_clone], [OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial class]);
    [((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(B)) addWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:b2];
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *c1 = OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_(a1, b1);
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *c2 = OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_(a2, b2);
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *c3 = OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_(A, B);
    [((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(c3)) subWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:c1];
    [c3 subWithOrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial:c2];
    OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *c = new_OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(2 * n - 1);
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(c1))->coeffs_))->size_; i++) {
      (void) IOSObjectArray_Set(c->coeffs_, i, IOSObjectArray_Get(c1->coeffs_, i));
    }
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(c3->coeffs_))->size_; i++) {
      (void) IOSObjectArray_Set(c->coeffs_, n1 + i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(c->coeffs_, n1 + i))) addWithJavaMathBigDecimal:IOSObjectArray_Get(c3->coeffs_, i)]);
    }
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(c2))->coeffs_))->size_; i++) {
      (void) IOSObjectArray_Set(c->coeffs_, 2 * n1 + i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(c->coeffs_, 2 * n1 + i))) addWithJavaMathBigDecimal:IOSObjectArray_Get(c2->coeffs_, i)]);
    }
    return c;
  }
}

IOSObjectArray *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *a, jint length) {
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:length type:JavaMathBigDecimal_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, tmp, 0, ((IOSObjectArray *) nil_chk(a))->size_ < length ? a->size_ : length);
  return tmp;
}

IOSObjectArray *OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *a, jint from, jint to) {
  jint newLength = to - from;
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:to - from type:JavaMathBigDecimal_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, from, tmp, 0, (((IOSObjectArray *) nil_chk(a))->size_ - from) < newLength ? (a->size_ - from) : newLength);
  return tmp;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial)
