//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/linearalgebra/GF2mField.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2mField.h"
#include "org/spongycastle/pqc/math/linearalgebra/LittleEndianConversions.h"
#include "org/spongycastle/pqc/math/linearalgebra/PolynomialRingGF2.h"
#include "org/spongycastle/pqc/math/linearalgebra/RandUtils.h"

@interface OrgSpongycastlePqcMathLinearalgebraGF2mField () {
 @public
  jint degree_;
  jint polynomial_;
}

+ (NSString *)polyToStringWithInt:(jint)p;

@end

__attribute__((unused)) static NSString *OrgSpongycastlePqcMathLinearalgebraGF2mField_polyToStringWithInt_(jint p);

@implementation OrgSpongycastlePqcMathLinearalgebraGF2mField

- (instancetype)initWithInt:(jint)degree {
  OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_(self, degree);
  return self;
}

- (instancetype)initWithInt:(jint)degree
                    withInt:(jint)poly {
  OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(self, degree, poly);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)enc {
  OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithByteArray_(self, enc);
  return self;
}

- (instancetype)initWithOrgSpongycastlePqcMathLinearalgebraGF2mField:(OrgSpongycastlePqcMathLinearalgebraGF2mField *)field {
  OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithOrgSpongycastlePqcMathLinearalgebraGF2mField_(self, field);
  return self;
}

- (jint)getDegree {
  return degree_;
}

- (jint)getPolynomial {
  return polynomial_;
}

- (IOSByteArray *)getEncoded {
  return OrgSpongycastlePqcMathLinearalgebraLittleEndianConversions_I2OSPWithInt_(polynomial_);
}

- (jint)addWithInt:(jint)a
           withInt:(jint)b {
  return a ^ b;
}

- (jint)multWithInt:(jint)a
            withInt:(jint)b {
  return OrgSpongycastlePqcMathLinearalgebraPolynomialRingGF2_modMultiplyWithInt_withInt_withInt_(a, b, polynomial_);
}

- (jint)expWithInt:(jint)a
           withInt:(jint)k {
  if (k == 0) {
    return 1;
  }
  if (a == 0) {
    return 0;
  }
  if (a == 1) {
    return 1;
  }
  jint result = 1;
  if (k < 0) {
    a = [self inverseWithInt:a];
    k = -k;
  }
  while (k != 0) {
    if ((k & 1) == 1) {
      result = [self multWithInt:result withInt:a];
    }
    a = [self multWithInt:a withInt:a];
    JreURShiftAssignInt(&k, 1);
  }
  return result;
}

- (jint)inverseWithInt:(jint)a {
  jint d = (JreLShift32(1, degree_)) - 2;
  return [self expWithInt:a withInt:d];
}

- (jint)sqRootWithInt:(jint)a {
  for (jint i = 1; i < degree_; i++) {
    a = [self multWithInt:a withInt:a];
  }
  return a;
}

- (jint)getRandomElementWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)sr {
  jint result = OrgSpongycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(sr, JreLShift32(1, degree_));
  return result;
}

- (jint)getRandomNonZeroElement {
  return [self getRandomNonZeroElementWithJavaSecuritySecureRandom:new_JavaSecuritySecureRandom_init()];
}

- (jint)getRandomNonZeroElementWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)sr {
  jint controltime = JreLShift32(1, 20);
  jint count = 0;
  jint result = OrgSpongycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(sr, JreLShift32(1, degree_));
  while ((result == 0) && (count < controltime)) {
    result = OrgSpongycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(sr, JreLShift32(1, degree_));
    count++;
  }
  if (count == controltime) {
    result = 1;
  }
  return result;
}

- (jboolean)isElementOfThisFieldWithInt:(jint)e {
  if (degree_ == 31) {
    return e >= 0;
  }
  return e >= 0 && e < (JreLShift32(1, degree_));
}

- (NSString *)elementToStrWithInt:(jint)a {
  NSString *s = @"";
  for (jint i = 0; i < degree_; i++) {
    if (((jbyte) a & (jint) 0x01) == 0) {
      s = JreStrcat("C$", '0', s);
    }
    else {
      s = JreStrcat("C$", '1', s);
    }
    JreURShiftAssignInt(&a, 1);
  }
  return s;
}

- (jboolean)isEqual:(id)other {
  if ((other == nil) || !([other isKindOfClass:[OrgSpongycastlePqcMathLinearalgebraGF2mField class]])) {
    return false;
  }
  OrgSpongycastlePqcMathLinearalgebraGF2mField *otherField = (OrgSpongycastlePqcMathLinearalgebraGF2mField *) cast_chk(other, [OrgSpongycastlePqcMathLinearalgebraGF2mField class]);
  if ((degree_ == ((OrgSpongycastlePqcMathLinearalgebraGF2mField *) nil_chk(otherField))->degree_) && (polynomial_ == otherField->polynomial_)) {
    return true;
  }
  return false;
}

- (NSUInteger)hash {
  return polynomial_;
}

- (NSString *)description {
  NSString *str = JreStrcat("$I$$$", @"Finite Field GF(2^", degree_, @") = GF(2)[X]/<", OrgSpongycastlePqcMathLinearalgebraGF2mField_polyToStringWithInt_(polynomial_), @"> ");
  return str;
}

+ (NSString *)polyToStringWithInt:(jint)p {
  return OrgSpongycastlePqcMathLinearalgebraGF2mField_polyToStringWithInt_(p);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 18, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithInt:withInt:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(initWithOrgSpongycastlePqcMathLinearalgebraGF2mField:);
  methods[4].selector = @selector(getDegree);
  methods[5].selector = @selector(getPolynomial);
  methods[6].selector = @selector(getEncoded);
  methods[7].selector = @selector(addWithInt:withInt:);
  methods[8].selector = @selector(multWithInt:withInt:);
  methods[9].selector = @selector(expWithInt:withInt:);
  methods[10].selector = @selector(inverseWithInt:);
  methods[11].selector = @selector(sqRootWithInt:);
  methods[12].selector = @selector(getRandomElementWithJavaSecuritySecureRandom:);
  methods[13].selector = @selector(getRandomNonZeroElement);
  methods[14].selector = @selector(getRandomNonZeroElementWithJavaSecuritySecureRandom:);
  methods[15].selector = @selector(isElementOfThisFieldWithInt:);
  methods[16].selector = @selector(elementToStrWithInt:);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(hash);
  methods[19].selector = @selector(description);
  methods[20].selector = @selector(polyToStringWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "degree_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "polynomial_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "II", "[B", "LOrgSpongycastlePqcMathLinearalgebraGF2mField;", "add", "mult", "exp", "inverse", "sqRoot", "getRandomElement", "LJavaSecuritySecureRandom;", "getRandomNonZeroElement", "isElementOfThisField", "elementToStr", "equals", "LNSObject;", "hashCode", "toString", "polyToString" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcMathLinearalgebraGF2mField = { "GF2mField", "org.spongycastle.pqc.math.linearalgebra", ptrTable, methods, fields, 7, 0x1, 21, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcMathLinearalgebraGF2mField;
}

@end

void OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_(OrgSpongycastlePqcMathLinearalgebraGF2mField *self, jint degree) {
  NSObject_init(self);
  self->degree_ = 0;
  if (degree >= 32) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@" Error: the degree of field is too large ");
  }
  if (degree < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@" Error: the degree of field is non-positive ");
  }
  self->degree_ = degree;
  self->polynomial_ = OrgSpongycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(degree);
}

OrgSpongycastlePqcMathLinearalgebraGF2mField *new_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_(jint degree) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathLinearalgebraGF2mField, initWithInt_, degree)
}

OrgSpongycastlePqcMathLinearalgebraGF2mField *create_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_(jint degree) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathLinearalgebraGF2mField, initWithInt_, degree)
}

void OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(OrgSpongycastlePqcMathLinearalgebraGF2mField *self, jint degree, jint poly) {
  NSObject_init(self);
  self->degree_ = 0;
  if (degree != OrgSpongycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(poly)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@" Error: the degree is not correct");
  }
  if (!OrgSpongycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(poly)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@" Error: given polynomial is reducible");
  }
  self->degree_ = degree;
  self->polynomial_ = poly;
}

OrgSpongycastlePqcMathLinearalgebraGF2mField *new_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(jint degree, jint poly) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathLinearalgebraGF2mField, initWithInt_withInt_, degree, poly)
}

OrgSpongycastlePqcMathLinearalgebraGF2mField *create_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(jint degree, jint poly) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathLinearalgebraGF2mField, initWithInt_withInt_, degree, poly)
}

void OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithByteArray_(OrgSpongycastlePqcMathLinearalgebraGF2mField *self, IOSByteArray *enc) {
  NSObject_init(self);
  self->degree_ = 0;
  if (((IOSByteArray *) nil_chk(enc))->size_ != 4) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"byte array is not an encoded finite field");
  }
  self->polynomial_ = OrgSpongycastlePqcMathLinearalgebraLittleEndianConversions_OS2IPWithByteArray_(enc);
  if (!OrgSpongycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(self->polynomial_)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"byte array is not an encoded finite field");
  }
  self->degree_ = OrgSpongycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(self->polynomial_);
}

OrgSpongycastlePqcMathLinearalgebraGF2mField *new_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithByteArray_(IOSByteArray *enc) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathLinearalgebraGF2mField, initWithByteArray_, enc)
}

OrgSpongycastlePqcMathLinearalgebraGF2mField *create_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithByteArray_(IOSByteArray *enc) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathLinearalgebraGF2mField, initWithByteArray_, enc)
}

void OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithOrgSpongycastlePqcMathLinearalgebraGF2mField_(OrgSpongycastlePqcMathLinearalgebraGF2mField *self, OrgSpongycastlePqcMathLinearalgebraGF2mField *field) {
  NSObject_init(self);
  self->degree_ = 0;
  self->degree_ = ((OrgSpongycastlePqcMathLinearalgebraGF2mField *) nil_chk(field))->degree_;
  self->polynomial_ = field->polynomial_;
}

OrgSpongycastlePqcMathLinearalgebraGF2mField *new_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithOrgSpongycastlePqcMathLinearalgebraGF2mField_(OrgSpongycastlePqcMathLinearalgebraGF2mField *field) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcMathLinearalgebraGF2mField, initWithOrgSpongycastlePqcMathLinearalgebraGF2mField_, field)
}

OrgSpongycastlePqcMathLinearalgebraGF2mField *create_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithOrgSpongycastlePqcMathLinearalgebraGF2mField_(OrgSpongycastlePqcMathLinearalgebraGF2mField *field) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcMathLinearalgebraGF2mField, initWithOrgSpongycastlePqcMathLinearalgebraGF2mField_, field)
}

NSString *OrgSpongycastlePqcMathLinearalgebraGF2mField_polyToStringWithInt_(jint p) {
  OrgSpongycastlePqcMathLinearalgebraGF2mField_initialize();
  NSString *str = @"";
  if (p == 0) {
    str = @"0";
  }
  else {
    jbyte b = (jbyte) (p & (jint) 0x01);
    if (b == 1) {
      str = @"1";
    }
    JreURShiftAssignInt(&p, 1);
    jint i = 1;
    while (p != 0) {
      b = (jbyte) (p & (jint) 0x01);
      if (b == 1) {
        str = JreStrcat("$$I", str, @"+x^", i);
      }
      JreURShiftAssignInt(&p, 1);
      i++;
    }
  }
  return str;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcMathLinearalgebraGF2mField)
