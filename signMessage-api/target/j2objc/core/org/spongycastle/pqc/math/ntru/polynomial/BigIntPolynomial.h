//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial")
#ifdef RESTRICT_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial
#define INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial 1
#endif
#undef RESTRICT_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial

#if !defined (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_) && (INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial || defined(INCLUDE_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial))
#define OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_

@class IOSObjectArray;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;
@class OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial;
@class OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;

@interface OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial : NSObject {
 @public
  IOSObjectArray *coeffs_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)p;

- (void)addWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)b;

- (id)java_clone;

- (OrgSpongycastlePqcMathNtruPolynomialBigDecimalPolynomial *)divWithJavaMathBigDecimal:(JavaMathBigDecimal *)divisor
                                                                                withInt:(jint)decimalPlaces;

- (void)divWithJavaMathBigInteger:(JavaMathBigInteger *)divisor;

- (jboolean)isEqual:(id)obj;

- (IOSObjectArray *)getCoeffs;

- (jint)getMaxCoeffLength;

- (NSUInteger)hash;

- (void)modWithJavaMathBigInteger:(JavaMathBigInteger *)modulus;

- (void)multWithJavaMathBigInteger:(JavaMathBigInteger *)factor;

- (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)multWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)poly2;

- (void)subWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)b;

#pragma mark Package-Private

- (instancetype)initWithJavaMathBigIntegerArray:(IOSObjectArray *)coeffs;

- (instancetype)initWithInt:(jint)N;

- (void)addWithOrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)b
                                             withJavaMathBigInteger:(JavaMathBigInteger *)modulus;

+ (OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *)generateRandomSmallWithInt:(jint)N
                                                                             withInt:(jint)numOnes
                                                                             withInt:(jint)numNegOnes;

- (void)multWithInt:(jint)factor;

- (JavaMathBigInteger *)sumCoeffs;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial)

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial, coeffs_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithInt_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *self, jint N);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithInt_(jint N) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithInt_(jint N);

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithJavaMathBigIntegerArray_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *self, IOSObjectArray *coeffs);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithJavaMathBigIntegerArray_(IOSObjectArray *coeffs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithJavaMathBigIntegerArray_(IOSObjectArray *coeffs);

FOUNDATION_EXPORT void OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *self, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *p);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *new_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *create_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_initWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *p);

FOUNDATION_EXPORT OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial *OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial_generateRandomSmallWithInt_withInt_withInt_(jint N, jint numOnes, jint numNegOnes);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcMathNtruPolynomialBigIntPolynomial")
