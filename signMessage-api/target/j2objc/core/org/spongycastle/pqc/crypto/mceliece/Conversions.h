//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/mceliece/Conversions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoMcelieceConversions")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoMcelieceConversions
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoMcelieceConversions 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoMcelieceConversions 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoMcelieceConversions

#if !defined (OrgSpongycastlePqcCryptoMcelieceConversions_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoMcelieceConversions || defined(INCLUDE_OrgSpongycastlePqcCryptoMcelieceConversions))
#define OrgSpongycastlePqcCryptoMcelieceConversions_

@class IOSByteArray;
@class OrgSpongycastlePqcMathLinearalgebraGF2Vector;

@interface OrgSpongycastlePqcCryptoMcelieceConversions : NSObject

#pragma mark Public

+ (IOSByteArray *)decodeWithInt:(jint)n
                        withInt:(jint)t
withOrgSpongycastlePqcMathLinearalgebraGF2Vector:(OrgSpongycastlePqcMathLinearalgebraGF2Vector *)vec;

+ (OrgSpongycastlePqcMathLinearalgebraGF2Vector *)encodeWithInt:(jint)n
                                                        withInt:(jint)t
                                                  withByteArray:(IOSByteArray *)m;

+ (IOSByteArray *)signConversionWithInt:(jint)n
                                withInt:(jint)t
                          withByteArray:(IOSByteArray *)m;

@end

J2OBJC_STATIC_INIT(OrgSpongycastlePqcCryptoMcelieceConversions)

FOUNDATION_EXPORT OrgSpongycastlePqcMathLinearalgebraGF2Vector *OrgSpongycastlePqcCryptoMcelieceConversions_encodeWithInt_withInt_withByteArray_(jint n, jint t, IOSByteArray *m);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcCryptoMcelieceConversions_decodeWithInt_withInt_withOrgSpongycastlePqcMathLinearalgebraGF2Vector_(jint n, jint t, OrgSpongycastlePqcMathLinearalgebraGF2Vector *vec);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastlePqcCryptoMcelieceConversions_signConversionWithInt_withInt_withByteArray_(jint n, jint t, IOSByteArray *m);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoMcelieceConversions)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoMcelieceConversions")
