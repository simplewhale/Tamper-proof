//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/xmss/BDS.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoXmssBDS")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoXmssBDS
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoXmssBDS 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoXmssBDS 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoXmssBDS

#if !defined (OrgSpongycastlePqcCryptoXmssBDS_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoXmssBDS || defined(INCLUDE_OrgSpongycastlePqcCryptoXmssBDS))
#define OrgSpongycastlePqcCryptoXmssBDS_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSByteArray;
@class OrgSpongycastlePqcCryptoXmssOTSHashAddress;
@class OrgSpongycastlePqcCryptoXmssXMSSNode;
@class OrgSpongycastlePqcCryptoXmssXMSSParameters;
@protocol JavaUtilList;

@interface OrgSpongycastlePqcCryptoXmssBDS : NSObject < JavaIoSerializable >

#pragma mark Public

- (OrgSpongycastlePqcCryptoXmssBDS *)getNextStateWithByteArray:(IOSByteArray *)publicSeed
                                                 withByteArray:(IOSByteArray *)secretKeySeed
                withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

#pragma mark Protected

- (id<JavaUtilList>)getAuthenticationPath;

- (jint)getIndex;

- (OrgSpongycastlePqcCryptoXmssXMSSNode *)getRoot;

- (jint)getTreeHeight;

- (void)setXMSSWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)xmss;

- (void)validate;

#pragma mark Package-Private

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params
                                                     withByteArray:(IOSByteArray *)publicSeed
                                                     withByteArray:(IOSByteArray *)secretKeySeed
                    withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params
                                                     withByteArray:(IOSByteArray *)publicSeed
                                                     withByteArray:(IOSByteArray *)secretKeySeed
                    withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress
                                                           withInt:(jint)index;

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params
                                                           withInt:(jint)index;

- (jboolean)isUsed;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcCryptoXmssBDS)

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params, jint index);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, jint index);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoXmssBDS)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoXmssBDS")
