//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/newhope/ErrorCorrection.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoNewhopeErrorCorrection")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoNewhopeErrorCorrection
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoNewhopeErrorCorrection 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoNewhopeErrorCorrection 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoNewhopeErrorCorrection

#if !defined (OrgSpongycastlePqcCryptoNewhopeErrorCorrection_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoNewhopeErrorCorrection || defined(INCLUDE_OrgSpongycastlePqcCryptoNewhopeErrorCorrection))
#define OrgSpongycastlePqcCryptoNewhopeErrorCorrection_

@class IOSByteArray;
@class IOSIntArray;
@class IOSShortArray;

@interface OrgSpongycastlePqcCryptoNewhopeErrorCorrection : NSObject

#pragma mark Package-Private

- (instancetype)init;

+ (jint)absWithInt:(jint)v;

+ (jint)fWithIntArray:(IOSIntArray *)v
              withInt:(jint)off0
              withInt:(jint)off1
              withInt:(jint)x;

+ (jint)gWithInt:(jint)x;

+ (void)helpRecWithShortArray:(IOSShortArray *)c
               withShortArray:(IOSShortArray *)v
                withByteArray:(IOSByteArray *)seed
                     withByte:(jbyte)nonce;

+ (jshort)LDDecodeWithInt:(jint)xi0
                  withInt:(jint)xi1
                  withInt:(jint)xi2
                  withInt:(jint)xi3;

+ (void)recWithByteArray:(IOSByteArray *)key
          withShortArray:(IOSShortArray *)v
          withShortArray:(IOSShortArray *)c;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcCryptoNewhopeErrorCorrection)

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoNewhopeErrorCorrection_init(OrgSpongycastlePqcCryptoNewhopeErrorCorrection *self);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoNewhopeErrorCorrection *new_OrgSpongycastlePqcCryptoNewhopeErrorCorrection_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoNewhopeErrorCorrection *create_OrgSpongycastlePqcCryptoNewhopeErrorCorrection_init(void);

FOUNDATION_EXPORT jint OrgSpongycastlePqcCryptoNewhopeErrorCorrection_absWithInt_(jint v);

FOUNDATION_EXPORT jint OrgSpongycastlePqcCryptoNewhopeErrorCorrection_fWithIntArray_withInt_withInt_withInt_(IOSIntArray *v, jint off0, jint off1, jint x);

FOUNDATION_EXPORT jint OrgSpongycastlePqcCryptoNewhopeErrorCorrection_gWithInt_(jint x);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoNewhopeErrorCorrection_helpRecWithShortArray_withShortArray_withByteArray_withByte_(IOSShortArray *c, IOSShortArray *v, IOSByteArray *seed, jbyte nonce);

FOUNDATION_EXPORT jshort OrgSpongycastlePqcCryptoNewhopeErrorCorrection_LDDecodeWithInt_withInt_withInt_withInt_(jint xi0, jint xi1, jint xi2, jint xi3);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoNewhopeErrorCorrection_recWithByteArray_withShortArray_withShortArray_(IOSByteArray *key, IOSShortArray *v, IOSShortArray *c);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoNewhopeErrorCorrection)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoNewhopeErrorCorrection")
