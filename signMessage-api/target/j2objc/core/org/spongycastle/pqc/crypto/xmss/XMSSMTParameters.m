//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/xmss/XMSSMTParameters.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/pqc/crypto/xmss/DefaultXMSSMTOid.h"
#include "org/spongycastle/pqc/crypto/xmss/WOTSPlus.h"
#include "org/spongycastle/pqc/crypto/xmss/WOTSPlusParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSMTParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSOid.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSParameters.h"

@interface OrgSpongycastlePqcCryptoXmssXMSSMTParameters () {
 @public
  id<OrgSpongycastlePqcCryptoXmssXMSSOid> oid_;
  OrgSpongycastlePqcCryptoXmssXMSSParameters *xmssParams_;
  jint height_;
  jint layers_;
}

+ (jint)xmssTreeHeightWithInt:(jint)height
                      withInt:(jint)layers;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSMTParameters, oid_, id<OrgSpongycastlePqcCryptoXmssXMSSOid>)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSMTParameters, xmssParams_, OrgSpongycastlePqcCryptoXmssXMSSParameters *)

__attribute__((unused)) static jint OrgSpongycastlePqcCryptoXmssXMSSMTParameters_xmssTreeHeightWithInt_withInt_(jint height, jint layers);

@implementation OrgSpongycastlePqcCryptoXmssXMSSMTParameters

- (instancetype)initWithInt:(jint)height
                    withInt:(jint)layers
withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest {
  OrgSpongycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withOrgSpongycastleCryptoDigest_(self, height, layers, digest);
  return self;
}

+ (jint)xmssTreeHeightWithInt:(jint)height
                      withInt:(jint)layers {
  return OrgSpongycastlePqcCryptoXmssXMSSMTParameters_xmssTreeHeightWithInt_withInt_(height, layers);
}

- (jint)getHeight {
  return height_;
}

- (jint)getLayers {
  return layers_;
}

- (OrgSpongycastlePqcCryptoXmssXMSSParameters *)getXMSSParameters {
  return xmssParams_;
}

- (OrgSpongycastlePqcCryptoXmssWOTSPlus *)getWOTSPlus {
  return [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(xmssParams_)) getWOTSPlus];
}

- (id<OrgSpongycastleCryptoDigest>)getDigest {
  return [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(xmssParams_)) getDigest];
}

- (jint)getDigestSize {
  return [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(xmssParams_)) getDigestSize];
}

- (jint)getWinternitzParameter {
  return [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(xmssParams_)) getWinternitzParameter];
}

- (jint)getLen {
  return [((OrgSpongycastlePqcCryptoXmssWOTSPlusParameters *) nil_chk([((OrgSpongycastlePqcCryptoXmssWOTSPlus *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(xmssParams_)) getWOTSPlus])) getParams])) getLen];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 1, 2, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssWOTSPlus;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoDigest;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withOrgSpongycastleCryptoDigest:);
  methods[1].selector = @selector(xmssTreeHeightWithInt:withInt:);
  methods[2].selector = @selector(getHeight);
  methods[3].selector = @selector(getLayers);
  methods[4].selector = @selector(getXMSSParameters);
  methods[5].selector = @selector(getWOTSPlus);
  methods[6].selector = @selector(getDigest);
  methods[7].selector = @selector(getDigestSize);
  methods[8].selector = @selector(getWinternitzParameter);
  methods[9].selector = @selector(getLen);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "oid_", "LOrgSpongycastlePqcCryptoXmssXMSSOid;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "xmssParams_", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "height_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "layers_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IILOrgSpongycastleCryptoDigest;", "xmssTreeHeight", "II", "LJavaLangIllegalArgumentException;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoXmssXMSSMTParameters = { "XMSSMTParameters", "org.spongycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 10, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoXmssXMSSMTParameters;
}

@end

void OrgSpongycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withOrgSpongycastleCryptoDigest_(OrgSpongycastlePqcCryptoXmssXMSSMTParameters *self, jint height, jint layers, id<OrgSpongycastleCryptoDigest> digest) {
  NSObject_init(self);
  self->height_ = height;
  self->layers_ = layers;
  self->xmssParams_ = new_OrgSpongycastlePqcCryptoXmssXMSSParameters_initWithInt_withOrgSpongycastleCryptoDigest_(OrgSpongycastlePqcCryptoXmssXMSSMTParameters_xmssTreeHeightWithInt_withInt_(height, layers), digest);
  self->oid_ = OrgSpongycastlePqcCryptoXmssDefaultXMSSMTOid_lookupWithNSString_withInt_withInt_withInt_withInt_withInt_([((id<OrgSpongycastleCryptoDigest>) nil_chk([self getDigest])) getAlgorithmName], [self getDigestSize], [self getWinternitzParameter], [self getLen], [self getHeight], layers);
}

OrgSpongycastlePqcCryptoXmssXMSSMTParameters *new_OrgSpongycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withOrgSpongycastleCryptoDigest_(jint height, jint layers, id<OrgSpongycastleCryptoDigest> digest) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssXMSSMTParameters, initWithInt_withInt_withOrgSpongycastleCryptoDigest_, height, layers, digest)
}

OrgSpongycastlePqcCryptoXmssXMSSMTParameters *create_OrgSpongycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withOrgSpongycastleCryptoDigest_(jint height, jint layers, id<OrgSpongycastleCryptoDigest> digest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssXMSSMTParameters, initWithInt_withInt_withOrgSpongycastleCryptoDigest_, height, layers, digest)
}

jint OrgSpongycastlePqcCryptoXmssXMSSMTParameters_xmssTreeHeightWithInt_withInt_(jint height, jint layers) {
  OrgSpongycastlePqcCryptoXmssXMSSMTParameters_initialize();
  if (height < 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"totalHeight must be > 1");
  }
  if (height % layers != 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"layers must divide totalHeight without remainder");
  }
  if (height / layers == 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"height / layers must be greater than 1");
  }
  return height / layers;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoXmssXMSSMTParameters)
