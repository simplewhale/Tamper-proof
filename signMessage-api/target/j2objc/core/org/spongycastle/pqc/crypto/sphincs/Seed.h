//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/sphincs/Seed.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsSeed")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoSphincsSeed
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsSeed 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsSeed 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoSphincsSeed

#if !defined (OrgSpongycastlePqcCryptoSphincsSeed_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsSeed || defined(INCLUDE_OrgSpongycastlePqcCryptoSphincsSeed))
#define OrgSpongycastlePqcCryptoSphincsSeed_

@class IOSByteArray;
@class OrgSpongycastlePqcCryptoSphincsHashFunctions;
@class OrgSpongycastlePqcCryptoSphincsTree_leafaddr;

@interface OrgSpongycastlePqcCryptoSphincsSeed : NSObject

#pragma mark Package-Private

- (instancetype)init;

+ (void)get_seedWithOrgSpongycastlePqcCryptoSphincsHashFunctions:(OrgSpongycastlePqcCryptoSphincsHashFunctions *)hs
                                                   withByteArray:(IOSByteArray *)seed
                                                         withInt:(jint)seedOff
                                                   withByteArray:(IOSByteArray *)sk
                withOrgSpongycastlePqcCryptoSphincsTree_leafaddr:(OrgSpongycastlePqcCryptoSphincsTree_leafaddr *)a;

+ (void)prgWithByteArray:(IOSByteArray *)r
                 withInt:(jint)rOff
                withLong:(jlong)rlen
           withByteArray:(IOSByteArray *)key
                 withInt:(jint)keyOff;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcCryptoSphincsSeed)

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsSeed_init(OrgSpongycastlePqcCryptoSphincsSeed *self);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoSphincsSeed *new_OrgSpongycastlePqcCryptoSphincsSeed_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoSphincsSeed *create_OrgSpongycastlePqcCryptoSphincsSeed_init(void);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsSeed_get_seedWithOrgSpongycastlePqcCryptoSphincsHashFunctions_withByteArray_withInt_withByteArray_withOrgSpongycastlePqcCryptoSphincsTree_leafaddr_(OrgSpongycastlePqcCryptoSphincsHashFunctions *hs, IOSByteArray *seed, jint seedOff, IOSByteArray *sk, OrgSpongycastlePqcCryptoSphincsTree_leafaddr *a);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsSeed_prgWithByteArray_withInt_withLong_withByteArray_withInt_(IOSByteArray *r, jint rOff, jlong rlen, IOSByteArray *key, jint keyOff);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoSphincsSeed)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsSeed")
