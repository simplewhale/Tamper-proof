//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/gmss/util/WinternitzOTSVerify.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify

#if !defined (OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify || defined(INCLUDE_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify))
#define OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify_

@class IOSByteArray;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify : NSObject

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                            withInt:(jint)w;

- (jint)getLogWithInt:(jint)intValue;

- (jint)getSignatureLength;

- (IOSByteArray *)VerifyWithByteArray:(IOSByteArray *)message
                        withByteArray:(IOSByteArray *)signature;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify)

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify_initWithOrgSpongycastleCryptoDigest_withInt_(OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify *self, id<OrgSpongycastleCryptoDigest> digest, jint w);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify *new_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify_initWithOrgSpongycastleCryptoDigest_withInt_(id<OrgSpongycastleCryptoDigest> digest, jint w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify *create_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify_initWithOrgSpongycastleCryptoDigest_withInt_(id<OrgSpongycastleCryptoDigest> digest, jint w);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSVerify")
