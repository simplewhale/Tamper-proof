//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/sphincs/SPHINCS256KeyGenerationParameters.java
//

#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/pqc/crypto/sphincs/SPHINCS256Config.h"
#include "org/spongycastle/pqc/crypto/sphincs/SPHINCS256KeyGenerationParameters.h"

@interface OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters () {
 @public
  id<OrgSpongycastleCryptoDigest> treeDigest_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters, treeDigest_, id<OrgSpongycastleCryptoDigest>)

@implementation OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                 withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)treeDigest {
  OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoDigest_(self, random, treeDigest);
  return self;
}

- (id<OrgSpongycastleCryptoDigest>)getTreeDigest {
  return treeDigest_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoDigest;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:withOrgSpongycastleCryptoDigest:);
  methods[1].selector = @selector(getTreeDigest);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "treeDigest_", "LOrgSpongycastleCryptoDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;LOrgSpongycastleCryptoDigest;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters = { "SPHINCS256KeyGenerationParameters", "org.spongycastle.pqc.crypto.sphincs", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters;
}

@end

void OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoDigest_(OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters *self, JavaSecuritySecureRandom *random, id<OrgSpongycastleCryptoDigest> treeDigest) {
  OrgSpongycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(self, random, OrgSpongycastlePqcCryptoSphincsSPHINCS256Config_CRYPTO_PUBLICKEYBYTES * 8);
  self->treeDigest_ = treeDigest;
}

OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters *new_OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoDigest_(JavaSecuritySecureRandom *random, id<OrgSpongycastleCryptoDigest> treeDigest) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters, initWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoDigest_, random, treeDigest)
}

OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters *create_OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoDigest_(JavaSecuritySecureRandom *random, id<OrgSpongycastleCryptoDigest> treeDigest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters, initWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoDigest_, random, treeDigest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters)
