//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/newhope/NHKeyPairGenerator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/pqc/crypto/newhope/NHKeyPairGenerator.h"
#include "org/spongycastle/pqc/crypto/newhope/NHPrivateKeyParameters.h"
#include "org/spongycastle/pqc/crypto/newhope/NHPublicKeyParameters.h"
#include "org/spongycastle/pqc/crypto/newhope/NewHope.h"

@interface OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator () {
 @public
  JavaSecuritySecureRandom *random_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator, random_, JavaSecuritySecureRandom *)

@implementation OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param {
  self->random_ = [((OrgSpongycastleCryptoKeyGenerationParameters *) nil_chk(param)) getRandom];
}

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair {
  IOSByteArray *pubData = [IOSByteArray newArrayWithLength:OrgSpongycastlePqcCryptoNewhopeNewHope_SENDA_BYTES];
  IOSShortArray *secData = [IOSShortArray newArrayWithLength:OrgSpongycastlePqcCryptoNewhopeNewHope_POLY_SIZE];
  OrgSpongycastlePqcCryptoNewhopeNewHope_keygenWithJavaSecuritySecureRandom_withByteArray_withShortArray_(random_, pubData, secData);
  return new_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(new_OrgSpongycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_(pubData), new_OrgSpongycastlePqcCryptoNewhopeNHPrivateKeyParameters_initWithShortArray_(secData));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoKeyGenerationParameters:);
  methods[2].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoKeyGenerationParameters;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator = { "NHKeyPairGenerator", "org.spongycastle.pqc.crypto.newhope", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator;
}

@end

void OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator_init(OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator *self) {
  NSObject_init(self);
}

OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator *new_OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator, init)
}

OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator *create_OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoNewhopeNHKeyPairGenerator)
