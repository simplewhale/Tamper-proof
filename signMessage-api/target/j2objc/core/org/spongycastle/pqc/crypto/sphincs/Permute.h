//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/sphincs/Permute.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsPermute")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoSphincsPermute
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsPermute 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsPermute 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoSphincsPermute

#if !defined (OrgSpongycastlePqcCryptoSphincsPermute_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsPermute || defined(INCLUDE_OrgSpongycastlePqcCryptoSphincsPermute))
#define OrgSpongycastlePqcCryptoSphincsPermute_

@class IOSByteArray;
@class IOSIntArray;

@interface OrgSpongycastlePqcCryptoSphincsPermute : NSObject

#pragma mark Public

+ (void)permuteWithInt:(jint)rounds
          withIntArray:(IOSIntArray *)x;

#pragma mark Protected

+ (jint)rotlWithInt:(jint)x
            withInt:(jint)y;

#pragma mark Package-Private

- (instancetype)init;

- (void)chacha_permuteWithByteArray:(IOSByteArray *)outArg
                      withByteArray:(IOSByteArray *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcCryptoSphincsPermute)

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsPermute_init(OrgSpongycastlePqcCryptoSphincsPermute *self);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoSphincsPermute *new_OrgSpongycastlePqcCryptoSphincsPermute_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoSphincsPermute *create_OrgSpongycastlePqcCryptoSphincsPermute_init(void);

FOUNDATION_EXPORT jint OrgSpongycastlePqcCryptoSphincsPermute_rotlWithInt_withInt_(jint x, jint y);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsPermute_permuteWithInt_withIntArray_(jint rounds, IOSIntArray *x);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoSphincsPermute)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsPermute")
