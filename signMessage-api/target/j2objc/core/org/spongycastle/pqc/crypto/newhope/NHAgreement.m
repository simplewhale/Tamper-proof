//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/newhope/NHAgreement.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/pqc/crypto/newhope/NHAgreement.h"
#include "org/spongycastle/pqc/crypto/newhope/NHPrivateKeyParameters.h"
#include "org/spongycastle/pqc/crypto/newhope/NHPublicKeyParameters.h"
#include "org/spongycastle/pqc/crypto/newhope/NewHope.h"

@interface OrgSpongycastlePqcCryptoNewhopeNHAgreement () {
 @public
  OrgSpongycastlePqcCryptoNewhopeNHPrivateKeyParameters *privKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoNewhopeNHAgreement, privKey_, OrgSpongycastlePqcCryptoNewhopeNHPrivateKeyParameters *)

@implementation OrgSpongycastlePqcCryptoNewhopeNHAgreement

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastlePqcCryptoNewhopeNHAgreement_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param {
  privKey_ = (OrgSpongycastlePqcCryptoNewhopeNHPrivateKeyParameters *) cast_chk(param, [OrgSpongycastlePqcCryptoNewhopeNHPrivateKeyParameters class]);
}

- (IOSByteArray *)calculateAgreementWithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)otherPublicKey {
  OrgSpongycastlePqcCryptoNewhopeNHPublicKeyParameters *pubKey = (OrgSpongycastlePqcCryptoNewhopeNHPublicKeyParameters *) cast_chk(otherPublicKey, [OrgSpongycastlePqcCryptoNewhopeNHPublicKeyParameters class]);
  IOSByteArray *sharedValue = [IOSByteArray newArrayWithLength:OrgSpongycastlePqcCryptoNewhopeNewHope_AGREEMENT_SIZE];
  OrgSpongycastlePqcCryptoNewhopeNewHope_sharedAWithByteArray_withShortArray_withByteArray_(sharedValue, ((OrgSpongycastlePqcCryptoNewhopeNHPrivateKeyParameters *) nil_chk(privKey_))->secData_, ((OrgSpongycastlePqcCryptoNewhopeNHPublicKeyParameters *) nil_chk(pubKey))->pubData_);
  return sharedValue;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(calculateAgreementWithOrgSpongycastleCryptoCipherParameters:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "privKey_", "LOrgSpongycastlePqcCryptoNewhopeNHPrivateKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoCipherParameters;", "calculateAgreement" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoNewhopeNHAgreement = { "NHAgreement", "org.spongycastle.pqc.crypto.newhope", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoNewhopeNHAgreement;
}

@end

void OrgSpongycastlePqcCryptoNewhopeNHAgreement_init(OrgSpongycastlePqcCryptoNewhopeNHAgreement *self) {
  NSObject_init(self);
}

OrgSpongycastlePqcCryptoNewhopeNHAgreement *new_OrgSpongycastlePqcCryptoNewhopeNHAgreement_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoNewhopeNHAgreement, init)
}

OrgSpongycastlePqcCryptoNewhopeNHAgreement *create_OrgSpongycastlePqcCryptoNewhopeNHAgreement_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoNewhopeNHAgreement, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoNewhopeNHAgreement)
