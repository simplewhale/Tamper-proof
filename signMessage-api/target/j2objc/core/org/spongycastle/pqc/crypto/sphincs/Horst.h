//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/sphincs/Horst.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsHorst")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoSphincsHorst
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsHorst 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsHorst 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoSphincsHorst

#if !defined (OrgSpongycastlePqcCryptoSphincsHorst_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsHorst || defined(INCLUDE_OrgSpongycastlePqcCryptoSphincsHorst))
#define OrgSpongycastlePqcCryptoSphincsHorst_

@class IOSByteArray;
@class OrgSpongycastlePqcCryptoSphincsHashFunctions;

@interface OrgSpongycastlePqcCryptoSphincsHorst : NSObject

#pragma mark Package-Private

- (instancetype)init;

+ (void)expand_seedWithByteArray:(IOSByteArray *)outseeds
                   withByteArray:(IOSByteArray *)inseed;

+ (jint)horst_signWithOrgSpongycastlePqcCryptoSphincsHashFunctions:(OrgSpongycastlePqcCryptoSphincsHashFunctions *)hs
                                                     withByteArray:(IOSByteArray *)sig
                                                           withInt:(jint)sigOff
                                                     withByteArray:(IOSByteArray *)pk
                                                     withByteArray:(IOSByteArray *)seed
                                                     withByteArray:(IOSByteArray *)masks
                                                     withByteArray:(IOSByteArray *)m_hash;

+ (jint)horst_verifyWithOrgSpongycastlePqcCryptoSphincsHashFunctions:(OrgSpongycastlePqcCryptoSphincsHashFunctions *)hs
                                                       withByteArray:(IOSByteArray *)pk
                                                       withByteArray:(IOSByteArray *)sig
                                                             withInt:(jint)sigOff
                                                       withByteArray:(IOSByteArray *)masks
                                                       withByteArray:(IOSByteArray *)m_hash;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcCryptoSphincsHorst)

inline jint OrgSpongycastlePqcCryptoSphincsHorst_get_HORST_LOGT(void);
#define OrgSpongycastlePqcCryptoSphincsHorst_HORST_LOGT 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsHorst, HORST_LOGT, jint)

inline jint OrgSpongycastlePqcCryptoSphincsHorst_get_HORST_T(void);
#define OrgSpongycastlePqcCryptoSphincsHorst_HORST_T 65536
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsHorst, HORST_T, jint)

inline jint OrgSpongycastlePqcCryptoSphincsHorst_get_HORST_K(void);
#define OrgSpongycastlePqcCryptoSphincsHorst_HORST_K 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsHorst, HORST_K, jint)

inline jint OrgSpongycastlePqcCryptoSphincsHorst_get_HORST_SKBYTES(void);
#define OrgSpongycastlePqcCryptoSphincsHorst_HORST_SKBYTES 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsHorst, HORST_SKBYTES, jint)

inline jint OrgSpongycastlePqcCryptoSphincsHorst_get_HORST_SIGBYTES(void);
#define OrgSpongycastlePqcCryptoSphincsHorst_HORST_SIGBYTES 13312
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsHorst, HORST_SIGBYTES, jint)

inline jint OrgSpongycastlePqcCryptoSphincsHorst_get_N_MASKS(void);
#define OrgSpongycastlePqcCryptoSphincsHorst_N_MASKS 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsHorst, N_MASKS, jint)

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsHorst_init(OrgSpongycastlePqcCryptoSphincsHorst *self);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoSphincsHorst *new_OrgSpongycastlePqcCryptoSphincsHorst_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoSphincsHorst *create_OrgSpongycastlePqcCryptoSphincsHorst_init(void);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsHorst_expand_seedWithByteArray_withByteArray_(IOSByteArray *outseeds, IOSByteArray *inseed);

FOUNDATION_EXPORT jint OrgSpongycastlePqcCryptoSphincsHorst_horst_signWithOrgSpongycastlePqcCryptoSphincsHashFunctions_withByteArray_withInt_withByteArray_withByteArray_withByteArray_withByteArray_(OrgSpongycastlePqcCryptoSphincsHashFunctions *hs, IOSByteArray *sig, jint sigOff, IOSByteArray *pk, IOSByteArray *seed, IOSByteArray *masks, IOSByteArray *m_hash);

FOUNDATION_EXPORT jint OrgSpongycastlePqcCryptoSphincsHorst_horst_verifyWithOrgSpongycastlePqcCryptoSphincsHashFunctions_withByteArray_withByteArray_withInt_withByteArray_withByteArray_(OrgSpongycastlePqcCryptoSphincsHashFunctions *hs, IOSByteArray *pk, IOSByteArray *sig, jint sigOff, IOSByteArray *masks, IOSByteArray *m_hash);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoSphincsHorst)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsHorst")
