//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/ntru/NTRUEncryptionParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters

#if !defined (OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters || defined(INCLUDE_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters))
#define OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters : NSObject < NSCopying > {
 @public
  jint N_;
  jint q_;
  jint df_;
  jint df1_;
  jint df2_;
  jint df3_;
  jint dr_;
  jint dr1_;
  jint dr2_;
  jint dr3_;
  jint dg_;
  jint llen_;
  jint maxMsgLenBytes_;
  jint db_;
  jint bufferLenBits_;
  jint bufferLenTrits_;
  jint dm0_;
  jint pkLen_;
  jint c_;
  jint minCallsR_;
  jint minCallsMask_;
  jboolean hashSeed_;
  IOSByteArray *oid_;
  jboolean sparse_;
  jboolean fastFp_;
  jint polyType_;
  id<OrgSpongycastleCryptoDigest> hashAlg_;
}

#pragma mark Public

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is;

- (instancetype)initWithInt:(jint)N
                    withInt:(jint)q
                    withInt:(jint)df
                    withInt:(jint)dm0
                    withInt:(jint)db
                    withInt:(jint)c
                    withInt:(jint)minCallsR
                    withInt:(jint)minCallsMask
                withBoolean:(jboolean)hashSeed
              withByteArray:(IOSByteArray *)oid
                withBoolean:(jboolean)sparse
                withBoolean:(jboolean)fastFp
withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)hashAlg;

- (instancetype)initWithInt:(jint)N
                    withInt:(jint)q
                    withInt:(jint)df1
                    withInt:(jint)df2
                    withInt:(jint)df3
                    withInt:(jint)dm0
                    withInt:(jint)db
                    withInt:(jint)c
                    withInt:(jint)minCallsR
                    withInt:(jint)minCallsMask
                withBoolean:(jboolean)hashSeed
              withByteArray:(IOSByteArray *)oid
                withBoolean:(jboolean)sparse
                withBoolean:(jboolean)fastFp
withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)hashAlg;

- (OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *)java_clone;

- (jboolean)isEqual:(id)obj;

- (jint)getMaxMessageLength;

- (NSUInteger)hash;

- (NSString *)description;

- (void)writeToWithJavaIoOutputStream:(JavaIoOutputStream *)os;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters)

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters, oid_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters, hashAlg_, id<OrgSpongycastleCryptoDigest>)

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withOrgSpongycastleCryptoDigest_(OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *self, jint N, jint q, jint df, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<OrgSpongycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *new_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withOrgSpongycastleCryptoDigest_(jint N, jint q, jint df, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<OrgSpongycastleCryptoDigest> hashAlg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *create_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withOrgSpongycastleCryptoDigest_(jint N, jint q, jint df, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<OrgSpongycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withOrgSpongycastleCryptoDigest_(OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *self, jint N, jint q, jint df1, jint df2, jint df3, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<OrgSpongycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *new_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withOrgSpongycastleCryptoDigest_(jint N, jint q, jint df1, jint df2, jint df3, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<OrgSpongycastleCryptoDigest> hashAlg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *create_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withOrgSpongycastleCryptoDigest_(jint N, jint q, jint df1, jint df2, jint df3, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<OrgSpongycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithJavaIoInputStream_(OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *self, JavaIoInputStream *is);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *new_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithJavaIoInputStream_(JavaIoInputStream *is) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters *create_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters_initWithJavaIoInputStream_(JavaIoInputStream *is);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoNtruNTRUEncryptionParameters")
