//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/sphincs/Wots.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsWots")
#ifdef RESTRICT_OrgSpongycastlePqcCryptoSphincsWots
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsWots 0
#else
#define INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsWots 1
#endif
#undef RESTRICT_OrgSpongycastlePqcCryptoSphincsWots

#if !defined (OrgSpongycastlePqcCryptoSphincsWots_) && (INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsWots || defined(INCLUDE_OrgSpongycastlePqcCryptoSphincsWots))
#define OrgSpongycastlePqcCryptoSphincsWots_

@class IOSByteArray;
@class OrgSpongycastlePqcCryptoSphincsHashFunctions;

@interface OrgSpongycastlePqcCryptoSphincsWots : NSObject

#pragma mark Package-Private

- (instancetype)init;

+ (void)expand_seedWithByteArray:(IOSByteArray *)outseeds
                         withInt:(jint)outOff
                   withByteArray:(IOSByteArray *)inseed
                         withInt:(jint)inOff;

+ (void)gen_chainWithOrgSpongycastlePqcCryptoSphincsHashFunctions:(OrgSpongycastlePqcCryptoSphincsHashFunctions *)hs
                                                    withByteArray:(IOSByteArray *)outArg
                                                          withInt:(jint)outOff
                                                    withByteArray:(IOSByteArray *)seed
                                                          withInt:(jint)seedOff
                                                    withByteArray:(IOSByteArray *)masks
                                                          withInt:(jint)masksOff
                                                          withInt:(jint)chainlen;

- (void)wots_pkgenWithOrgSpongycastlePqcCryptoSphincsHashFunctions:(OrgSpongycastlePqcCryptoSphincsHashFunctions *)hs
                                                     withByteArray:(IOSByteArray *)pk
                                                           withInt:(jint)pkOff
                                                     withByteArray:(IOSByteArray *)sk
                                                           withInt:(jint)skOff
                                                     withByteArray:(IOSByteArray *)masks
                                                           withInt:(jint)masksOff;

- (void)wots_signWithOrgSpongycastlePqcCryptoSphincsHashFunctions:(OrgSpongycastlePqcCryptoSphincsHashFunctions *)hs
                                                    withByteArray:(IOSByteArray *)sig
                                                          withInt:(jint)sigOff
                                                    withByteArray:(IOSByteArray *)msg
                                                    withByteArray:(IOSByteArray *)sk
                                                    withByteArray:(IOSByteArray *)masks;

- (void)wots_verifyWithOrgSpongycastlePqcCryptoSphincsHashFunctions:(OrgSpongycastlePqcCryptoSphincsHashFunctions *)hs
                                                      withByteArray:(IOSByteArray *)pk
                                                      withByteArray:(IOSByteArray *)sig
                                                            withInt:(jint)sigOff
                                                      withByteArray:(IOSByteArray *)msg
                                                      withByteArray:(IOSByteArray *)masks;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastlePqcCryptoSphincsWots)

inline jint OrgSpongycastlePqcCryptoSphincsWots_get_WOTS_LOGW(void);
#define OrgSpongycastlePqcCryptoSphincsWots_WOTS_LOGW 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsWots, WOTS_LOGW, jint)

inline jint OrgSpongycastlePqcCryptoSphincsWots_get_WOTS_W(void);
#define OrgSpongycastlePqcCryptoSphincsWots_WOTS_W 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsWots, WOTS_W, jint)

inline jint OrgSpongycastlePqcCryptoSphincsWots_get_WOTS_L1(void);
#define OrgSpongycastlePqcCryptoSphincsWots_WOTS_L1 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsWots, WOTS_L1, jint)

inline jint OrgSpongycastlePqcCryptoSphincsWots_get_WOTS_L(void);
#define OrgSpongycastlePqcCryptoSphincsWots_WOTS_L 67
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsWots, WOTS_L, jint)

inline jint OrgSpongycastlePqcCryptoSphincsWots_get_WOTS_LOG_L(void);
#define OrgSpongycastlePqcCryptoSphincsWots_WOTS_LOG_L 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsWots, WOTS_LOG_L, jint)

inline jint OrgSpongycastlePqcCryptoSphincsWots_get_WOTS_SIGBYTES(void);
#define OrgSpongycastlePqcCryptoSphincsWots_WOTS_SIGBYTES 2144
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoSphincsWots, WOTS_SIGBYTES, jint)

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsWots_init(OrgSpongycastlePqcCryptoSphincsWots *self);

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoSphincsWots *new_OrgSpongycastlePqcCryptoSphincsWots_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastlePqcCryptoSphincsWots *create_OrgSpongycastlePqcCryptoSphincsWots_init(void);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsWots_expand_seedWithByteArray_withInt_withByteArray_withInt_(IOSByteArray *outseeds, jint outOff, IOSByteArray *inseed, jint inOff);

FOUNDATION_EXPORT void OrgSpongycastlePqcCryptoSphincsWots_gen_chainWithOrgSpongycastlePqcCryptoSphincsHashFunctions_withByteArray_withInt_withByteArray_withInt_withByteArray_withInt_withInt_(OrgSpongycastlePqcCryptoSphincsHashFunctions *hs, IOSByteArray *outArg, jint outOff, IOSByteArray *seed, jint seedOff, IOSByteArray *masks, jint masksOff, jint chainlen);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastlePqcCryptoSphincsWots)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastlePqcCryptoSphincsWots")
