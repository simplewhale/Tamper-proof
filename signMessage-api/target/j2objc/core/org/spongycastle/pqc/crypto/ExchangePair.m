//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/ExchangePair.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/pqc/crypto/ExchangePair.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastlePqcCryptoExchangePair () {
 @public
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter *publicKey_;
  IOSByteArray *shared_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoExchangePair, publicKey_, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoExchangePair, shared_, IOSByteArray *)

@implementation OrgSpongycastlePqcCryptoExchangePair

- (instancetype)initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                                                            withByteArray:(IOSByteArray *)shared {
  OrgSpongycastlePqcCryptoExchangePair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(self, publicKey, shared);
  return self;
}

- (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)getPublicKey {
  return publicKey_;
}

- (IOSByteArray *)getSharedValue {
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(shared_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsAsymmetricKeyParameter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:withByteArray:);
  methods[1].selector = @selector(getPublicKey);
  methods[2].selector = @selector(getSharedValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "publicKey_", "LOrgSpongycastleCryptoParamsAsymmetricKeyParameter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "shared_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoParamsAsymmetricKeyParameter;[B" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoExchangePair = { "ExchangePair", "org.spongycastle.pqc.crypto", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoExchangePair;
}

@end

void OrgSpongycastlePqcCryptoExchangePair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(OrgSpongycastlePqcCryptoExchangePair *self, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared) {
  NSObject_init(self);
  self->publicKey_ = publicKey;
  self->shared_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(shared);
}

OrgSpongycastlePqcCryptoExchangePair *new_OrgSpongycastlePqcCryptoExchangePair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoExchangePair, initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withByteArray_, publicKey, shared)
}

OrgSpongycastlePqcCryptoExchangePair *create_OrgSpongycastlePqcCryptoExchangePair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoExchangePair, initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withByteArray_, publicKey, shared)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoExchangePair)
