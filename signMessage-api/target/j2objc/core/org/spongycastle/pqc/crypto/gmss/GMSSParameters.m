//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/gmss/GMSSParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/pqc/crypto/gmss/GMSSParameters.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastlePqcCryptoGmssGMSSParameters () {
 @public
  jint numOfLayers_;
  IOSIntArray *heightOfTrees_;
  IOSIntArray *winternitzParameter_;
  IOSIntArray *K_;
}

- (void)init__WithInt:(jint)layers
         withIntArray:(IOSIntArray *)heightOfTrees
         withIntArray:(IOSIntArray *)winternitzParameter
         withIntArray:(IOSIntArray *)K OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSParameters, heightOfTrees_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSParameters, winternitzParameter_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSParameters, K_, IOSIntArray *)

__attribute__((unused)) static void OrgSpongycastlePqcCryptoGmssGMSSParameters_init__WithInt_withIntArray_withIntArray_withIntArray_(OrgSpongycastlePqcCryptoGmssGMSSParameters *self, jint layers, IOSIntArray *heightOfTrees, IOSIntArray *winternitzParameter, IOSIntArray *K);

@implementation OrgSpongycastlePqcCryptoGmssGMSSParameters

- (instancetype)initWithInt:(jint)layers
               withIntArray:(IOSIntArray *)heightOfTrees
               withIntArray:(IOSIntArray *)winternitzParameter
               withIntArray:(IOSIntArray *)K {
  OrgSpongycastlePqcCryptoGmssGMSSParameters_initWithInt_withIntArray_withIntArray_withIntArray_(self, layers, heightOfTrees, winternitzParameter, K);
  return self;
}

- (void)init__WithInt:(jint)layers
         withIntArray:(IOSIntArray *)heightOfTrees
         withIntArray:(IOSIntArray *)winternitzParameter
         withIntArray:(IOSIntArray *)K {
  OrgSpongycastlePqcCryptoGmssGMSSParameters_init__WithInt_withIntArray_withIntArray_withIntArray_(self, layers, heightOfTrees, winternitzParameter, K);
}

- (instancetype)initWithInt:(jint)keySize {
  OrgSpongycastlePqcCryptoGmssGMSSParameters_initWithInt_(self, keySize);
  return self;
}

- (jint)getNumOfLayers {
  return numOfLayers_;
}

- (IOSIntArray *)getHeightOfTrees {
  return OrgSpongycastleUtilArrays_cloneWithIntArray_(heightOfTrees_);
}

- (IOSIntArray *)getWinternitzParameter {
  return OrgSpongycastleUtilArrays_cloneWithIntArray_(winternitzParameter_);
}

- (IOSIntArray *)getK {
  return OrgSpongycastleUtilArrays_cloneWithIntArray_(K_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withIntArray:withIntArray:withIntArray:);
  methods[1].selector = @selector(init__WithInt:withIntArray:withIntArray:withIntArray:);
  methods[2].selector = @selector(initWithInt:);
  methods[3].selector = @selector(getNumOfLayers);
  methods[4].selector = @selector(getHeightOfTrees);
  methods[5].selector = @selector(getWinternitzParameter);
  methods[6].selector = @selector(getK);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "numOfLayers_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "heightOfTrees_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "winternitzParameter_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "K_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I[I[I[I", "LJavaLangIllegalArgumentException;", "init", "I" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoGmssGMSSParameters = { "GMSSParameters", "org.spongycastle.pqc.crypto.gmss", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoGmssGMSSParameters;
}

@end

void OrgSpongycastlePqcCryptoGmssGMSSParameters_initWithInt_withIntArray_withIntArray_withIntArray_(OrgSpongycastlePqcCryptoGmssGMSSParameters *self, jint layers, IOSIntArray *heightOfTrees, IOSIntArray *winternitzParameter, IOSIntArray *K) {
  NSObject_init(self);
  OrgSpongycastlePqcCryptoGmssGMSSParameters_init__WithInt_withIntArray_withIntArray_withIntArray_(self, layers, heightOfTrees, winternitzParameter, K);
}

OrgSpongycastlePqcCryptoGmssGMSSParameters *new_OrgSpongycastlePqcCryptoGmssGMSSParameters_initWithInt_withIntArray_withIntArray_withIntArray_(jint layers, IOSIntArray *heightOfTrees, IOSIntArray *winternitzParameter, IOSIntArray *K) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoGmssGMSSParameters, initWithInt_withIntArray_withIntArray_withIntArray_, layers, heightOfTrees, winternitzParameter, K)
}

OrgSpongycastlePqcCryptoGmssGMSSParameters *create_OrgSpongycastlePqcCryptoGmssGMSSParameters_initWithInt_withIntArray_withIntArray_withIntArray_(jint layers, IOSIntArray *heightOfTrees, IOSIntArray *winternitzParameter, IOSIntArray *K) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoGmssGMSSParameters, initWithInt_withIntArray_withIntArray_withIntArray_, layers, heightOfTrees, winternitzParameter, K)
}

void OrgSpongycastlePqcCryptoGmssGMSSParameters_init__WithInt_withIntArray_withIntArray_withIntArray_(OrgSpongycastlePqcCryptoGmssGMSSParameters *self, jint layers, IOSIntArray *heightOfTrees, IOSIntArray *winternitzParameter, IOSIntArray *K) {
  jboolean valid = true;
  NSString *errMsg = @"";
  self->numOfLayers_ = layers;
  if ((self->numOfLayers_ != ((IOSIntArray *) nil_chk(winternitzParameter))->size_) || (self->numOfLayers_ != ((IOSIntArray *) nil_chk(heightOfTrees))->size_) || (self->numOfLayers_ != ((IOSIntArray *) nil_chk(K))->size_)) {
    valid = false;
    errMsg = @"Unexpected parameterset format";
  }
  for (jint i = 0; i < self->numOfLayers_; i++) {
    if ((IOSIntArray_Get(nil_chk(K), i) < 2) || ((IOSIntArray_Get(nil_chk(heightOfTrees), i) - IOSIntArray_Get(K, i)) % 2 != 0)) {
      valid = false;
      errMsg = @"Wrong parameter K (K >= 2 and H-K even required)!";
    }
    if ((IOSIntArray_Get(nil_chk(heightOfTrees), i) < 4) || (IOSIntArray_Get(winternitzParameter, i) < 2)) {
      valid = false;
      errMsg = @"Wrong parameter H or w (H > 3 and w > 1 required)!";
    }
  }
  if (valid) {
    self->heightOfTrees_ = OrgSpongycastleUtilArrays_cloneWithIntArray_(heightOfTrees);
    self->winternitzParameter_ = OrgSpongycastleUtilArrays_cloneWithIntArray_(winternitzParameter);
    self->K_ = OrgSpongycastleUtilArrays_cloneWithIntArray_(K);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(errMsg);
  }
}

void OrgSpongycastlePqcCryptoGmssGMSSParameters_initWithInt_(OrgSpongycastlePqcCryptoGmssGMSSParameters *self, jint keySize) {
  NSObject_init(self);
  if (keySize <= 10) {
    IOSIntArray *defh = [IOSIntArray newArrayWithInts:(jint[]){ 10 } count:1];
    IOSIntArray *defw = [IOSIntArray newArrayWithInts:(jint[]){ 3 } count:1];
    IOSIntArray *defk = [IOSIntArray newArrayWithInts:(jint[]){ 2 } count:1];
    OrgSpongycastlePqcCryptoGmssGMSSParameters_init__WithInt_withIntArray_withIntArray_withIntArray_(self, defh->size_, defh, defw, defk);
  }
  else if (keySize <= 20) {
    IOSIntArray *defh = [IOSIntArray newArrayWithInts:(jint[]){ 10, 10 } count:2];
    IOSIntArray *defw = [IOSIntArray newArrayWithInts:(jint[]){ 5, 4 } count:2];
    IOSIntArray *defk = [IOSIntArray newArrayWithInts:(jint[]){ 2, 2 } count:2];
    OrgSpongycastlePqcCryptoGmssGMSSParameters_init__WithInt_withIntArray_withIntArray_withIntArray_(self, defh->size_, defh, defw, defk);
  }
  else {
    IOSIntArray *defh = [IOSIntArray newArrayWithInts:(jint[]){ 10, 10, 10, 10 } count:4];
    IOSIntArray *defw = [IOSIntArray newArrayWithInts:(jint[]){ 9, 9, 9, 3 } count:4];
    IOSIntArray *defk = [IOSIntArray newArrayWithInts:(jint[]){ 2, 2, 2, 2 } count:4];
    OrgSpongycastlePqcCryptoGmssGMSSParameters_init__WithInt_withIntArray_withIntArray_withIntArray_(self, defh->size_, defh, defw, defk);
  }
}

OrgSpongycastlePqcCryptoGmssGMSSParameters *new_OrgSpongycastlePqcCryptoGmssGMSSParameters_initWithInt_(jint keySize) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoGmssGMSSParameters, initWithInt_, keySize)
}

OrgSpongycastlePqcCryptoGmssGMSSParameters *create_OrgSpongycastlePqcCryptoGmssGMSSParameters_initWithInt_(jint keySize) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoGmssGMSSParameters, initWithInt_, keySize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoGmssGMSSParameters)
