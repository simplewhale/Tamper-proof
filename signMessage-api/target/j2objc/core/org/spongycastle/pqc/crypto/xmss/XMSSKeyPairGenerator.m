//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/xmss/XMSSKeyPairGenerator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/BDS.h"
#include "org/spongycastle/pqc/crypto/xmss/OTSHashAddress.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSAddress.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSKeyGenerationParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSKeyPairGenerator.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSNode.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSPublicKeyParameters.h"

@interface OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator () {
 @public
  OrgSpongycastlePqcCryptoXmssXMSSParameters *params_;
  JavaSecuritySecureRandom *prng_;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *)generatePrivateKeyWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params
                                                                                              withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)prng;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator, params_, OrgSpongycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator, prng_, JavaSecuritySecureRandom *)

__attribute__((unused)) static OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator_generatePrivateKeyWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params, JavaSecuritySecureRandom *prng);

@implementation OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param {
  OrgSpongycastlePqcCryptoXmssXMSSKeyGenerationParameters *parameters = (OrgSpongycastlePqcCryptoXmssXMSSKeyGenerationParameters *) cast_chk(param, [OrgSpongycastlePqcCryptoXmssXMSSKeyGenerationParameters class]);
  self->prng_ = [((OrgSpongycastlePqcCryptoXmssXMSSKeyGenerationParameters *) nil_chk(parameters)) getRandom];
  self->params_ = [parameters getParameters];
}

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair {
  OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *privateKey = OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator_generatePrivateKeyWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(self, params_, prng_);
  OrgSpongycastlePqcCryptoXmssXMSSNode *root = [((OrgSpongycastlePqcCryptoXmssBDS *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *) nil_chk(privateKey)) getBDSState])) getRoot];
  privateKey = [((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(params_) withSecretKeySeedWithByteArray:[privateKey getSecretKeySeed]])) withSecretKeyPRFWithByteArray:[privateKey getSecretKeyPRF]])) withPublicSeedWithByteArray:[privateKey getPublicSeed]])) withRootWithByteArray:[((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk(root)) getValue]])) withBDSStateWithOrgSpongycastlePqcCryptoXmssBDS:[privateKey getBDSState]])) build];
  OrgSpongycastlePqcCryptoXmssXMSSPublicKeyParameters *publicKey = [((OrgSpongycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(params_) withRootWithByteArray:[root getValue]])) withPublicSeedWithByteArray:[((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *) nil_chk(privateKey)) getPublicSeed]])) build];
  return new_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(publicKey, privateKey);
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *)generatePrivateKeyWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params
                                                                                              withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)prng {
  return OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator_generatePrivateKeyWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(self, params, prng);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters;", 0x2, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoKeyGenerationParameters:);
  methods[2].selector = @selector(generateKeyPair);
  methods[3].selector = @selector(generatePrivateKeyWithOrgSpongycastlePqcCryptoXmssXMSSParameters:withJavaSecuritySecureRandom:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "prng_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoKeyGenerationParameters;", "generatePrivateKey", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;LJavaSecuritySecureRandom;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator = { "XMSSKeyPairGenerator", "org.spongycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 4, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator;
}

@end

void OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator_init(OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator *self) {
  NSObject_init(self);
}

OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator *new_OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator, init)
}

OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator *create_OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator, init)
}

OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator_generatePrivateKeyWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params, JavaSecuritySecureRandom *prng) {
  jint n = [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(params)) getDigestSize];
  IOSByteArray *secretKeySeed = [IOSByteArray newArrayWithLength:n];
  [((JavaSecuritySecureRandom *) nil_chk(prng)) nextBytesWithByteArray:secretKeySeed];
  IOSByteArray *secretKeyPRF = [IOSByteArray newArrayWithLength:n];
  [prng nextBytesWithByteArray:secretKeyPRF];
  IOSByteArray *publicSeed = [IOSByteArray newArrayWithLength:n];
  [prng nextBytesWithByteArray:publicSeed];
  OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *privateKey = [((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(params) withSecretKeySeedWithByteArray:secretKeySeed])) withSecretKeyPRFWithByteArray:secretKeyPRF])) withPublicSeedWithByteArray:publicSeed])) withBDSStateWithOrgSpongycastlePqcCryptoXmssBDS:new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(params, publicSeed, secretKeySeed, (OrgSpongycastlePqcCryptoXmssOTSHashAddress *) cast_chk([new_OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder_init() build], [OrgSpongycastlePqcCryptoXmssOTSHashAddress class]))])) build];
  return privateKey;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoXmssXMSSKeyPairGenerator)
