//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/pqc/crypto/rainbow/Layer.h"
#include "org/spongycastle/pqc/crypto/rainbow/RainbowKeyGenerationParameters.h"
#include "org/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator.h"
#include "org/spongycastle/pqc/crypto/rainbow/RainbowParameters.h"
#include "org/spongycastle/pqc/crypto/rainbow/RainbowPrivateKeyParameters.h"
#include "org/spongycastle/pqc/crypto/rainbow/RainbowPublicKeyParameters.h"
#include "org/spongycastle/pqc/crypto/rainbow/util/ComputeInField.h"
#include "org/spongycastle/pqc/crypto/rainbow/util/GF2Field.h"

@interface OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator () {
 @public
  jboolean initialized_;
  JavaSecuritySecureRandom *sr_;
  OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters *rainbowParams_;
  IOSObjectArray *A1_;
  IOSObjectArray *A1inv_;
  IOSShortArray *b1_;
  IOSObjectArray *A2_;
  IOSObjectArray *A2inv_;
  IOSShortArray *b2_;
  jint numOfLayers_;
  IOSObjectArray *layers_;
  IOSIntArray *vi_;
  IOSObjectArray *pub_quadratic_;
  IOSObjectArray *pub_singular_;
  IOSShortArray *pub_scalar_;
}

- (void)initializeDefault OBJC_METHOD_FAMILY_NONE;

- (void)keygen;

- (void)generateL1;

- (void)generateL2;

- (void)generateF;

- (void)computePublicKey;

- (void)compactPublicKeyWithShortArray3:(IOSObjectArray *)coeff_quadratic_to_compact;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, sr_, JavaSecuritySecureRandom *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, rainbowParams_, OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, A1_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, A1inv_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, b1_, IOSShortArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, A2_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, A2inv_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, b2_, IOSShortArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, layers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, vi_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, pub_quadratic_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, pub_singular_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, pub_scalar_, IOSShortArray *)

__attribute__((unused)) static void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_initializeDefault(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_keygen(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateL1(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateL2(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateF(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_computePublicKey(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_compactPublicKeyWithShortArray3_(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self, IOSObjectArray *coeff_quadratic_to_compact);

@implementation OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)genKeyPair {
  OrgSpongycastlePqcCryptoRainbowRainbowPrivateKeyParameters *privKey;
  OrgSpongycastlePqcCryptoRainbowRainbowPublicKeyParameters *pubKey;
  if (!initialized_) {
    OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_initializeDefault(self);
  }
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_keygen(self);
  privKey = new_OrgSpongycastlePqcCryptoRainbowRainbowPrivateKeyParameters_initWithShortArray2_withShortArray_withShortArray2_withShortArray_withIntArray_withOrgSpongycastlePqcCryptoRainbowLayerArray_(A1inv_, b1_, A2inv_, b2_, vi_, layers_);
  pubKey = new_OrgSpongycastlePqcCryptoRainbowRainbowPublicKeyParameters_initWithInt_withShortArray2_withShortArray2_withShortArray_(IOSIntArray_Get(vi_, ((IOSIntArray *) nil_chk(vi_))->size_ - 1) - IOSIntArray_Get(vi_, 0), pub_quadratic_, pub_singular_, pub_scalar_);
  return new_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(pubKey, privKey);
}

- (void)initialize__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param {
  self->rainbowParams_ = (OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters *) cast_chk(param, [OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters class]);
  self->sr_ = [((OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters *) nil_chk(rainbowParams_)) getRandom];
  self->vi_ = [((OrgSpongycastlePqcCryptoRainbowRainbowParameters *) nil_chk([((OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters *) nil_chk(self->rainbowParams_)) getParameters])) getVi];
  self->numOfLayers_ = [((OrgSpongycastlePqcCryptoRainbowRainbowParameters *) nil_chk([((OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters *) nil_chk(self->rainbowParams_)) getParameters])) getNumOfLayers];
  self->initialized_ = true;
}

- (void)initializeDefault {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_initializeDefault(self);
}

- (void)keygen {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_keygen(self);
}

- (void)generateL1 {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateL1(self);
}

- (void)generateL2 {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateL2(self);
}

- (void)generateF {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateF(self);
}

- (void)computePublicKey {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_computePublicKey(self);
}

- (void)compactPublicKeyWithShortArray3:(IOSObjectArray *)coeff_quadratic_to_compact {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_compactPublicKeyWithShortArray3_(self, coeff_quadratic_to_compact);
}

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param {
  [self initialize__WithOrgSpongycastleCryptoKeyGenerationParameters:param];
}

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair {
  return [self genKeyPair];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(genKeyPair);
  methods[2].selector = @selector(initialize__WithOrgSpongycastleCryptoKeyGenerationParameters:);
  methods[3].selector = @selector(initializeDefault);
  methods[4].selector = @selector(keygen);
  methods[5].selector = @selector(generateL1);
  methods[6].selector = @selector(generateL2);
  methods[7].selector = @selector(generateF);
  methods[8].selector = @selector(computePublicKey);
  methods[9].selector = @selector(compactPublicKeyWithShortArray3:);
  methods[10].selector = @selector(init__WithOrgSpongycastleCryptoKeyGenerationParameters:);
  methods[11].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "initialized_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sr_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rainbowParams_", "LOrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "A1_", "[[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "A1inv_", "[[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "b1_", "[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "A2_", "[[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "A2inv_", "[[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "b2_", "[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numOfLayers_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "layers_", "[LOrgSpongycastlePqcCryptoRainbowLayer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "vi_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pub_quadratic_", "[[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pub_singular_", "[[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pub_scalar_", "[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LOrgSpongycastleCryptoKeyGenerationParameters;", "compactPublicKey", "[[[S", "init" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator = { "RainbowKeyPairGenerator", "org.spongycastle.pqc.crypto.rainbow", ptrTable, methods, fields, 7, 0x1, 12, 15, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator;
}

@end

void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_init(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self) {
  NSObject_init(self);
  self->initialized_ = false;
}

OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *new_OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, init)
}

OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *create_OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator, init)
}

void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_initializeDefault(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self) {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters *rbKGParams = new_OrgSpongycastlePqcCryptoRainbowRainbowKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgSpongycastlePqcCryptoRainbowRainbowParameters_(new_JavaSecuritySecureRandom_init(), new_OrgSpongycastlePqcCryptoRainbowRainbowParameters_init());
  [self initialize__WithOrgSpongycastleCryptoKeyGenerationParameters:rbKGParams];
}

void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_keygen(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self) {
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateL1(self);
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateL2(self);
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateF(self);
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_computePublicKey(self);
}

void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateL1(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self) {
  jint dim = IOSIntArray_Get(self->vi_, ((IOSIntArray *) nil_chk(self->vi_))->size_ - 1) - IOSIntArray_Get(self->vi_, 0);
  self->A1_ = [IOSShortArray newArrayWithDimensions:2 lengths:(jint[]){ dim, dim }];
  self->A1inv_ = nil;
  OrgSpongycastlePqcCryptoRainbowUtilComputeInField *c = new_OrgSpongycastlePqcCryptoRainbowUtilComputeInField_init();
  while (self->A1inv_ == nil) {
    for (jint i = 0; i < dim; i++) {
      for (jint j = 0; j < dim; j++) {
        *IOSShortArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->A1_), i)), j) = (jshort) ([((JavaSecuritySecureRandom *) nil_chk(self->sr_)) nextInt] & OrgSpongycastlePqcCryptoRainbowUtilGF2Field_MASK);
      }
    }
    self->A1inv_ = [c inverseWithShortArray2:self->A1_];
  }
  self->b1_ = [IOSShortArray newArrayWithLength:dim];
  for (jint i = 0; i < dim; i++) {
    *IOSShortArray_GetRef(nil_chk(self->b1_), i) = (jshort) ([((JavaSecuritySecureRandom *) nil_chk(self->sr_)) nextInt] & OrgSpongycastlePqcCryptoRainbowUtilGF2Field_MASK);
  }
}

void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateL2(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self) {
  jint dim = IOSIntArray_Get(self->vi_, ((IOSIntArray *) nil_chk(self->vi_))->size_ - 1);
  self->A2_ = [IOSShortArray newArrayWithDimensions:2 lengths:(jint[]){ dim, dim }];
  self->A2inv_ = nil;
  OrgSpongycastlePqcCryptoRainbowUtilComputeInField *c = new_OrgSpongycastlePqcCryptoRainbowUtilComputeInField_init();
  while (self->A2inv_ == nil) {
    for (jint i = 0; i < dim; i++) {
      for (jint j = 0; j < dim; j++) {
        *IOSShortArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->A2_), i)), j) = (jshort) ([((JavaSecuritySecureRandom *) nil_chk(self->sr_)) nextInt] & OrgSpongycastlePqcCryptoRainbowUtilGF2Field_MASK);
      }
    }
    self->A2inv_ = [c inverseWithShortArray2:self->A2_];
  }
  self->b2_ = [IOSShortArray newArrayWithLength:dim];
  for (jint i = 0; i < dim; i++) {
    *IOSShortArray_GetRef(nil_chk(self->b2_), i) = (jshort) ([((JavaSecuritySecureRandom *) nil_chk(self->sr_)) nextInt] & OrgSpongycastlePqcCryptoRainbowUtilGF2Field_MASK);
  }
}

void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_generateF(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self) {
  self->layers_ = [IOSObjectArray newArrayWithLength:self->numOfLayers_ type:OrgSpongycastlePqcCryptoRainbowLayer_class_()];
  for (jint i = 0; i < self->numOfLayers_; i++) {
    (void) IOSObjectArray_SetAndConsume(nil_chk(self->layers_), i, new_OrgSpongycastlePqcCryptoRainbowLayer_initWithInt_withInt_withJavaSecuritySecureRandom_(IOSIntArray_Get(nil_chk(self->vi_), i), IOSIntArray_Get(self->vi_, i + 1), self->sr_));
  }
}

void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_computePublicKey(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self) {
  OrgSpongycastlePqcCryptoRainbowUtilComputeInField *c = new_OrgSpongycastlePqcCryptoRainbowUtilComputeInField_init();
  jint rows = IOSIntArray_Get(self->vi_, ((IOSIntArray *) nil_chk(self->vi_))->size_ - 1) - IOSIntArray_Get(self->vi_, 0);
  jint vars = IOSIntArray_Get(self->vi_, self->vi_->size_ - 1);
  IOSObjectArray *coeff_quadratic_3dim = [IOSShortArray newArrayWithDimensions:3 lengths:(jint[]){ rows, vars, vars }];
  self->pub_singular_ = [IOSShortArray newArrayWithDimensions:2 lengths:(jint[]){ rows, vars }];
  self->pub_scalar_ = [IOSShortArray newArrayWithLength:rows];
  IOSObjectArray *coeff_alpha;
  IOSObjectArray *coeff_beta;
  IOSObjectArray *coeff_gamma;
  IOSShortArray *coeff_eta;
  jint oils = 0;
  jint vins = 0;
  jint crnt_row = 0;
  IOSShortArray *vect_tmp = [IOSShortArray newArrayWithLength:vars];
  jshort sclr_tmp = 0;
  for (jint l = 0; l < ((IOSObjectArray *) nil_chk(self->layers_))->size_; l++) {
    coeff_alpha = [((OrgSpongycastlePqcCryptoRainbowLayer *) nil_chk(IOSObjectArray_Get(self->layers_, l))) getCoeffAlpha];
    coeff_beta = [((OrgSpongycastlePqcCryptoRainbowLayer *) nil_chk(IOSObjectArray_Get(nil_chk(self->layers_), l))) getCoeffBeta];
    coeff_gamma = [((OrgSpongycastlePqcCryptoRainbowLayer *) nil_chk(IOSObjectArray_Get(nil_chk(self->layers_), l))) getCoeffGamma];
    coeff_eta = [((OrgSpongycastlePqcCryptoRainbowLayer *) nil_chk(IOSObjectArray_Get(nil_chk(self->layers_), l))) getCoeffEta];
    oils = ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(nil_chk(coeff_alpha), 0)))->size_;
    vins = ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(nil_chk(coeff_beta), 0)))->size_;
    for (jint p = 0; p < oils; p++) {
      for (jint x1 = 0; x1 < oils; x1++) {
        for (jint x2 = 0; x2 < vins; x2++) {
          vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_alpha, p)), x1)), x2) withShortArray:IOSObjectArray_Get(nil_chk(self->A2_), x1 + vins)];
          (void) IOSObjectArray_Set(coeff_quadratic_3dim, crnt_row + p, [c addSquareMatrixWithShortArray2:IOSObjectArray_Get(coeff_quadratic_3dim, crnt_row + p) withShortArray2:[c multVectsWithShortArray:vect_tmp withShortArray:IOSObjectArray_Get(nil_chk(self->A2_), x2)]]);
          vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(self->b2_), x2) withShortArray:vect_tmp];
          (void) IOSObjectArray_Set(nil_chk(self->pub_singular_), crnt_row + p, [c addVectWithShortArray:vect_tmp withShortArray:IOSObjectArray_Get(self->pub_singular_, crnt_row + p)]);
          vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_alpha, p)), x1)), x2) withShortArray:IOSObjectArray_Get(nil_chk(self->A2_), x2)];
          vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(self->b2_), x1 + vins) withShortArray:vect_tmp];
          (void) IOSObjectArray_Set(nil_chk(self->pub_singular_), crnt_row + p, [c addVectWithShortArray:vect_tmp withShortArray:IOSObjectArray_Get(self->pub_singular_, crnt_row + p)]);
          sclr_tmp = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_multElemWithShort_withShort_(IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_alpha, p)), x1)), x2), IOSShortArray_Get(nil_chk(self->b2_), x1 + vins));
          *IOSShortArray_GetRef(nil_chk(self->pub_scalar_), crnt_row + p) = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_addElemWithShort_withShort_(IOSShortArray_Get(self->pub_scalar_, crnt_row + p), OrgSpongycastlePqcCryptoRainbowUtilGF2Field_multElemWithShort_withShort_(sclr_tmp, IOSShortArray_Get(nil_chk(self->b2_), x2)));
        }
      }
      for (jint x1 = 0; x1 < vins; x1++) {
        for (jint x2 = 0; x2 < vins; x2++) {
          vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_beta, p)), x1)), x2) withShortArray:IOSObjectArray_Get(nil_chk(self->A2_), x1)];
          (void) IOSObjectArray_Set(coeff_quadratic_3dim, crnt_row + p, [c addSquareMatrixWithShortArray2:IOSObjectArray_Get(coeff_quadratic_3dim, crnt_row + p) withShortArray2:[c multVectsWithShortArray:vect_tmp withShortArray:IOSObjectArray_Get(nil_chk(self->A2_), x2)]]);
          vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(self->b2_), x2) withShortArray:vect_tmp];
          (void) IOSObjectArray_Set(nil_chk(self->pub_singular_), crnt_row + p, [c addVectWithShortArray:vect_tmp withShortArray:IOSObjectArray_Get(self->pub_singular_, crnt_row + p)]);
          vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_beta, p)), x1)), x2) withShortArray:IOSObjectArray_Get(nil_chk(self->A2_), x2)];
          vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(self->b2_), x1) withShortArray:vect_tmp];
          (void) IOSObjectArray_Set(nil_chk(self->pub_singular_), crnt_row + p, [c addVectWithShortArray:vect_tmp withShortArray:IOSObjectArray_Get(self->pub_singular_, crnt_row + p)]);
          sclr_tmp = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_multElemWithShort_withShort_(IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_beta, p)), x1)), x2), IOSShortArray_Get(nil_chk(self->b2_), x1));
          *IOSShortArray_GetRef(nil_chk(self->pub_scalar_), crnt_row + p) = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_addElemWithShort_withShort_(IOSShortArray_Get(self->pub_scalar_, crnt_row + p), OrgSpongycastlePqcCryptoRainbowUtilGF2Field_multElemWithShort_withShort_(sclr_tmp, IOSShortArray_Get(nil_chk(self->b2_), x2)));
        }
      }
      for (jint n = 0; n < vins + oils; n++) {
        vect_tmp = [c multVectWithShort:IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(coeff_gamma), p)), n) withShortArray:IOSObjectArray_Get(nil_chk(self->A2_), n)];
        (void) IOSObjectArray_Set(nil_chk(self->pub_singular_), crnt_row + p, [c addVectWithShortArray:vect_tmp withShortArray:IOSObjectArray_Get(self->pub_singular_, crnt_row + p)]);
        *IOSShortArray_GetRef(nil_chk(self->pub_scalar_), crnt_row + p) = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_addElemWithShort_withShort_(IOSShortArray_Get(self->pub_scalar_, crnt_row + p), OrgSpongycastlePqcCryptoRainbowUtilGF2Field_multElemWithShort_withShort_(IOSShortArray_Get(nil_chk(IOSObjectArray_Get(coeff_gamma, p)), n), IOSShortArray_Get(nil_chk(self->b2_), n)));
      }
      *IOSShortArray_GetRef(nil_chk(self->pub_scalar_), crnt_row + p) = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_addElemWithShort_withShort_(IOSShortArray_Get(self->pub_scalar_, crnt_row + p), IOSShortArray_Get(nil_chk(coeff_eta), p));
    }
    crnt_row = crnt_row + oils;
  }
  {
    IOSObjectArray *tmp_c_quad = [IOSShortArray newArrayWithDimensions:3 lengths:(jint[]){ rows, vars, vars }];
    IOSObjectArray *tmp_c_sing = [IOSShortArray newArrayWithDimensions:2 lengths:(jint[]){ rows, vars }];
    IOSShortArray *tmp_c_scal = [IOSShortArray newArrayWithLength:rows];
    for (jint r = 0; r < rows; r++) {
      for (jint q = 0; q < ((IOSObjectArray *) nil_chk(self->A1_))->size_; q++) {
        (void) IOSObjectArray_Set(tmp_c_quad, r, [c addSquareMatrixWithShortArray2:IOSObjectArray_Get(tmp_c_quad, r) withShortArray2:[c multMatrixWithShort:IOSShortArray_Get(nil_chk(IOSObjectArray_Get(self->A1_, r)), q) withShortArray2:IOSObjectArray_Get(coeff_quadratic_3dim, q)]]);
        (void) IOSObjectArray_Set(tmp_c_sing, r, [c addVectWithShortArray:IOSObjectArray_Get(tmp_c_sing, r) withShortArray:[c multVectWithShort:IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->A1_), r)), q) withShortArray:IOSObjectArray_Get(nil_chk(self->pub_singular_), q)]]);
        *IOSShortArray_GetRef(tmp_c_scal, r) = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_addElemWithShort_withShort_(IOSShortArray_Get(tmp_c_scal, r), OrgSpongycastlePqcCryptoRainbowUtilGF2Field_multElemWithShort_withShort_(IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->A1_), r)), q), IOSShortArray_Get(nil_chk(self->pub_scalar_), q)));
      }
      *IOSShortArray_GetRef(tmp_c_scal, r) = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_addElemWithShort_withShort_(IOSShortArray_Get(tmp_c_scal, r), IOSShortArray_Get(nil_chk(self->b1_), r));
    }
    coeff_quadratic_3dim = tmp_c_quad;
    self->pub_singular_ = tmp_c_sing;
    self->pub_scalar_ = tmp_c_scal;
  }
  OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_compactPublicKeyWithShortArray3_(self, coeff_quadratic_3dim);
}

void OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator_compactPublicKeyWithShortArray3_(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator *self, IOSObjectArray *coeff_quadratic_to_compact) {
  jint polynomials = ((IOSObjectArray *) nil_chk(coeff_quadratic_to_compact))->size_;
  jint n = ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(coeff_quadratic_to_compact, 0)))->size_;
  jint entries = n * (n + 1) / 2;
  self->pub_quadratic_ = [IOSShortArray newArrayWithDimensions:2 lengths:(jint[]){ polynomials, entries }];
  jint offset = 0;
  for (jint p = 0; p < polynomials; p++) {
    offset = 0;
    for (jint x = 0; x < n; x++) {
      for (jint y = x; y < n; y++) {
        if (y == x) {
          *IOSShortArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->pub_quadratic_), p)), offset) = IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_quadratic_to_compact, p)), x)), y);
        }
        else {
          *IOSShortArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->pub_quadratic_), p)), offset) = OrgSpongycastlePqcCryptoRainbowUtilGF2Field_addElemWithShort_withShort_(IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_quadratic_to_compact, p)), x)), y), IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff_quadratic_to_compact, p)), y)), x));
        }
        offset++;
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoRainbowRainbowKeyPairGenerator)
