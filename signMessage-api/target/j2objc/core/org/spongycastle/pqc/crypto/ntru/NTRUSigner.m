//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/ntru/NTRUSigner.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/nio/Buffer.h"
#include "java/nio/ByteBuffer.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/pqc/crypto/ntru/NTRUSigner.h"
#include "org/spongycastle/pqc/crypto/ntru/NTRUSignerPrng.h"
#include "org/spongycastle/pqc/crypto/ntru/NTRUSigningParameters.h"
#include "org/spongycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters.h"
#include "org/spongycastle/pqc/crypto/ntru/NTRUSigningPublicKeyParameters.h"
#include "org/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial.h"
#include "org/spongycastle/pqc/math/ntru/polynomial/Polynomial.h"

@interface OrgSpongycastlePqcCryptoNtruNTRUSigner () {
 @public
  OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *params_;
  id<OrgSpongycastleCryptoDigest> hashAlg_;
  OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *signingKeyPair_;
  OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *verificationKey_;
}

- (IOSByteArray *)signHashWithByteArray:(IOSByteArray *)msgHash
withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters:(OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *)kp;

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)signWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)i
                                                         withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters:(OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *)kp;

- (jboolean)verifyHashWithByteArray:(IOSByteArray *)msgHash
                      withByteArray:(IOSByteArray *)sig
withOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters:(OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *)pub;

- (jboolean)verifyWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)i
                  withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)s
                  withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)h;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoNtruNTRUSigner, params_, OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoNtruNTRUSigner, hashAlg_, id<OrgSpongycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoNtruNTRUSigner, signingKeyPair_, OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoNtruNTRUSigner, verificationKey_, OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *)

__attribute__((unused)) static IOSByteArray *OrgSpongycastlePqcCryptoNtruNTRUSigner_signHashWithByteArray_withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, IOSByteArray *msgHash, OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *kp);

__attribute__((unused)) static OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *OrgSpongycastlePqcCryptoNtruNTRUSigner_signWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *i, OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *kp);

__attribute__((unused)) static jboolean OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyHashWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, IOSByteArray *msgHash, IOSByteArray *sig, OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *pub);

__attribute__((unused)) static jboolean OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *i, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *s, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *h);

@implementation OrgSpongycastlePqcCryptoNtruNTRUSigner

- (instancetype)initWithOrgSpongycastlePqcCryptoNtruNTRUSigningParameters:(OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *)params {
  OrgSpongycastlePqcCryptoNtruNTRUSigner_initWithOrgSpongycastlePqcCryptoNtruNTRUSigningParameters_(self, params);
  return self;
}

- (void)init__WithBoolean:(jboolean)forSigning
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if (forSigning) {
    self->signingKeyPair_ = (OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *) cast_chk(params, [OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters class]);
  }
  else {
    self->verificationKey_ = (OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *) cast_chk(params, [OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters class]);
  }
  hashAlg_ = ((OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *) nil_chk(self->params_))->hashAlg_;
  [((id<OrgSpongycastleCryptoDigest>) nil_chk(hashAlg_)) reset];
}

- (void)updateWithByte:(jbyte)b {
  if (hashAlg_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Call initSign or initVerify first!");
  }
  [hashAlg_ updateWithByte:b];
}

- (void)updateWithByteArray:(IOSByteArray *)m
                    withInt:(jint)off
                    withInt:(jint)length {
  if (hashAlg_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Call initSign or initVerify first!");
  }
  [hashAlg_ updateWithByteArray:m withInt:off withInt:length];
}

- (IOSByteArray *)generateSignature {
  if (hashAlg_ == nil || signingKeyPair_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Call initSign first!");
  }
  IOSByteArray *msgHash = [IOSByteArray newArrayWithLength:[hashAlg_ getDigestSize]];
  [((id<OrgSpongycastleCryptoDigest>) nil_chk(hashAlg_)) doFinalWithByteArray:msgHash withInt:0];
  return OrgSpongycastlePqcCryptoNtruNTRUSigner_signHashWithByteArray_withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_(self, msgHash, signingKeyPair_);
}

- (IOSByteArray *)signHashWithByteArray:(IOSByteArray *)msgHash
withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters:(OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *)kp {
  return OrgSpongycastlePqcCryptoNtruNTRUSigner_signHashWithByteArray_withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_(self, msgHash, kp);
}

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)signWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)i
                                                         withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters:(OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *)kp {
  return OrgSpongycastlePqcCryptoNtruNTRUSigner_signWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_(self, i, kp);
}

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)sig {
  if (hashAlg_ == nil || verificationKey_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Call initVerify first!");
  }
  IOSByteArray *msgHash = [IOSByteArray newArrayWithLength:[hashAlg_ getDigestSize]];
  [((id<OrgSpongycastleCryptoDigest>) nil_chk(hashAlg_)) doFinalWithByteArray:msgHash withInt:0];
  return OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyHashWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters_(self, msgHash, sig, verificationKey_);
}

- (jboolean)verifyHashWithByteArray:(IOSByteArray *)msgHash
                      withByteArray:(IOSByteArray *)sig
withOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters:(OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *)pub {
  return OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyHashWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters_(self, msgHash, sig, pub);
}

- (jboolean)verifyWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)i
                  withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)s
                  withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)h {
  return OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(self, i, s, h);
}

- (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *)createMsgRepWithByteArray:(IOSByteArray *)msgHash
                                                                             withInt:(jint)r {
  jint N = ((OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *) nil_chk(params_))->N_;
  jint q = params_->q_;
  jint c = 31 - JavaLangInteger_numberOfLeadingZerosWithInt_(q);
  jint B = (c + 7) / 8;
  OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *i = new_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithInt_(N);
  JavaNioByteBuffer *cbuf = JavaNioByteBuffer_allocateWithInt_(((IOSByteArray *) nil_chk(msgHash))->size_ + 4);
  (void) [((JavaNioByteBuffer *) nil_chk(cbuf)) putWithByteArray:msgHash];
  (void) [cbuf putIntWithInt:r];
  OrgSpongycastlePqcCryptoNtruNTRUSignerPrng *prng = new_OrgSpongycastlePqcCryptoNtruNTRUSignerPrng_initWithByteArray_withOrgSpongycastleCryptoDigest_([cbuf array], ((OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *) nil_chk(params_))->hashAlg_);
  for (jint t = 0; t < N; t++) {
    IOSByteArray *o = [prng nextBytesWithInt:B];
    jint hi = IOSByteArray_Get(o, ((IOSByteArray *) nil_chk(o))->size_ - 1);
    JreRShiftAssignInt(&hi, 8 * B - c);
    JreLShiftAssignInt(&hi, 8 * B - c);
    *IOSByteArray_GetRef(o, o->size_ - 1) = (jbyte) hi;
    JavaNioByteBuffer *obuf = JavaNioByteBuffer_allocateWithInt_(4);
    (void) [((JavaNioByteBuffer *) nil_chk(obuf)) putWithByteArray:o];
    (void) [obuf rewind];
    *IOSIntArray_GetRef(nil_chk(i->coeffs_), t) = JavaLangInteger_reverseBytesWithInt_([obuf getInt]);
  }
  return i;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;", 0x4, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastlePqcCryptoNtruNTRUSigningParameters:);
  methods[1].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(updateWithByte:);
  methods[3].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(generateSignature);
  methods[5].selector = @selector(signHashWithByteArray:withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters:);
  methods[6].selector = @selector(signWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters:);
  methods[7].selector = @selector(verifySignatureWithByteArray:);
  methods[8].selector = @selector(verifyHashWithByteArray:withByteArray:withOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters:);
  methods[9].selector = @selector(verifyWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:);
  methods[10].selector = @selector(createMsgRepWithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgSpongycastlePqcCryptoNtruNTRUSigningParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashAlg_", "LOrgSpongycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signingKeyPair_", "LOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "verificationKey_", "LOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastlePqcCryptoNtruNTRUSigningParameters;", "init", "ZLOrgSpongycastleCryptoCipherParameters;", "update", "B", "[BII", "signHash", "[BLOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters;", "sign", "LOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;LOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters;", "verifySignature", "[B", "verifyHash", "[B[BLOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters;", "verify", "LOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;LOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;LOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial;", "createMsgRep", "[BI" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoNtruNTRUSigner = { "NTRUSigner", "org.spongycastle.pqc.crypto.ntru", ptrTable, methods, fields, 7, 0x1, 11, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoNtruNTRUSigner;
}

@end

void OrgSpongycastlePqcCryptoNtruNTRUSigner_initWithOrgSpongycastlePqcCryptoNtruNTRUSigningParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *params) {
  NSObject_init(self);
  self->params_ = params;
}

OrgSpongycastlePqcCryptoNtruNTRUSigner *new_OrgSpongycastlePqcCryptoNtruNTRUSigner_initWithOrgSpongycastlePqcCryptoNtruNTRUSigningParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *params) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoNtruNTRUSigner, initWithOrgSpongycastlePqcCryptoNtruNTRUSigningParameters_, params)
}

OrgSpongycastlePqcCryptoNtruNTRUSigner *create_OrgSpongycastlePqcCryptoNtruNTRUSigner_initWithOrgSpongycastlePqcCryptoNtruNTRUSigningParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *params) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoNtruNTRUSigner, initWithOrgSpongycastlePqcCryptoNtruNTRUSigningParameters_, params)
}

IOSByteArray *OrgSpongycastlePqcCryptoNtruNTRUSigner_signHashWithByteArray_withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, IOSByteArray *msgHash, OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *kp) {
  jint r = 0;
  OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *s;
  OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *i;
  OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *kPub = [((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *) nil_chk(kp)) getPublicKey];
  do {
    r++;
    if (r > ((OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *) nil_chk(self->params_))->signFailTolerance_) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$IC", @"Signing failed: too many retries (max=", self->params_->signFailTolerance_, ')'));
    }
    i = [self createMsgRepWithByteArray:msgHash withInt:r];
    s = OrgSpongycastlePqcCryptoNtruNTRUSigner_signWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_(self, i, kp);
  }
  while (!OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(self, i, s, ((OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *) nil_chk(kPub))->h_));
  IOSByteArray *rawSig = [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(s)) toBinaryWithInt:((OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *) nil_chk(self->params_))->q_];
  JavaNioByteBuffer *sbuf = JavaNioByteBuffer_allocateWithInt_(((IOSByteArray *) nil_chk(rawSig))->size_ + 4);
  (void) [((JavaNioByteBuffer *) nil_chk(sbuf)) putWithByteArray:rawSig];
  (void) [sbuf putIntWithInt:r];
  return [sbuf array];
}

OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *OrgSpongycastlePqcCryptoNtruNTRUSigner_signWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *i, OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *kp) {
  jint N = ((OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *) nil_chk(self->params_))->N_;
  jint q = self->params_->q_;
  jint perturbationBases = self->params_->B_;
  OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *kPriv = kp;
  OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *kPub = [((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *) nil_chk(kp)) getPublicKey];
  OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *s = new_OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_initWithInt_(N);
  jint iLoop = perturbationBases;
  while (iLoop >= 1) {
    id<OrgSpongycastlePqcMathNtruPolynomialPolynomial> f = ((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_Basis *) nil_chk([((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *) nil_chk(kPriv)) getBasisWithInt:iLoop]))->f_;
    id<OrgSpongycastlePqcMathNtruPolynomialPolynomial> fPrime = ((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_Basis *) nil_chk([kPriv getBasisWithInt:iLoop]))->fPrime_;
    OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *y = [((id<OrgSpongycastlePqcMathNtruPolynomialPolynomial>) nil_chk(f)) multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:i];
    [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(y)) divWithInt:q];
    y = [((id<OrgSpongycastlePqcMathNtruPolynomialPolynomial>) nil_chk(fPrime)) multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:y];
    OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *x = [fPrime multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:i];
    [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(x)) divWithInt:q];
    x = [f multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:x];
    OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *si = y;
    [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(si)) subWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:x];
    [s addWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:si];
    OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *hi = (OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) cast_chk([((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_Basis *) nil_chk([kPriv getBasisWithInt:iLoop]))->h_)) java_clone], [OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial class]);
    if (iLoop > 1) {
      [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(hi)) subWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_Basis *) nil_chk([kPriv getBasisWithInt:iLoop - 1]))->h_];
    }
    else {
      [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(hi)) subWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:((OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *) nil_chk(kPub))->h_];
    }
    i = [si multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:hi withInt:q];
    iLoop--;
  }
  id<OrgSpongycastlePqcMathNtruPolynomialPolynomial> f = ((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_Basis *) nil_chk([((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters *) nil_chk(kPriv)) getBasisWithInt:0]))->f_;
  id<OrgSpongycastlePqcMathNtruPolynomialPolynomial> fPrime = ((OrgSpongycastlePqcCryptoNtruNTRUSigningPrivateKeyParameters_Basis *) nil_chk([kPriv getBasisWithInt:0]))->fPrime_;
  OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *y = [((id<OrgSpongycastlePqcMathNtruPolynomialPolynomial>) nil_chk(f)) multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:i];
  [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(y)) divWithInt:q];
  y = [((id<OrgSpongycastlePqcMathNtruPolynomialPolynomial>) nil_chk(fPrime)) multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:y];
  OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *x = [fPrime multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:i];
  [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(x)) divWithInt:q];
  x = [f multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:x];
  [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(y)) subWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:x];
  [s addWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:y];
  [s modPositiveWithInt:q];
  return s;
}

jboolean OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyHashWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, IOSByteArray *msgHash, IOSByteArray *sig, OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *pub) {
  JavaNioByteBuffer *sbuf = JavaNioByteBuffer_wrapWithByteArray_(sig);
  IOSByteArray *rawSig = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(sig))->size_ - 4];
  (void) [((JavaNioByteBuffer *) nil_chk(sbuf)) getWithByteArray:rawSig];
  OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *s = OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_fromBinaryWithByteArray_withInt_withInt_(rawSig, ((OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *) nil_chk(self->params_))->N_, self->params_->q_);
  jint r = [sbuf getInt];
  return OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(self, [self createMsgRepWithByteArray:msgHash withInt:r], s, ((OrgSpongycastlePqcCryptoNtruNTRUSigningPublicKeyParameters *) nil_chk(pub))->h_);
}

jboolean OrgSpongycastlePqcCryptoNtruNTRUSigner_verifyWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_withOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgSpongycastlePqcCryptoNtruNTRUSigner *self, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *i, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *s, OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *h) {
  jint q = ((OrgSpongycastlePqcCryptoNtruNTRUSigningParameters *) nil_chk(self->params_))->q_;
  jdouble normBoundSq = self->params_->normBoundSq_;
  jdouble betaSq = self->params_->betaSq_;
  OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *t = [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(h)) multWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:s withInt:q];
  [((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(t)) subWithOrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial:i];
  jlong centeredNormSq = JreFpToLong(([((OrgSpongycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(s)) centeredNormSqWithInt:q] + betaSq * [t centeredNormSqWithInt:q]));
  return centeredNormSq <= normBoundSq;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoNtruNTRUSigner)
