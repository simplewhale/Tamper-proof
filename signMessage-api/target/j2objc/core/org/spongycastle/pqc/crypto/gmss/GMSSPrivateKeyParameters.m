//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/util/Vector.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/pqc/crypto/gmss/GMSSDigestProvider.h"
#include "org/spongycastle/pqc/crypto/gmss/GMSSKeyParameters.h"
#include "org/spongycastle/pqc/crypto/gmss/GMSSLeaf.h"
#include "org/spongycastle/pqc/crypto/gmss/GMSSParameters.h"
#include "org/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters.h"
#include "org/spongycastle/pqc/crypto/gmss/GMSSRootCalc.h"
#include "org/spongycastle/pqc/crypto/gmss/GMSSRootSig.h"
#include "org/spongycastle/pqc/crypto/gmss/Treehash.h"
#include "org/spongycastle/pqc/crypto/gmss/util/GMSSRandom.h"
#include "org/spongycastle/pqc/crypto/gmss/util/WinternitzOTSignature.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters () {
 @public
  IOSIntArray *index_;
  IOSObjectArray *currentSeeds_;
  IOSObjectArray *nextNextSeeds_;
  IOSObjectArray *currentAuthPaths_;
  IOSObjectArray *nextAuthPaths_;
  IOSObjectArray *currentTreehash_;
  IOSObjectArray *nextTreehash_;
  IOSObjectArray *currentStack_;
  IOSObjectArray *nextStack_;
  IOSObjectArray *currentRetain_;
  IOSObjectArray *nextRetain_;
  IOSObjectArray *keep_;
  IOSObjectArray *nextNextLeaf_;
  IOSObjectArray *upperLeaf_;
  IOSObjectArray *upperTreehashLeaf_;
  IOSIntArray *minTreehash_;
  OrgSpongycastlePqcCryptoGmssGMSSParameters *gmssPS_;
  IOSObjectArray *nextRoot_;
  IOSObjectArray *nextNextRoot_;
  IOSObjectArray *currentRootSig_;
  IOSObjectArray *nextRootSig_;
  id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider> digestProvider_;
  jboolean used_;
  IOSIntArray *heightOfTrees_;
  IOSIntArray *otsIndex_;
  IOSIntArray *K_;
  jint numLayer_;
  id<OrgSpongycastleCryptoDigest> messDigestTrees_;
  jint mdLength_;
  OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *gmssRandom_;
  IOSIntArray *numLeafs_;
}

- (instancetype)initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters:(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *)original;

- (void)nextKeyWithInt:(jint)layer;

- (void)nextTreeWithInt:(jint)layer;

- (void)updateKeyWithInt:(jint)layer;

- (jint)getMinTreehashIndexWithInt:(jint)layer;

- (void)computeAuthPathsWithInt:(jint)layer;

- (jint)heightOfPhiWithInt:(jint)Phi;

- (void)updateNextNextAuthRootWithInt:(jint)layer;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, index_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, currentSeeds_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextNextSeeds_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, currentAuthPaths_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextAuthPaths_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, currentTreehash_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextTreehash_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, currentStack_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextStack_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, currentRetain_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextRetain_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, keep_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextNextLeaf_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, upperLeaf_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, upperTreehashLeaf_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, minTreehash_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, gmssPS_, OrgSpongycastlePqcCryptoGmssGMSSParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextRoot_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextNextRoot_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, currentRootSig_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, nextRootSig_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, digestProvider_, id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, heightOfTrees_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, otsIndex_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, K_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, messDigestTrees_, id<OrgSpongycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, gmssRandom_, OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, numLeafs_, IOSIntArray *)

__attribute__((unused)) static void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *original);

__attribute__((unused)) static OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *new_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *original) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *create_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *original);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextKeyWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextTreeWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateKeyWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer);

__attribute__((unused)) static jint OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_getMinTreehashIndexWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_computeAuthPathsWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer);

__attribute__((unused)) static jint OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_heightOfPhiWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint Phi);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateNextNextAuthRootWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer);

@implementation OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters

- (instancetype)initWithByteArray2:(IOSObjectArray *)currentSeed
                    withByteArray2:(IOSObjectArray *)nextNextSeed
                    withByteArray3:(IOSObjectArray *)currentAuthPath
                    withByteArray3:(IOSObjectArray *)nextAuthPath
withOrgSpongycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)currentTreehash
withOrgSpongycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)nextTreehash
           withJavaUtilVectorArray:(IOSObjectArray *)currentStack
           withJavaUtilVectorArray:(IOSObjectArray *)nextStack
          withJavaUtilVectorArray2:(IOSObjectArray *)currentRetain
          withJavaUtilVectorArray2:(IOSObjectArray *)nextRetain
                    withByteArray2:(IOSObjectArray *)nextRoot
                    withByteArray2:(IOSObjectArray *)currentRootSig
withOrgSpongycastlePqcCryptoGmssGMSSParameters:(OrgSpongycastlePqcCryptoGmssGMSSParameters *)gmssParameterset
withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider:(id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>)digestProvider {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(self, currentSeed, nextNextSeed, currentAuthPath, nextAuthPath, currentTreehash, nextTreehash, currentStack, nextStack, currentRetain, nextRetain, nextRoot, currentRootSig, gmssParameterset, digestProvider);
  return self;
}

- (instancetype)initWithIntArray:(IOSIntArray *)index
                  withByteArray2:(IOSObjectArray *)currentSeeds
                  withByteArray2:(IOSObjectArray *)nextNextSeeds
                  withByteArray3:(IOSObjectArray *)currentAuthPaths
                  withByteArray3:(IOSObjectArray *)nextAuthPaths
                  withByteArray3:(IOSObjectArray *)keep
withOrgSpongycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)currentTreehash
withOrgSpongycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)nextTreehash
         withJavaUtilVectorArray:(IOSObjectArray *)currentStack
         withJavaUtilVectorArray:(IOSObjectArray *)nextStack
        withJavaUtilVectorArray2:(IOSObjectArray *)currentRetain
        withJavaUtilVectorArray2:(IOSObjectArray *)nextRetain
withOrgSpongycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)nextNextLeaf
withOrgSpongycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)upperLeaf
withOrgSpongycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)upperTreehashLeaf
                    withIntArray:(IOSIntArray *)minTreehash
                  withByteArray2:(IOSObjectArray *)nextRoot
withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray:(IOSObjectArray *)nextNextRoot
                  withByteArray2:(IOSObjectArray *)currentRootSig
withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray:(IOSObjectArray *)nextRootSig
withOrgSpongycastlePqcCryptoGmssGMSSParameters:(OrgSpongycastlePqcCryptoGmssGMSSParameters *)gmssParameterset
withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider:(id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>)digestProvider {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(self, index, currentSeeds, nextNextSeeds, currentAuthPaths, nextAuthPaths, keep, currentTreehash, nextTreehash, currentStack, nextStack, currentRetain, nextRetain, nextNextLeaf, upperLeaf, upperTreehashLeaf, minTreehash, nextRoot, nextNextRoot, currentRootSig, nextRootSig, gmssParameterset, digestProvider);
  return self;
}

- (instancetype)initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters:(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *)original {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_(self, original);
  return self;
}

- (jboolean)isUsed {
  return self->used_;
}

- (void)markUsed {
  self->used_ = true;
}

- (OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *)nextKey {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *nKey = new_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_(self);
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextKeyWithInt_(nKey, [((OrgSpongycastlePqcCryptoGmssGMSSParameters *) nil_chk(gmssPS_)) getNumOfLayers] - 1);
  return nKey;
}

- (void)nextKeyWithInt:(jint)layer {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextKeyWithInt_(self, layer);
}

- (void)nextTreeWithInt:(jint)layer {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextTreeWithInt_(self, layer);
}

- (void)updateKeyWithInt:(jint)layer {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateKeyWithInt_(self, layer);
}

- (jint)getMinTreehashIndexWithInt:(jint)layer {
  return OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_getMinTreehashIndexWithInt_(self, layer);
}

- (void)computeAuthPathsWithInt:(jint)layer {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_computeAuthPathsWithInt_(self, layer);
}

- (jint)heightOfPhiWithInt:(jint)Phi {
  return OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_heightOfPhiWithInt_(self, Phi);
}

- (void)updateNextNextAuthRootWithInt:(jint)layer {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateNextNextAuthRootWithInt_(self, layer);
}

- (IOSIntArray *)getIndex {
  return index_;
}

- (jint)getIndexWithInt:(jint)i {
  return IOSIntArray_Get(nil_chk(index_), i);
}

- (IOSObjectArray *)getCurrentSeeds {
  return OrgSpongycastleUtilArrays_cloneWithByteArray2_(currentSeeds_);
}

- (IOSObjectArray *)getCurrentAuthPaths {
  return OrgSpongycastleUtilArrays_cloneWithByteArray3_(currentAuthPaths_);
}

- (IOSByteArray *)getSubtreeRootSigWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(currentRootSig_), i);
}

- (id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>)getName {
  return digestProvider_;
}

- (jint)getNumLeafsWithInt:(jint)i {
  return IOSIntArray_Get(nil_chk(numLeafs_), i);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 7, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 9, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 4, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 4, -1, -1, -1, -1 },
    { NULL, "[[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 12, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoGmssGMSSDigestProvider;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 13, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray2:withByteArray2:withByteArray3:withByteArray3:withOrgSpongycastlePqcCryptoGmssTreehashArray2:withOrgSpongycastlePqcCryptoGmssTreehashArray2:withJavaUtilVectorArray:withJavaUtilVectorArray:withJavaUtilVectorArray2:withJavaUtilVectorArray2:withByteArray2:withByteArray2:withOrgSpongycastlePqcCryptoGmssGMSSParameters:withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider:);
  methods[1].selector = @selector(initWithIntArray:withByteArray2:withByteArray2:withByteArray3:withByteArray3:withByteArray3:withOrgSpongycastlePqcCryptoGmssTreehashArray2:withOrgSpongycastlePqcCryptoGmssTreehashArray2:withJavaUtilVectorArray:withJavaUtilVectorArray:withJavaUtilVectorArray2:withJavaUtilVectorArray2:withOrgSpongycastlePqcCryptoGmssGMSSLeafArray:withOrgSpongycastlePqcCryptoGmssGMSSLeafArray:withOrgSpongycastlePqcCryptoGmssGMSSLeafArray:withIntArray:withByteArray2:withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray:withByteArray2:withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray:withOrgSpongycastlePqcCryptoGmssGMSSParameters:withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider:);
  methods[2].selector = @selector(initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters:);
  methods[3].selector = @selector(isUsed);
  methods[4].selector = @selector(markUsed);
  methods[5].selector = @selector(nextKey);
  methods[6].selector = @selector(nextKeyWithInt:);
  methods[7].selector = @selector(nextTreeWithInt:);
  methods[8].selector = @selector(updateKeyWithInt:);
  methods[9].selector = @selector(getMinTreehashIndexWithInt:);
  methods[10].selector = @selector(computeAuthPathsWithInt:);
  methods[11].selector = @selector(heightOfPhiWithInt:);
  methods[12].selector = @selector(updateNextNextAuthRootWithInt:);
  methods[13].selector = @selector(getIndex);
  methods[14].selector = @selector(getIndexWithInt:);
  methods[15].selector = @selector(getCurrentSeeds);
  methods[16].selector = @selector(getCurrentAuthPaths);
  methods[17].selector = @selector(getSubtreeRootSigWithInt:);
  methods[18].selector = @selector(getName);
  methods[19].selector = @selector(getNumLeafsWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "index_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentSeeds_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextNextSeeds_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentAuthPaths_", "[[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextAuthPaths_", "[[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentTreehash_", "[[LOrgSpongycastlePqcCryptoGmssTreehash;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextTreehash_", "[[LOrgSpongycastlePqcCryptoGmssTreehash;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentStack_", "[LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextStack_", "[LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentRetain_", "[[LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextRetain_", "[[LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "keep_", "[[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextNextLeaf_", "[LOrgSpongycastlePqcCryptoGmssGMSSLeaf;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "upperLeaf_", "[LOrgSpongycastlePqcCryptoGmssGMSSLeaf;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "upperTreehashLeaf_", "[LOrgSpongycastlePqcCryptoGmssGMSSLeaf;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "minTreehash_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gmssPS_", "LOrgSpongycastlePqcCryptoGmssGMSSParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextRoot_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextNextRoot_", "[LOrgSpongycastlePqcCryptoGmssGMSSRootCalc;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentRootSig_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextRootSig_", "[LOrgSpongycastlePqcCryptoGmssGMSSRootSig;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "digestProvider_", "LOrgSpongycastlePqcCryptoGmssGMSSDigestProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "used_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "heightOfTrees_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "otsIndex_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "K_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numLayer_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "messDigestTrees_", "LOrgSpongycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mdLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gmssRandom_", "LOrgSpongycastlePqcCryptoGmssUtilGMSSRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numLeafs_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[[B[[B[[[B[[[B[[LOrgSpongycastlePqcCryptoGmssTreehash;[[LOrgSpongycastlePqcCryptoGmssTreehash;[LJavaUtilVector;[LJavaUtilVector;[[LJavaUtilVector;[[LJavaUtilVector;[[B[[BLOrgSpongycastlePqcCryptoGmssGMSSParameters;LOrgSpongycastlePqcCryptoGmssGMSSDigestProvider;", "[I[[B[[B[[[B[[[B[[[B[[LOrgSpongycastlePqcCryptoGmssTreehash;[[LOrgSpongycastlePqcCryptoGmssTreehash;[LJavaUtilVector;[LJavaUtilVector;[[LJavaUtilVector;[[LJavaUtilVector;[LOrgSpongycastlePqcCryptoGmssGMSSLeaf;[LOrgSpongycastlePqcCryptoGmssGMSSLeaf;[LOrgSpongycastlePqcCryptoGmssGMSSLeaf;[I[[B[LOrgSpongycastlePqcCryptoGmssGMSSRootCalc;[[B[LOrgSpongycastlePqcCryptoGmssGMSSRootSig;LOrgSpongycastlePqcCryptoGmssGMSSParameters;LOrgSpongycastlePqcCryptoGmssGMSSDigestProvider;", "LOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters;", "nextKey", "I", "nextTree", "updateKey", "getMinTreehashIndex", "computeAuthPaths", "heightOfPhi", "updateNextNextAuthRoot", "getIndex", "getSubtreeRootSig", "getNumLeafs" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters = { "GMSSPrivateKeyParameters", "org.spongycastle.pqc.crypto.gmss", ptrTable, methods, fields, 7, 0x1, 20, 31, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters;
}

@end

void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextRoot, IOSObjectArray *currentRootSig, OrgSpongycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(self, nil, currentSeed, nextNextSeed, currentAuthPath, nextAuthPath, nil, currentTreehash, nextTreehash, currentStack, nextStack, currentRetain, nextRetain, nil, nil, nil, nil, nextRoot, nil, currentRootSig, nil, gmssParameterset, digestProvider);
}

OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *new_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextRoot, IOSObjectArray *currentRootSig, OrgSpongycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_, currentSeed, nextNextSeed, currentAuthPath, nextAuthPath, currentTreehash, nextTreehash, currentStack, nextStack, currentRetain, nextRetain, nextRoot, currentRootSig, gmssParameterset, digestProvider)
}

OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *create_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextRoot, IOSObjectArray *currentRootSig, OrgSpongycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_, currentSeed, nextNextSeed, currentAuthPath, nextAuthPath, currentTreehash, nextTreehash, currentStack, nextStack, currentRetain, nextRetain, nextRoot, currentRootSig, gmssParameterset, digestProvider)
}

void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, IOSIntArray *index, IOSObjectArray *currentSeeds, IOSObjectArray *nextNextSeeds, IOSObjectArray *currentAuthPaths, IOSObjectArray *nextAuthPaths, IOSObjectArray *keep, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, OrgSpongycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) {
  OrgSpongycastlePqcCryptoGmssGMSSKeyParameters_initWithBoolean_withOrgSpongycastlePqcCryptoGmssGMSSParameters_(self, true, gmssParameterset);
  self->used_ = false;
  self->messDigestTrees_ = [((id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>) nil_chk(digestProvider)) get];
  self->mdLength_ = [((id<OrgSpongycastleCryptoDigest>) nil_chk(self->messDigestTrees_)) getDigestSize];
  self->gmssPS_ = gmssParameterset;
  self->otsIndex_ = [((OrgSpongycastlePqcCryptoGmssGMSSParameters *) nil_chk(gmssParameterset)) getWinternitzParameter];
  self->K_ = [gmssParameterset getK];
  self->heightOfTrees_ = [gmssParameterset getHeightOfTrees];
  self->numLayer_ = [((OrgSpongycastlePqcCryptoGmssGMSSParameters *) nil_chk(self->gmssPS_)) getNumOfLayers];
  if (index == nil) {
    self->index_ = [IOSIntArray newArrayWithLength:self->numLayer_];
    for (jint i = 0; i < self->numLayer_; i++) {
      *IOSIntArray_GetRef(self->index_, i) = 0;
    }
  }
  else {
    self->index_ = index;
  }
  self->currentSeeds_ = currentSeeds;
  self->nextNextSeeds_ = nextNextSeeds;
  self->currentAuthPaths_ = currentAuthPaths;
  self->nextAuthPaths_ = nextAuthPaths;
  if (keep == nil) {
    self->keep_ = [IOSObjectArray newArrayWithLength:self->numLayer_ type:IOSClass_byteArray(2)];
    for (jint i = 0; i < self->numLayer_; i++) {
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->keep_), i, [IOSByteArray newArrayWithDimensions:2 lengths:(jint[]){ JreFpToInt(JavaLangMath_floorWithDouble_(IOSIntArray_Get(nil_chk(self->heightOfTrees_), i) / 2)), self->mdLength_ }]);
    }
  }
  else {
    self->keep_ = keep;
  }
  if (currentStack == nil) {
    self->currentStack_ = [IOSObjectArray newArrayWithLength:self->numLayer_ type:JavaUtilVector_class_()];
    for (jint i = 0; i < self->numLayer_; i++) {
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->currentStack_), i, new_JavaUtilVector_init());
    }
  }
  else {
    self->currentStack_ = currentStack;
  }
  if (nextStack == nil) {
    self->nextStack_ = [IOSObjectArray newArrayWithLength:self->numLayer_ - 1 type:JavaUtilVector_class_()];
    for (jint i = 0; i < self->numLayer_ - 1; i++) {
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->nextStack_), i, new_JavaUtilVector_init());
    }
  }
  else {
    self->nextStack_ = nextStack;
  }
  self->currentTreehash_ = currentTreehash;
  self->nextTreehash_ = nextTreehash;
  self->currentRetain_ = currentRetain;
  self->nextRetain_ = nextRetain;
  self->nextRoot_ = nextRoot;
  self->digestProvider_ = digestProvider;
  if (nextNextRoot == nil) {
    self->nextNextRoot_ = [IOSObjectArray newArrayWithLength:self->numLayer_ - 1 type:OrgSpongycastlePqcCryptoGmssGMSSRootCalc_class_()];
    for (jint i = 0; i < self->numLayer_ - 1; i++) {
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->nextNextRoot_), i, new_OrgSpongycastlePqcCryptoGmssGMSSRootCalc_initWithInt_withInt_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(IOSIntArray_Get(nil_chk(self->heightOfTrees_), i + 1), IOSIntArray_Get(nil_chk(self->K_), i + 1), self->digestProvider_));
    }
  }
  else {
    self->nextNextRoot_ = nextNextRoot;
  }
  self->currentRootSig_ = currentRootSig;
  self->numLeafs_ = [IOSIntArray newArrayWithLength:self->numLayer_];
  for (jint i = 0; i < self->numLayer_; i++) {
    *IOSIntArray_GetRef(self->numLeafs_, i) = JreLShift32(1, IOSIntArray_Get(nil_chk(self->heightOfTrees_), i));
  }
  self->gmssRandom_ = new_OrgSpongycastlePqcCryptoGmssUtilGMSSRandom_initWithOrgSpongycastleCryptoDigest_(self->messDigestTrees_);
  if (self->numLayer_ > 1) {
    if (nextNextLeaf == nil) {
      self->nextNextLeaf_ = [IOSObjectArray newArrayWithLength:self->numLayer_ - 2 type:OrgSpongycastlePqcCryptoGmssGMSSLeaf_class_()];
      for (jint i = 0; i < self->numLayer_ - 2; i++) {
        (void) IOSObjectArray_SetAndConsume(nil_chk(self->nextNextLeaf_), i, new_OrgSpongycastlePqcCryptoGmssGMSSLeaf_initWithOrgSpongycastleCryptoDigest_withInt_withInt_withByteArray_([digestProvider get], IOSIntArray_Get(nil_chk(self->otsIndex_), i + 1), IOSIntArray_Get(nil_chk(self->numLeafs_), i + 2), IOSObjectArray_Get(nil_chk(self->nextNextSeeds_), i)));
      }
    }
    else {
      self->nextNextLeaf_ = nextNextLeaf;
    }
  }
  else {
    self->nextNextLeaf_ = [IOSObjectArray newArrayWithLength:0 type:OrgSpongycastlePqcCryptoGmssGMSSLeaf_class_()];
  }
  if (upperLeaf == nil) {
    self->upperLeaf_ = [IOSObjectArray newArrayWithLength:self->numLayer_ - 1 type:OrgSpongycastlePqcCryptoGmssGMSSLeaf_class_()];
    for (jint i = 0; i < self->numLayer_ - 1; i++) {
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->upperLeaf_), i, new_OrgSpongycastlePqcCryptoGmssGMSSLeaf_initWithOrgSpongycastleCryptoDigest_withInt_withInt_withByteArray_([digestProvider get], IOSIntArray_Get(nil_chk(self->otsIndex_), i), IOSIntArray_Get(nil_chk(self->numLeafs_), i + 1), IOSObjectArray_Get(nil_chk(self->currentSeeds_), i)));
    }
  }
  else {
    self->upperLeaf_ = upperLeaf;
  }
  if (upperTreehashLeaf == nil) {
    self->upperTreehashLeaf_ = [IOSObjectArray newArrayWithLength:self->numLayer_ - 1 type:OrgSpongycastlePqcCryptoGmssGMSSLeaf_class_()];
    for (jint i = 0; i < self->numLayer_ - 1; i++) {
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->upperTreehashLeaf_), i, new_OrgSpongycastlePqcCryptoGmssGMSSLeaf_initWithOrgSpongycastleCryptoDigest_withInt_withInt_([digestProvider get], IOSIntArray_Get(nil_chk(self->otsIndex_), i), IOSIntArray_Get(nil_chk(self->numLeafs_), i + 1)));
    }
  }
  else {
    self->upperTreehashLeaf_ = upperTreehashLeaf;
  }
  if (minTreehash == nil) {
    self->minTreehash_ = [IOSIntArray newArrayWithLength:self->numLayer_ - 1];
    for (jint i = 0; i < self->numLayer_ - 1; i++) {
      *IOSIntArray_GetRef(self->minTreehash_, i) = -1;
    }
  }
  else {
    self->minTreehash_ = minTreehash;
  }
  IOSByteArray *dummy = [IOSByteArray newArrayWithLength:self->mdLength_];
  IOSByteArray *OTSseed = [IOSByteArray newArrayWithLength:self->mdLength_];
  if (nextRootSig == nil) {
    self->nextRootSig_ = [IOSObjectArray newArrayWithLength:self->numLayer_ - 1 type:OrgSpongycastlePqcCryptoGmssGMSSRootSig_class_()];
    for (jint i = 0; i < self->numLayer_ - 1; i++) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(currentSeeds), i), 0, dummy, 0, self->mdLength_);
      (void) [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:dummy];
      OTSseed = [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:dummy];
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->nextRootSig_), i, new_OrgSpongycastlePqcCryptoGmssGMSSRootSig_initWithOrgSpongycastleCryptoDigest_withInt_withInt_([digestProvider get], IOSIntArray_Get(nil_chk(self->otsIndex_), i), IOSIntArray_Get(nil_chk(self->heightOfTrees_), i + 1)));
      [((OrgSpongycastlePqcCryptoGmssGMSSRootSig *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextRootSig_), i))) initSignWithByteArray:OTSseed withByteArray:IOSObjectArray_Get(nil_chk(nextRoot), i)];
    }
  }
  else {
    self->nextRootSig_ = nextRootSig;
  }
}

OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *new_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(IOSIntArray *index, IOSObjectArray *currentSeeds, IOSObjectArray *nextNextSeeds, IOSObjectArray *currentAuthPaths, IOSObjectArray *nextAuthPaths, IOSObjectArray *keep, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, OrgSpongycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_, index, currentSeeds, nextNextSeeds, currentAuthPaths, nextAuthPaths, keep, currentTreehash, nextTreehash, currentStack, nextStack, currentRetain, nextRetain, nextNextLeaf, upperLeaf, upperTreehashLeaf, minTreehash, nextRoot, nextNextRoot, currentRootSig, nextRootSig, gmssParameterset, digestProvider)
}

OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *create_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_(IOSIntArray *index, IOSObjectArray *currentSeeds, IOSObjectArray *nextNextSeeds, IOSObjectArray *currentAuthPaths, IOSObjectArray *nextAuthPaths, IOSObjectArray *keep, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, OrgSpongycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withOrgSpongycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withOrgSpongycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withOrgSpongycastlePqcCryptoGmssGMSSRootSigArray_withOrgSpongycastlePqcCryptoGmssGMSSParameters_withOrgSpongycastlePqcCryptoGmssGMSSDigestProvider_, index, currentSeeds, nextNextSeeds, currentAuthPaths, nextAuthPaths, keep, currentTreehash, nextTreehash, currentStack, nextStack, currentRetain, nextRetain, nextNextLeaf, upperLeaf, upperTreehashLeaf, minTreehash, nextRoot, nextNextRoot, currentRootSig, nextRootSig, gmssParameterset, digestProvider)
}

void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *original) {
  OrgSpongycastlePqcCryptoGmssGMSSKeyParameters_initWithBoolean_withOrgSpongycastlePqcCryptoGmssGMSSParameters_(self, true, [((OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *) nil_chk(original)) getParameters]);
  self->used_ = false;
  self->index_ = OrgSpongycastleUtilArrays_cloneWithIntArray_(original->index_);
  self->currentSeeds_ = OrgSpongycastleUtilArrays_cloneWithByteArray2_(original->currentSeeds_);
  self->nextNextSeeds_ = OrgSpongycastleUtilArrays_cloneWithByteArray2_(original->nextNextSeeds_);
  self->currentAuthPaths_ = OrgSpongycastleUtilArrays_cloneWithByteArray3_(original->currentAuthPaths_);
  self->nextAuthPaths_ = OrgSpongycastleUtilArrays_cloneWithByteArray3_(original->nextAuthPaths_);
  self->currentTreehash_ = original->currentTreehash_;
  self->nextTreehash_ = original->nextTreehash_;
  self->currentStack_ = original->currentStack_;
  self->nextStack_ = original->nextStack_;
  self->currentRetain_ = original->currentRetain_;
  self->nextRetain_ = original->nextRetain_;
  self->keep_ = OrgSpongycastleUtilArrays_cloneWithByteArray3_(original->keep_);
  self->nextNextLeaf_ = original->nextNextLeaf_;
  self->upperLeaf_ = original->upperLeaf_;
  self->upperTreehashLeaf_ = original->upperTreehashLeaf_;
  self->minTreehash_ = original->minTreehash_;
  self->gmssPS_ = original->gmssPS_;
  self->nextRoot_ = OrgSpongycastleUtilArrays_cloneWithByteArray2_(original->nextRoot_);
  self->nextNextRoot_ = original->nextNextRoot_;
  self->currentRootSig_ = original->currentRootSig_;
  self->nextRootSig_ = original->nextRootSig_;
  self->digestProvider_ = original->digestProvider_;
  self->heightOfTrees_ = original->heightOfTrees_;
  self->otsIndex_ = original->otsIndex_;
  self->K_ = original->K_;
  self->numLayer_ = original->numLayer_;
  self->messDigestTrees_ = original->messDigestTrees_;
  self->mdLength_ = original->mdLength_;
  self->gmssRandom_ = original->gmssRandom_;
  self->numLeafs_ = original->numLeafs_;
}

OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *new_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *original) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_, original)
}

OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *create_OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *original) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters, initWithOrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_, original)
}

void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextKeyWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer) {
  if (layer == self->numLayer_ - 1) {
    (*IOSIntArray_GetRef(nil_chk(self->index_), layer))++;
  }
  if (IOSIntArray_Get(nil_chk(self->index_), layer) == IOSIntArray_Get(nil_chk(self->numLeafs_), layer)) {
    if (self->numLayer_ != 1) {
      OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextTreeWithInt_(self, layer);
      *IOSIntArray_GetRef(nil_chk(self->index_), layer) = 0;
    }
  }
  else {
    OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateKeyWithInt_(self, layer);
  }
}

void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextTreeWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer) {
  if (layer > 0) {
    (*IOSIntArray_GetRef(nil_chk(self->index_), layer - 1))++;
    jboolean lastTree = true;
    jint z = layer;
    do {
      z--;
      if (IOSIntArray_Get(self->index_, z) < IOSIntArray_Get(nil_chk(self->numLeafs_), z)) {
        lastTree = false;
      }
    }
    while (lastTree && (z > 0));
    if (!lastTree) {
      (void) [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:IOSObjectArray_Get(nil_chk(self->currentSeeds_), layer)];
      [((OrgSpongycastlePqcCryptoGmssGMSSRootSig *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextRootSig_), layer - 1))) updateSign];
      if (layer > 1) {
        (void) IOSObjectArray_Set(nil_chk(self->nextNextLeaf_), layer - 1 - 1, [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(self->nextNextLeaf_, layer - 1 - 1))) nextLeaf]);
      }
      (void) IOSObjectArray_Set(nil_chk(self->upperLeaf_), layer - 1, [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(self->upperLeaf_, layer - 1))) nextLeaf]);
      if (IOSIntArray_Get(nil_chk(self->minTreehash_), layer - 1) >= 0) {
        (void) IOSObjectArray_Set(nil_chk(self->upperTreehashLeaf_), layer - 1, [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(self->upperTreehashLeaf_, layer - 1))) nextLeaf]);
        IOSByteArray *leaf = [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(nil_chk(self->upperTreehashLeaf_), layer - 1))) getLeaf];
        @try {
          [((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer - 1)), IOSIntArray_Get(nil_chk(self->minTreehash_), layer - 1)))) updateWithOrgSpongycastlePqcCryptoGmssUtilGMSSRandom:self->gmssRandom_ withByteArray:leaf];
          if ([((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer - 1)), IOSIntArray_Get(nil_chk(self->minTreehash_), layer - 1)))) wasFinished]) {
          }
        }
        @catch (JavaLangException *e) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:e];
        }
      }
      OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateNextNextAuthRootWithInt_(self, layer);
      (void) IOSObjectArray_Set(nil_chk(self->currentRootSig_), layer - 1, [((OrgSpongycastlePqcCryptoGmssGMSSRootSig *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextRootSig_), layer - 1))) getSig]);
      for (jint i = 0; i < IOSIntArray_Get(nil_chk(self->heightOfTrees_), layer) - IOSIntArray_Get(nil_chk(self->K_), layer); i++) {
        (void) IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), i, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->nextTreehash_), layer - 1)), i));
        (void) IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(self->nextTreehash_, layer - 1)), i, IOSObjectArray_Get(nil_chk([((OrgSpongycastlePqcCryptoGmssGMSSRootCalc *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextRoot_), layer - 1))) getTreehash]), i));
      }
      for (jint i = 0; i < IOSIntArray_Get(nil_chk(self->heightOfTrees_), layer); i++) {
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->nextAuthPaths_), layer - 1)), i), 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentAuthPaths_), layer)), i), 0, self->mdLength_);
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk([((OrgSpongycastlePqcCryptoGmssGMSSRootCalc *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextRoot_), layer - 1))) getAuthPath]), i), 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->nextAuthPaths_), layer - 1)), i), 0, self->mdLength_);
      }
      for (jint i = 0; i < IOSIntArray_Get(nil_chk(self->K_), layer) - 1; i++) {
        (void) IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(nil_chk(self->currentRetain_), layer)), i, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->nextRetain_), layer - 1)), i));
        (void) IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(self->nextRetain_, layer - 1)), i, IOSObjectArray_Get(nil_chk([((OrgSpongycastlePqcCryptoGmssGMSSRootCalc *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextRoot_), layer - 1))) getRetain]), i));
      }
      (void) IOSObjectArray_Set(nil_chk(self->currentStack_), layer, IOSObjectArray_Get(nil_chk(self->nextStack_), layer - 1));
      (void) IOSObjectArray_Set(self->nextStack_, layer - 1, [((OrgSpongycastlePqcCryptoGmssGMSSRootCalc *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextRoot_), layer - 1))) getStack]);
      (void) IOSObjectArray_Set(nil_chk(self->nextRoot_), layer - 1, [((OrgSpongycastlePqcCryptoGmssGMSSRootCalc *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextRoot_), layer - 1))) getRoot]);
      IOSByteArray *OTSseed = [IOSByteArray newArrayWithLength:self->mdLength_];
      IOSByteArray *dummy = [IOSByteArray newArrayWithLength:self->mdLength_];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(self->currentSeeds_), layer - 1), 0, dummy, 0, self->mdLength_);
      OTSseed = [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:dummy];
      OTSseed = [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:dummy];
      OTSseed = [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:dummy];
      [((OrgSpongycastlePqcCryptoGmssGMSSRootSig *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextRootSig_), layer - 1))) initSignWithByteArray:OTSseed withByteArray:IOSObjectArray_Get(nil_chk(self->nextRoot_), layer - 1)];
      OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_nextKeyWithInt_(self, layer - 1);
    }
  }
}

void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateKeyWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer) {
  OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_computeAuthPathsWithInt_(self, layer);
  if (layer > 0) {
    if (layer > 1) {
      (void) IOSObjectArray_Set(nil_chk(self->nextNextLeaf_), layer - 1 - 1, [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(self->nextNextLeaf_, layer - 1 - 1))) nextLeaf]);
    }
    (void) IOSObjectArray_Set(nil_chk(self->upperLeaf_), layer - 1, [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(self->upperLeaf_, layer - 1))) nextLeaf]);
    jint t = JreFpToInt(JavaLangMath_floorWithDouble_((jdouble) ([self getNumLeafsWithInt:layer] * 2) / (jdouble) (IOSIntArray_Get(nil_chk(self->heightOfTrees_), layer - 1) - IOSIntArray_Get(nil_chk(self->K_), layer - 1))));
    if (IOSIntArray_Get(nil_chk(self->index_), layer) % t == 1) {
      if (IOSIntArray_Get(self->index_, layer) > 1 && IOSIntArray_Get(nil_chk(self->minTreehash_), layer - 1) >= 0) {
        IOSByteArray *leaf = [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(nil_chk(self->upperTreehashLeaf_), layer - 1))) getLeaf];
        @try {
          [((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer - 1)), IOSIntArray_Get(nil_chk(self->minTreehash_), layer - 1)))) updateWithOrgSpongycastlePqcCryptoGmssUtilGMSSRandom:self->gmssRandom_ withByteArray:leaf];
          if ([((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer - 1)), IOSIntArray_Get(nil_chk(self->minTreehash_), layer - 1)))) wasFinished]) {
          }
        }
        @catch (JavaLangException *e) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:e];
        }
      }
      *IOSIntArray_GetRef(nil_chk(self->minTreehash_), layer - 1) = OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_getMinTreehashIndexWithInt_(self, layer - 1);
      if (IOSIntArray_Get(nil_chk(self->minTreehash_), layer - 1) >= 0) {
        IOSByteArray *seed = [((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer - 1)), IOSIntArray_Get(self->minTreehash_, layer - 1)))) getSeedActive];
        (void) IOSObjectArray_SetAndConsume(nil_chk(self->upperTreehashLeaf_), layer - 1, new_OrgSpongycastlePqcCryptoGmssGMSSLeaf_initWithOrgSpongycastleCryptoDigest_withInt_withInt_withByteArray_([((id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>) nil_chk(self->digestProvider_)) get], IOSIntArray_Get(nil_chk(self->otsIndex_), layer - 1), t, seed));
        (void) IOSObjectArray_Set(nil_chk(self->upperTreehashLeaf_), layer - 1, [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(self->upperTreehashLeaf_, layer - 1))) nextLeaf]);
      }
    }
    else {
      if (IOSIntArray_Get(nil_chk(self->minTreehash_), layer - 1) >= 0) {
        (void) IOSObjectArray_Set(nil_chk(self->upperTreehashLeaf_), layer - 1, [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(self->upperTreehashLeaf_, layer - 1))) nextLeaf]);
      }
    }
    [((OrgSpongycastlePqcCryptoGmssGMSSRootSig *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextRootSig_), layer - 1))) updateSign];
    if (IOSIntArray_Get(nil_chk(self->index_), layer) == 1) {
      [((OrgSpongycastlePqcCryptoGmssGMSSRootCalc *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextRoot_), layer - 1))) initialize__WithJavaUtilVector:new_JavaUtilVector_init()];
    }
    OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateNextNextAuthRootWithInt_(self, layer);
  }
}

jint OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_getMinTreehashIndexWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer) {
  jint minTreehash = -1;
  for (jint h = 0; h < IOSIntArray_Get(nil_chk(self->heightOfTrees_), layer) - IOSIntArray_Get(nil_chk(self->K_), layer); h++) {
    if ([((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), h))) wasInitialized] && ![((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), h))) wasFinished]) {
      if (minTreehash == -1) {
        minTreehash = h;
      }
      else if ([((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), h))) getLowestNodeHeight] < [((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), minTreehash))) getLowestNodeHeight]) {
        minTreehash = h;
      }
    }
  }
  return minTreehash;
}

void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_computeAuthPathsWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer) {
  jint Phi = IOSIntArray_Get(nil_chk(self->index_), layer);
  jint H = IOSIntArray_Get(nil_chk(self->heightOfTrees_), layer);
  jint K = IOSIntArray_Get(nil_chk(self->K_), layer);
  for (jint i = 0; i < H - K; i++) {
    [((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), i))) updateNextSeedWithOrgSpongycastlePqcCryptoGmssUtilGMSSRandom:self->gmssRandom_];
  }
  jint Tau = OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_heightOfPhiWithInt_(self, Phi);
  IOSByteArray *OTSseed = [IOSByteArray newArrayWithLength:self->mdLength_];
  OTSseed = [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:IOSObjectArray_Get(nil_chk(self->currentSeeds_), layer)];
  jint L = (JreURShift32(Phi, (Tau + 1))) & 1;
  IOSByteArray *tempKeep = [IOSByteArray newArrayWithLength:self->mdLength_];
  if (Tau < H - 1 && L == 0) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentAuthPaths_), layer)), Tau), 0, tempKeep, 0, self->mdLength_);
  }
  IOSByteArray *help = [IOSByteArray newArrayWithLength:self->mdLength_];
  if (Tau == 0) {
    if (layer == self->numLayer_ - 1) {
      OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSignature *ots = new_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSignature_initWithByteArray_withOrgSpongycastleCryptoDigest_withInt_(OTSseed, [((id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>) nil_chk(self->digestProvider_)) get], IOSIntArray_Get(nil_chk(self->otsIndex_), layer));
      help = [ots getPublicKey];
    }
    else {
      IOSByteArray *dummy = [IOSByteArray newArrayWithLength:self->mdLength_];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(self->currentSeeds_), layer), 0, dummy, 0, self->mdLength_);
      (void) [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:dummy];
      help = [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(nil_chk(self->upperLeaf_), layer))) getLeaf];
      [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(nil_chk(self->upperLeaf_), layer))) initLeafCalcWithByteArray:dummy];
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(help, 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentAuthPaths_), layer)), 0), 0, self->mdLength_);
  }
  else {
    IOSByteArray *toBeHashed = [IOSByteArray newArrayWithLength:JreLShift32(self->mdLength_, 1)];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentAuthPaths_), layer)), Tau - 1), 0, toBeHashed, 0, self->mdLength_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->keep_), layer)), JreFpToInt(JavaLangMath_floorWithDouble_((Tau - 1) / 2))), 0, toBeHashed, self->mdLength_, self->mdLength_);
    [((id<OrgSpongycastleCryptoDigest>) nil_chk(self->messDigestTrees_)) updateWithByteArray:toBeHashed withInt:0 withInt:toBeHashed->size_];
    (void) IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(nil_chk(self->currentAuthPaths_), layer)), Tau, [IOSByteArray newArrayWithLength:[((id<OrgSpongycastleCryptoDigest>) nil_chk(self->messDigestTrees_)) getDigestSize]]);
    [((id<OrgSpongycastleCryptoDigest>) nil_chk(self->messDigestTrees_)) doFinalWithByteArray:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentAuthPaths_), layer)), Tau) withInt:0];
    for (jint i = 0; i < Tau; i++) {
      if (i < H - K) {
        if ([((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), i))) wasFinished]) {
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), i))) getFirstNode], 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentAuthPaths_), layer)), i), 0, self->mdLength_);
          [((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), i))) destroy];
        }
        else {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$ICI$", @"Treehash (", layer, ',', i, @") not finished when needed in AuthPathComputation")];
        }
      }
      if (i < H - 1 && i >= H - K) {
        if ([((JavaUtilVector *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentRetain_), layer)), i - (H - K)))) size] > 0) {
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([((JavaUtilVector *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentRetain_), layer)), i - (H - K)))) lastElement], 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentAuthPaths_), layer)), i), 0, self->mdLength_);
          [((JavaUtilVector *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentRetain_), layer)), i - (H - K)))) removeElementAtWithInt:[((JavaUtilVector *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->currentRetain_, layer)), i - (H - K)))) size] - 1];
        }
      }
      if (i < H - K) {
        jint startPoint = Phi + 3 * (JreLShift32(1, i));
        if (startPoint < IOSIntArray_Get(nil_chk(self->numLeafs_), layer)) {
          [((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), i))) initialize__];
        }
      }
    }
  }
  if (Tau < H - 1 && L == 0) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tempKeep, 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->keep_), layer)), JreFpToInt(JavaLangMath_floorWithDouble_(Tau / 2))), 0, self->mdLength_);
  }
  if (layer == self->numLayer_ - 1) {
    for (jint tmp = 1; tmp <= (H - K) / 2; tmp++) {
      jint minTreehash = OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_getMinTreehashIndexWithInt_(self, layer);
      if (minTreehash >= 0) {
        @try {
          IOSByteArray *seed = [IOSByteArray newArrayWithLength:self->mdLength_];
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), minTreehash))) getSeedActive], 0, seed, 0, self->mdLength_);
          IOSByteArray *seed2 = [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:seed];
          OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSignature *ots = new_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSignature_initWithByteArray_withOrgSpongycastleCryptoDigest_withInt_(seed2, [((id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>) nil_chk(self->digestProvider_)) get], IOSIntArray_Get(nil_chk(self->otsIndex_), layer));
          IOSByteArray *leaf = [ots getPublicKey];
          [((OrgSpongycastlePqcCryptoGmssTreehash *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->currentTreehash_), layer)), minTreehash))) updateWithOrgSpongycastlePqcCryptoGmssUtilGMSSRandom:self->gmssRandom_ withByteArray:leaf];
        }
        @catch (JavaLangException *e) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:e];
        }
      }
    }
  }
  else {
    *IOSIntArray_GetRef(nil_chk(self->minTreehash_), layer) = OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_getMinTreehashIndexWithInt_(self, layer);
  }
}

jint OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_heightOfPhiWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint Phi) {
  if (Phi == 0) {
    return -1;
  }
  jint Tau = 0;
  jint modul = 1;
  while (Phi % modul == 0) {
    modul *= 2;
    Tau += 1;
  }
  return Tau - 1;
}

void OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters_updateNextNextAuthRootWithInt_(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, jint layer) {
  IOSByteArray *OTSseed = [IOSByteArray newArrayWithLength:self->mdLength_];
  OTSseed = [((OrgSpongycastlePqcCryptoGmssUtilGMSSRandom *) nil_chk(self->gmssRandom_)) nextSeedWithByteArray:IOSObjectArray_Get(nil_chk(self->nextNextSeeds_), layer - 1)];
  if (layer == self->numLayer_ - 1) {
    OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSignature *ots = new_OrgSpongycastlePqcCryptoGmssUtilWinternitzOTSignature_initWithByteArray_withOrgSpongycastleCryptoDigest_withInt_(OTSseed, [((id<OrgSpongycastlePqcCryptoGmssGMSSDigestProvider>) nil_chk(self->digestProvider_)) get], IOSIntArray_Get(nil_chk(self->otsIndex_), layer));
    [((OrgSpongycastlePqcCryptoGmssGMSSRootCalc *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextRoot_), layer - 1))) updateWithByteArray:IOSObjectArray_Get(nil_chk(self->nextNextSeeds_), layer - 1) withByteArray:[ots getPublicKey]];
  }
  else {
    [((OrgSpongycastlePqcCryptoGmssGMSSRootCalc *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextRoot_), layer - 1))) updateWithByteArray:IOSObjectArray_Get(nil_chk(self->nextNextSeeds_), layer - 1) withByteArray:[((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextLeaf_), layer - 1))) getLeaf]];
    [((OrgSpongycastlePqcCryptoGmssGMSSLeaf *) nil_chk(IOSObjectArray_Get(nil_chk(self->nextNextLeaf_), layer - 1))) initLeafCalcWithByteArray:IOSObjectArray_Get(nil_chk(self->nextNextSeeds_), layer - 1)];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoGmssGMSSPrivateKeyParameters)
