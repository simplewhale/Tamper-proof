//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/mceliece/McElieceCCA2KeyPairGenerator.java
//

#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/pqc/crypto/mceliece/McElieceCCA2KeyGenerationParameters.h"
#include "org/spongycastle/pqc/crypto/mceliece/McElieceCCA2KeyPairGenerator.h"
#include "org/spongycastle/pqc/crypto/mceliece/McElieceCCA2Parameters.h"
#include "org/spongycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters.h"
#include "org/spongycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2Matrix.h"
#include "org/spongycastle/pqc/math/linearalgebra/GF2mField.h"
#include "org/spongycastle/pqc/math/linearalgebra/GoppaCode.h"
#include "org/spongycastle/pqc/math/linearalgebra/Matrix.h"
#include "org/spongycastle/pqc/math/linearalgebra/Permutation.h"
#include "org/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.h"

@interface OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator () {
 @public
  OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *mcElieceCCA2Params_;
  jint m_;
  jint n_;
  jint t_;
  jint fieldPoly_;
  JavaSecuritySecureRandom *random_;
  jboolean initialized_;
}

- (void)initializeDefault OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator, mcElieceCCA2Params_, OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator, random_, JavaSecuritySecureRandom *)

__attribute__((unused)) static void OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_initializeDefault(OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *self);

NSString *OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_OID = @"1.3.6.1.4.1.8301.3.1.3.4.2";

@implementation OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)initializeDefault {
  OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_initializeDefault(self);
}

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param {
  self->mcElieceCCA2Params_ = (OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *) cast_chk(param, [OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters class]);
  self->random_ = new_JavaSecuritySecureRandom_init();
  self->m_ = [((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2Parameters *) nil_chk([((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *) nil_chk(self->mcElieceCCA2Params_)) getParameters])) getM];
  self->n_ = [((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2Parameters *) nil_chk([((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *) nil_chk(self->mcElieceCCA2Params_)) getParameters])) getN];
  self->t_ = [((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2Parameters *) nil_chk([((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *) nil_chk(self->mcElieceCCA2Params_)) getParameters])) getT];
  self->fieldPoly_ = [((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2Parameters *) nil_chk([((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *) nil_chk(self->mcElieceCCA2Params_)) getParameters])) getFieldPoly];
  self->initialized_ = true;
}

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair {
  if (!initialized_) {
    OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_initializeDefault(self);
  }
  OrgSpongycastlePqcMathLinearalgebraGF2mField *field = new_OrgSpongycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(m_, fieldPoly_);
  OrgSpongycastlePqcMathLinearalgebraPolynomialGF2mSmallM *gp = new_OrgSpongycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgSpongycastlePqcMathLinearalgebraGF2mField_withInt_withChar_withJavaSecuritySecureRandom_(field, t_, OrgSpongycastlePqcMathLinearalgebraPolynomialGF2mSmallM_RANDOM_IRREDUCIBLE_POLYNOMIAL, random_);
  OrgSpongycastlePqcMathLinearalgebraGF2Matrix *h = OrgSpongycastlePqcMathLinearalgebraGoppaCode_createCanonicalCheckMatrixWithOrgSpongycastlePqcMathLinearalgebraGF2mField_withOrgSpongycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(field, gp);
  OrgSpongycastlePqcMathLinearalgebraGoppaCode_MaMaPe *mmp = OrgSpongycastlePqcMathLinearalgebraGoppaCode_computeSystematicFormWithOrgSpongycastlePqcMathLinearalgebraGF2Matrix_withJavaSecuritySecureRandom_(h, random_);
  OrgSpongycastlePqcMathLinearalgebraGF2Matrix *shortH = [((OrgSpongycastlePqcMathLinearalgebraGoppaCode_MaMaPe *) nil_chk(mmp)) getSecondMatrix];
  OrgSpongycastlePqcMathLinearalgebraPermutation *p = [mmp getPermutation];
  OrgSpongycastlePqcMathLinearalgebraGF2Matrix *shortG = (OrgSpongycastlePqcMathLinearalgebraGF2Matrix *) cast_chk([((OrgSpongycastlePqcMathLinearalgebraGF2Matrix *) nil_chk(shortH)) computeTranspose], [OrgSpongycastlePqcMathLinearalgebraGF2Matrix class]);
  jint k = [((OrgSpongycastlePqcMathLinearalgebraGF2Matrix *) nil_chk(shortG)) getNumRows];
  OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters *pubKey = new_OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters_initWithInt_withInt_withOrgSpongycastlePqcMathLinearalgebraGF2Matrix_withNSString_(n_, t_, shortG, [((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2Parameters *) nil_chk([((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *) nil_chk(mcElieceCCA2Params_)) getParameters])) getDigest]);
  OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *privKey = new_OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_initWithInt_withInt_withOrgSpongycastlePqcMathLinearalgebraGF2mField_withOrgSpongycastlePqcMathLinearalgebraPolynomialGF2mSmallM_withOrgSpongycastlePqcMathLinearalgebraPermutation_withNSString_(n_, k, field, gp, p, [((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2Parameters *) nil_chk([((OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *) nil_chk(mcElieceCCA2Params_)) getParameters])) getDigest]);
  return new_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(pubKey, privKey);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initializeDefault);
  methods[2].selector = @selector(init__WithOrgSpongycastleCryptoKeyGenerationParameters:);
  methods[3].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "OID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "mcElieceCCA2Params_", "LOrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "m_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "n_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "t_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldPoly_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "initialized_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoKeyGenerationParameters;", &OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_OID };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator = { "McElieceCCA2KeyPairGenerator", "org.spongycastle.pqc.crypto.mceliece", ptrTable, methods, fields, 7, 0x1, 4, 8, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator;
}

@end

void OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init(OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *self) {
  NSObject_init(self);
  self->initialized_ = false;
}

OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *new_OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator, init)
}

OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *create_OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator, init)
}

void OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_initializeDefault(OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *self) {
  OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters *mcCCA2Params = new_OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgSpongycastlePqcCryptoMcelieceMcElieceCCA2Parameters_(new_JavaSecuritySecureRandom_init(), new_OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2Parameters_init());
  [self init__WithOrgSpongycastleCryptoKeyGenerationParameters:mcCCA2Params];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator)
