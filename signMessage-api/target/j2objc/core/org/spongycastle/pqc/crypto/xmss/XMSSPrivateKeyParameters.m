//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/pqc/crypto/xmss/BDS.h"
#include "org/spongycastle/pqc/crypto/xmss/OTSHashAddress.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSAddress.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSUtil.h"
#include "org/spongycastle/util/Arrays.h"
#include "org/spongycastle/util/Pack.h"

@interface OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters () {
 @public
  OrgSpongycastlePqcCryptoXmssXMSSParameters *params_;
  IOSByteArray *secretKeySeed_;
  IOSByteArray *secretKeyPRF_;
  IOSByteArray *publicSeed_;
  IOSByteArray *root_;
  OrgSpongycastlePqcCryptoXmssBDS *bdsState_;
}

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder:(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters, params_, OrgSpongycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters, secretKeySeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters, secretKeyPRF_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters, publicSeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters, root_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters, bdsState_, OrgSpongycastlePqcCryptoXmssBDS *)

__attribute__((unused)) static void OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *self, OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder);

__attribute__((unused)) static OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *new_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *create_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder);

@interface OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder () {
 @public
  OrgSpongycastlePqcCryptoXmssXMSSParameters *params_;
  jint index_;
  IOSByteArray *secretKeySeed_;
  IOSByteArray *secretKeyPRF_;
  IOSByteArray *publicSeed_;
  IOSByteArray *root_;
  OrgSpongycastlePqcCryptoXmssBDS *bdsState_;
  IOSByteArray *privateKey_;
  OrgSpongycastlePqcCryptoXmssXMSSParameters *xmss_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, params_, OrgSpongycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, secretKeySeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, secretKeyPRF_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, publicSeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, root_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, bdsState_, OrgSpongycastlePqcCryptoXmssBDS *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, privateKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, xmss_, OrgSpongycastlePqcCryptoXmssXMSSParameters *)

@implementation OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder:(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)builder {
  OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(self, builder);
  return self;
}

- (IOSByteArray *)toByteArray {
  jint n = [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(params_)) getDigestSize];
  jint indexSize = 4;
  jint secretKeySize = n;
  jint secretKeyPRFSize = n;
  jint publicSeedSize = n;
  jint rootSize = n;
  jint totalSize = indexSize + secretKeySize + secretKeyPRFSize + publicSeedSize + rootSize;
  IOSByteArray *out = [IOSByteArray newArrayWithLength:totalSize];
  jint position = 0;
  OrgSpongycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_([((OrgSpongycastlePqcCryptoXmssBDS *) nil_chk(bdsState_)) getIndex], out, position);
  position += indexSize;
  OrgSpongycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, secretKeySeed_, position);
  position += secretKeySize;
  OrgSpongycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, secretKeyPRF_, position);
  position += secretKeyPRFSize;
  OrgSpongycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, publicSeed_, position);
  position += publicSeedSize;
  OrgSpongycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, root_, position);
  IOSByteArray *bdsStateOut = nil;
  @try {
    bdsStateOut = OrgSpongycastlePqcCryptoXmssXMSSUtil_serializeWithId_(bdsState_);
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$", @"error serializing bds state: ", [e getMessage]));
  }
  return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_(out, bdsStateOut);
}

- (jint)getIndex {
  return [((OrgSpongycastlePqcCryptoXmssBDS *) nil_chk(bdsState_)) getIndex];
}

- (IOSByteArray *)getSecretKeySeed {
  return OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(secretKeySeed_);
}

- (IOSByteArray *)getSecretKeyPRF {
  return OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(secretKeyPRF_);
}

- (IOSByteArray *)getPublicSeed {
  return OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(publicSeed_);
}

- (IOSByteArray *)getRoot {
  return OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(root_);
}

- (OrgSpongycastlePqcCryptoXmssBDS *)getBDSState {
  return bdsState_;
}

- (OrgSpongycastlePqcCryptoXmssXMSSParameters *)getParameters {
  return params_;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *)getNextKey {
  jint treeHeight = [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(self->params_)) getHeight];
  if ([self getIndex] < ((JreLShift32(1, treeHeight)) - 1)) {
    return [((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(params_) withSecretKeySeedWithByteArray:secretKeySeed_])) withSecretKeyPRFWithByteArray:secretKeyPRF_])) withPublicSeedWithByteArray:publicSeed_])) withRootWithByteArray:root_])) withBDSStateWithOrgSpongycastlePqcCryptoXmssBDS:[((OrgSpongycastlePqcCryptoXmssBDS *) nil_chk(bdsState_)) getNextStateWithByteArray:publicSeed_ withByteArray:secretKeySeed_ withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *) cast_chk([new_OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder_init() build], [OrgSpongycastlePqcCryptoXmssOTSHashAddress class])]])) build];
  }
  else {
    return [((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(params_) withSecretKeySeedWithByteArray:secretKeySeed_])) withSecretKeyPRFWithByteArray:secretKeyPRF_])) withPublicSeedWithByteArray:publicSeed_])) withRootWithByteArray:root_])) withBDSStateWithOrgSpongycastlePqcCryptoXmssBDS:new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(params_, [self getIndex] + 1)])) build];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssBDS;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder:);
  methods[1].selector = @selector(toByteArray);
  methods[2].selector = @selector(getIndex);
  methods[3].selector = @selector(getSecretKeySeed);
  methods[4].selector = @selector(getSecretKeyPRF);
  methods[5].selector = @selector(getPublicSeed);
  methods[6].selector = @selector(getRoot);
  methods[7].selector = @selector(getBDSState);
  methods[8].selector = @selector(getParameters);
  methods[9].selector = @selector(getNextKey);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "secretKeySeed_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "secretKeyPRF_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "publicSeed_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bdsState_", "LOrgSpongycastlePqcCryptoXmssBDS;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters = { "XMSSPrivateKeyParameters", "org.spongycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 10, 6, -1, 0, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters;
}

@end

void OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *self, OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder) {
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, true);
  self->params_ = ((OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk(builder))->params_;
  if (self->params_ == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"params == null");
  }
  jint n = [self->params_ getDigestSize];
  IOSByteArray *privateKey = builder->privateKey_;
  if (privateKey != nil) {
    if (builder->xmss_ == nil) {
      @throw new_JavaLangNullPointerException_initWithNSString_(@"xmss == null");
    }
    jint height = [self->params_ getHeight];
    jint indexSize = 4;
    jint secretKeySize = n;
    jint secretKeyPRFSize = n;
    jint publicSeedSize = n;
    jint rootSize = n;
    jint position = 0;
    jint index = OrgSpongycastleUtilPack_bigEndianToIntWithByteArray_withInt_(privateKey, position);
    if (!OrgSpongycastlePqcCryptoXmssXMSSUtil_isIndexValidWithInt_withLong_(height, index)) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"index out of bounds");
    }
    position += indexSize;
    self->secretKeySeed_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, secretKeySize);
    position += secretKeySize;
    self->secretKeyPRF_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, secretKeyPRFSize);
    position += secretKeyPRFSize;
    self->publicSeed_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, publicSeedSize);
    position += publicSeedSize;
    self->root_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, rootSize);
    position += rootSize;
    IOSByteArray *bdsStateBinary = OrgSpongycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, privateKey->size_ - position);
    OrgSpongycastlePqcCryptoXmssBDS *bdsImport = nil;
    @try {
      bdsImport = (OrgSpongycastlePqcCryptoXmssBDS *) cast_chk(OrgSpongycastlePqcCryptoXmssXMSSUtil_deserializeWithByteArray_(bdsStateBinary), [OrgSpongycastlePqcCryptoXmssBDS class]);
    }
    @catch (JavaIoIOException *e) {
      [e printStackTrace];
    }
    @catch (JavaLangClassNotFoundException *e) {
      [e printStackTrace];
    }
    [((OrgSpongycastlePqcCryptoXmssBDS *) nil_chk(bdsImport)) setXMSSWithOrgSpongycastlePqcCryptoXmssXMSSParameters:builder->xmss_];
    [bdsImport validate];
    if ([bdsImport getIndex] != index) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"serialized BDS has wrong index");
    }
    self->bdsState_ = bdsImport;
  }
  else {
    IOSByteArray *tmpSecretKeySeed = builder->secretKeySeed_;
    if (tmpSecretKeySeed != nil) {
      if (tmpSecretKeySeed->size_ != n) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of secretKeySeed needs to be equal size of digest");
      }
      self->secretKeySeed_ = tmpSecretKeySeed;
    }
    else {
      self->secretKeySeed_ = [IOSByteArray newArrayWithLength:n];
    }
    IOSByteArray *tmpSecretKeyPRF = builder->secretKeyPRF_;
    if (tmpSecretKeyPRF != nil) {
      if (tmpSecretKeyPRF->size_ != n) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of secretKeyPRF needs to be equal size of digest");
      }
      self->secretKeyPRF_ = tmpSecretKeyPRF;
    }
    else {
      self->secretKeyPRF_ = [IOSByteArray newArrayWithLength:n];
    }
    IOSByteArray *tmpPublicSeed = builder->publicSeed_;
    if (tmpPublicSeed != nil) {
      if (tmpPublicSeed->size_ != n) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of publicSeed needs to be equal size of digest");
      }
      self->publicSeed_ = tmpPublicSeed;
    }
    else {
      self->publicSeed_ = [IOSByteArray newArrayWithLength:n];
    }
    IOSByteArray *tmpRoot = builder->root_;
    if (tmpRoot != nil) {
      if (tmpRoot->size_ != n) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of root needs to be equal size of digest");
      }
      self->root_ = tmpRoot;
    }
    else {
      self->root_ = [IOSByteArray newArrayWithLength:n];
    }
    OrgSpongycastlePqcCryptoXmssBDS *tmpBDSState = builder->bdsState_;
    if (tmpBDSState != nil) {
      self->bdsState_ = tmpBDSState;
    }
    else {
      if (builder->index_ < ((JreLShift32(1, [self->params_ getHeight])) - 2) && tmpPublicSeed != nil && tmpSecretKeySeed != nil) {
        self->bdsState_ = new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_(self->params_, tmpPublicSeed, tmpSecretKeySeed, (OrgSpongycastlePqcCryptoXmssOTSHashAddress *) cast_chk([new_OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder_init() build], [OrgSpongycastlePqcCryptoXmssOTSHashAddress class]), builder->index_);
      }
      else {
        self->bdsState_ = new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(self->params_, builder->index_);
      }
    }
  }
}

OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *new_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters, initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_, builder)
}

OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *create_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters, initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_, builder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters)

@implementation OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params {
  OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(self, params);
  return self;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withIndexWithInt:(jint)val {
  index_ = val;
  return self;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withSecretKeySeedWithByteArray:(IOSByteArray *)val {
  secretKeySeed_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withSecretKeyPRFWithByteArray:(IOSByteArray *)val {
  secretKeyPRF_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withPublicSeedWithByteArray:(IOSByteArray *)val {
  publicSeed_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withRootWithByteArray:(IOSByteArray *)val {
  root_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withBDSStateWithOrgSpongycastlePqcCryptoXmssBDS:(OrgSpongycastlePqcCryptoXmssBDS *)valBDS {
  bdsState_ = valBDS;
  return self;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withPrivateKeyWithByteArray:(IOSByteArray *)privateKeyVal
                                               withOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)xmssParameters {
  privateKey_ = OrgSpongycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(privateKeyVal);
  xmss_ = xmssParameters;
  return self;
}

- (OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters *)build {
  return new_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 7, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:);
  methods[1].selector = @selector(withIndexWithInt:);
  methods[2].selector = @selector(withSecretKeySeedWithByteArray:);
  methods[3].selector = @selector(withSecretKeyPRFWithByteArray:);
  methods[4].selector = @selector(withPublicSeedWithByteArray:);
  methods[5].selector = @selector(withRootWithByteArray:);
  methods[6].selector = @selector(withBDSStateWithOrgSpongycastlePqcCryptoXmssBDS:);
  methods[7].selector = @selector(withPrivateKeyWithByteArray:withOrgSpongycastlePqcCryptoXmssXMSSParameters:);
  methods[8].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "secretKeySeed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "secretKeyPRF_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicSeed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bdsState_", "LOrgSpongycastlePqcCryptoXmssBDS;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privateKey_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xmss_", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", "withIndex", "I", "withSecretKeySeed", "[B", "withSecretKeyPRF", "withPublicSeed", "withRoot", "withBDSState", "LOrgSpongycastlePqcCryptoXmssBDS;", "withPrivateKey", "[BLOrgSpongycastlePqcCryptoXmssXMSSParameters;", "LOrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder = { "Builder", "org.spongycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x9, 9, 9, 12, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;
}

@end

void OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params) {
  NSObject_init(self);
  self->index_ = 0;
  self->secretKeySeed_ = nil;
  self->secretKeyPRF_ = nil;
  self->publicSeed_ = nil;
  self->root_ = nil;
  self->bdsState_ = nil;
  self->privateKey_ = nil;
  self->xmss_ = nil;
  self->params_ = params;
}

OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *new_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_, params)
}

OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *create_OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder)
