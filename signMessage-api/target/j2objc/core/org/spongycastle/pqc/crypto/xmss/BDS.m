//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/xmss/BDS.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/util/ArrayList.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Stack.h"
#include "java/util/TreeMap.h"
#include "org/spongycastle/pqc/crypto/xmss/BDS.h"
#include "org/spongycastle/pqc/crypto/xmss/BDSTreeHash.h"
#include "org/spongycastle/pqc/crypto/xmss/HashTreeAddress.h"
#include "org/spongycastle/pqc/crypto/xmss/LTreeAddress.h"
#include "org/spongycastle/pqc/crypto/xmss/OTSHashAddress.h"
#include "org/spongycastle/pqc/crypto/xmss/WOTSPlus.h"
#include "org/spongycastle/pqc/crypto/xmss/WOTSPlusPublicKeyParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSAddress.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSNode.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSNodeUtil.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/spongycastle/pqc/crypto/xmss/XMSSUtil.h"

@interface OrgSpongycastlePqcCryptoXmssBDS () {
 @public
  OrgSpongycastlePqcCryptoXmssWOTSPlus *wotsPlus_;
  jint treeHeight_;
  id<JavaUtilList> treeHashInstances_;
  jint k_;
  OrgSpongycastlePqcCryptoXmssXMSSNode *root_;
  id<JavaUtilList> authenticationPath_;
  id<JavaUtilMap> retain__;
  JavaUtilStack *stack_;
  id<JavaUtilMap> keep_;
  jint index_;
  jboolean used_;
}

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssWOTSPlus:(OrgSpongycastlePqcCryptoXmssWOTSPlus *)wotsPlus
                                                     withInt:(jint)treeHeight
                                                     withInt:(jint)k;

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssBDS:(OrgSpongycastlePqcCryptoXmssBDS *)last
                                          withByteArray:(IOSByteArray *)publicSeed
                                          withByteArray:(IOSByteArray *)secretKeySeed
         withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (void)initialize__WithByteArray:(IOSByteArray *)publicSeed
                    withByteArray:(IOSByteArray *)secretSeed
withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress OBJC_METHOD_FAMILY_NONE;

- (void)nextAuthenticationPathWithByteArray:(IOSByteArray *)publicSeed
                              withByteArray:(IOSByteArray *)secretSeed
withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (OrgSpongycastlePqcCryptoXmssBDSTreeHash *)getBDSTreeHashInstanceForUpdate;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssBDS, wotsPlus_, OrgSpongycastlePqcCryptoXmssWOTSPlus *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssBDS, treeHashInstances_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssBDS, root_, OrgSpongycastlePqcCryptoXmssXMSSNode *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssBDS, authenticationPath_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssBDS, retain__, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssBDS, stack_, JavaUtilStack *)
J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoXmssBDS, keep_, id<JavaUtilMap>)

inline jlong OrgSpongycastlePqcCryptoXmssBDS_get_serialVersionUID(void);
#define OrgSpongycastlePqcCryptoXmssBDS_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastlePqcCryptoXmssBDS, serialVersionUID, jlong)

__attribute__((unused)) static void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k);

__attribute__((unused)) static OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(OrgSpongycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(OrgSpongycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

__attribute__((unused)) static OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *self, IOSByteArray *publicSeed, IOSByteArray *secretSeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

__attribute__((unused)) static void OrgSpongycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *self, IOSByteArray *publicSeed, IOSByteArray *secretSeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

__attribute__((unused)) static OrgSpongycastlePqcCryptoXmssBDSTreeHash *OrgSpongycastlePqcCryptoXmssBDS_getBDSTreeHashInstanceForUpdate(OrgSpongycastlePqcCryptoXmssBDS *self);

@implementation OrgSpongycastlePqcCryptoXmssBDS

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params
                                                           withInt:(jint)index {
  OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(self, params, index);
  return self;
}

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params
                                                     withByteArray:(IOSByteArray *)publicSeed
                                                     withByteArray:(IOSByteArray *)secretKeySeed
                    withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, params, publicSeed, secretKeySeed, otsHashAddress);
  return self;
}

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)params
                                                     withByteArray:(IOSByteArray *)publicSeed
                                                     withByteArray:(IOSByteArray *)secretKeySeed
                    withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress
                                                           withInt:(jint)index {
  OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_(self, params, publicSeed, secretKeySeed, otsHashAddress, index);
  return self;
}

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssWOTSPlus:(OrgSpongycastlePqcCryptoXmssWOTSPlus *)wotsPlus
                                                     withInt:(jint)treeHeight
                                                     withInt:(jint)k {
  OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(self, wotsPlus, treeHeight, k);
  return self;
}

- (instancetype)initWithOrgSpongycastlePqcCryptoXmssBDS:(OrgSpongycastlePqcCryptoXmssBDS *)last
                                          withByteArray:(IOSByteArray *)publicSeed
                                          withByteArray:(IOSByteArray *)secretKeySeed
         withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, last, publicSeed, secretKeySeed, otsHashAddress);
  return self;
}

- (OrgSpongycastlePqcCryptoXmssBDS *)getNextStateWithByteArray:(IOSByteArray *)publicSeed
                                                 withByteArray:(IOSByteArray *)secretKeySeed
                withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  return new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
}

- (void)initialize__WithByteArray:(IOSByteArray *)publicSeed
                    withByteArray:(IOSByteArray *)secretSeed
withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  OrgSpongycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretSeed, otsHashAddress);
}

- (void)nextAuthenticationPathWithByteArray:(IOSByteArray *)publicSeed
                              withByteArray:(IOSByteArray *)secretSeed
withOrgSpongycastlePqcCryptoXmssOTSHashAddress:(OrgSpongycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  OrgSpongycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretSeed, otsHashAddress);
}

- (jboolean)isUsed {
  return used_;
}

- (OrgSpongycastlePqcCryptoXmssBDSTreeHash *)getBDSTreeHashInstanceForUpdate {
  return OrgSpongycastlePqcCryptoXmssBDS_getBDSTreeHashInstanceForUpdate(self);
}

- (void)validate {
  if (authenticationPath_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"authenticationPath == null");
  }
  if (retain__ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"retain == null");
  }
  if (stack_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"stack == null");
  }
  if (treeHashInstances_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"treeHashInstances == null");
  }
  if (keep_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"keep == null");
  }
  if (!OrgSpongycastlePqcCryptoXmssXMSSUtil_isIndexValidWithInt_withLong_(treeHeight_, index_)) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"index in BDS state out of bounds");
  }
}

- (jint)getTreeHeight {
  return treeHeight_;
}

- (OrgSpongycastlePqcCryptoXmssXMSSNode *)getRoot {
  return [((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk(root_)) java_clone];
}

- (id<JavaUtilList>)getAuthenticationPath {
  id<JavaUtilList> authenticationPath = new_JavaUtilArrayList_init();
  for (OrgSpongycastlePqcCryptoXmssXMSSNode * __strong node in nil_chk(self->authenticationPath_)) {
    [authenticationPath addWithId:[((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) java_clone]];
  }
  return authenticationPath;
}

- (void)setXMSSWithOrgSpongycastlePqcCryptoXmssXMSSParameters:(OrgSpongycastlePqcCryptoXmssXMSSParameters *)xmss {
  if (treeHeight_ != [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(xmss)) getHeight]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"wrong height");
  }
  self->wotsPlus_ = [xmss getWOTSPlus];
}

- (jint)getIndex {
  return index_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssBDS;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssBDSTreeHash;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastlePqcCryptoXmssXMSSNode;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 9, -1, -1 },
    { NULL, "V", 0x4, 10, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:withInt:);
  methods[1].selector = @selector(initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:withByteArray:withByteArray:withOrgSpongycastlePqcCryptoXmssOTSHashAddress:);
  methods[2].selector = @selector(initWithOrgSpongycastlePqcCryptoXmssXMSSParameters:withByteArray:withByteArray:withOrgSpongycastlePqcCryptoXmssOTSHashAddress:withInt:);
  methods[3].selector = @selector(initWithOrgSpongycastlePqcCryptoXmssWOTSPlus:withInt:withInt:);
  methods[4].selector = @selector(initWithOrgSpongycastlePqcCryptoXmssBDS:withByteArray:withByteArray:withOrgSpongycastlePqcCryptoXmssOTSHashAddress:);
  methods[5].selector = @selector(getNextStateWithByteArray:withByteArray:withOrgSpongycastlePqcCryptoXmssOTSHashAddress:);
  methods[6].selector = @selector(initialize__WithByteArray:withByteArray:withOrgSpongycastlePqcCryptoXmssOTSHashAddress:);
  methods[7].selector = @selector(nextAuthenticationPathWithByteArray:withByteArray:withOrgSpongycastlePqcCryptoXmssOTSHashAddress:);
  methods[8].selector = @selector(isUsed);
  methods[9].selector = @selector(getBDSTreeHashInstanceForUpdate);
  methods[10].selector = @selector(validate);
  methods[11].selector = @selector(getTreeHeight);
  methods[12].selector = @selector(getRoot);
  methods[13].selector = @selector(getAuthenticationPath);
  methods[14].selector = @selector(setXMSSWithOrgSpongycastlePqcCryptoXmssXMSSParameters:);
  methods[15].selector = @selector(getIndex);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgSpongycastlePqcCryptoXmssBDS_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "wotsPlus_", "LOrgSpongycastlePqcCryptoXmssWOTSPlus;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "treeHeight_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "treeHashInstances_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 12, -1 },
    { "k_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "root_", "LOrgSpongycastlePqcCryptoXmssXMSSNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "authenticationPath_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 13, -1 },
    { "retain__", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, 14, -1, 15, -1 },
    { "stack_", "LJavaUtilStack;", .constantValue.asLong = 0, 0x2, -1, -1, 16, -1 },
    { "keep_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 17, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "used_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastlePqcCryptoXmssXMSSParameters;I", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;[B[BLOrgSpongycastlePqcCryptoXmssOTSHashAddress;", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;[B[BLOrgSpongycastlePqcCryptoXmssOTSHashAddress;I", "LOrgSpongycastlePqcCryptoXmssWOTSPlus;II", "LOrgSpongycastlePqcCryptoXmssBDS;[B[BLOrgSpongycastlePqcCryptoXmssOTSHashAddress;", "getNextState", "[B[BLOrgSpongycastlePqcCryptoXmssOTSHashAddress;", "initialize", "nextAuthenticationPath", "()Ljava/util/List<Lorg/spongycastle/pqc/crypto/xmss/XMSSNode;>;", "setXMSS", "LOrgSpongycastlePqcCryptoXmssXMSSParameters;", "Ljava/util/List<Lorg/spongycastle/pqc/crypto/xmss/BDSTreeHash;>;", "Ljava/util/List<Lorg/spongycastle/pqc/crypto/xmss/XMSSNode;>;", "retain", "Ljava/util/Map<Ljava/lang/Integer;Ljava/util/LinkedList<Lorg/spongycastle/pqc/crypto/xmss/XMSSNode;>;>;", "Ljava/util/Stack<Lorg/spongycastle/pqc/crypto/xmss/XMSSNode;>;", "Ljava/util/Map<Ljava/lang/Integer;Lorg/spongycastle/pqc/crypto/xmss/XMSSNode;>;" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoXmssBDS = { "BDS", "org.spongycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 16, 12, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoXmssBDS;
}

@end

void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params, jint index) {
  OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(self, [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(params)) getWOTSPlus], [params getHeight], [params getK]);
  self->index_ = index;
  self->used_ = true;
}

OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, jint index) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_, params, index)
}

OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, jint index) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withInt_, params, index)
}

void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(self, [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(params)) getWOTSPlus], [params getHeight], [params getK]);
  OrgSpongycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
}

OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_, params, publicSeed, secretKeySeed, otsHashAddress)
}

OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_, params, publicSeed, secretKeySeed, otsHashAddress)
}

void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index) {
  OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(self, [((OrgSpongycastlePqcCryptoXmssXMSSParameters *) nil_chk(params)) getWOTSPlus], [params getHeight], [params getK]);
  OrgSpongycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
  while (self->index_ < index) {
    OrgSpongycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
    self->used_ = false;
  }
}

OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_, params, publicSeed, secretKeySeed, otsHashAddress, index)
}

OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgSpongycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_withInt_, params, publicSeed, secretKeySeed, otsHashAddress, index)
}

void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k) {
  NSObject_init(self);
  self->wotsPlus_ = wotsPlus;
  self->treeHeight_ = treeHeight;
  self->k_ = k;
  if (k > treeHeight || k < 2 || ((treeHeight - k) % 2) != 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"illegal value for BDS parameter k");
  }
  self->authenticationPath_ = new_JavaUtilArrayList_init();
  self->retain__ = new_JavaUtilTreeMap_init();
  self->stack_ = new_JavaUtilStack_init();
  self->treeHashInstances_ = new_JavaUtilArrayList_init();
  for (jint height = 0; height < (treeHeight - k); height++) {
    [self->treeHashInstances_ addWithId:new_OrgSpongycastlePqcCryptoXmssBDSTreeHash_initWithInt_(height)];
  }
  self->keep_ = new_JavaUtilTreeMap_init();
  self->index_ = 0;
  self->used_ = false;
}

OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(OrgSpongycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_, wotsPlus, treeHeight, k)
}

OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_(OrgSpongycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withInt_withInt_, wotsPlus, treeHeight, k)
}

void OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *self, OrgSpongycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  NSObject_init(self);
  self->wotsPlus_ = ((OrgSpongycastlePqcCryptoXmssBDS *) nil_chk(last))->wotsPlus_;
  self->treeHeight_ = last->treeHeight_;
  self->k_ = last->k_;
  self->root_ = last->root_;
  self->authenticationPath_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(last->authenticationPath_);
  self->retain__ = last->retain__;
  self->stack_ = (JavaUtilStack *) cast_chk([((JavaUtilStack *) nil_chk(last->stack_)) java_clone], [JavaUtilStack class]);
  self->treeHashInstances_ = last->treeHashInstances_;
  self->keep_ = new_JavaUtilTreeMap_initWithJavaUtilMap_(last->keep_);
  self->index_ = last->index_;
  OrgSpongycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
  last->used_ = true;
}

OrgSpongycastlePqcCryptoXmssBDS *new_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_, last, publicSeed, secretKeySeed, otsHashAddress)
}

OrgSpongycastlePqcCryptoXmssBDS *create_OrgSpongycastlePqcCryptoXmssBDS_initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoXmssBDS, initWithOrgSpongycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_, last, publicSeed, secretKeySeed, otsHashAddress)
}

void OrgSpongycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *self, IOSByteArray *publicSeed, IOSByteArray *secretSeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  if (otsHashAddress == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"otsHashAddress == null");
  }
  OrgSpongycastlePqcCryptoXmssLTreeAddress *lTreeAddress = (OrgSpongycastlePqcCryptoXmssLTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder_init() withLayerAddressWithInt:[otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) build], [OrgSpongycastlePqcCryptoXmssLTreeAddress class]);
  OrgSpongycastlePqcCryptoXmssHashTreeAddress *hashTreeAddress = (OrgSpongycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:[otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) build], [OrgSpongycastlePqcCryptoXmssHashTreeAddress class]);
  for (jint indexLeaf = 0; indexLeaf < (JreLShift32(1, self->treeHeight_)); indexLeaf++) {
    otsHashAddress = (OrgSpongycastlePqcCryptoXmssOTSHashAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder_init() withLayerAddressWithInt:[((OrgSpongycastlePqcCryptoXmssOTSHashAddress *) nil_chk(otsHashAddress)) getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) withOTSAddressWithInt:indexLeaf])) withChainAddressWithInt:[otsHashAddress getChainAddress]])) withHashAddressWithInt:[otsHashAddress getHashAddress]])) withKeyAndMaskWithInt:[otsHashAddress getKeyAndMask]])) build], [OrgSpongycastlePqcCryptoXmssOTSHashAddress class]);
    [((OrgSpongycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) importKeysWithByteArray:[self->wotsPlus_ getWOTSPlusSecretKeyWithByteArray:secretSeed withOrgSpongycastlePqcCryptoXmssOTSHashAddress:otsHashAddress] withByteArray:publicSeed];
    OrgSpongycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *wotsPlusPublicKey = [((OrgSpongycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) getPublicKeyWithOrgSpongycastlePqcCryptoXmssOTSHashAddress:otsHashAddress];
    lTreeAddress = (OrgSpongycastlePqcCryptoXmssLTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder_init() withLayerAddressWithInt:[((OrgSpongycastlePqcCryptoXmssLTreeAddress *) nil_chk(lTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:[lTreeAddress getTreeAddress]])) withLTreeAddressWithInt:indexLeaf])) withTreeHeightWithInt:[lTreeAddress getTreeHeight]])) withTreeIndexWithInt:[lTreeAddress getTreeIndex]])) withKeyAndMaskWithInt:[lTreeAddress getKeyAndMask]])) build], [OrgSpongycastlePqcCryptoXmssLTreeAddress class]);
    OrgSpongycastlePqcCryptoXmssXMSSNode *node = OrgSpongycastlePqcCryptoXmssXMSSNodeUtil_lTreeWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withOrgSpongycastlePqcCryptoXmssWOTSPlusPublicKeyParameters_withOrgSpongycastlePqcCryptoXmssLTreeAddress_(self->wotsPlus_, wotsPlusPublicKey, lTreeAddress);
    hashTreeAddress = (OrgSpongycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:[((OrgSpongycastlePqcCryptoXmssHashTreeAddress *) nil_chk(hashTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:[hashTreeAddress getTreeAddress]])) withTreeIndexWithInt:indexLeaf])) withKeyAndMaskWithInt:[hashTreeAddress getKeyAndMask]])) build], [OrgSpongycastlePqcCryptoXmssHashTreeAddress class]);
    while (![((JavaUtilStack *) nil_chk(self->stack_)) isEmpty] && [((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk([((JavaUtilStack *) nil_chk(self->stack_)) peek])) getHeight] == [((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) getHeight]) {
      jint indexOnHeight = (JreFpToInt(JavaLangMath_floorWithDouble_(indexLeaf / (JreLShift32(1, [((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) getHeight])))));
      if (indexOnHeight == 1) {
        [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) addWithId:[node java_clone]];
      }
      if (indexOnHeight == 3 && [node getHeight] < (self->treeHeight_ - self->k_)) {
        [((OrgSpongycastlePqcCryptoXmssBDSTreeHash *) nil_chk([((id<JavaUtilList>) nil_chk(self->treeHashInstances_)) getWithInt:[node getHeight]])) setNodeWithOrgSpongycastlePqcCryptoXmssXMSSNode:[node java_clone]];
      }
      if (indexOnHeight >= 3 && (indexOnHeight & 1) == 1 && [node getHeight] >= (self->treeHeight_ - self->k_) && [node getHeight] <= (self->treeHeight_ - 2)) {
        if ([((id<JavaUtilMap>) nil_chk(self->retain__)) getWithId:JavaLangInteger_valueOfWithInt_([node getHeight])] == nil) {
          JavaUtilLinkedList *queue = new_JavaUtilLinkedList_init();
          [queue addWithId:[node java_clone]];
          (void) [((id<JavaUtilMap>) nil_chk(self->retain__)) putWithId:JavaLangInteger_valueOfWithInt_([node getHeight]) withId:queue];
        }
        else {
          [((JavaUtilLinkedList *) nil_chk([((id<JavaUtilMap>) nil_chk(self->retain__)) getWithId:JavaLangInteger_valueOfWithInt_([node getHeight])])) addWithId:[node java_clone]];
        }
      }
      hashTreeAddress = (OrgSpongycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:[((OrgSpongycastlePqcCryptoXmssHashTreeAddress *) nil_chk(hashTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:[hashTreeAddress getTreeAddress]])) withTreeHeightWithInt:[hashTreeAddress getTreeHeight]])) withTreeIndexWithInt:([hashTreeAddress getTreeIndex] - 1) / 2])) withKeyAndMaskWithInt:[hashTreeAddress getKeyAndMask]])) build], [OrgSpongycastlePqcCryptoXmssHashTreeAddress class]);
      node = OrgSpongycastlePqcCryptoXmssXMSSNodeUtil_randomizeHashWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withOrgSpongycastlePqcCryptoXmssXMSSNode_withOrgSpongycastlePqcCryptoXmssXMSSNode_withOrgSpongycastlePqcCryptoXmssXMSSAddress_(self->wotsPlus_, [((JavaUtilStack *) nil_chk(self->stack_)) pop], node, hashTreeAddress);
      node = new_OrgSpongycastlePqcCryptoXmssXMSSNode_initWithInt_withByteArray_([((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) getHeight] + 1, [node getValue]);
      hashTreeAddress = (OrgSpongycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:[((OrgSpongycastlePqcCryptoXmssHashTreeAddress *) nil_chk(hashTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:[hashTreeAddress getTreeAddress]])) withTreeHeightWithInt:[hashTreeAddress getTreeHeight] + 1])) withTreeIndexWithInt:[hashTreeAddress getTreeIndex]])) withKeyAndMaskWithInt:[hashTreeAddress getKeyAndMask]])) build], [OrgSpongycastlePqcCryptoXmssHashTreeAddress class]);
    }
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:node];
  }
  self->root_ = [((JavaUtilStack *) nil_chk(self->stack_)) pop];
}

void OrgSpongycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgSpongycastlePqcCryptoXmssOTSHashAddress_(OrgSpongycastlePqcCryptoXmssBDS *self, IOSByteArray *publicSeed, IOSByteArray *secretSeed, OrgSpongycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  if (otsHashAddress == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"otsHashAddress == null");
  }
  if (self->used_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"index already used");
  }
  if (self->index_ > ((JreLShift32(1, self->treeHeight_)) - 2)) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"index out of bounds");
  }
  OrgSpongycastlePqcCryptoXmssLTreeAddress *lTreeAddress = (OrgSpongycastlePqcCryptoXmssLTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder_init() withLayerAddressWithInt:[otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) build], [OrgSpongycastlePqcCryptoXmssLTreeAddress class]);
  OrgSpongycastlePqcCryptoXmssHashTreeAddress *hashTreeAddress = (OrgSpongycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:[otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) build], [OrgSpongycastlePqcCryptoXmssHashTreeAddress class]);
  jint tau = OrgSpongycastlePqcCryptoXmssXMSSUtil_calculateTauWithInt_withInt_(self->index_, self->treeHeight_);
  if (((JreRShift32(self->index_, (tau + 1))) & 1) == 0 && (tau < (self->treeHeight_ - 1))) {
    (void) [((id<JavaUtilMap>) nil_chk(self->keep_)) putWithId:JavaLangInteger_valueOfWithInt_(tau) withId:[((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk([((id<JavaUtilList>) nil_chk(self->authenticationPath_)) getWithInt:tau])) java_clone]];
  }
  if (tau == 0) {
    otsHashAddress = (OrgSpongycastlePqcCryptoXmssOTSHashAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssOTSHashAddress_Builder_init() withLayerAddressWithInt:[otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) withOTSAddressWithInt:self->index_])) withChainAddressWithInt:[otsHashAddress getChainAddress]])) withHashAddressWithInt:[otsHashAddress getHashAddress]])) withKeyAndMaskWithInt:[otsHashAddress getKeyAndMask]])) build], [OrgSpongycastlePqcCryptoXmssOTSHashAddress class]);
    [((OrgSpongycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) importKeysWithByteArray:[self->wotsPlus_ getWOTSPlusSecretKeyWithByteArray:secretSeed withOrgSpongycastlePqcCryptoXmssOTSHashAddress:otsHashAddress] withByteArray:publicSeed];
    OrgSpongycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *wotsPlusPublicKey = [((OrgSpongycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) getPublicKeyWithOrgSpongycastlePqcCryptoXmssOTSHashAddress:otsHashAddress];
    lTreeAddress = (OrgSpongycastlePqcCryptoXmssLTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssLTreeAddress_Builder_init() withLayerAddressWithInt:[((OrgSpongycastlePqcCryptoXmssLTreeAddress *) nil_chk(lTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:[lTreeAddress getTreeAddress]])) withLTreeAddressWithInt:self->index_])) withTreeHeightWithInt:[lTreeAddress getTreeHeight]])) withTreeIndexWithInt:[lTreeAddress getTreeIndex]])) withKeyAndMaskWithInt:[lTreeAddress getKeyAndMask]])) build], [OrgSpongycastlePqcCryptoXmssLTreeAddress class]);
    OrgSpongycastlePqcCryptoXmssXMSSNode *node = OrgSpongycastlePqcCryptoXmssXMSSNodeUtil_lTreeWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withOrgSpongycastlePqcCryptoXmssWOTSPlusPublicKeyParameters_withOrgSpongycastlePqcCryptoXmssLTreeAddress_(self->wotsPlus_, wotsPlusPublicKey, lTreeAddress);
    (void) [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) setWithInt:0 withId:node];
  }
  else {
    hashTreeAddress = (OrgSpongycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgSpongycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:[((OrgSpongycastlePqcCryptoXmssHashTreeAddress *) nil_chk(hashTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:[hashTreeAddress getTreeAddress]])) withTreeHeightWithInt:tau - 1])) withTreeIndexWithInt:JreRShift32(self->index_, tau)])) withKeyAndMaskWithInt:[hashTreeAddress getKeyAndMask]])) build], [OrgSpongycastlePqcCryptoXmssHashTreeAddress class]);
    OrgSpongycastlePqcCryptoXmssXMSSNode *node = OrgSpongycastlePqcCryptoXmssXMSSNodeUtil_randomizeHashWithOrgSpongycastlePqcCryptoXmssWOTSPlus_withOrgSpongycastlePqcCryptoXmssXMSSNode_withOrgSpongycastlePqcCryptoXmssXMSSNode_withOrgSpongycastlePqcCryptoXmssXMSSAddress_(self->wotsPlus_, [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) getWithInt:tau - 1], [((id<JavaUtilMap>) nil_chk(self->keep_)) getWithId:JavaLangInteger_valueOfWithInt_(tau - 1)], hashTreeAddress);
    node = new_OrgSpongycastlePqcCryptoXmssXMSSNode_initWithInt_withByteArray_([((OrgSpongycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) getHeight] + 1, [node getValue]);
    (void) [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) setWithInt:tau withId:node];
    (void) [((id<JavaUtilMap>) nil_chk(self->keep_)) removeWithId:JavaLangInteger_valueOfWithInt_(tau - 1)];
    for (jint height = 0; height < tau; height++) {
      if (height < (self->treeHeight_ - self->k_)) {
        (void) [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) setWithInt:height withId:[((OrgSpongycastlePqcCryptoXmssBDSTreeHash *) nil_chk([((id<JavaUtilList>) nil_chk(self->treeHashInstances_)) getWithInt:height])) getTailNode]];
      }
      else {
        (void) [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) setWithInt:height withId:[((JavaUtilLinkedList *) nil_chk([((id<JavaUtilMap>) nil_chk(self->retain__)) getWithId:JavaLangInteger_valueOfWithInt_(height)])) removeFirst]];
      }
    }
    jint minHeight = JavaLangMath_minWithInt_withInt_(tau, self->treeHeight_ - self->k_);
    for (jint height = 0; height < minHeight; height++) {
      jint startIndex = self->index_ + 1 + (3 * (JreLShift32(1, height)));
      if (startIndex < (JreLShift32(1, self->treeHeight_))) {
        [((OrgSpongycastlePqcCryptoXmssBDSTreeHash *) nil_chk([((id<JavaUtilList>) nil_chk(self->treeHashInstances_)) getWithInt:height])) initialize__WithInt:startIndex];
      }
    }
  }
  for (jint i = 0; i < JreRShift32((self->treeHeight_ - self->k_), 1); i++) {
    OrgSpongycastlePqcCryptoXmssBDSTreeHash *treeHash = OrgSpongycastlePqcCryptoXmssBDS_getBDSTreeHashInstanceForUpdate(self);
    if (treeHash != nil) {
      [treeHash updateWithJavaUtilStack:self->stack_ withOrgSpongycastlePqcCryptoXmssWOTSPlus:self->wotsPlus_ withByteArray:publicSeed withByteArray:secretSeed withOrgSpongycastlePqcCryptoXmssOTSHashAddress:otsHashAddress];
    }
  }
  self->index_++;
}

OrgSpongycastlePqcCryptoXmssBDSTreeHash *OrgSpongycastlePqcCryptoXmssBDS_getBDSTreeHashInstanceForUpdate(OrgSpongycastlePqcCryptoXmssBDS *self) {
  OrgSpongycastlePqcCryptoXmssBDSTreeHash *ret = nil;
  for (OrgSpongycastlePqcCryptoXmssBDSTreeHash * __strong treeHash in nil_chk(self->treeHashInstances_)) {
    if ([((OrgSpongycastlePqcCryptoXmssBDSTreeHash *) nil_chk(treeHash)) isFinished] || ![treeHash isInitialized]) {
      continue;
    }
    if (ret == nil) {
      ret = treeHash;
      continue;
    }
    if ([treeHash getHeight] < [ret getHeight]) {
      ret = treeHash;
      continue;
    }
    if ([treeHash getHeight] == [ret getHeight]) {
      if ([treeHash getIndexLeaf] < [ret getIndexLeaf]) {
        ret = treeHash;
      }
    }
  }
  return ret;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoXmssBDS)
