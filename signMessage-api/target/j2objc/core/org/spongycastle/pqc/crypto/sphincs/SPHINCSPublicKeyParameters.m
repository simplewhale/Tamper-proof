//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/pqc/crypto/sphincs/SPHINCSPublicKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/pqc/crypto/sphincs/SPHINCSPublicKeyParameters.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters () {
 @public
  IOSByteArray *keyData_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters, keyData_, IOSByteArray *)

@implementation OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters

- (instancetype)initWithByteArray:(IOSByteArray *)keyData {
  OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_initWithByteArray_(self, keyData);
  return self;
}

- (IOSByteArray *)getKeyData {
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(keyData_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(getKeyData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "keyData_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B" };
  static const J2ObjcClassInfo _OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters = { "SPHINCSPublicKeyParameters", "org.spongycastle.pqc.crypto.sphincs", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters;
}

@end

void OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_initWithByteArray_(OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *self, IOSByteArray *keyData) {
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, false);
  self->keyData_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(keyData);
}

OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *new_OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_initWithByteArray_(IOSByteArray *keyData) {
  J2OBJC_NEW_IMPL(OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters, initWithByteArray_, keyData)
}

OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *create_OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_initWithByteArray_(IOSByteArray *keyData) {
  J2OBJC_CREATE_IMPL(OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters, initWithByteArray_, keyData)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastlePqcCryptoSphincsSPHINCSPublicKeyParameters)
