//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/math/Primes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleMathPrimes")
#ifdef RESTRICT_OrgSpongycastleMathPrimes
#define INCLUDE_ALL_OrgSpongycastleMathPrimes 0
#else
#define INCLUDE_ALL_OrgSpongycastleMathPrimes 1
#endif
#undef RESTRICT_OrgSpongycastleMathPrimes

#if !defined (OrgSpongycastleMathPrimes_) && (INCLUDE_ALL_OrgSpongycastleMathPrimes || defined(INCLUDE_OrgSpongycastleMathPrimes))
#define OrgSpongycastleMathPrimes_

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;
@class OrgSpongycastleMathPrimes_MROutput;
@class OrgSpongycastleMathPrimes_STOutput;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastleMathPrimes : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgSpongycastleMathPrimes_MROutput *)enhancedMRProbablePrimeTestWithJavaMathBigInteger:(JavaMathBigInteger *)candidate
                                                             withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                                                                  withInt:(jint)iterations;

+ (OrgSpongycastleMathPrimes_STOutput *)generateSTRandomPrimeWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)hash_
                                                                                     withInt:(jint)length
                                                                               withByteArray:(IOSByteArray *)inputSeed;

+ (jboolean)hasAnySmallFactorsWithJavaMathBigInteger:(JavaMathBigInteger *)candidate;

+ (jboolean)isMRProbablePrimeWithJavaMathBigInteger:(JavaMathBigInteger *)candidate
                       withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                            withInt:(jint)iterations;

+ (jboolean)isMRProbablePrimeToBaseWithJavaMathBigInteger:(JavaMathBigInteger *)candidate
                                   withJavaMathBigInteger:(JavaMathBigInteger *)base;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleMathPrimes)

inline jint OrgSpongycastleMathPrimes_get_SMALL_FACTOR_LIMIT(void);
#define OrgSpongycastleMathPrimes_SMALL_FACTOR_LIMIT 211
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleMathPrimes, SMALL_FACTOR_LIMIT, jint)

FOUNDATION_EXPORT void OrgSpongycastleMathPrimes_init(OrgSpongycastleMathPrimes *self);

FOUNDATION_EXPORT OrgSpongycastleMathPrimes_STOutput *OrgSpongycastleMathPrimes_generateSTRandomPrimeWithOrgSpongycastleCryptoDigest_withInt_withByteArray_(id<OrgSpongycastleCryptoDigest> hash_, jint length, IOSByteArray *inputSeed);

FOUNDATION_EXPORT OrgSpongycastleMathPrimes_MROutput *OrgSpongycastleMathPrimes_enhancedMRProbablePrimeTestWithJavaMathBigInteger_withJavaSecuritySecureRandom_withInt_(JavaMathBigInteger *candidate, JavaSecuritySecureRandom *random, jint iterations);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathPrimes_hasAnySmallFactorsWithJavaMathBigInteger_(JavaMathBigInteger *candidate);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathPrimes_isMRProbablePrimeWithJavaMathBigInteger_withJavaSecuritySecureRandom_withInt_(JavaMathBigInteger *candidate, JavaSecuritySecureRandom *random, jint iterations);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathPrimes_isMRProbablePrimeToBaseWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *candidate, JavaMathBigInteger *base);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathPrimes)

#endif

#if !defined (OrgSpongycastleMathPrimes_MROutput_) && (INCLUDE_ALL_OrgSpongycastleMathPrimes || defined(INCLUDE_OrgSpongycastleMathPrimes_MROutput))
#define OrgSpongycastleMathPrimes_MROutput_

@class JavaMathBigInteger;

@interface OrgSpongycastleMathPrimes_MROutput : NSObject

#pragma mark Public

- (JavaMathBigInteger *)getFactor;

- (jboolean)isNotPrimePower;

- (jboolean)isProvablyComposite;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleMathPrimes_MROutput)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathPrimes_MROutput)

#endif

#if !defined (OrgSpongycastleMathPrimes_STOutput_) && (INCLUDE_ALL_OrgSpongycastleMathPrimes || defined(INCLUDE_OrgSpongycastleMathPrimes_STOutput))
#define OrgSpongycastleMathPrimes_STOutput_

@class IOSByteArray;
@class JavaMathBigInteger;

@interface OrgSpongycastleMathPrimes_STOutput : NSObject

#pragma mark Public

- (JavaMathBigInteger *)getPrime;

- (jint)getPrimeGenCounter;

- (IOSByteArray *)getPrimeSeed;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleMathPrimes_STOutput)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathPrimes_STOutput)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleMathPrimes")
