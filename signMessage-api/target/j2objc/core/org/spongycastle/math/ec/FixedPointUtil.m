//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/math/ec/FixedPointUtil.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/math/ec/FixedPointPreCompInfo.h"
#include "org/spongycastle/math/ec/FixedPointUtil.h"
#include "org/spongycastle/math/ec/PreCompInfo.h"

NSString *OrgSpongycastleMathEcFixedPointUtil_PRECOMP_NAME = @"bc_fixed_point";

@implementation OrgSpongycastleMathEcFixedPointUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleMathEcFixedPointUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)getCombSizeWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)c {
  return OrgSpongycastleMathEcFixedPointUtil_getCombSizeWithOrgSpongycastleMathEcECCurve_(c);
}

+ (OrgSpongycastleMathEcFixedPointPreCompInfo *)getFixedPointPreCompInfoWithOrgSpongycastleMathEcPreCompInfo:(id<OrgSpongycastleMathEcPreCompInfo>)preCompInfo {
  return OrgSpongycastleMathEcFixedPointUtil_getFixedPointPreCompInfoWithOrgSpongycastleMathEcPreCompInfo_(preCompInfo);
}

+ (OrgSpongycastleMathEcFixedPointPreCompInfo *)precomputeWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)p
                                                                                   withInt:(jint)minWidth {
  return OrgSpongycastleMathEcFixedPointUtil_precomputeWithOrgSpongycastleMathEcECPoint_withInt_(p, minWidth);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcFixedPointPreCompInfo;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcFixedPointPreCompInfo;", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCombSizeWithOrgSpongycastleMathEcECCurve:);
  methods[2].selector = @selector(getFixedPointPreCompInfoWithOrgSpongycastleMathEcPreCompInfo:);
  methods[3].selector = @selector(precomputeWithOrgSpongycastleMathEcECPoint:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PRECOMP_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "getCombSize", "LOrgSpongycastleMathEcECCurve;", "getFixedPointPreCompInfo", "LOrgSpongycastleMathEcPreCompInfo;", "precompute", "LOrgSpongycastleMathEcECPoint;I", &OrgSpongycastleMathEcFixedPointUtil_PRECOMP_NAME };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcFixedPointUtil = { "FixedPointUtil", "org.spongycastle.math.ec", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcFixedPointUtil;
}

@end

void OrgSpongycastleMathEcFixedPointUtil_init(OrgSpongycastleMathEcFixedPointUtil *self) {
  NSObject_init(self);
}

OrgSpongycastleMathEcFixedPointUtil *new_OrgSpongycastleMathEcFixedPointUtil_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcFixedPointUtil, init)
}

OrgSpongycastleMathEcFixedPointUtil *create_OrgSpongycastleMathEcFixedPointUtil_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcFixedPointUtil, init)
}

jint OrgSpongycastleMathEcFixedPointUtil_getCombSizeWithOrgSpongycastleMathEcECCurve_(OrgSpongycastleMathEcECCurve *c) {
  OrgSpongycastleMathEcFixedPointUtil_initialize();
  JavaMathBigInteger *order = [((OrgSpongycastleMathEcECCurve *) nil_chk(c)) getOrder];
  return order == nil ? [c getFieldSize] + 1 : [order bitLength];
}

OrgSpongycastleMathEcFixedPointPreCompInfo *OrgSpongycastleMathEcFixedPointUtil_getFixedPointPreCompInfoWithOrgSpongycastleMathEcPreCompInfo_(id<OrgSpongycastleMathEcPreCompInfo> preCompInfo) {
  OrgSpongycastleMathEcFixedPointUtil_initialize();
  if ((preCompInfo != nil) && ([preCompInfo isKindOfClass:[OrgSpongycastleMathEcFixedPointPreCompInfo class]])) {
    return (OrgSpongycastleMathEcFixedPointPreCompInfo *) cast_chk(preCompInfo, [OrgSpongycastleMathEcFixedPointPreCompInfo class]);
  }
  return new_OrgSpongycastleMathEcFixedPointPreCompInfo_init();
}

OrgSpongycastleMathEcFixedPointPreCompInfo *OrgSpongycastleMathEcFixedPointUtil_precomputeWithOrgSpongycastleMathEcECPoint_withInt_(OrgSpongycastleMathEcECPoint *p, jint minWidth) {
  OrgSpongycastleMathEcFixedPointUtil_initialize();
  OrgSpongycastleMathEcECCurve *c = [((OrgSpongycastleMathEcECPoint *) nil_chk(p)) getCurve];
  jint n = JreLShift32(1, minWidth);
  OrgSpongycastleMathEcFixedPointPreCompInfo *info = OrgSpongycastleMathEcFixedPointUtil_getFixedPointPreCompInfoWithOrgSpongycastleMathEcPreCompInfo_([((OrgSpongycastleMathEcECCurve *) nil_chk(c)) getPreCompInfoWithOrgSpongycastleMathEcECPoint:p withNSString:OrgSpongycastleMathEcFixedPointUtil_PRECOMP_NAME]);
  IOSObjectArray *lookupTable = [((OrgSpongycastleMathEcFixedPointPreCompInfo *) nil_chk(info)) getPreComp];
  if (lookupTable == nil || lookupTable->size_ < n) {
    jint bits = OrgSpongycastleMathEcFixedPointUtil_getCombSizeWithOrgSpongycastleMathEcECCurve_(c);
    jint d = (bits + minWidth - 1) / minWidth;
    IOSObjectArray *pow2Table = [IOSObjectArray newArrayWithLength:minWidth + 1 type:OrgSpongycastleMathEcECPoint_class_()];
    (void) IOSObjectArray_Set(pow2Table, 0, p);
    for (jint i = 1; i < minWidth; ++i) {
      (void) IOSObjectArray_Set(pow2Table, i, [((OrgSpongycastleMathEcECPoint *) nil_chk(IOSObjectArray_Get(pow2Table, i - 1))) timesPow2WithInt:d]);
    }
    (void) IOSObjectArray_Set(pow2Table, minWidth, [((OrgSpongycastleMathEcECPoint *) nil_chk(IOSObjectArray_Get(pow2Table, 0))) subtractWithOrgSpongycastleMathEcECPoint:IOSObjectArray_Get(pow2Table, 1)]);
    [c normalizeAllWithOrgSpongycastleMathEcECPointArray:pow2Table];
    lookupTable = [IOSObjectArray newArrayWithLength:n type:OrgSpongycastleMathEcECPoint_class_()];
    (void) IOSObjectArray_Set(lookupTable, 0, IOSObjectArray_Get(pow2Table, 0));
    for (jint bit = minWidth - 1; bit >= 0; --bit) {
      OrgSpongycastleMathEcECPoint *pow2 = IOSObjectArray_Get(pow2Table, bit);
      jint step = JreLShift32(1, bit);
      for (jint i = step; i < n; i += (JreLShift32(step, 1))) {
        (void) IOSObjectArray_Set(lookupTable, i, [((OrgSpongycastleMathEcECPoint *) nil_chk(IOSObjectArray_Get(lookupTable, i - step))) addWithOrgSpongycastleMathEcECPoint:pow2]);
      }
    }
    [c normalizeAllWithOrgSpongycastleMathEcECPointArray:lookupTable];
    [info setOffsetWithOrgSpongycastleMathEcECPoint:IOSObjectArray_Get(pow2Table, minWidth)];
    [info setPreCompWithOrgSpongycastleMathEcECPointArray:lookupTable];
    [info setWidthWithInt:minWidth];
    [c setPreCompInfoWithOrgSpongycastleMathEcECPoint:p withNSString:OrgSpongycastleMathEcFixedPointUtil_PRECOMP_NAME withOrgSpongycastleMathEcPreCompInfo:info];
  }
  return info;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcFixedPointUtil)
