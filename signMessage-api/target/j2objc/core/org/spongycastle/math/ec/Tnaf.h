//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/math/ec/Tnaf.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleMathEcTnaf")
#ifdef RESTRICT_OrgSpongycastleMathEcTnaf
#define INCLUDE_ALL_OrgSpongycastleMathEcTnaf 0
#else
#define INCLUDE_ALL_OrgSpongycastleMathEcTnaf 1
#endif
#undef RESTRICT_OrgSpongycastleMathEcTnaf

#if !defined (OrgSpongycastleMathEcTnaf_) && (INCLUDE_ALL_OrgSpongycastleMathEcTnaf || defined(INCLUDE_OrgSpongycastleMathEcTnaf))
#define OrgSpongycastleMathEcTnaf_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaMathBigInteger;
@class OrgSpongycastleMathEcECCurve_AbstractF2m;
@class OrgSpongycastleMathEcECFieldElement;
@class OrgSpongycastleMathEcECPoint_AbstractF2m;
@class OrgSpongycastleMathEcSimpleBigDecimal;
@class OrgSpongycastleMathEcZTauElement;

@interface OrgSpongycastleMathEcTnaf : NSObject

#pragma mark Public

+ (OrgSpongycastleMathEcSimpleBigDecimal *)approximateDivisionByNWithJavaMathBigInteger:(JavaMathBigInteger *)k
                                                                 withJavaMathBigInteger:(JavaMathBigInteger *)s
                                                                 withJavaMathBigInteger:(JavaMathBigInteger *)vm
                                                                               withByte:(jbyte)a
                                                                                withInt:(jint)m
                                                                                withInt:(jint)c;

+ (IOSObjectArray *)getLucasWithByte:(jbyte)mu
                             withInt:(jint)k
                         withBoolean:(jboolean)doV;

+ (jbyte)getMuWithOrgSpongycastleMathEcECCurve_AbstractF2m:(OrgSpongycastleMathEcECCurve_AbstractF2m *)curve;

+ (jbyte)getMuWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)curveA;

+ (jbyte)getMuWithInt:(jint)curveA;

+ (IOSObjectArray *)getPreCompWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p
                                                                  withByte:(jbyte)a;

+ (IOSObjectArray *)getSiWithOrgSpongycastleMathEcECCurve_AbstractF2m:(OrgSpongycastleMathEcECCurve_AbstractF2m *)curve;

+ (IOSObjectArray *)getSiWithInt:(jint)fieldSize
                         withInt:(jint)curveA
          withJavaMathBigInteger:(JavaMathBigInteger *)cofactor;

+ (JavaMathBigInteger *)getTwWithByte:(jbyte)mu
                              withInt:(jint)w;

+ (OrgSpongycastleMathEcECPoint_AbstractF2m *)multiplyFromTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p
                                                                                             withByteArray:(IOSByteArray *)u;

+ (OrgSpongycastleMathEcECPoint_AbstractF2m *)multiplyRTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p
                                                                                 withJavaMathBigInteger:(JavaMathBigInteger *)k;

+ (OrgSpongycastleMathEcECPoint_AbstractF2m *)multiplyTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p
                                                                  withOrgSpongycastleMathEcZTauElement:(OrgSpongycastleMathEcZTauElement *)lambda;

+ (OrgSpongycastleMathEcSimpleBigDecimal *)normWithByte:(jbyte)mu
              withOrgSpongycastleMathEcSimpleBigDecimal:(OrgSpongycastleMathEcSimpleBigDecimal *)u
              withOrgSpongycastleMathEcSimpleBigDecimal:(OrgSpongycastleMathEcSimpleBigDecimal *)v;

+ (JavaMathBigInteger *)normWithByte:(jbyte)mu
withOrgSpongycastleMathEcZTauElement:(OrgSpongycastleMathEcZTauElement *)lambda;

+ (OrgSpongycastleMathEcZTauElement *)partModReductionWithJavaMathBigInteger:(JavaMathBigInteger *)k
                                                                     withInt:(jint)m
                                                                    withByte:(jbyte)a
                                                 withJavaMathBigIntegerArray:(IOSObjectArray *)s
                                                                    withByte:(jbyte)mu
                                                                    withByte:(jbyte)c;

+ (OrgSpongycastleMathEcZTauElement *)roundWithOrgSpongycastleMathEcSimpleBigDecimal:(OrgSpongycastleMathEcSimpleBigDecimal *)lambda0
                                           withOrgSpongycastleMathEcSimpleBigDecimal:(OrgSpongycastleMathEcSimpleBigDecimal *)lambda1
                                                                            withByte:(jbyte)mu;

+ (OrgSpongycastleMathEcECPoint_AbstractF2m *)tauWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p;

+ (IOSByteArray *)tauAdicNafWithByte:(jbyte)mu
withOrgSpongycastleMathEcZTauElement:(OrgSpongycastleMathEcZTauElement *)lambda;

+ (IOSByteArray *)tauAdicWNafWithByte:(jbyte)mu
 withOrgSpongycastleMathEcZTauElement:(OrgSpongycastleMathEcZTauElement *)lambda
                             withByte:(jbyte)width
               withJavaMathBigInteger:(JavaMathBigInteger *)pow2w
               withJavaMathBigInteger:(JavaMathBigInteger *)tw
withOrgSpongycastleMathEcZTauElementArray:(IOSObjectArray *)alpha;

#pragma mark Protected

+ (jint)getShiftsForCofactorWithJavaMathBigInteger:(JavaMathBigInteger *)h;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleMathEcTnaf)

inline jbyte OrgSpongycastleMathEcTnaf_get_WIDTH(void);
#define OrgSpongycastleMathEcTnaf_WIDTH 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleMathEcTnaf, WIDTH, jbyte)

inline jbyte OrgSpongycastleMathEcTnaf_get_POW_2_WIDTH(void);
#define OrgSpongycastleMathEcTnaf_POW_2_WIDTH 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleMathEcTnaf, POW_2_WIDTH, jbyte)

inline IOSObjectArray *OrgSpongycastleMathEcTnaf_get_alpha0(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleMathEcTnaf_alpha0;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleMathEcTnaf, alpha0, IOSObjectArray *)

inline IOSObjectArray *OrgSpongycastleMathEcTnaf_get_alpha0Tnaf(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleMathEcTnaf_alpha0Tnaf;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleMathEcTnaf, alpha0Tnaf, IOSObjectArray *)

inline IOSObjectArray *OrgSpongycastleMathEcTnaf_get_alpha1(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleMathEcTnaf_alpha1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleMathEcTnaf, alpha1, IOSObjectArray *)

inline IOSObjectArray *OrgSpongycastleMathEcTnaf_get_alpha1Tnaf(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleMathEcTnaf_alpha1Tnaf;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleMathEcTnaf, alpha1Tnaf, IOSObjectArray *)

FOUNDATION_EXPORT void OrgSpongycastleMathEcTnaf_init(OrgSpongycastleMathEcTnaf *self);

FOUNDATION_EXPORT OrgSpongycastleMathEcTnaf *new_OrgSpongycastleMathEcTnaf_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleMathEcTnaf *create_OrgSpongycastleMathEcTnaf_init(void);

FOUNDATION_EXPORT JavaMathBigInteger *OrgSpongycastleMathEcTnaf_normWithByte_withOrgSpongycastleMathEcZTauElement_(jbyte mu, OrgSpongycastleMathEcZTauElement *lambda);

FOUNDATION_EXPORT OrgSpongycastleMathEcSimpleBigDecimal *OrgSpongycastleMathEcTnaf_normWithByte_withOrgSpongycastleMathEcSimpleBigDecimal_withOrgSpongycastleMathEcSimpleBigDecimal_(jbyte mu, OrgSpongycastleMathEcSimpleBigDecimal *u, OrgSpongycastleMathEcSimpleBigDecimal *v);

FOUNDATION_EXPORT OrgSpongycastleMathEcZTauElement *OrgSpongycastleMathEcTnaf_roundWithOrgSpongycastleMathEcSimpleBigDecimal_withOrgSpongycastleMathEcSimpleBigDecimal_withByte_(OrgSpongycastleMathEcSimpleBigDecimal *lambda0, OrgSpongycastleMathEcSimpleBigDecimal *lambda1, jbyte mu);

FOUNDATION_EXPORT OrgSpongycastleMathEcSimpleBigDecimal *OrgSpongycastleMathEcTnaf_approximateDivisionByNWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withByte_withInt_withInt_(JavaMathBigInteger *k, JavaMathBigInteger *s, JavaMathBigInteger *vm, jbyte a, jint m, jint c);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleMathEcTnaf_tauAdicNafWithByte_withOrgSpongycastleMathEcZTauElement_(jbyte mu, OrgSpongycastleMathEcZTauElement *lambda);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint_AbstractF2m *OrgSpongycastleMathEcTnaf_tauWithOrgSpongycastleMathEcECPoint_AbstractF2m_(OrgSpongycastleMathEcECPoint_AbstractF2m *p);

FOUNDATION_EXPORT jbyte OrgSpongycastleMathEcTnaf_getMuWithOrgSpongycastleMathEcECCurve_AbstractF2m_(OrgSpongycastleMathEcECCurve_AbstractF2m *curve);

FOUNDATION_EXPORT jbyte OrgSpongycastleMathEcTnaf_getMuWithOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECFieldElement *curveA);

FOUNDATION_EXPORT jbyte OrgSpongycastleMathEcTnaf_getMuWithInt_(jint curveA);

FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleMathEcTnaf_getLucasWithByte_withInt_withBoolean_(jbyte mu, jint k, jboolean doV);

FOUNDATION_EXPORT JavaMathBigInteger *OrgSpongycastleMathEcTnaf_getTwWithByte_withInt_(jbyte mu, jint w);

FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleMathEcTnaf_getSiWithOrgSpongycastleMathEcECCurve_AbstractF2m_(OrgSpongycastleMathEcECCurve_AbstractF2m *curve);

FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleMathEcTnaf_getSiWithInt_withInt_withJavaMathBigInteger_(jint fieldSize, jint curveA, JavaMathBigInteger *cofactor);

FOUNDATION_EXPORT jint OrgSpongycastleMathEcTnaf_getShiftsForCofactorWithJavaMathBigInteger_(JavaMathBigInteger *h);

FOUNDATION_EXPORT OrgSpongycastleMathEcZTauElement *OrgSpongycastleMathEcTnaf_partModReductionWithJavaMathBigInteger_withInt_withByte_withJavaMathBigIntegerArray_withByte_withByte_(JavaMathBigInteger *k, jint m, jbyte a, IOSObjectArray *s, jbyte mu, jbyte c);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint_AbstractF2m *OrgSpongycastleMathEcTnaf_multiplyRTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withJavaMathBigInteger_(OrgSpongycastleMathEcECPoint_AbstractF2m *p, JavaMathBigInteger *k);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint_AbstractF2m *OrgSpongycastleMathEcTnaf_multiplyTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withOrgSpongycastleMathEcZTauElement_(OrgSpongycastleMathEcECPoint_AbstractF2m *p, OrgSpongycastleMathEcZTauElement *lambda);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint_AbstractF2m *OrgSpongycastleMathEcTnaf_multiplyFromTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withByteArray_(OrgSpongycastleMathEcECPoint_AbstractF2m *p, IOSByteArray *u);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleMathEcTnaf_tauAdicWNafWithByte_withOrgSpongycastleMathEcZTauElement_withByte_withJavaMathBigInteger_withJavaMathBigInteger_withOrgSpongycastleMathEcZTauElementArray_(jbyte mu, OrgSpongycastleMathEcZTauElement *lambda, jbyte width, JavaMathBigInteger *pow2w, JavaMathBigInteger *tw, IOSObjectArray *alpha);

FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleMathEcTnaf_getPreCompWithOrgSpongycastleMathEcECPoint_AbstractF2m_withByte_(OrgSpongycastleMathEcECPoint_AbstractF2m *p, jbyte a);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathEcTnaf)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleMathEcTnaf")
