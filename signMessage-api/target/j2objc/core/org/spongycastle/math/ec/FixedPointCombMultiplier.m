//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/math/ec/FixedPointCombMultiplier.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/math/ec/AbstractECMultiplier.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/math/ec/FixedPointCombMultiplier.h"
#include "org/spongycastle/math/ec/FixedPointPreCompInfo.h"
#include "org/spongycastle/math/ec/FixedPointUtil.h"

@implementation OrgSpongycastleMathEcFixedPointCombMultiplier

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleMathEcFixedPointCombMultiplier_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgSpongycastleMathEcECPoint *)multiplyPositiveWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)p
                                                            withJavaMathBigInteger:(JavaMathBigInteger *)k {
  OrgSpongycastleMathEcECCurve *c = [((OrgSpongycastleMathEcECPoint *) nil_chk(p)) getCurve];
  jint size = OrgSpongycastleMathEcFixedPointUtil_getCombSizeWithOrgSpongycastleMathEcECCurve_(c);
  if ([((JavaMathBigInteger *) nil_chk(k)) bitLength] > size) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"fixed-point comb doesn't support scalars larger than the curve order");
  }
  jint minWidth = [self getWidthForCombSizeWithInt:size];
  OrgSpongycastleMathEcFixedPointPreCompInfo *info = OrgSpongycastleMathEcFixedPointUtil_precomputeWithOrgSpongycastleMathEcECPoint_withInt_(p, minWidth);
  IOSObjectArray *lookupTable = [((OrgSpongycastleMathEcFixedPointPreCompInfo *) nil_chk(info)) getPreComp];
  jint width = [info getWidth];
  jint d = (size + width - 1) / width;
  OrgSpongycastleMathEcECPoint *R = [((OrgSpongycastleMathEcECCurve *) nil_chk(c)) getInfinity];
  jint top = d * width - 1;
  for (jint i = 0; i < d; ++i) {
    jint index = 0;
    for (jint j = top - i; j >= 0; j -= d) {
      JreLShiftAssignInt(&index, 1);
      if ([k testBitWithInt:j]) {
        index |= 1;
      }
    }
    R = [((OrgSpongycastleMathEcECPoint *) nil_chk(R)) twicePlusWithOrgSpongycastleMathEcECPoint:IOSObjectArray_Get(nil_chk(lookupTable), index)];
  }
  return [((OrgSpongycastleMathEcECPoint *) nil_chk(R)) addWithOrgSpongycastleMathEcECPoint:[info getOffset]];
}

- (jint)getWidthForCombSizeWithInt:(jint)combSize {
  return combSize > 257 ? 6 : 5;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(multiplyPositiveWithOrgSpongycastleMathEcECPoint:withJavaMathBigInteger:);
  methods[2].selector = @selector(getWidthForCombSizeWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "multiplyPositive", "LOrgSpongycastleMathEcECPoint;LJavaMathBigInteger;", "getWidthForCombSize", "I" };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcFixedPointCombMultiplier = { "FixedPointCombMultiplier", "org.spongycastle.math.ec", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcFixedPointCombMultiplier;
}

@end

void OrgSpongycastleMathEcFixedPointCombMultiplier_init(OrgSpongycastleMathEcFixedPointCombMultiplier *self) {
  OrgSpongycastleMathEcAbstractECMultiplier_init(self);
}

OrgSpongycastleMathEcFixedPointCombMultiplier *new_OrgSpongycastleMathEcFixedPointCombMultiplier_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcFixedPointCombMultiplier, init)
}

OrgSpongycastleMathEcFixedPointCombMultiplier *create_OrgSpongycastleMathEcFixedPointCombMultiplier_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcFixedPointCombMultiplier, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcFixedPointCombMultiplier)
