//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/math/ec/ECPoint.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/util/Hashtable.h"
#include "org/spongycastle/math/ec/ECAlgorithms.h"
#include "org/spongycastle/math/ec/ECConstants.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/ECMultiplier.h"
#include "org/spongycastle/math/ec/ECPoint.h"

__attribute__((unused)) static OrgSpongycastleMathEcECFieldElement *OrgSpongycastleMathEcECPoint_getZCoordWithInt_(OrgSpongycastleMathEcECPoint *self, jint index);

__attribute__((unused)) static OrgSpongycastleMathEcECFieldElement *OrgSpongycastleMathEcECPoint_getRawXCoord(OrgSpongycastleMathEcECPoint *self);

__attribute__((unused)) static OrgSpongycastleMathEcECFieldElement *OrgSpongycastleMathEcECPoint_getRawYCoord(OrgSpongycastleMathEcECPoint *self);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleMathEcECPoint_getRawZCoords(OrgSpongycastleMathEcECPoint *self);

__attribute__((unused)) static OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECPoint_scaleXWithOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint *self, OrgSpongycastleMathEcECFieldElement *scale_);

__attribute__((unused)) static OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECPoint_scaleYWithOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint *self, OrgSpongycastleMathEcECFieldElement *scale_);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleMathEcECPoint)

IOSObjectArray *OrgSpongycastleMathEcECPoint_EMPTY_ZS;

@implementation OrgSpongycastleMathEcECPoint

+ (IOSObjectArray *)getInitialZCoordsWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve {
  return OrgSpongycastleMathEcECPoint_getInitialZCoordsWithOrgSpongycastleMathEcECCurve_(curve);
}

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y {
  OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
  return self;
}

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y
        withOrgSpongycastleMathEcECFieldElementArray:(IOSObjectArray *)zs {
  OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(self, curve, x, y, zs);
  return self;
}

- (jboolean)satisfiesCofactor {
  JavaMathBigInteger *h = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve_)) getCofactor];
  return h == nil || [h isEqual:JreLoadStatic(OrgSpongycastleMathEcECConstants, ONE)] || ![((OrgSpongycastleMathEcECPoint *) nil_chk(OrgSpongycastleMathEcECAlgorithms_referenceMultiplyWithOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(self, h))) isInfinity];
}

- (jboolean)satisfiesCurveEquation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgSpongycastleMathEcECPoint *)getDetachedPoint {
  return [((OrgSpongycastleMathEcECPoint *) nil_chk([self normalize])) detach];
}

- (OrgSpongycastleMathEcECCurve *)getCurve {
  return curve_;
}

- (OrgSpongycastleMathEcECPoint *)detach {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getCurveCoordinateSystem {
  return nil == curve_ ? OrgSpongycastleMathEcECCurve_COORD_AFFINE : [curve_ getCoordinateSystem];
}

- (OrgSpongycastleMathEcECFieldElement *)getX {
  return [((OrgSpongycastleMathEcECPoint *) nil_chk([self normalize])) getXCoord];
}

- (OrgSpongycastleMathEcECFieldElement *)getY {
  return [((OrgSpongycastleMathEcECPoint *) nil_chk([self normalize])) getYCoord];
}

- (OrgSpongycastleMathEcECFieldElement *)getAffineXCoord {
  [self checkNormalized];
  return [self getXCoord];
}

- (OrgSpongycastleMathEcECFieldElement *)getAffineYCoord {
  [self checkNormalized];
  return [self getYCoord];
}

- (OrgSpongycastleMathEcECFieldElement *)getXCoord {
  return x_;
}

- (OrgSpongycastleMathEcECFieldElement *)getYCoord {
  return y_;
}

- (OrgSpongycastleMathEcECFieldElement *)getZCoordWithInt:(jint)index {
  return OrgSpongycastleMathEcECPoint_getZCoordWithInt_(self, index);
}

- (IOSObjectArray *)getZCoords {
  jint zsLen = ((IOSObjectArray *) nil_chk(zs_))->size_;
  if (zsLen == 0) {
    return OrgSpongycastleMathEcECPoint_EMPTY_ZS;
  }
  IOSObjectArray *copy_ = [IOSObjectArray newArrayWithLength:zsLen type:OrgSpongycastleMathEcECFieldElement_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(zs_, 0, copy_, 0, zsLen);
  return copy_;
}

- (OrgSpongycastleMathEcECFieldElement *)getRawXCoord {
  return OrgSpongycastleMathEcECPoint_getRawXCoord(self);
}

- (OrgSpongycastleMathEcECFieldElement *)getRawYCoord {
  return OrgSpongycastleMathEcECPoint_getRawYCoord(self);
}

- (IOSObjectArray *)getRawZCoords {
  return OrgSpongycastleMathEcECPoint_getRawZCoords(self);
}

- (void)checkNormalized {
  if (![self isNormalized]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"point not in normal form");
  }
}

- (jboolean)isNormalized {
  jint coord = [self getCurveCoordinateSystem];
  return coord == OrgSpongycastleMathEcECCurve_COORD_AFFINE || coord == OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE || [self isInfinity] || [((OrgSpongycastleMathEcECFieldElement *) nil_chk(IOSObjectArray_Get(nil_chk(zs_), 0))) isOne];
}

- (OrgSpongycastleMathEcECPoint *)normalize {
  if ([self isInfinity]) {
    return self;
  }
  switch ([self getCurveCoordinateSystem]) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    {
      return self;
    }
    default:
    {
      OrgSpongycastleMathEcECFieldElement *Z1 = [self getZCoordWithInt:0];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne]) {
        return self;
      }
      return [self normalizeWithOrgSpongycastleMathEcECFieldElement:[Z1 invert]];
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)normalizeWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)zInv {
  switch ([self getCurveCoordinateSystem]) {
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      return [self createScaledPointWithOrgSpongycastleMathEcECFieldElement:zInv withOrgSpongycastleMathEcECFieldElement:zInv];
    }
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN:
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_CHUDNOVSKY:
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
    {
      OrgSpongycastleMathEcECFieldElement *zInv2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(zInv)) square];
      OrgSpongycastleMathEcECFieldElement *zInv3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(zInv2)) multiplyWithOrgSpongycastleMathEcECFieldElement:zInv];
      return [self createScaledPointWithOrgSpongycastleMathEcECFieldElement:zInv2 withOrgSpongycastleMathEcECFieldElement:zInv3];
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"not a projective coordinate system");
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)createScaledPointWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)sx
                                                   withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)sy {
  return [((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) createRawPointWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(OrgSpongycastleMathEcECPoint_getRawXCoord(self))) multiplyWithOrgSpongycastleMathEcECFieldElement:sx] withOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(OrgSpongycastleMathEcECPoint_getRawYCoord(self))) multiplyWithOrgSpongycastleMathEcECFieldElement:sy] withBoolean:self->withCompression_];
}

- (jboolean)isInfinity {
  return x_ == nil || y_ == nil || (((IOSObjectArray *) nil_chk(zs_))->size_ > 0 && [((OrgSpongycastleMathEcECFieldElement *) nil_chk(IOSObjectArray_Get(zs_, 0))) isZero]);
}

- (jboolean)isCompressed {
  return self->withCompression_;
}

- (jboolean)isValid {
  if ([self isInfinity]) {
    return true;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  if (curve != nil) {
    if (![self satisfiesCurveEquation]) {
      return false;
    }
    if (![self satisfiesCofactor]) {
      return false;
    }
  }
  return true;
}

- (OrgSpongycastleMathEcECPoint *)scaleXWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)scale_ {
  return OrgSpongycastleMathEcECPoint_scaleXWithOrgSpongycastleMathEcECFieldElement_(self, scale_);
}

- (OrgSpongycastleMathEcECPoint *)scaleYWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)scale_ {
  return OrgSpongycastleMathEcECPoint_scaleYWithOrgSpongycastleMathEcECFieldElement_(self, scale_);
}

- (jboolean)equalsWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)other {
  if (nil == other) {
    return false;
  }
  OrgSpongycastleMathEcECCurve *c1 = [self getCurve];
  OrgSpongycastleMathEcECCurve *c2 = [other getCurve];
  jboolean n1 = nil == c1;
  jboolean n2 = nil == c2;
  jboolean i1 = [self isInfinity];
  jboolean i2 = [other isInfinity];
  if (i1 || i2) {
    return (i1 && i2) && (n1 || n2 || [((OrgSpongycastleMathEcECCurve *) nil_chk(c1)) equalsWithOrgSpongycastleMathEcECCurve:c2]);
  }
  OrgSpongycastleMathEcECPoint *p1 = self;
  OrgSpongycastleMathEcECPoint *p2 = other;
  if (n1 && n2) {
  }
  else if (n1) {
    p2 = [p2 normalize];
  }
  else if (n2) {
    p1 = [p1 normalize];
  }
  else if (![((OrgSpongycastleMathEcECCurve *) nil_chk(c1)) equalsWithOrgSpongycastleMathEcECCurve:c2]) {
    return false;
  }
  else {
    IOSObjectArray *points = [IOSObjectArray newArrayWithObjects:(id[]){ self, [c1 importPointWithOrgSpongycastleMathEcECPoint:p2] } count:2 type:OrgSpongycastleMathEcECPoint_class_()];
    [c1 normalizeAllWithOrgSpongycastleMathEcECPointArray:points];
    p1 = IOSObjectArray_Get(points, 0);
    p2 = IOSObjectArray_Get(points, 1);
  }
  return [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(p1)) getXCoord])) isEqual:[((OrgSpongycastleMathEcECPoint *) nil_chk(p2)) getXCoord]] && [((OrgSpongycastleMathEcECFieldElement *) nil_chk([p1 getYCoord])) isEqual:[p2 getYCoord]];
}

- (jboolean)isEqual:(id)other {
  if (other == self) {
    return true;
  }
  if (!([other isKindOfClass:[OrgSpongycastleMathEcECPoint class]])) {
    return false;
  }
  return [self equalsWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *) cast_chk(other, [OrgSpongycastleMathEcECPoint class])];
}

- (NSUInteger)hash {
  OrgSpongycastleMathEcECCurve *c = [self getCurve];
  jint hc = (nil == c) ? 0 : ~((jint) [((OrgSpongycastleMathEcECCurve *) nil_chk(c)) hash]);
  if (![self isInfinity]) {
    OrgSpongycastleMathEcECPoint *p = [self normalize];
    hc ^= ((jint) [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(p)) getXCoord])) hash]) * 17;
    hc ^= ((jint) [((OrgSpongycastleMathEcECFieldElement *) nil_chk([p getYCoord])) hash]) * 257;
  }
  return hc;
}

- (NSString *)description {
  if ([self isInfinity]) {
    return @"INF";
  }
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  (void) [sb appendWithChar:'('];
  (void) [sb appendWithId:OrgSpongycastleMathEcECPoint_getRawXCoord(self)];
  (void) [sb appendWithChar:','];
  (void) [sb appendWithId:OrgSpongycastleMathEcECPoint_getRawYCoord(self)];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(zs_))->size_; ++i) {
    (void) [sb appendWithChar:','];
    (void) [sb appendWithId:IOSObjectArray_Get(nil_chk(zs_), i)];
  }
  (void) [sb appendWithChar:')'];
  return [sb description];
}

- (IOSByteArray *)getEncoded {
  return [self getEncodedWithBoolean:self->withCompression_];
}

- (IOSByteArray *)getEncodedWithBoolean:(jboolean)compressed {
  if ([self isInfinity]) {
    return [IOSByteArray newArrayWithLength:1];
  }
  OrgSpongycastleMathEcECPoint *normed = [self normalize];
  IOSByteArray *X = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(normed)) getXCoord])) getEncoded];
  if (compressed) {
    IOSByteArray *PO = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(X))->size_ + 1];
    *IOSByteArray_GetRef(PO, 0) = (jbyte) ([normed getCompressionYTilde] ? (jint) 0x03 : (jint) 0x02);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(X, 0, PO, 1, X->size_);
    return PO;
  }
  IOSByteArray *Y = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([normed getYCoord])) getEncoded];
  IOSByteArray *PO = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(X))->size_ + ((IOSByteArray *) nil_chk(Y))->size_ + 1];
  *IOSByteArray_GetRef(PO, 0) = (jint) 0x04;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(X, 0, PO, 1, X->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(Y, 0, PO, X->size_ + 1, Y->size_);
  return PO;
}

- (jboolean)getCompressionYTilde {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgSpongycastleMathEcECPoint *)addWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgSpongycastleMathEcECPoint *)negate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgSpongycastleMathEcECPoint *)subtractWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgSpongycastleMathEcECPoint *)timesPow2WithInt:(jint)e {
  if (e < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'e' cannot be negative");
  }
  OrgSpongycastleMathEcECPoint *p = self;
  while (--e >= 0) {
    p = [((OrgSpongycastleMathEcECPoint *) nil_chk(p)) twice];
  }
  return p;
}

- (OrgSpongycastleMathEcECPoint *)twice {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgSpongycastleMathEcECPoint *)twicePlusWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  return [((OrgSpongycastleMathEcECPoint *) nil_chk([self twice])) addWithOrgSpongycastleMathEcECPoint:b];
}

- (OrgSpongycastleMathEcECPoint *)threeTimes {
  return [self twicePlusWithOrgSpongycastleMathEcECPoint:self];
}

- (OrgSpongycastleMathEcECPoint *)multiplyWithJavaMathBigInteger:(JavaMathBigInteger *)k {
  return [((id<OrgSpongycastleMathEcECMultiplier>) nil_chk([((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) getMultiplier])) multiplyWithOrgSpongycastleMathEcECPoint:self withJavaMathBigInteger:k];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgSpongycastleMathEcECFieldElement;", 0xc, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECCurve;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleMathEcECFieldElement;", 0x14, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x0, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x4, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 10, 7, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 11, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x401, 19, 13, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x401, 20, 13, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 21, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 22, 13, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 23, 24, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInitialZCoordsWithOrgSpongycastleMathEcECCurve:);
  methods[1].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:);
  methods[2].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElementArray:);
  methods[3].selector = @selector(satisfiesCofactor);
  methods[4].selector = @selector(satisfiesCurveEquation);
  methods[5].selector = @selector(getDetachedPoint);
  methods[6].selector = @selector(getCurve);
  methods[7].selector = @selector(detach);
  methods[8].selector = @selector(getCurveCoordinateSystem);
  methods[9].selector = @selector(getX);
  methods[10].selector = @selector(getY);
  methods[11].selector = @selector(getAffineXCoord);
  methods[12].selector = @selector(getAffineYCoord);
  methods[13].selector = @selector(getXCoord);
  methods[14].selector = @selector(getYCoord);
  methods[15].selector = @selector(getZCoordWithInt:);
  methods[16].selector = @selector(getZCoords);
  methods[17].selector = @selector(getRawXCoord);
  methods[18].selector = @selector(getRawYCoord);
  methods[19].selector = @selector(getRawZCoords);
  methods[20].selector = @selector(checkNormalized);
  methods[21].selector = @selector(isNormalized);
  methods[22].selector = @selector(normalize);
  methods[23].selector = @selector(normalizeWithOrgSpongycastleMathEcECFieldElement:);
  methods[24].selector = @selector(createScaledPointWithOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:);
  methods[25].selector = @selector(isInfinity);
  methods[26].selector = @selector(isCompressed);
  methods[27].selector = @selector(isValid);
  methods[28].selector = @selector(scaleXWithOrgSpongycastleMathEcECFieldElement:);
  methods[29].selector = @selector(scaleYWithOrgSpongycastleMathEcECFieldElement:);
  methods[30].selector = @selector(equalsWithOrgSpongycastleMathEcECPoint:);
  methods[31].selector = @selector(isEqual:);
  methods[32].selector = @selector(hash);
  methods[33].selector = @selector(description);
  methods[34].selector = @selector(getEncoded);
  methods[35].selector = @selector(getEncodedWithBoolean:);
  methods[36].selector = @selector(getCompressionYTilde);
  methods[37].selector = @selector(addWithOrgSpongycastleMathEcECPoint:);
  methods[38].selector = @selector(negate);
  methods[39].selector = @selector(subtractWithOrgSpongycastleMathEcECPoint:);
  methods[40].selector = @selector(timesPow2WithInt:);
  methods[41].selector = @selector(twice);
  methods[42].selector = @selector(twicePlusWithOrgSpongycastleMathEcECPoint:);
  methods[43].selector = @selector(threeTimes);
  methods[44].selector = @selector(multiplyWithJavaMathBigInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_ZS", "[LOrgSpongycastleMathEcECFieldElement;", .constantValue.asLong = 0, 0xc, -1, 25, -1, -1 },
    { "curve_", "LOrgSpongycastleMathEcECCurve;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "x_", "LOrgSpongycastleMathEcECFieldElement;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "y_", "LOrgSpongycastleMathEcECFieldElement;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "zs_", "[LOrgSpongycastleMathEcECFieldElement;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "withCompression_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "preCompTable_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInitialZCoords", "LOrgSpongycastleMathEcECCurve;", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;[LOrgSpongycastleMathEcECFieldElement;", "getZCoord", "I", "normalize", "LOrgSpongycastleMathEcECFieldElement;", "createScaledPoint", "LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;", "scaleX", "scaleY", "equals", "LOrgSpongycastleMathEcECPoint;", "LNSObject;", "hashCode", "toString", "getEncoded", "Z", "add", "subtract", "timesPow2", "twicePlus", "multiply", "LJavaMathBigInteger;", &OrgSpongycastleMathEcECPoint_EMPTY_ZS, "LOrgSpongycastleMathEcECPoint_AbstractFp;LOrgSpongycastleMathEcECPoint_Fp;LOrgSpongycastleMathEcECPoint_AbstractF2m;LOrgSpongycastleMathEcECPoint_F2m;" };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcECPoint = { "ECPoint", "org.spongycastle.math.ec", ptrTable, methods, fields, 7, 0x401, 45, 7, -1, 26, -1, -1, -1 };
  return &_OrgSpongycastleMathEcECPoint;
}

+ (void)initialize {
  if (self == [OrgSpongycastleMathEcECPoint class]) {
    OrgSpongycastleMathEcECPoint_EMPTY_ZS = [IOSObjectArray newArrayWithLength:0 type:OrgSpongycastleMathEcECFieldElement_class_()];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleMathEcECPoint)
  }
}

@end

IOSObjectArray *OrgSpongycastleMathEcECPoint_getInitialZCoordsWithOrgSpongycastleMathEcECCurve_(OrgSpongycastleMathEcECCurve *curve) {
  OrgSpongycastleMathEcECPoint_initialize();
  jint coord = nil == curve ? OrgSpongycastleMathEcECCurve_COORD_AFFINE : [curve getCoordinateSystem];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    return OrgSpongycastleMathEcECPoint_EMPTY_ZS;
    default:
    break;
  }
  OrgSpongycastleMathEcECFieldElement *one = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) fromBigIntegerWithJavaMathBigInteger:JreLoadStatic(OrgSpongycastleMathEcECConstants, ONE)];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    return [IOSObjectArray newArrayWithObjects:(id[]){ one } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()];
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_CHUDNOVSKY:
    return [IOSObjectArray newArrayWithObjects:(id[]){ one, one, one } count:3 type:OrgSpongycastleMathEcECFieldElement_class_()];
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
    return [IOSObjectArray newArrayWithObjects:(id[]){ one, [curve getA] } count:2 type:OrgSpongycastleMathEcECFieldElement_class_()];
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"unknown coordinate system");
  }
}

void OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(self, curve, x, y, OrgSpongycastleMathEcECPoint_getInitialZCoordsWithOrgSpongycastleMathEcECCurve_(curve));
}

void OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(OrgSpongycastleMathEcECPoint *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs) {
  NSObject_init(self);
  self->preCompTable_ = nil;
  self->curve_ = curve;
  self->x_ = x;
  self->y_ = y;
  self->zs_ = zs;
}

OrgSpongycastleMathEcECFieldElement *OrgSpongycastleMathEcECPoint_getZCoordWithInt_(OrgSpongycastleMathEcECPoint *self, jint index) {
  return (index < 0 || index >= ((IOSObjectArray *) nil_chk(self->zs_))->size_) ? nil : IOSObjectArray_Get(nil_chk(self->zs_), index);
}

OrgSpongycastleMathEcECFieldElement *OrgSpongycastleMathEcECPoint_getRawXCoord(OrgSpongycastleMathEcECPoint *self) {
  return self->x_;
}

OrgSpongycastleMathEcECFieldElement *OrgSpongycastleMathEcECPoint_getRawYCoord(OrgSpongycastleMathEcECPoint *self) {
  return self->y_;
}

IOSObjectArray *OrgSpongycastleMathEcECPoint_getRawZCoords(OrgSpongycastleMathEcECPoint *self) {
  return self->zs_;
}

OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECPoint_scaleXWithOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint *self, OrgSpongycastleMathEcECFieldElement *scale_) {
  return [self isInfinity] ? self : [((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) createRawPointWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(OrgSpongycastleMathEcECPoint_getRawXCoord(self))) multiplyWithOrgSpongycastleMathEcECFieldElement:scale_] withOrgSpongycastleMathEcECFieldElement:OrgSpongycastleMathEcECPoint_getRawYCoord(self) withOrgSpongycastleMathEcECFieldElementArray:OrgSpongycastleMathEcECPoint_getRawZCoords(self) withBoolean:self->withCompression_];
}

OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECPoint_scaleYWithOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint *self, OrgSpongycastleMathEcECFieldElement *scale_) {
  return [self isInfinity] ? self : [((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) createRawPointWithOrgSpongycastleMathEcECFieldElement:OrgSpongycastleMathEcECPoint_getRawXCoord(self) withOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(OrgSpongycastleMathEcECPoint_getRawYCoord(self))) multiplyWithOrgSpongycastleMathEcECFieldElement:scale_] withOrgSpongycastleMathEcECFieldElementArray:OrgSpongycastleMathEcECPoint_getRawZCoords(self) withBoolean:self->withCompression_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcECPoint)

@implementation OrgSpongycastleMathEcECPoint_AbstractFp

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y {
  OrgSpongycastleMathEcECPoint_AbstractFp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
  return self;
}

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y
        withOrgSpongycastleMathEcECFieldElementArray:(IOSObjectArray *)zs {
  OrgSpongycastleMathEcECPoint_AbstractFp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(self, curve, x, y, zs);
  return self;
}

- (jboolean)getCompressionYTilde {
  return [((OrgSpongycastleMathEcECFieldElement *) nil_chk([self getAffineYCoord])) testBitZero];
}

- (jboolean)satisfiesCurveEquation {
  OrgSpongycastleMathEcECFieldElement *X = self->x_;
  OrgSpongycastleMathEcECFieldElement *Y = self->y_;
  OrgSpongycastleMathEcECFieldElement *A = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve_)) getA];
  OrgSpongycastleMathEcECFieldElement *B = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve_)) getB];
  OrgSpongycastleMathEcECFieldElement *lhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y)) square];
  switch ([self getCurveCoordinateSystem]) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    break;
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    {
      OrgSpongycastleMathEcECFieldElement *Z = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      if (![((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) isOne]) {
        OrgSpongycastleMathEcECFieldElement *Z2 = [Z square];
        OrgSpongycastleMathEcECFieldElement *Z3 = [Z multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
        lhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(lhs)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z];
        A = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(A)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
        B = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(B)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z3];
      }
      break;
    }
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN:
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_CHUDNOVSKY:
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
    {
      OrgSpongycastleMathEcECFieldElement *Z = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      if (![((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) isOne]) {
        OrgSpongycastleMathEcECFieldElement *Z2 = [Z square];
        OrgSpongycastleMathEcECFieldElement *Z4 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2)) square];
        OrgSpongycastleMathEcECFieldElement *Z6 = [Z2 multiplyWithOrgSpongycastleMathEcECFieldElement:Z4];
        A = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(A)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z4];
        B = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(B)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z6];
      }
      break;
    }
    default:
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
  }
  OrgSpongycastleMathEcECFieldElement *rhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) square])) addWithOrgSpongycastleMathEcECFieldElement:A])) multiplyWithOrgSpongycastleMathEcECFieldElement:X])) addWithOrgSpongycastleMathEcECFieldElement:B];
  return [((OrgSpongycastleMathEcECFieldElement *) nil_chk(lhs)) isEqual:rhs];
}

- (OrgSpongycastleMathEcECPoint *)subtractWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  if ([((OrgSpongycastleMathEcECPoint *) nil_chk(b)) isInfinity]) {
    return self;
  }
  return [self addWithOrgSpongycastleMathEcECPoint:[b negate]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:);
  methods[1].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElementArray:);
  methods[2].selector = @selector(getCompressionYTilde);
  methods[3].selector = @selector(satisfiesCurveEquation);
  methods[4].selector = @selector(subtractWithOrgSpongycastleMathEcECPoint:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;[LOrgSpongycastleMathEcECFieldElement;", "subtract", "LOrgSpongycastleMathEcECPoint;" };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcECPoint_AbstractFp = { "AbstractFp", "org.spongycastle.math.ec", ptrTable, methods, NULL, 7, 0x409, 5, 0, 3, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcECPoint_AbstractFp;
}

@end

void OrgSpongycastleMathEcECPoint_AbstractFp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint_AbstractFp *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
}

void OrgSpongycastleMathEcECPoint_AbstractFp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(OrgSpongycastleMathEcECPoint_AbstractFp *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs) {
  OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(self, curve, x, y, zs);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcECPoint_AbstractFp)

@implementation OrgSpongycastleMathEcECPoint_Fp

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y {
  OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
  return self;
}

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y
                                         withBoolean:(jboolean)withCompression {
  OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(self, curve, x, y, withCompression);
  return self;
}

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y
        withOrgSpongycastleMathEcECFieldElementArray:(IOSObjectArray *)zs
                                         withBoolean:(jboolean)withCompression {
  OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(self, curve, x, y, zs, withCompression);
  return self;
}

- (OrgSpongycastleMathEcECPoint *)detach {
  return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(nil, [self getAffineXCoord], [self getAffineYCoord]);
}

- (OrgSpongycastleMathEcECFieldElement *)getZCoordWithInt:(jint)index {
  if (index == 1 && OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED == [self getCurveCoordinateSystem]) {
    return [self getJacobianModifiedW];
  }
  return OrgSpongycastleMathEcECPoint_getZCoordWithInt_(self, index);
}

- (OrgSpongycastleMathEcECPoint *)addWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  if ([self isInfinity]) {
    return b;
  }
  if ([((OrgSpongycastleMathEcECPoint *) nil_chk(b)) isInfinity]) {
    return self;
  }
  if (self == b) {
    return [self twice];
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
  OrgSpongycastleMathEcECFieldElement *X2 = b->x_;
  OrgSpongycastleMathEcECFieldElement *Y2 = b->y_;
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *dx = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) subtractWithOrgSpongycastleMathEcECFieldElement:X1];
      OrgSpongycastleMathEcECFieldElement *dy = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y2)) subtractWithOrgSpongycastleMathEcECFieldElement:Y1];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dx)) isZero]) {
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dy)) isZero]) {
          return [self twice];
        }
        return [curve getInfinity];
      }
      OrgSpongycastleMathEcECFieldElement *gamma = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(dy)) divideWithOrgSpongycastleMathEcECFieldElement:dx];
      OrgSpongycastleMathEcECFieldElement *X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(gamma)) square])) subtractWithOrgSpongycastleMathEcECFieldElement:X1])) subtractWithOrgSpongycastleMathEcECFieldElement:X2];
      OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([gamma multiplyWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) subtractWithOrgSpongycastleMathEcECFieldElement:X3]])) subtractWithOrgSpongycastleMathEcECFieldElement:Y1];
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, X3, Y3, self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    {
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      OrgSpongycastleMathEcECFieldElement *Z2 = IOSObjectArray_Get(b->zs_, 0);
      jboolean Z1IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne];
      jboolean Z2IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2)) isOne];
      OrgSpongycastleMathEcECFieldElement *u1 = Z1IsOne ? Y2 : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y2)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      OrgSpongycastleMathEcECFieldElement *u2 = Z2IsOne ? Y1 : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
      OrgSpongycastleMathEcECFieldElement *u = [u1 subtractWithOrgSpongycastleMathEcECFieldElement:u2];
      OrgSpongycastleMathEcECFieldElement *v1 = Z1IsOne ? X2 : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      OrgSpongycastleMathEcECFieldElement *v2 = Z2IsOne ? X1 : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
      OrgSpongycastleMathEcECFieldElement *v = [v1 subtractWithOrgSpongycastleMathEcECFieldElement:v2];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(v)) isZero]) {
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(u)) isZero]) {
          return [self twice];
        }
        return [curve getInfinity];
      }
      OrgSpongycastleMathEcECFieldElement *w = Z1IsOne ? Z2 : Z2IsOne ? Z1 : [Z1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
      OrgSpongycastleMathEcECFieldElement *vSquared = [v square];
      OrgSpongycastleMathEcECFieldElement *vCubed = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(vSquared)) multiplyWithOrgSpongycastleMathEcECFieldElement:v];
      OrgSpongycastleMathEcECFieldElement *vSquaredV2 = [vSquared multiplyWithOrgSpongycastleMathEcECFieldElement:v2];
      OrgSpongycastleMathEcECFieldElement *A = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(u)) square])) multiplyWithOrgSpongycastleMathEcECFieldElement:w])) subtractWithOrgSpongycastleMathEcECFieldElement:vCubed])) subtractWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:vSquaredV2]];
      OrgSpongycastleMathEcECFieldElement *X3 = [v multiplyWithOrgSpongycastleMathEcECFieldElement:A];
      OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(vSquaredV2)) subtractWithOrgSpongycastleMathEcECFieldElement:A])) multiplyMinusProductWithOrgSpongycastleMathEcECFieldElement:u withOrgSpongycastleMathEcECFieldElement:u2 withOrgSpongycastleMathEcECFieldElement:vCubed];
      OrgSpongycastleMathEcECFieldElement *Z3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(vCubed)) multiplyWithOrgSpongycastleMathEcECFieldElement:w];
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, Y3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN:
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
    {
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      OrgSpongycastleMathEcECFieldElement *Z2 = IOSObjectArray_Get(b->zs_, 0);
      jboolean Z1IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne];
      OrgSpongycastleMathEcECFieldElement *X3;
      OrgSpongycastleMathEcECFieldElement *Y3;
      OrgSpongycastleMathEcECFieldElement *Z3;
      OrgSpongycastleMathEcECFieldElement *Z3Squared = nil;
      if (!Z1IsOne && [Z1 isEqual:Z2]) {
        OrgSpongycastleMathEcECFieldElement *dx = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) subtractWithOrgSpongycastleMathEcECFieldElement:X2];
        OrgSpongycastleMathEcECFieldElement *dy = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) subtractWithOrgSpongycastleMathEcECFieldElement:Y2];
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dx)) isZero]) {
          if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dy)) isZero]) {
            return [self twice];
          }
          return [curve getInfinity];
        }
        OrgSpongycastleMathEcECFieldElement *C = [dx square];
        OrgSpongycastleMathEcECFieldElement *W1 = [X1 multiplyWithOrgSpongycastleMathEcECFieldElement:C];
        OrgSpongycastleMathEcECFieldElement *W2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) multiplyWithOrgSpongycastleMathEcECFieldElement:C];
        OrgSpongycastleMathEcECFieldElement *A1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(W1)) subtractWithOrgSpongycastleMathEcECFieldElement:W2])) multiplyWithOrgSpongycastleMathEcECFieldElement:Y1];
        X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dy)) square])) subtractWithOrgSpongycastleMathEcECFieldElement:W1])) subtractWithOrgSpongycastleMathEcECFieldElement:W2];
        Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([W1 subtractWithOrgSpongycastleMathEcECFieldElement:X3])) multiplyWithOrgSpongycastleMathEcECFieldElement:dy])) subtractWithOrgSpongycastleMathEcECFieldElement:A1];
        Z3 = dx;
        Z3 = [Z3 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      }
      else {
        OrgSpongycastleMathEcECFieldElement *Z1Squared;
        OrgSpongycastleMathEcECFieldElement *U2;
        OrgSpongycastleMathEcECFieldElement *S2;
        if (Z1IsOne) {
          Z1Squared = Z1;
          U2 = X2;
          S2 = Y2;
        }
        else {
          Z1Squared = [Z1 square];
          U2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1Squared)) multiplyWithOrgSpongycastleMathEcECFieldElement:X2];
          OrgSpongycastleMathEcECFieldElement *Z1Cubed = [Z1Squared multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
          S2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1Cubed)) multiplyWithOrgSpongycastleMathEcECFieldElement:Y2];
        }
        jboolean Z2IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2)) isOne];
        OrgSpongycastleMathEcECFieldElement *Z2Squared;
        OrgSpongycastleMathEcECFieldElement *U1;
        OrgSpongycastleMathEcECFieldElement *S1;
        if (Z2IsOne) {
          Z2Squared = Z2;
          U1 = X1;
          S1 = Y1;
        }
        else {
          Z2Squared = [Z2 square];
          U1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2Squared)) multiplyWithOrgSpongycastleMathEcECFieldElement:X1];
          OrgSpongycastleMathEcECFieldElement *Z2Cubed = [Z2Squared multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
          S1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2Cubed)) multiplyWithOrgSpongycastleMathEcECFieldElement:Y1];
        }
        OrgSpongycastleMathEcECFieldElement *H = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(U1)) subtractWithOrgSpongycastleMathEcECFieldElement:U2];
        OrgSpongycastleMathEcECFieldElement *R = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(S1)) subtractWithOrgSpongycastleMathEcECFieldElement:S2];
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(H)) isZero]) {
          if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(R)) isZero]) {
            return [self twice];
          }
          return [curve getInfinity];
        }
        OrgSpongycastleMathEcECFieldElement *HSquared = [H square];
        OrgSpongycastleMathEcECFieldElement *G = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(HSquared)) multiplyWithOrgSpongycastleMathEcECFieldElement:H];
        OrgSpongycastleMathEcECFieldElement *V = [HSquared multiplyWithOrgSpongycastleMathEcECFieldElement:U1];
        X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(R)) square])) addWithOrgSpongycastleMathEcECFieldElement:G])) subtractWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:V]];
        Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(V)) subtractWithOrgSpongycastleMathEcECFieldElement:X3])) multiplyMinusProductWithOrgSpongycastleMathEcECFieldElement:R withOrgSpongycastleMathEcECFieldElement:G withOrgSpongycastleMathEcECFieldElement:S1];
        Z3 = H;
        if (!Z1IsOne) {
          Z3 = [Z3 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
        }
        if (!Z2IsOne) {
          Z3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z3)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
        }
        if (Z3 == H) {
          Z3Squared = HSquared;
        }
      }
      IOSObjectArray *zs;
      if (coord == OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED) {
        OrgSpongycastleMathEcECFieldElement *W3 = [self calculateJacobianModifiedWWithOrgSpongycastleMathEcECFieldElement:Z3 withOrgSpongycastleMathEcECFieldElement:Z3Squared];
        zs = [IOSObjectArray newArrayWithObjects:(id[]){ Z3, W3 } count:2 type:OrgSpongycastleMathEcECFieldElement_class_()];
      }
      else {
        zs = [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()];
      }
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, Y3, zs, self->withCompression_);
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)twice {
  if ([self isInfinity]) {
    return self;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) isZero]) {
    return [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getInfinity];
  }
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *X1Squared = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) square];
      OrgSpongycastleMathEcECFieldElement *gamma = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([self threeWithOrgSpongycastleMathEcECFieldElement:X1Squared])) addWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) getA]])) divideWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:Y1]];
      OrgSpongycastleMathEcECFieldElement *X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(gamma)) square])) subtractWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:X1]];
      OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([gamma multiplyWithOrgSpongycastleMathEcECFieldElement:[X1 subtractWithOrgSpongycastleMathEcECFieldElement:X3]])) subtractWithOrgSpongycastleMathEcECFieldElement:Y1];
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, X3, Y3, self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    {
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      jboolean Z1IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne];
      OrgSpongycastleMathEcECFieldElement *w = [curve getA];
      if (![((OrgSpongycastleMathEcECFieldElement *) nil_chk(w)) isZero] && !Z1IsOne) {
        w = [w multiplyWithOrgSpongycastleMathEcECFieldElement:[Z1 square]];
      }
      w = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(w)) addWithOrgSpongycastleMathEcECFieldElement:[self threeWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) square]]];
      OrgSpongycastleMathEcECFieldElement *s = Z1IsOne ? Y1 : [Y1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      OrgSpongycastleMathEcECFieldElement *t = Z1IsOne ? [Y1 square] : [s multiplyWithOrgSpongycastleMathEcECFieldElement:Y1];
      OrgSpongycastleMathEcECFieldElement *B = [X1 multiplyWithOrgSpongycastleMathEcECFieldElement:t];
      OrgSpongycastleMathEcECFieldElement *_4B = [self fourWithOrgSpongycastleMathEcECFieldElement:B];
      OrgSpongycastleMathEcECFieldElement *h = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(w)) square])) subtractWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:_4B]];
      OrgSpongycastleMathEcECFieldElement *_2s = [self twoWithOrgSpongycastleMathEcECFieldElement:s];
      OrgSpongycastleMathEcECFieldElement *X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(h)) multiplyWithOrgSpongycastleMathEcECFieldElement:_2s];
      OrgSpongycastleMathEcECFieldElement *_2t = [self twoWithOrgSpongycastleMathEcECFieldElement:t];
      OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(_4B)) subtractWithOrgSpongycastleMathEcECFieldElement:h])) multiplyWithOrgSpongycastleMathEcECFieldElement:w])) subtractWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(_2t)) square]]];
      OrgSpongycastleMathEcECFieldElement *_4sSquared = Z1IsOne ? [self twoWithOrgSpongycastleMathEcECFieldElement:_2t] : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(_2s)) square];
      OrgSpongycastleMathEcECFieldElement *Z3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([self twoWithOrgSpongycastleMathEcECFieldElement:_4sSquared])) multiplyWithOrgSpongycastleMathEcECFieldElement:s];
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, Y3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN:
    {
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      jboolean Z1IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne];
      OrgSpongycastleMathEcECFieldElement *Y1Squared = [Y1 square];
      OrgSpongycastleMathEcECFieldElement *T = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1Squared)) square];
      OrgSpongycastleMathEcECFieldElement *a4 = [curve getA];
      OrgSpongycastleMathEcECFieldElement *a4Neg = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(a4)) negate];
      OrgSpongycastleMathEcECFieldElement *M;
      OrgSpongycastleMathEcECFieldElement *S;
      if ([((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(a4Neg)) toBigInteger])) isEqual:JavaMathBigInteger_valueOfWithLong_(3)]) {
        OrgSpongycastleMathEcECFieldElement *Z1Squared = Z1IsOne ? Z1 : [Z1 square];
        M = [self threeWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) addWithOrgSpongycastleMathEcECFieldElement:Z1Squared])) multiplyWithOrgSpongycastleMathEcECFieldElement:[X1 subtractWithOrgSpongycastleMathEcECFieldElement:Z1Squared]]];
        S = [self fourWithOrgSpongycastleMathEcECFieldElement:[Y1Squared multiplyWithOrgSpongycastleMathEcECFieldElement:X1]];
      }
      else {
        OrgSpongycastleMathEcECFieldElement *X1Squared = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) square];
        M = [self threeWithOrgSpongycastleMathEcECFieldElement:X1Squared];
        if (Z1IsOne) {
          M = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(M)) addWithOrgSpongycastleMathEcECFieldElement:a4];
        }
        else if (![a4 isZero]) {
          OrgSpongycastleMathEcECFieldElement *Z1Squared = [Z1 square];
          OrgSpongycastleMathEcECFieldElement *Z1Pow4 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1Squared)) square];
          if ([a4Neg bitLength] < [a4 bitLength]) {
            M = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(M)) subtractWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1Pow4)) multiplyWithOrgSpongycastleMathEcECFieldElement:a4Neg]];
          }
          else {
            M = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(M)) addWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1Pow4)) multiplyWithOrgSpongycastleMathEcECFieldElement:a4]];
          }
        }
        S = [self fourWithOrgSpongycastleMathEcECFieldElement:[X1 multiplyWithOrgSpongycastleMathEcECFieldElement:Y1Squared]];
      }
      OrgSpongycastleMathEcECFieldElement *X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(M)) square])) subtractWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:S]];
      OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(S)) subtractWithOrgSpongycastleMathEcECFieldElement:X3])) multiplyWithOrgSpongycastleMathEcECFieldElement:M])) subtractWithOrgSpongycastleMathEcECFieldElement:[self eightWithOrgSpongycastleMathEcECFieldElement:T]];
      OrgSpongycastleMathEcECFieldElement *Z3 = [self twoWithOrgSpongycastleMathEcECFieldElement:Y1];
      if (!Z1IsOne) {
        Z3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z3)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      }
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, Y3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
    {
      return [self twiceJacobianModifiedWithBoolean:true];
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)twicePlusWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  if (self == b) {
    return [self threeTimes];
  }
  if ([self isInfinity]) {
    return b;
  }
  if ([((OrgSpongycastleMathEcECPoint *) nil_chk(b)) isInfinity]) {
    return [self twice];
  }
  OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) isZero]) {
    return b;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
      OrgSpongycastleMathEcECFieldElement *X2 = b->x_;
      OrgSpongycastleMathEcECFieldElement *Y2 = b->y_;
      OrgSpongycastleMathEcECFieldElement *dx = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) subtractWithOrgSpongycastleMathEcECFieldElement:X1];
      OrgSpongycastleMathEcECFieldElement *dy = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y2)) subtractWithOrgSpongycastleMathEcECFieldElement:Y1];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dx)) isZero]) {
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dy)) isZero]) {
          return [self threeTimes];
        }
        return self;
      }
      OrgSpongycastleMathEcECFieldElement *X = [dx square];
      OrgSpongycastleMathEcECFieldElement *Y = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(dy)) square];
      OrgSpongycastleMathEcECFieldElement *d = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) multiplyWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk([self twoWithOrgSpongycastleMathEcECFieldElement:X1])) addWithOrgSpongycastleMathEcECFieldElement:X2]])) subtractWithOrgSpongycastleMathEcECFieldElement:Y];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(d)) isZero]) {
        return [curve getInfinity];
      }
      OrgSpongycastleMathEcECFieldElement *D = [d multiplyWithOrgSpongycastleMathEcECFieldElement:dx];
      OrgSpongycastleMathEcECFieldElement *I = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(D)) invert];
      OrgSpongycastleMathEcECFieldElement *L1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([d multiplyWithOrgSpongycastleMathEcECFieldElement:I])) multiplyWithOrgSpongycastleMathEcECFieldElement:dy];
      OrgSpongycastleMathEcECFieldElement *L2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([self twoWithOrgSpongycastleMathEcECFieldElement:Y1])) multiplyWithOrgSpongycastleMathEcECFieldElement:X])) multiplyWithOrgSpongycastleMathEcECFieldElement:dx])) multiplyWithOrgSpongycastleMathEcECFieldElement:I])) subtractWithOrgSpongycastleMathEcECFieldElement:L1];
      OrgSpongycastleMathEcECFieldElement *X4 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L2)) subtractWithOrgSpongycastleMathEcECFieldElement:L1]))) multiplyWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(L1)) addWithOrgSpongycastleMathEcECFieldElement:L2]])) addWithOrgSpongycastleMathEcECFieldElement:X2];
      OrgSpongycastleMathEcECFieldElement *Y4 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) subtractWithOrgSpongycastleMathEcECFieldElement:X4]))) multiplyWithOrgSpongycastleMathEcECFieldElement:L2])) subtractWithOrgSpongycastleMathEcECFieldElement:Y1];
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, X4, Y4, self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
    {
      return [((OrgSpongycastleMathEcECPoint_Fp *) nil_chk([self twiceJacobianModifiedWithBoolean:false])) addWithOrgSpongycastleMathEcECPoint:b];
    }
    default:
    {
      return [((OrgSpongycastleMathEcECPoint *) nil_chk([self twice])) addWithOrgSpongycastleMathEcECPoint:b];
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)threeTimes {
  if ([self isInfinity]) {
    return self;
  }
  OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) isZero]) {
    return self;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
      OrgSpongycastleMathEcECFieldElement *_2Y1 = [self twoWithOrgSpongycastleMathEcECFieldElement:Y1];
      OrgSpongycastleMathEcECFieldElement *X = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(_2Y1)) square];
      OrgSpongycastleMathEcECFieldElement *Z = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([self threeWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) square]])) addWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) getA]];
      OrgSpongycastleMathEcECFieldElement *Y = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) square];
      OrgSpongycastleMathEcECFieldElement *d = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([self threeWithOrgSpongycastleMathEcECFieldElement:X1])) multiplyWithOrgSpongycastleMathEcECFieldElement:X])) subtractWithOrgSpongycastleMathEcECFieldElement:Y];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(d)) isZero]) {
        return [((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) getInfinity];
      }
      OrgSpongycastleMathEcECFieldElement *D = [d multiplyWithOrgSpongycastleMathEcECFieldElement:_2Y1];
      OrgSpongycastleMathEcECFieldElement *I = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(D)) invert];
      OrgSpongycastleMathEcECFieldElement *L1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([d multiplyWithOrgSpongycastleMathEcECFieldElement:I])) multiplyWithOrgSpongycastleMathEcECFieldElement:Z];
      OrgSpongycastleMathEcECFieldElement *L2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) square])) multiplyWithOrgSpongycastleMathEcECFieldElement:I])) subtractWithOrgSpongycastleMathEcECFieldElement:L1];
      OrgSpongycastleMathEcECFieldElement *X4 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L2)) subtractWithOrgSpongycastleMathEcECFieldElement:L1]))) multiplyWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(L1)) addWithOrgSpongycastleMathEcECFieldElement:L2]])) addWithOrgSpongycastleMathEcECFieldElement:X1];
      OrgSpongycastleMathEcECFieldElement *Y4 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(([X1 subtractWithOrgSpongycastleMathEcECFieldElement:X4]))) multiplyWithOrgSpongycastleMathEcECFieldElement:L2])) subtractWithOrgSpongycastleMathEcECFieldElement:Y1];
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, X4, Y4, self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
    {
      return [((OrgSpongycastleMathEcECPoint_Fp *) nil_chk([self twiceJacobianModifiedWithBoolean:false])) addWithOrgSpongycastleMathEcECPoint:self];
    }
    default:
    {
      return [((OrgSpongycastleMathEcECPoint *) nil_chk([self twice])) addWithOrgSpongycastleMathEcECPoint:self];
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)timesPow2WithInt:(jint)e {
  if (e < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'e' cannot be negative");
  }
  if (e == 0 || [self isInfinity]) {
    return self;
  }
  if (e == 1) {
    return [self twice];
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) isZero]) {
    return [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getInfinity];
  }
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  OrgSpongycastleMathEcECFieldElement *W1 = [curve getA];
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  OrgSpongycastleMathEcECFieldElement *Z1 = ((IOSObjectArray *) nil_chk(self->zs_))->size_ < 1 ? [curve fromBigIntegerWithJavaMathBigInteger:JreLoadStatic(OrgSpongycastleMathEcECConstants, ONE)] : IOSObjectArray_Get(self->zs_, 0);
  if (![Z1 isOne]) {
    {
      OrgSpongycastleMathEcECFieldElement *Z1Sq;
      switch (coord) {
        case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
        break;
        case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
        Z1Sq = [Z1 square];
        X1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
        Y1 = [Y1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1Sq];
        W1 = [self calculateJacobianModifiedWWithOrgSpongycastleMathEcECFieldElement:Z1 withOrgSpongycastleMathEcECFieldElement:Z1Sq];
        break;
        case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN:
        W1 = [self calculateJacobianModifiedWWithOrgSpongycastleMathEcECFieldElement:Z1 withOrgSpongycastleMathEcECFieldElement:nil];
        break;
        case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
        W1 = [self getJacobianModifiedW];
        break;
        default:
        @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
      }
    }
  }
  for (jint i = 0; i < e; ++i) {
    if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) isZero]) {
      return [curve getInfinity];
    }
    OrgSpongycastleMathEcECFieldElement *X1Squared = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) square];
    OrgSpongycastleMathEcECFieldElement *M = [self threeWithOrgSpongycastleMathEcECFieldElement:X1Squared];
    OrgSpongycastleMathEcECFieldElement *_2Y1 = [self twoWithOrgSpongycastleMathEcECFieldElement:Y1];
    OrgSpongycastleMathEcECFieldElement *_2Y1Squared = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(_2Y1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Y1];
    OrgSpongycastleMathEcECFieldElement *S = [self twoWithOrgSpongycastleMathEcECFieldElement:[X1 multiplyWithOrgSpongycastleMathEcECFieldElement:_2Y1Squared]];
    OrgSpongycastleMathEcECFieldElement *_4T = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(_2Y1Squared)) square];
    OrgSpongycastleMathEcECFieldElement *_8T = [self twoWithOrgSpongycastleMathEcECFieldElement:_4T];
    if (![((OrgSpongycastleMathEcECFieldElement *) nil_chk(W1)) isZero]) {
      M = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(M)) addWithOrgSpongycastleMathEcECFieldElement:W1];
      W1 = [self twoWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(_8T)) multiplyWithOrgSpongycastleMathEcECFieldElement:W1]];
    }
    X1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(M)) square])) subtractWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:S]];
    Y1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([M multiplyWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(S)) subtractWithOrgSpongycastleMathEcECFieldElement:X1]])) subtractWithOrgSpongycastleMathEcECFieldElement:_8T];
    Z1 = [Z1 isOne] ? _2Y1 : [_2Y1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
  }
  {
    OrgSpongycastleMathEcECFieldElement *zInv;
    OrgSpongycastleMathEcECFieldElement *zInv2;
    OrgSpongycastleMathEcECFieldElement *zInv3;
    switch (coord) {
      case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
      zInv = [Z1 invert];
      zInv2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(zInv)) square];
      zInv3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(zInv2)) multiplyWithOrgSpongycastleMathEcECFieldElement:zInv];
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) multiplyWithOrgSpongycastleMathEcECFieldElement:zInv2], [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) multiplyWithOrgSpongycastleMathEcECFieldElement:zInv3], self->withCompression_);
      case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
      X1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      Z1 = [Z1 multiplyWithOrgSpongycastleMathEcECFieldElement:[Z1 square]];
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X1, Y1, [IOSObjectArray newArrayWithObjects:(id[]){ Z1 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
      case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN:
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X1, Y1, [IOSObjectArray newArrayWithObjects:(id[]){ Z1 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
      case OrgSpongycastleMathEcECCurve_COORD_JACOBIAN_MODIFIED:
      return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X1, Y1, [IOSObjectArray newArrayWithObjects:(id[]){ Z1, W1 } count:2 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
      default:
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
    }
  }
}

- (OrgSpongycastleMathEcECFieldElement *)twoWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x {
  return [((OrgSpongycastleMathEcECFieldElement *) nil_chk(x)) addWithOrgSpongycastleMathEcECFieldElement:x];
}

- (OrgSpongycastleMathEcECFieldElement *)threeWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x {
  return [((OrgSpongycastleMathEcECFieldElement *) nil_chk([self twoWithOrgSpongycastleMathEcECFieldElement:x])) addWithOrgSpongycastleMathEcECFieldElement:x];
}

- (OrgSpongycastleMathEcECFieldElement *)fourWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x {
  return [self twoWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:x]];
}

- (OrgSpongycastleMathEcECFieldElement *)eightWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x {
  return [self fourWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:x]];
}

- (OrgSpongycastleMathEcECFieldElement *)doubleProductFromSquaresWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)a
                                                                 withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)b
                                                                 withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)aSquared
                                                                 withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)bSquared {
  return [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(a)) addWithOrgSpongycastleMathEcECFieldElement:b])) square])) subtractWithOrgSpongycastleMathEcECFieldElement:aSquared])) subtractWithOrgSpongycastleMathEcECFieldElement:bSquared];
}

- (OrgSpongycastleMathEcECPoint *)negate {
  if ([self isInfinity]) {
    return self;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  if (OrgSpongycastleMathEcECCurve_COORD_AFFINE != coord) {
    return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, self->x_, [((OrgSpongycastleMathEcECFieldElement *) nil_chk(self->y_)) negate], self->zs_, self->withCompression_);
  }
  return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, self->x_, [((OrgSpongycastleMathEcECFieldElement *) nil_chk(self->y_)) negate], self->withCompression_);
}

- (OrgSpongycastleMathEcECFieldElement *)calculateJacobianModifiedWWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)Z
                                                                   withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)ZSquared {
  OrgSpongycastleMathEcECFieldElement *a4 = [((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) getA];
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(a4)) isZero] || [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) isOne]) {
    return a4;
  }
  if (ZSquared == nil) {
    ZSquared = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) square];
  }
  OrgSpongycastleMathEcECFieldElement *W = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(ZSquared)) square];
  OrgSpongycastleMathEcECFieldElement *a4Neg = [a4 negate];
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(a4Neg)) bitLength] < [a4 bitLength]) {
    W = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(W)) multiplyWithOrgSpongycastleMathEcECFieldElement:a4Neg])) negate];
  }
  else {
    W = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(W)) multiplyWithOrgSpongycastleMathEcECFieldElement:a4];
  }
  return W;
}

- (OrgSpongycastleMathEcECFieldElement *)getJacobianModifiedW {
  OrgSpongycastleMathEcECFieldElement *W = IOSObjectArray_Get(nil_chk(self->zs_), 1);
  if (W == nil) {
    (void) IOSObjectArray_Set(self->zs_, 1, W = [self calculateJacobianModifiedWWithOrgSpongycastleMathEcECFieldElement:IOSObjectArray_Get(self->zs_, 0) withOrgSpongycastleMathEcECFieldElement:nil]);
  }
  return W;
}

- (OrgSpongycastleMathEcECPoint_Fp *)twiceJacobianModifiedWithBoolean:(jboolean)calculateW {
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
  OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
  OrgSpongycastleMathEcECFieldElement *W1 = [self getJacobianModifiedW];
  OrgSpongycastleMathEcECFieldElement *X1Squared = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) square];
  OrgSpongycastleMathEcECFieldElement *M = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([self threeWithOrgSpongycastleMathEcECFieldElement:X1Squared])) addWithOrgSpongycastleMathEcECFieldElement:W1];
  OrgSpongycastleMathEcECFieldElement *_2Y1 = [self twoWithOrgSpongycastleMathEcECFieldElement:Y1];
  OrgSpongycastleMathEcECFieldElement *_2Y1Squared = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(_2Y1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Y1];
  OrgSpongycastleMathEcECFieldElement *S = [self twoWithOrgSpongycastleMathEcECFieldElement:[X1 multiplyWithOrgSpongycastleMathEcECFieldElement:_2Y1Squared]];
  OrgSpongycastleMathEcECFieldElement *X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(M)) square])) subtractWithOrgSpongycastleMathEcECFieldElement:[self twoWithOrgSpongycastleMathEcECFieldElement:S]];
  OrgSpongycastleMathEcECFieldElement *_4T = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(_2Y1Squared)) square];
  OrgSpongycastleMathEcECFieldElement *_8T = [self twoWithOrgSpongycastleMathEcECFieldElement:_4T];
  OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([M multiplyWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(S)) subtractWithOrgSpongycastleMathEcECFieldElement:X3]])) subtractWithOrgSpongycastleMathEcECFieldElement:_8T];
  OrgSpongycastleMathEcECFieldElement *W3 = calculateW ? [self twoWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(_8T)) multiplyWithOrgSpongycastleMathEcECFieldElement:W1]] : nil;
  OrgSpongycastleMathEcECFieldElement *Z3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne] ? _2Y1 : [_2Y1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
  return new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_([self getCurve], X3, Y3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3, W3 } count:2 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 8, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x4, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x4, 11, 10, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x4, 12, 10, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x4, 13, 10, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x4, 14, 15, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x4, 16, 17, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint_Fp;", 0x4, 18, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:);
  methods[1].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withBoolean:);
  methods[2].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElementArray:withBoolean:);
  methods[3].selector = @selector(detach);
  methods[4].selector = @selector(getZCoordWithInt:);
  methods[5].selector = @selector(addWithOrgSpongycastleMathEcECPoint:);
  methods[6].selector = @selector(twice);
  methods[7].selector = @selector(twicePlusWithOrgSpongycastleMathEcECPoint:);
  methods[8].selector = @selector(threeTimes);
  methods[9].selector = @selector(timesPow2WithInt:);
  methods[10].selector = @selector(twoWithOrgSpongycastleMathEcECFieldElement:);
  methods[11].selector = @selector(threeWithOrgSpongycastleMathEcECFieldElement:);
  methods[12].selector = @selector(fourWithOrgSpongycastleMathEcECFieldElement:);
  methods[13].selector = @selector(eightWithOrgSpongycastleMathEcECFieldElement:);
  methods[14].selector = @selector(doubleProductFromSquaresWithOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:);
  methods[15].selector = @selector(negate);
  methods[16].selector = @selector(calculateJacobianModifiedWWithOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:);
  methods[17].selector = @selector(getJacobianModifiedW);
  methods[18].selector = @selector(twiceJacobianModifiedWithBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;Z", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;[LOrgSpongycastleMathEcECFieldElement;Z", "getZCoord", "I", "add", "LOrgSpongycastleMathEcECPoint;", "twicePlus", "timesPow2", "two", "LOrgSpongycastleMathEcECFieldElement;", "three", "four", "eight", "doubleProductFromSquares", "LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;", "calculateJacobianModifiedW", "LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;", "twiceJacobianModified", "Z" };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcECPoint_Fp = { "Fp", "org.spongycastle.math.ec", ptrTable, methods, NULL, 7, 0x9, 19, 0, 6, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcECPoint_Fp;
}

@end

void OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint_Fp *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(self, curve, x, y, false);
}

OrgSpongycastleMathEcECPoint_Fp *new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcECPoint_Fp, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_, curve, x, y)
}

OrgSpongycastleMathEcECPoint_Fp *create_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcECPoint_Fp, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_, curve, x, y)
}

void OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(OrgSpongycastleMathEcECPoint_Fp *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, jboolean withCompression) {
  OrgSpongycastleMathEcECPoint_AbstractFp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
  if ((x == nil) != (y == nil)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Exactly one of the field elements is null");
  }
  self->withCompression_ = withCompression;
}

OrgSpongycastleMathEcECPoint_Fp *new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, jboolean withCompression) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcECPoint_Fp, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_, curve, x, y, withCompression)
}

OrgSpongycastleMathEcECPoint_Fp *create_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, jboolean withCompression) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcECPoint_Fp, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_, curve, x, y, withCompression)
}

void OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(OrgSpongycastleMathEcECPoint_Fp *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs, jboolean withCompression) {
  OrgSpongycastleMathEcECPoint_AbstractFp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(self, curve, x, y, zs);
  self->withCompression_ = withCompression;
}

OrgSpongycastleMathEcECPoint_Fp *new_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs, jboolean withCompression) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcECPoint_Fp, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_, curve, x, y, zs, withCompression)
}

OrgSpongycastleMathEcECPoint_Fp *create_OrgSpongycastleMathEcECPoint_Fp_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs, jboolean withCompression) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcECPoint_Fp, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_, curve, x, y, zs, withCompression)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcECPoint_Fp)

@implementation OrgSpongycastleMathEcECPoint_AbstractF2m

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y {
  OrgSpongycastleMathEcECPoint_AbstractF2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
  return self;
}

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y
        withOrgSpongycastleMathEcECFieldElementArray:(IOSObjectArray *)zs {
  OrgSpongycastleMathEcECPoint_AbstractF2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(self, curve, x, y, zs);
  return self;
}

- (jboolean)satisfiesCurveEquation {
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  OrgSpongycastleMathEcECFieldElement *X = self->x_;
  OrgSpongycastleMathEcECFieldElement *A = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getA];
  OrgSpongycastleMathEcECFieldElement *B = [curve getB];
  jint coord = [curve getCoordinateSystem];
  if (coord == OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE) {
    OrgSpongycastleMathEcECFieldElement *Z = IOSObjectArray_Get(nil_chk(self->zs_), 0);
    jboolean ZIsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) isOne];
    if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) isZero]) {
      OrgSpongycastleMathEcECFieldElement *Y = self->y_;
      OrgSpongycastleMathEcECFieldElement *lhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y)) square];
      OrgSpongycastleMathEcECFieldElement *rhs = B;
      if (!ZIsOne) {
        rhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(rhs)) multiplyWithOrgSpongycastleMathEcECFieldElement:[Z square]];
      }
      return [((OrgSpongycastleMathEcECFieldElement *) nil_chk(lhs)) isEqual:rhs];
    }
    OrgSpongycastleMathEcECFieldElement *L = self->y_;
    OrgSpongycastleMathEcECFieldElement *X2 = [X square];
    OrgSpongycastleMathEcECFieldElement *lhs;
    OrgSpongycastleMathEcECFieldElement *rhs;
    if (ZIsOne) {
      lhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) square])) addWithOrgSpongycastleMathEcECFieldElement:L])) addWithOrgSpongycastleMathEcECFieldElement:A];
      rhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) square])) addWithOrgSpongycastleMathEcECFieldElement:B];
    }
    else {
      OrgSpongycastleMathEcECFieldElement *Z2 = [Z square];
      OrgSpongycastleMathEcECFieldElement *Z4 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2)) square];
      lhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) addWithOrgSpongycastleMathEcECFieldElement:Z])) multiplyPlusProductWithOrgSpongycastleMathEcECFieldElement:L withOrgSpongycastleMathEcECFieldElement:A withOrgSpongycastleMathEcECFieldElement:Z2];
      rhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) squarePlusProductWithOrgSpongycastleMathEcECFieldElement:B withOrgSpongycastleMathEcECFieldElement:Z4];
    }
    lhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(lhs)) multiplyWithOrgSpongycastleMathEcECFieldElement:X2];
    return [((OrgSpongycastleMathEcECFieldElement *) nil_chk(lhs)) isEqual:rhs];
  }
  OrgSpongycastleMathEcECFieldElement *Y = self->y_;
  OrgSpongycastleMathEcECFieldElement *lhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y)) addWithOrgSpongycastleMathEcECFieldElement:X])) multiplyWithOrgSpongycastleMathEcECFieldElement:Y];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    break;
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    {
      OrgSpongycastleMathEcECFieldElement *Z = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      if (![((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) isOne]) {
        OrgSpongycastleMathEcECFieldElement *Z2 = [Z square];
        OrgSpongycastleMathEcECFieldElement *Z3 = [Z multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
        lhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(lhs)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z];
        A = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(A)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z];
        B = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(B)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z3];
      }
      break;
    }
    default:
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
  }
  OrgSpongycastleMathEcECFieldElement *rhs = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) addWithOrgSpongycastleMathEcECFieldElement:A])) multiplyWithOrgSpongycastleMathEcECFieldElement:[X square]])) addWithOrgSpongycastleMathEcECFieldElement:B];
  return [((OrgSpongycastleMathEcECFieldElement *) nil_chk(lhs)) isEqual:rhs];
}

- (OrgSpongycastleMathEcECPoint *)scaleXWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)scale_ {
  if ([self isInfinity]) {
    return self;
  }
  jint coord = [self getCurveCoordinateSystem];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *X = OrgSpongycastleMathEcECPoint_getRawXCoord(self);
      OrgSpongycastleMathEcECFieldElement *L = OrgSpongycastleMathEcECPoint_getRawYCoord(self);
      OrgSpongycastleMathEcECFieldElement *X2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) multiplyWithOrgSpongycastleMathEcECFieldElement:scale_];
      OrgSpongycastleMathEcECFieldElement *L2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) addWithOrgSpongycastleMathEcECFieldElement:X])) divideWithOrgSpongycastleMathEcECFieldElement:scale_])) addWithOrgSpongycastleMathEcECFieldElement:X2];
      return [((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) createRawPointWithOrgSpongycastleMathEcECFieldElement:X withOrgSpongycastleMathEcECFieldElement:L2 withOrgSpongycastleMathEcECFieldElementArray:OrgSpongycastleMathEcECPoint_getRawZCoords(self) withBoolean:self->withCompression_];
    }
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      OrgSpongycastleMathEcECFieldElement *X = OrgSpongycastleMathEcECPoint_getRawXCoord(self);
      OrgSpongycastleMathEcECFieldElement *L = OrgSpongycastleMathEcECPoint_getRawYCoord(self);
      OrgSpongycastleMathEcECFieldElement *Z = IOSObjectArray_Get(nil_chk(OrgSpongycastleMathEcECPoint_getRawZCoords(self)), 0);
      OrgSpongycastleMathEcECFieldElement *X2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) multiplyWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(scale_)) square]];
      OrgSpongycastleMathEcECFieldElement *L2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) addWithOrgSpongycastleMathEcECFieldElement:X])) addWithOrgSpongycastleMathEcECFieldElement:X2];
      OrgSpongycastleMathEcECFieldElement *Z2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) multiplyWithOrgSpongycastleMathEcECFieldElement:scale_];
      return [((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) createRawPointWithOrgSpongycastleMathEcECFieldElement:X2 withOrgSpongycastleMathEcECFieldElement:L2 withOrgSpongycastleMathEcECFieldElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ Z2 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()] withBoolean:self->withCompression_];
    }
    default:
    {
      return OrgSpongycastleMathEcECPoint_scaleXWithOrgSpongycastleMathEcECFieldElement_(self, scale_);
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)scaleYWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)scale_ {
  if ([self isInfinity]) {
    return self;
  }
  jint coord = [self getCurveCoordinateSystem];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      OrgSpongycastleMathEcECFieldElement *X = OrgSpongycastleMathEcECPoint_getRawXCoord(self);
      OrgSpongycastleMathEcECFieldElement *L = OrgSpongycastleMathEcECPoint_getRawYCoord(self);
      OrgSpongycastleMathEcECFieldElement *L2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) addWithOrgSpongycastleMathEcECFieldElement:X])) multiplyWithOrgSpongycastleMathEcECFieldElement:scale_])) addWithOrgSpongycastleMathEcECFieldElement:X];
      return [((OrgSpongycastleMathEcECCurve *) nil_chk([self getCurve])) createRawPointWithOrgSpongycastleMathEcECFieldElement:X withOrgSpongycastleMathEcECFieldElement:L2 withOrgSpongycastleMathEcECFieldElementArray:OrgSpongycastleMathEcECPoint_getRawZCoords(self) withBoolean:self->withCompression_];
    }
    default:
    {
      return OrgSpongycastleMathEcECPoint_scaleYWithOrgSpongycastleMathEcECFieldElement_(self, scale_);
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)subtractWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  if ([((OrgSpongycastleMathEcECPoint *) nil_chk(b)) isInfinity]) {
    return self;
  }
  return [self addWithOrgSpongycastleMathEcECPoint:[b negate]];
}

- (OrgSpongycastleMathEcECPoint_AbstractF2m *)tau {
  if ([self isInfinity]) {
    return self;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
      return (OrgSpongycastleMathEcECPoint_AbstractF2m *) cast_chk([curve createRawPointWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) square] withOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) square] withBoolean:self->withCompression_], [OrgSpongycastleMathEcECPoint_AbstractF2m class]);
    }
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      return (OrgSpongycastleMathEcECPoint_AbstractF2m *) cast_chk([curve createRawPointWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) square] withOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) square] withOrgSpongycastleMathEcECFieldElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) square] } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()] withBoolean:self->withCompression_], [OrgSpongycastleMathEcECPoint_AbstractF2m class]);
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
    }
  }
}

- (OrgSpongycastleMathEcECPoint_AbstractF2m *)tauPowWithInt:(jint)pow {
  if ([self isInfinity]) {
    return self;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
      return (OrgSpongycastleMathEcECPoint_AbstractF2m *) cast_chk([curve createRawPointWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) squarePowWithInt:pow] withOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) squarePowWithInt:pow] withBoolean:self->withCompression_], [OrgSpongycastleMathEcECPoint_AbstractF2m class]);
    }
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      return (OrgSpongycastleMathEcECPoint_AbstractF2m *) cast_chk([curve createRawPointWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) squarePowWithInt:pow] withOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) squarePowWithInt:pow] withOrgSpongycastleMathEcECFieldElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) squarePowWithInt:pow] } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()] withBoolean:self->withCompression_], [OrgSpongycastleMathEcECPoint_AbstractF2m class]);
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint_AbstractF2m;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint_AbstractF2m;", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:);
  methods[1].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElementArray:);
  methods[2].selector = @selector(satisfiesCurveEquation);
  methods[3].selector = @selector(scaleXWithOrgSpongycastleMathEcECFieldElement:);
  methods[4].selector = @selector(scaleYWithOrgSpongycastleMathEcECFieldElement:);
  methods[5].selector = @selector(subtractWithOrgSpongycastleMathEcECPoint:);
  methods[6].selector = @selector(tau);
  methods[7].selector = @selector(tauPowWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;[LOrgSpongycastleMathEcECFieldElement;", "scaleX", "LOrgSpongycastleMathEcECFieldElement;", "scaleY", "subtract", "LOrgSpongycastleMathEcECPoint;", "tauPow", "I" };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcECPoint_AbstractF2m = { "AbstractF2m", "org.spongycastle.math.ec", ptrTable, methods, NULL, 7, 0x409, 8, 0, 6, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcECPoint_AbstractF2m;
}

@end

void OrgSpongycastleMathEcECPoint_AbstractF2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint_AbstractF2m *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
}

void OrgSpongycastleMathEcECPoint_AbstractF2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(OrgSpongycastleMathEcECPoint_AbstractF2m *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs) {
  OrgSpongycastleMathEcECPoint_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(self, curve, x, y, zs);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcECPoint_AbstractF2m)

@implementation OrgSpongycastleMathEcECPoint_F2m

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y {
  OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
  return self;
}

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y
                                         withBoolean:(jboolean)withCompression {
  OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(self, curve, x, y, withCompression);
  return self;
}

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)x
             withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)y
        withOrgSpongycastleMathEcECFieldElementArray:(IOSObjectArray *)zs
                                         withBoolean:(jboolean)withCompression {
  OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(self, curve, x, y, zs, withCompression);
  return self;
}

- (OrgSpongycastleMathEcECPoint *)detach {
  return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(nil, [self getAffineXCoord], [self getAffineYCoord]);
}

- (OrgSpongycastleMathEcECFieldElement *)getYCoord {
  jint coord = [self getCurveCoordinateSystem];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      OrgSpongycastleMathEcECFieldElement *X = x_;
      OrgSpongycastleMathEcECFieldElement *L = y_;
      if ([self isInfinity] || [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) isZero]) {
        return L;
      }
      OrgSpongycastleMathEcECFieldElement *Y = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) addWithOrgSpongycastleMathEcECFieldElement:X])) multiplyWithOrgSpongycastleMathEcECFieldElement:X];
      if (OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE == coord) {
        OrgSpongycastleMathEcECFieldElement *Z = IOSObjectArray_Get(nil_chk(zs_), 0);
        if (![((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z)) isOne]) {
          Y = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y)) divideWithOrgSpongycastleMathEcECFieldElement:Z];
        }
      }
      return Y;
    }
    default:
    {
      return y_;
    }
  }
}

- (jboolean)getCompressionYTilde {
  OrgSpongycastleMathEcECFieldElement *X = OrgSpongycastleMathEcECPoint_getRawXCoord(self);
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) isZero]) {
    return false;
  }
  OrgSpongycastleMathEcECFieldElement *Y = OrgSpongycastleMathEcECPoint_getRawYCoord(self);
  switch ([self getCurveCoordinateSystem]) {
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      return [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y)) testBitZero] != [X testBitZero];
    }
    default:
    {
      return [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y)) divideWithOrgSpongycastleMathEcECFieldElement:X])) testBitZero];
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)addWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  if ([self isInfinity]) {
    return b;
  }
  if ([((OrgSpongycastleMathEcECPoint *) nil_chk(b)) isInfinity]) {
    return self;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  OrgSpongycastleMathEcECFieldElement *X2 = b->x_;
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *Y2 = b->y_;
      OrgSpongycastleMathEcECFieldElement *dx = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) addWithOrgSpongycastleMathEcECFieldElement:X2];
      OrgSpongycastleMathEcECFieldElement *dy = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) addWithOrgSpongycastleMathEcECFieldElement:Y2];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dx)) isZero]) {
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(dy)) isZero]) {
          return [self twice];
        }
        return [curve getInfinity];
      }
      OrgSpongycastleMathEcECFieldElement *L = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(dy)) divideWithOrgSpongycastleMathEcECFieldElement:dx];
      OrgSpongycastleMathEcECFieldElement *X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) square])) addWithOrgSpongycastleMathEcECFieldElement:L])) addWithOrgSpongycastleMathEcECFieldElement:dx])) addWithOrgSpongycastleMathEcECFieldElement:[curve getA]];
      OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([L multiplyWithOrgSpongycastleMathEcECFieldElement:[X1 addWithOrgSpongycastleMathEcECFieldElement:X3]])) addWithOrgSpongycastleMathEcECFieldElement:X3])) addWithOrgSpongycastleMathEcECFieldElement:Y1];
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, X3, Y3, self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    {
      OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      OrgSpongycastleMathEcECFieldElement *Y2 = b->y_;
      OrgSpongycastleMathEcECFieldElement *Z2 = IOSObjectArray_Get(b->zs_, 0);
      jboolean Z2IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2)) isOne];
      OrgSpongycastleMathEcECFieldElement *U1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Y2];
      OrgSpongycastleMathEcECFieldElement *U2 = Z2IsOne ? Y1 : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
      OrgSpongycastleMathEcECFieldElement *U = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(U1)) addWithOrgSpongycastleMathEcECFieldElement:U2];
      OrgSpongycastleMathEcECFieldElement *V1 = [Z1 multiplyWithOrgSpongycastleMathEcECFieldElement:X2];
      OrgSpongycastleMathEcECFieldElement *V2 = Z2IsOne ? X1 : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
      OrgSpongycastleMathEcECFieldElement *V = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(V1)) addWithOrgSpongycastleMathEcECFieldElement:V2];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(V)) isZero]) {
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(U)) isZero]) {
          return [self twice];
        }
        return [curve getInfinity];
      }
      OrgSpongycastleMathEcECFieldElement *VSq = [V square];
      OrgSpongycastleMathEcECFieldElement *VCu = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(VSq)) multiplyWithOrgSpongycastleMathEcECFieldElement:V];
      OrgSpongycastleMathEcECFieldElement *W = Z2IsOne ? Z1 : [Z1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
      OrgSpongycastleMathEcECFieldElement *uv = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(U)) addWithOrgSpongycastleMathEcECFieldElement:V];
      OrgSpongycastleMathEcECFieldElement *A = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(uv)) multiplyPlusProductWithOrgSpongycastleMathEcECFieldElement:U withOrgSpongycastleMathEcECFieldElement:VSq withOrgSpongycastleMathEcECFieldElement:[curve getA]])) multiplyWithOrgSpongycastleMathEcECFieldElement:W])) addWithOrgSpongycastleMathEcECFieldElement:VCu];
      OrgSpongycastleMathEcECFieldElement *X3 = [V multiplyWithOrgSpongycastleMathEcECFieldElement:A];
      OrgSpongycastleMathEcECFieldElement *VSqZ2 = Z2IsOne ? VSq : [VSq multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
      OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([U multiplyPlusProductWithOrgSpongycastleMathEcECFieldElement:X1 withOrgSpongycastleMathEcECFieldElement:V withOrgSpongycastleMathEcECFieldElement:Y1])) multiplyPlusProductWithOrgSpongycastleMathEcECFieldElement:VSqZ2 withOrgSpongycastleMathEcECFieldElement:uv withOrgSpongycastleMathEcECFieldElement:A];
      OrgSpongycastleMathEcECFieldElement *Z3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(VCu)) multiplyWithOrgSpongycastleMathEcECFieldElement:W];
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, Y3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) isZero]) {
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) isZero]) {
          return [curve getInfinity];
        }
        return [b addWithOrgSpongycastleMathEcECPoint:self];
      }
      OrgSpongycastleMathEcECFieldElement *L1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      OrgSpongycastleMathEcECFieldElement *L2 = b->y_;
      OrgSpongycastleMathEcECFieldElement *Z2 = IOSObjectArray_Get(b->zs_, 0);
      jboolean Z1IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne];
      OrgSpongycastleMathEcECFieldElement *U2 = X2;
      OrgSpongycastleMathEcECFieldElement *S2 = L2;
      if (!Z1IsOne) {
        U2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(U2)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
        S2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(S2)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      }
      jboolean Z2IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2)) isOne];
      OrgSpongycastleMathEcECFieldElement *U1 = X1;
      OrgSpongycastleMathEcECFieldElement *S1 = L1;
      if (!Z2IsOne) {
        U1 = [U1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
        S1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(S1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
      }
      OrgSpongycastleMathEcECFieldElement *A = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(S1)) addWithOrgSpongycastleMathEcECFieldElement:S2];
      OrgSpongycastleMathEcECFieldElement *B = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(U1)) addWithOrgSpongycastleMathEcECFieldElement:U2];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(B)) isZero]) {
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(A)) isZero]) {
          return [self twice];
        }
        return [curve getInfinity];
      }
      OrgSpongycastleMathEcECFieldElement *X3;
      OrgSpongycastleMathEcECFieldElement *L3;
      OrgSpongycastleMathEcECFieldElement *Z3;
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) isZero]) {
        OrgSpongycastleMathEcECPoint *p = [self normalize];
        X1 = [((OrgSpongycastleMathEcECPoint *) nil_chk(p)) getXCoord];
        OrgSpongycastleMathEcECFieldElement *Y1 = [p getYCoord];
        OrgSpongycastleMathEcECFieldElement *Y2 = L2;
        OrgSpongycastleMathEcECFieldElement *L = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) addWithOrgSpongycastleMathEcECFieldElement:Y2])) divideWithOrgSpongycastleMathEcECFieldElement:X1];
        X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) square])) addWithOrgSpongycastleMathEcECFieldElement:L])) addWithOrgSpongycastleMathEcECFieldElement:X1])) addWithOrgSpongycastleMathEcECFieldElement:[curve getA]];
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X3)) isZero]) {
          return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, X3, [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getB])) sqrt], self->withCompression_);
        }
        OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([L multiplyWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) addWithOrgSpongycastleMathEcECFieldElement:X3]])) addWithOrgSpongycastleMathEcECFieldElement:X3])) addWithOrgSpongycastleMathEcECFieldElement:Y1];
        L3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y3)) divideWithOrgSpongycastleMathEcECFieldElement:X3])) addWithOrgSpongycastleMathEcECFieldElement:X3];
        Z3 = [curve fromBigIntegerWithJavaMathBigInteger:JreLoadStatic(OrgSpongycastleMathEcECConstants, ONE)];
      }
      else {
        B = [B square];
        OrgSpongycastleMathEcECFieldElement *AU1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(A)) multiplyWithOrgSpongycastleMathEcECFieldElement:U1];
        OrgSpongycastleMathEcECFieldElement *AU2 = [A multiplyWithOrgSpongycastleMathEcECFieldElement:U2];
        X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(AU1)) multiplyWithOrgSpongycastleMathEcECFieldElement:AU2];
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X3)) isZero]) {
          return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, X3, [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getB])) sqrt], self->withCompression_);
        }
        OrgSpongycastleMathEcECFieldElement *ABZ2 = [A multiplyWithOrgSpongycastleMathEcECFieldElement:B];
        if (!Z2IsOne) {
          ABZ2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(ABZ2)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z2];
        }
        L3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(AU2)) addWithOrgSpongycastleMathEcECFieldElement:B])) squarePlusProductWithOrgSpongycastleMathEcECFieldElement:ABZ2 withOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk(L1)) addWithOrgSpongycastleMathEcECFieldElement:Z1]];
        Z3 = ABZ2;
        if (!Z1IsOne) {
          Z3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z3)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
        }
      }
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, L3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)twice {
  if ([self isInfinity]) {
    return self;
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) isZero]) {
    return [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getInfinity];
  }
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *L1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) divideWithOrgSpongycastleMathEcECFieldElement:X1])) addWithOrgSpongycastleMathEcECFieldElement:X1];
      OrgSpongycastleMathEcECFieldElement *X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L1)) square])) addWithOrgSpongycastleMathEcECFieldElement:L1])) addWithOrgSpongycastleMathEcECFieldElement:[curve getA]];
      OrgSpongycastleMathEcECFieldElement *Y3 = [X1 squarePlusProductWithOrgSpongycastleMathEcECFieldElement:X3 withOrgSpongycastleMathEcECFieldElement:[L1 addOne]];
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, X3, Y3, self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    {
      OrgSpongycastleMathEcECFieldElement *Y1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      jboolean Z1IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne];
      OrgSpongycastleMathEcECFieldElement *X1Z1 = Z1IsOne ? X1 : [X1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      OrgSpongycastleMathEcECFieldElement *Y1Z1 = Z1IsOne ? Y1 : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      OrgSpongycastleMathEcECFieldElement *X1Sq = [X1 square];
      OrgSpongycastleMathEcECFieldElement *S = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1Sq)) addWithOrgSpongycastleMathEcECFieldElement:Y1Z1];
      OrgSpongycastleMathEcECFieldElement *V = X1Z1;
      OrgSpongycastleMathEcECFieldElement *vSquared = [V square];
      OrgSpongycastleMathEcECFieldElement *sv = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(S)) addWithOrgSpongycastleMathEcECFieldElement:V];
      OrgSpongycastleMathEcECFieldElement *h = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(sv)) multiplyPlusProductWithOrgSpongycastleMathEcECFieldElement:S withOrgSpongycastleMathEcECFieldElement:vSquared withOrgSpongycastleMathEcECFieldElement:[curve getA]];
      OrgSpongycastleMathEcECFieldElement *X3 = [V multiplyWithOrgSpongycastleMathEcECFieldElement:h];
      OrgSpongycastleMathEcECFieldElement *Y3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([X1Sq square])) multiplyPlusProductWithOrgSpongycastleMathEcECFieldElement:V withOrgSpongycastleMathEcECFieldElement:h withOrgSpongycastleMathEcECFieldElement:sv];
      OrgSpongycastleMathEcECFieldElement *Z3 = [V multiplyWithOrgSpongycastleMathEcECFieldElement:vSquared];
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, Y3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      OrgSpongycastleMathEcECFieldElement *L1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      jboolean Z1IsOne = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) isOne];
      OrgSpongycastleMathEcECFieldElement *L1Z1 = Z1IsOne ? L1 : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(L1)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      OrgSpongycastleMathEcECFieldElement *Z1Sq = Z1IsOne ? Z1 : [Z1 square];
      OrgSpongycastleMathEcECFieldElement *a = [curve getA];
      OrgSpongycastleMathEcECFieldElement *aZ1Sq = Z1IsOne ? a : [((OrgSpongycastleMathEcECFieldElement *) nil_chk(a)) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1Sq];
      OrgSpongycastleMathEcECFieldElement *T = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(L1)) square])) addWithOrgSpongycastleMathEcECFieldElement:L1Z1])) addWithOrgSpongycastleMathEcECFieldElement:aZ1Sq];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(T)) isZero]) {
        return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, T, [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getB])) sqrt], withCompression_);
      }
      OrgSpongycastleMathEcECFieldElement *X3 = [T square];
      OrgSpongycastleMathEcECFieldElement *Z3 = Z1IsOne ? T : [T multiplyWithOrgSpongycastleMathEcECFieldElement:Z1Sq];
      OrgSpongycastleMathEcECFieldElement *b = [curve getB];
      OrgSpongycastleMathEcECFieldElement *L3;
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(b)) bitLength] < (JreRShift32([curve getFieldSize], 1))) {
        OrgSpongycastleMathEcECFieldElement *t1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([L1 addWithOrgSpongycastleMathEcECFieldElement:X1])) square];
        OrgSpongycastleMathEcECFieldElement *t2;
        if ([b isOne]) {
          t2 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([aZ1Sq addWithOrgSpongycastleMathEcECFieldElement:Z1Sq])) square];
        }
        else {
          t2 = [aZ1Sq squarePlusProductWithOrgSpongycastleMathEcECFieldElement:b withOrgSpongycastleMathEcECFieldElement:[Z1Sq square]];
        }
        L3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(t1)) addWithOrgSpongycastleMathEcECFieldElement:T])) addWithOrgSpongycastleMathEcECFieldElement:Z1Sq])) multiplyWithOrgSpongycastleMathEcECFieldElement:t1])) addWithOrgSpongycastleMathEcECFieldElement:t2])) addWithOrgSpongycastleMathEcECFieldElement:X3];
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(a)) isZero]) {
          L3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(L3)) addWithOrgSpongycastleMathEcECFieldElement:Z3];
        }
        else if (![a isOne]) {
          L3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(L3)) addWithOrgSpongycastleMathEcECFieldElement:[((OrgSpongycastleMathEcECFieldElement *) nil_chk([a addOne])) multiplyWithOrgSpongycastleMathEcECFieldElement:Z3]];
        }
      }
      else {
        OrgSpongycastleMathEcECFieldElement *X1Z1 = Z1IsOne ? X1 : [X1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
        L3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([X1Z1 squarePlusProductWithOrgSpongycastleMathEcECFieldElement:T withOrgSpongycastleMathEcECFieldElement:L1Z1])) addWithOrgSpongycastleMathEcECFieldElement:X3])) addWithOrgSpongycastleMathEcECFieldElement:Z3];
      }
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, L3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)twicePlusWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)b {
  if ([self isInfinity]) {
    return b;
  }
  if ([((OrgSpongycastleMathEcECPoint *) nil_chk(b)) isInfinity]) {
    return [self twice];
  }
  OrgSpongycastleMathEcECCurve *curve = [self getCurve];
  OrgSpongycastleMathEcECFieldElement *X1 = self->x_;
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X1)) isZero]) {
    return b;
  }
  jint coord = [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getCoordinateSystem];
  switch (coord) {
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      OrgSpongycastleMathEcECFieldElement *X2 = b->x_;
      OrgSpongycastleMathEcECFieldElement *Z2 = IOSObjectArray_Get(nil_chk(b->zs_), 0);
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2)) isZero] || ![((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z2)) isOne]) {
        return [((OrgSpongycastleMathEcECPoint *) nil_chk([self twice])) addWithOrgSpongycastleMathEcECPoint:b];
      }
      OrgSpongycastleMathEcECFieldElement *L1 = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z1 = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      OrgSpongycastleMathEcECFieldElement *L2 = b->y_;
      OrgSpongycastleMathEcECFieldElement *X1Sq = [X1 square];
      OrgSpongycastleMathEcECFieldElement *L1Sq = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(L1)) square];
      OrgSpongycastleMathEcECFieldElement *Z1Sq = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Z1)) square];
      OrgSpongycastleMathEcECFieldElement *L1Z1 = [L1 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1];
      OrgSpongycastleMathEcECFieldElement *T = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getA])) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1Sq])) addWithOrgSpongycastleMathEcECFieldElement:L1Sq])) addWithOrgSpongycastleMathEcECFieldElement:L1Z1];
      OrgSpongycastleMathEcECFieldElement *L2plus1 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk(L2)) addOne];
      OrgSpongycastleMathEcECFieldElement *A = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getA])) addWithOrgSpongycastleMathEcECFieldElement:L2plus1])) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1Sq])) addWithOrgSpongycastleMathEcECFieldElement:L1Sq])) multiplyPlusProductWithOrgSpongycastleMathEcECFieldElement:T withOrgSpongycastleMathEcECFieldElement:X1Sq withOrgSpongycastleMathEcECFieldElement:Z1Sq];
      OrgSpongycastleMathEcECFieldElement *X2Z1Sq = [X2 multiplyWithOrgSpongycastleMathEcECFieldElement:Z1Sq];
      OrgSpongycastleMathEcECFieldElement *B = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X2Z1Sq)) addWithOrgSpongycastleMathEcECFieldElement:T])) square];
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(B)) isZero]) {
        if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(A)) isZero]) {
          return [b twice];
        }
        return [curve getInfinity];
      }
      if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(A)) isZero]) {
        return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve, A, [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getB])) sqrt], withCompression_);
      }
      OrgSpongycastleMathEcECFieldElement *X3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([A square])) multiplyWithOrgSpongycastleMathEcECFieldElement:X2Z1Sq];
      OrgSpongycastleMathEcECFieldElement *Z3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([A multiplyWithOrgSpongycastleMathEcECFieldElement:B])) multiplyWithOrgSpongycastleMathEcECFieldElement:Z1Sq];
      OrgSpongycastleMathEcECFieldElement *L3 = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([A addWithOrgSpongycastleMathEcECFieldElement:B])) square])) multiplyPlusProductWithOrgSpongycastleMathEcECFieldElement:T withOrgSpongycastleMathEcECFieldElement:L2plus1 withOrgSpongycastleMathEcECFieldElement:Z3];
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve, X3, L3, [IOSObjectArray newArrayWithObjects:(id[]){ Z3 } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    default:
    {
      return [((OrgSpongycastleMathEcECPoint *) nil_chk([self twice])) addWithOrgSpongycastleMathEcECPoint:b];
    }
  }
}

- (OrgSpongycastleMathEcECPoint *)negate {
  if ([self isInfinity]) {
    return self;
  }
  OrgSpongycastleMathEcECFieldElement *X = self->x_;
  if ([((OrgSpongycastleMathEcECFieldElement *) nil_chk(X)) isZero]) {
    return self;
  }
  switch ([self getCurveCoordinateSystem]) {
    case OrgSpongycastleMathEcECCurve_COORD_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *Y = self->y_;
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve_, X, [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y)) addWithOrgSpongycastleMathEcECFieldElement:X], self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_HOMOGENEOUS:
    {
      OrgSpongycastleMathEcECFieldElement *Y = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve_, X, [((OrgSpongycastleMathEcECFieldElement *) nil_chk(Y)) addWithOrgSpongycastleMathEcECFieldElement:X], [IOSObjectArray newArrayWithObjects:(id[]){ Z } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_AFFINE:
    {
      OrgSpongycastleMathEcECFieldElement *L = self->y_;
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(curve_, X, [((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) addOne], self->withCompression_);
    }
    case OrgSpongycastleMathEcECCurve_COORD_LAMBDA_PROJECTIVE:
    {
      OrgSpongycastleMathEcECFieldElement *L = self->y_;
      OrgSpongycastleMathEcECFieldElement *Z = IOSObjectArray_Get(nil_chk(self->zs_), 0);
      return new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(curve_, X, [((OrgSpongycastleMathEcECFieldElement *) nil_chk(L)) addWithOrgSpongycastleMathEcECFieldElement:Z], [IOSObjectArray newArrayWithObjects:(id[]){ Z } count:1 type:OrgSpongycastleMathEcECFieldElement_class_()], self->withCompression_);
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported coordinate system");
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:);
  methods[1].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withBoolean:);
  methods[2].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElement:withOrgSpongycastleMathEcECFieldElementArray:withBoolean:);
  methods[3].selector = @selector(detach);
  methods[4].selector = @selector(getYCoord);
  methods[5].selector = @selector(getCompressionYTilde);
  methods[6].selector = @selector(addWithOrgSpongycastleMathEcECPoint:);
  methods[7].selector = @selector(twice);
  methods[8].selector = @selector(twicePlusWithOrgSpongycastleMathEcECPoint:);
  methods[9].selector = @selector(negate);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;Z", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECFieldElement;LOrgSpongycastleMathEcECFieldElement;[LOrgSpongycastleMathEcECFieldElement;Z", "add", "LOrgSpongycastleMathEcECPoint;", "twicePlus" };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcECPoint_F2m = { "F2m", "org.spongycastle.math.ec", ptrTable, methods, NULL, 7, 0x9, 10, 0, 4, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcECPoint_F2m;
}

@end

void OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECPoint_F2m *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(self, curve, x, y, false);
}

OrgSpongycastleMathEcECPoint_F2m *new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcECPoint_F2m, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_, curve, x, y)
}

OrgSpongycastleMathEcECPoint_F2m *create_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcECPoint_F2m, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_, curve, x, y)
}

void OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(OrgSpongycastleMathEcECPoint_F2m *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, jboolean withCompression) {
  OrgSpongycastleMathEcECPoint_AbstractF2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self, curve, x, y);
  if ((x == nil) != (y == nil)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Exactly one of the field elements is null");
  }
  if (x != nil) {
    OrgSpongycastleMathEcECFieldElement_F2m_checkFieldElementsWithOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self->x_, self->y_);
    if (curve != nil) {
      OrgSpongycastleMathEcECFieldElement_F2m_checkFieldElementsWithOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_(self->x_, [((OrgSpongycastleMathEcECCurve *) nil_chk(self->curve_)) getA]);
    }
  }
  self->withCompression_ = withCompression;
}

OrgSpongycastleMathEcECPoint_F2m *new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, jboolean withCompression) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcECPoint_F2m, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_, curve, x, y, withCompression)
}

OrgSpongycastleMathEcECPoint_F2m *create_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, jboolean withCompression) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcECPoint_F2m, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withBoolean_, curve, x, y, withCompression)
}

void OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(OrgSpongycastleMathEcECPoint_F2m *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs, jboolean withCompression) {
  OrgSpongycastleMathEcECPoint_AbstractF2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_(self, curve, x, y, zs);
  self->withCompression_ = withCompression;
}

OrgSpongycastleMathEcECPoint_F2m *new_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs, jboolean withCompression) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcECPoint_F2m, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_, curve, x, y, zs, withCompression)
}

OrgSpongycastleMathEcECPoint_F2m *create_OrgSpongycastleMathEcECPoint_F2m_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECFieldElement *x, OrgSpongycastleMathEcECFieldElement *y, IOSObjectArray *zs, jboolean withCompression) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcECPoint_F2m, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElement_withOrgSpongycastleMathEcECFieldElementArray_withBoolean_, curve, x, y, zs, withCompression)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcECPoint_F2m)
