//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/math/ec/WTauNafMultiplier.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/math/ec/AbstractECMultiplier.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/math/ec/PreCompInfo.h"
#include "org/spongycastle/math/ec/Tnaf.h"
#include "org/spongycastle/math/ec/WTauNafMultiplier.h"
#include "org/spongycastle/math/ec/WTauNafPreCompInfo.h"
#include "org/spongycastle/math/ec/ZTauElement.h"

@interface OrgSpongycastleMathEcWTauNafMultiplier ()

- (OrgSpongycastleMathEcECPoint_AbstractF2m *)multiplyWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p
                                                                   withOrgSpongycastleMathEcZTauElement:(OrgSpongycastleMathEcZTauElement *)lambda
                                                                   withOrgSpongycastleMathEcPreCompInfo:(id<OrgSpongycastleMathEcPreCompInfo>)preCompInfo
                                                                                               withByte:(jbyte)a
                                                                                               withByte:(jbyte)mu;

+ (OrgSpongycastleMathEcECPoint_AbstractF2m *)multiplyFromWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p
                                                                                              withByteArray:(IOSByteArray *)u
                                                                       withOrgSpongycastleMathEcPreCompInfo:(id<OrgSpongycastleMathEcPreCompInfo>)preCompInfo;

@end

__attribute__((unused)) static OrgSpongycastleMathEcECPoint_AbstractF2m *OrgSpongycastleMathEcWTauNafMultiplier_multiplyWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withOrgSpongycastleMathEcZTauElement_withOrgSpongycastleMathEcPreCompInfo_withByte_withByte_(OrgSpongycastleMathEcWTauNafMultiplier *self, OrgSpongycastleMathEcECPoint_AbstractF2m *p, OrgSpongycastleMathEcZTauElement *lambda, id<OrgSpongycastleMathEcPreCompInfo> preCompInfo, jbyte a, jbyte mu);

__attribute__((unused)) static OrgSpongycastleMathEcECPoint_AbstractF2m *OrgSpongycastleMathEcWTauNafMultiplier_multiplyFromWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withByteArray_withOrgSpongycastleMathEcPreCompInfo_(OrgSpongycastleMathEcECPoint_AbstractF2m *p, IOSByteArray *u, id<OrgSpongycastleMathEcPreCompInfo> preCompInfo);

NSString *OrgSpongycastleMathEcWTauNafMultiplier_PRECOMP_NAME = @"bc_wtnaf";

@implementation OrgSpongycastleMathEcWTauNafMultiplier

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleMathEcWTauNafMultiplier_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgSpongycastleMathEcECPoint *)multiplyPositiveWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)point
                                                            withJavaMathBigInteger:(JavaMathBigInteger *)k {
  if (!([point isKindOfClass:[OrgSpongycastleMathEcECPoint_AbstractF2m class]])) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Only ECPoint.AbstractF2m can be used in WTauNafMultiplier");
  }
  OrgSpongycastleMathEcECPoint_AbstractF2m *p = (OrgSpongycastleMathEcECPoint_AbstractF2m *) cast_chk(point, [OrgSpongycastleMathEcECPoint_AbstractF2m class]);
  OrgSpongycastleMathEcECCurve_AbstractF2m *curve = (OrgSpongycastleMathEcECCurve_AbstractF2m *) cast_chk([((OrgSpongycastleMathEcECPoint_AbstractF2m *) nil_chk(p)) getCurve], [OrgSpongycastleMathEcECCurve_AbstractF2m class]);
  jint m = [((OrgSpongycastleMathEcECCurve_AbstractF2m *) nil_chk(curve)) getFieldSize];
  jbyte a = [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger])) charValue];
  jbyte mu = OrgSpongycastleMathEcTnaf_getMuWithInt_(a);
  IOSObjectArray *s = [curve getSi];
  OrgSpongycastleMathEcZTauElement *rho = OrgSpongycastleMathEcTnaf_partModReductionWithJavaMathBigInteger_withInt_withByte_withJavaMathBigIntegerArray_withByte_withByte_(k, m, a, s, mu, (jbyte) 10);
  return OrgSpongycastleMathEcWTauNafMultiplier_multiplyWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withOrgSpongycastleMathEcZTauElement_withOrgSpongycastleMathEcPreCompInfo_withByte_withByte_(self, p, rho, [curve getPreCompInfoWithOrgSpongycastleMathEcECPoint:p withNSString:OrgSpongycastleMathEcWTauNafMultiplier_PRECOMP_NAME], a, mu);
}

- (OrgSpongycastleMathEcECPoint_AbstractF2m *)multiplyWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p
                                                                   withOrgSpongycastleMathEcZTauElement:(OrgSpongycastleMathEcZTauElement *)lambda
                                                                   withOrgSpongycastleMathEcPreCompInfo:(id<OrgSpongycastleMathEcPreCompInfo>)preCompInfo
                                                                                               withByte:(jbyte)a
                                                                                               withByte:(jbyte)mu {
  return OrgSpongycastleMathEcWTauNafMultiplier_multiplyWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withOrgSpongycastleMathEcZTauElement_withOrgSpongycastleMathEcPreCompInfo_withByte_withByte_(self, p, lambda, preCompInfo, a, mu);
}

+ (OrgSpongycastleMathEcECPoint_AbstractF2m *)multiplyFromWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:(OrgSpongycastleMathEcECPoint_AbstractF2m *)p
                                                                                              withByteArray:(IOSByteArray *)u
                                                                       withOrgSpongycastleMathEcPreCompInfo:(id<OrgSpongycastleMathEcPreCompInfo>)preCompInfo {
  return OrgSpongycastleMathEcWTauNafMultiplier_multiplyFromWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withByteArray_withOrgSpongycastleMathEcPreCompInfo_(p, u, preCompInfo);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint_AbstractF2m;", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint_AbstractF2m;", 0xa, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(multiplyPositiveWithOrgSpongycastleMathEcECPoint:withJavaMathBigInteger:);
  methods[2].selector = @selector(multiplyWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:withOrgSpongycastleMathEcZTauElement:withOrgSpongycastleMathEcPreCompInfo:withByte:withByte:);
  methods[3].selector = @selector(multiplyFromWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m:withByteArray:withOrgSpongycastleMathEcPreCompInfo:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PRECOMP_NAME", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "multiplyPositive", "LOrgSpongycastleMathEcECPoint;LJavaMathBigInteger;", "multiplyWTnaf", "LOrgSpongycastleMathEcECPoint_AbstractF2m;LOrgSpongycastleMathEcZTauElement;LOrgSpongycastleMathEcPreCompInfo;BB", "multiplyFromWTnaf", "LOrgSpongycastleMathEcECPoint_AbstractF2m;[BLOrgSpongycastleMathEcPreCompInfo;", &OrgSpongycastleMathEcWTauNafMultiplier_PRECOMP_NAME };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcWTauNafMultiplier = { "WTauNafMultiplier", "org.spongycastle.math.ec", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcWTauNafMultiplier;
}

@end

void OrgSpongycastleMathEcWTauNafMultiplier_init(OrgSpongycastleMathEcWTauNafMultiplier *self) {
  OrgSpongycastleMathEcAbstractECMultiplier_init(self);
}

OrgSpongycastleMathEcWTauNafMultiplier *new_OrgSpongycastleMathEcWTauNafMultiplier_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcWTauNafMultiplier, init)
}

OrgSpongycastleMathEcWTauNafMultiplier *create_OrgSpongycastleMathEcWTauNafMultiplier_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcWTauNafMultiplier, init)
}

OrgSpongycastleMathEcECPoint_AbstractF2m *OrgSpongycastleMathEcWTauNafMultiplier_multiplyWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withOrgSpongycastleMathEcZTauElement_withOrgSpongycastleMathEcPreCompInfo_withByte_withByte_(OrgSpongycastleMathEcWTauNafMultiplier *self, OrgSpongycastleMathEcECPoint_AbstractF2m *p, OrgSpongycastleMathEcZTauElement *lambda, id<OrgSpongycastleMathEcPreCompInfo> preCompInfo, jbyte a, jbyte mu) {
  IOSObjectArray *alpha = (a == 0) ? JreLoadStatic(OrgSpongycastleMathEcTnaf, alpha0) : JreLoadStatic(OrgSpongycastleMathEcTnaf, alpha1);
  JavaMathBigInteger *tw = OrgSpongycastleMathEcTnaf_getTwWithByte_withInt_(mu, OrgSpongycastleMathEcTnaf_WIDTH);
  IOSByteArray *u = OrgSpongycastleMathEcTnaf_tauAdicWNafWithByte_withOrgSpongycastleMathEcZTauElement_withByte_withJavaMathBigInteger_withJavaMathBigInteger_withOrgSpongycastleMathEcZTauElementArray_(mu, lambda, OrgSpongycastleMathEcTnaf_WIDTH, JavaMathBigInteger_valueOfWithLong_(OrgSpongycastleMathEcTnaf_POW_2_WIDTH), tw, alpha);
  return OrgSpongycastleMathEcWTauNafMultiplier_multiplyFromWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withByteArray_withOrgSpongycastleMathEcPreCompInfo_(p, u, preCompInfo);
}

OrgSpongycastleMathEcECPoint_AbstractF2m *OrgSpongycastleMathEcWTauNafMultiplier_multiplyFromWTnafWithOrgSpongycastleMathEcECPoint_AbstractF2m_withByteArray_withOrgSpongycastleMathEcPreCompInfo_(OrgSpongycastleMathEcECPoint_AbstractF2m *p, IOSByteArray *u, id<OrgSpongycastleMathEcPreCompInfo> preCompInfo) {
  OrgSpongycastleMathEcWTauNafMultiplier_initialize();
  OrgSpongycastleMathEcECCurve_AbstractF2m *curve = (OrgSpongycastleMathEcECCurve_AbstractF2m *) cast_chk([((OrgSpongycastleMathEcECPoint_AbstractF2m *) nil_chk(p)) getCurve], [OrgSpongycastleMathEcECCurve_AbstractF2m class]);
  jbyte a = [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECCurve_AbstractF2m *) nil_chk(curve)) getA])) toBigInteger])) charValue];
  IOSObjectArray *pu;
  if ((preCompInfo == nil) || !([preCompInfo isKindOfClass:[OrgSpongycastleMathEcWTauNafPreCompInfo class]])) {
    pu = OrgSpongycastleMathEcTnaf_getPreCompWithOrgSpongycastleMathEcECPoint_AbstractF2m_withByte_(p, a);
    OrgSpongycastleMathEcWTauNafPreCompInfo *pre = new_OrgSpongycastleMathEcWTauNafPreCompInfo_init();
    [pre setPreCompWithOrgSpongycastleMathEcECPoint_AbstractF2mArray:pu];
    [curve setPreCompInfoWithOrgSpongycastleMathEcECPoint:p withNSString:OrgSpongycastleMathEcWTauNafMultiplier_PRECOMP_NAME withOrgSpongycastleMathEcPreCompInfo:pre];
  }
  else {
    pu = [((OrgSpongycastleMathEcWTauNafPreCompInfo *) nil_chk(((OrgSpongycastleMathEcWTauNafPreCompInfo *) cast_chk(preCompInfo, [OrgSpongycastleMathEcWTauNafPreCompInfo class])))) getPreComp];
  }
  IOSObjectArray *puNeg = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(pu))->size_ type:OrgSpongycastleMathEcECPoint_AbstractF2m_class_()];
  for (jint i = 0; i < pu->size_; ++i) {
    (void) IOSObjectArray_Set(puNeg, i, (OrgSpongycastleMathEcECPoint_AbstractF2m *) cast_chk([((OrgSpongycastleMathEcECPoint_AbstractF2m *) nil_chk(IOSObjectArray_Get(pu, i))) negate], [OrgSpongycastleMathEcECPoint_AbstractF2m class]));
  }
  OrgSpongycastleMathEcECPoint_AbstractF2m *q = (OrgSpongycastleMathEcECPoint_AbstractF2m *) cast_chk([((OrgSpongycastleMathEcECCurve *) nil_chk([p getCurve])) getInfinity], [OrgSpongycastleMathEcECPoint_AbstractF2m class]);
  jint tauCount = 0;
  for (jint i = ((IOSByteArray *) nil_chk(u))->size_ - 1; i >= 0; i--) {
    ++tauCount;
    jint ui = IOSByteArray_Get(u, i);
    if (ui != 0) {
      q = [((OrgSpongycastleMathEcECPoint_AbstractF2m *) nil_chk(q)) tauPowWithInt:tauCount];
      tauCount = 0;
      OrgSpongycastleMathEcECPoint *x = ui > 0 ? IOSObjectArray_Get(pu, JreURShift32(ui, 1)) : IOSObjectArray_Get(puNeg, JreURShift32((-ui), 1));
      q = (OrgSpongycastleMathEcECPoint_AbstractF2m *) cast_chk([((OrgSpongycastleMathEcECPoint_AbstractF2m *) nil_chk(q)) addWithOrgSpongycastleMathEcECPoint:x], [OrgSpongycastleMathEcECPoint_AbstractF2m class]);
    }
  }
  if (tauCount > 0) {
    q = [((OrgSpongycastleMathEcECPoint_AbstractF2m *) nil_chk(q)) tauPowWithInt:tauCount];
  }
  return q;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcWTauNafMultiplier)
