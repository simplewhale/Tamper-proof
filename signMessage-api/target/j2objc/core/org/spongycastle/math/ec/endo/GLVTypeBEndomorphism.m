//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/math/ec/endo/GLVTypeBEndomorphism.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/math/ec/ECConstants.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/ECPointMap.h"
#include "org/spongycastle/math/ec/ScaleXPointMap.h"
#include "org/spongycastle/math/ec/endo/GLVTypeBEndomorphism.h"
#include "org/spongycastle/math/ec/endo/GLVTypeBParameters.h"

@implementation OrgSpongycastleMathEcEndoGLVTypeBEndomorphism

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
     withOrgSpongycastleMathEcEndoGLVTypeBParameters:(OrgSpongycastleMathEcEndoGLVTypeBParameters *)parameters {
  OrgSpongycastleMathEcEndoGLVTypeBEndomorphism_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcEndoGLVTypeBParameters_(self, curve, parameters);
  return self;
}

- (IOSObjectArray *)decomposeScalarWithJavaMathBigInteger:(JavaMathBigInteger *)k {
  jint bits = [((OrgSpongycastleMathEcEndoGLVTypeBParameters *) nil_chk(parameters_)) getBits];
  JavaMathBigInteger *b1 = [self calculateBWithJavaMathBigInteger:k withJavaMathBigInteger:[parameters_ getG1] withInt:bits];
  JavaMathBigInteger *b2 = [self calculateBWithJavaMathBigInteger:k withJavaMathBigInteger:[parameters_ getG2] withInt:bits];
  OrgSpongycastleMathEcEndoGLVTypeBParameters *p = parameters_;
  JavaMathBigInteger *a = [((JavaMathBigInteger *) nil_chk(k)) subtractWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(([((JavaMathBigInteger *) nil_chk(b1)) multiplyWithJavaMathBigInteger:[p getV1A]]))) addWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(b2)) multiplyWithJavaMathBigInteger:[p getV2A]]]];
  JavaMathBigInteger *b = [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk(([b1 multiplyWithJavaMathBigInteger:[p getV1B]]))) addWithJavaMathBigInteger:[b2 multiplyWithJavaMathBigInteger:[p getV2B]]])) negate];
  return [IOSObjectArray newArrayWithObjects:(id[]){ a, b } count:2 type:JavaMathBigInteger_class_()];
}

- (id<OrgSpongycastleMathEcECPointMap>)getPointMap {
  return pointMap_;
}

- (jboolean)hasEfficientPointMap {
  return true;
}

- (JavaMathBigInteger *)calculateBWithJavaMathBigInteger:(JavaMathBigInteger *)k
                                  withJavaMathBigInteger:(JavaMathBigInteger *)g
                                                 withInt:(jint)t {
  jboolean negative = ([((JavaMathBigInteger *) nil_chk(g)) signum] < 0);
  JavaMathBigInteger *b = [((JavaMathBigInteger *) nil_chk(k)) multiplyWithJavaMathBigInteger:[g abs]];
  jboolean extra = [((JavaMathBigInteger *) nil_chk(b)) testBitWithInt:t - 1];
  b = [b shiftRightWithInt:t];
  if (extra) {
    b = [((JavaMathBigInteger *) nil_chk(b)) addWithJavaMathBigInteger:JreLoadStatic(OrgSpongycastleMathEcECConstants, ONE)];
  }
  return negative ? [((JavaMathBigInteger *) nil_chk(b)) negate] : b;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigInteger;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPointMap;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcEndoGLVTypeBParameters:);
  methods[1].selector = @selector(decomposeScalarWithJavaMathBigInteger:);
  methods[2].selector = @selector(getPointMap);
  methods[3].selector = @selector(hasEfficientPointMap);
  methods[4].selector = @selector(calculateBWithJavaMathBigInteger:withJavaMathBigInteger:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "curve_", "LOrgSpongycastleMathEcECCurve;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "parameters_", "LOrgSpongycastleMathEcEndoGLVTypeBParameters;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "pointMap_", "LOrgSpongycastleMathEcECPointMap;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcEndoGLVTypeBParameters;", "decomposeScalar", "LJavaMathBigInteger;", "calculateB", "LJavaMathBigInteger;LJavaMathBigInteger;I" };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcEndoGLVTypeBEndomorphism = { "GLVTypeBEndomorphism", "org.spongycastle.math.ec.endo", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcEndoGLVTypeBEndomorphism;
}

@end

void OrgSpongycastleMathEcEndoGLVTypeBEndomorphism_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcEndoGLVTypeBParameters_(OrgSpongycastleMathEcEndoGLVTypeBEndomorphism *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcEndoGLVTypeBParameters *parameters) {
  NSObject_init(self);
  self->curve_ = curve;
  self->parameters_ = parameters;
  self->pointMap_ = new_OrgSpongycastleMathEcScaleXPointMap_initWithOrgSpongycastleMathEcECFieldElement_([((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) fromBigIntegerWithJavaMathBigInteger:[((OrgSpongycastleMathEcEndoGLVTypeBParameters *) nil_chk(parameters)) getBeta]]);
}

OrgSpongycastleMathEcEndoGLVTypeBEndomorphism *new_OrgSpongycastleMathEcEndoGLVTypeBEndomorphism_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcEndoGLVTypeBParameters_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcEndoGLVTypeBParameters *parameters) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcEndoGLVTypeBEndomorphism, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcEndoGLVTypeBParameters_, curve, parameters)
}

OrgSpongycastleMathEcEndoGLVTypeBEndomorphism *create_OrgSpongycastleMathEcEndoGLVTypeBEndomorphism_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcEndoGLVTypeBParameters_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcEndoGLVTypeBParameters *parameters) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcEndoGLVTypeBEndomorphism, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcEndoGLVTypeBParameters_, curve, parameters)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcEndoGLVTypeBEndomorphism)
