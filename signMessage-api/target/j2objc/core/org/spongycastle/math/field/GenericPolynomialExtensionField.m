//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/math/field/GenericPolynomialExtensionField.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/math/field/FiniteField.h"
#include "org/spongycastle/math/field/GenericPolynomialExtensionField.h"
#include "org/spongycastle/math/field/Polynomial.h"
#include "org/spongycastle/util/Integers.h"

@implementation OrgSpongycastleMathFieldGenericPolynomialExtensionField

- (instancetype)initWithOrgSpongycastleMathFieldFiniteField:(id<OrgSpongycastleMathFieldFiniteField>)subfield
                     withOrgSpongycastleMathFieldPolynomial:(id<OrgSpongycastleMathFieldPolynomial>)polynomial {
  OrgSpongycastleMathFieldGenericPolynomialExtensionField_initWithOrgSpongycastleMathFieldFiniteField_withOrgSpongycastleMathFieldPolynomial_(self, subfield, polynomial);
  return self;
}

- (JavaMathBigInteger *)getCharacteristic {
  return [((id<OrgSpongycastleMathFieldFiniteField>) nil_chk(subfield_)) getCharacteristic];
}

- (jint)getDimension {
  return [((id<OrgSpongycastleMathFieldFiniteField>) nil_chk(subfield_)) getDimension] * [((id<OrgSpongycastleMathFieldPolynomial>) nil_chk(minimalPolynomial_)) getDegree];
}

- (id<OrgSpongycastleMathFieldFiniteField>)getSubfield {
  return subfield_;
}

- (jint)getDegree {
  return [((id<OrgSpongycastleMathFieldPolynomial>) nil_chk(minimalPolynomial_)) getDegree];
}

- (id<OrgSpongycastleMathFieldPolynomial>)getMinimalPolynomial {
  return minimalPolynomial_;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return true;
  }
  if (!([obj isKindOfClass:[OrgSpongycastleMathFieldGenericPolynomialExtensionField class]])) {
    return false;
  }
  OrgSpongycastleMathFieldGenericPolynomialExtensionField *other = (OrgSpongycastleMathFieldGenericPolynomialExtensionField *) cast_chk(obj, [OrgSpongycastleMathFieldGenericPolynomialExtensionField class]);
  return [((id<OrgSpongycastleMathFieldFiniteField>) nil_chk(subfield_)) isEqual:((OrgSpongycastleMathFieldGenericPolynomialExtensionField *) nil_chk(other))->subfield_] && [((id<OrgSpongycastleMathFieldPolynomial>) nil_chk(minimalPolynomial_)) isEqual:other->minimalPolynomial_];
}

- (NSUInteger)hash {
  return ((jint) [((id<OrgSpongycastleMathFieldFiniteField>) nil_chk(subfield_)) hash]) ^ OrgSpongycastleUtilIntegers_rotateLeftWithInt_withInt_(((jint) [((id<OrgSpongycastleMathFieldPolynomial>) nil_chk(minimalPolynomial_)) hash]), 16);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathFieldFiniteField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathFieldPolynomial;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleMathFieldFiniteField:withOrgSpongycastleMathFieldPolynomial:);
  methods[1].selector = @selector(getCharacteristic);
  methods[2].selector = @selector(getDimension);
  methods[3].selector = @selector(getSubfield);
  methods[4].selector = @selector(getDegree);
  methods[5].selector = @selector(getMinimalPolynomial);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subfield_", "LOrgSpongycastleMathFieldFiniteField;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "minimalPolynomial_", "LOrgSpongycastleMathFieldPolynomial;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleMathFieldFiniteField;LOrgSpongycastleMathFieldPolynomial;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgSpongycastleMathFieldGenericPolynomialExtensionField = { "GenericPolynomialExtensionField", "org.spongycastle.math.field", ptrTable, methods, fields, 7, 0x0, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathFieldGenericPolynomialExtensionField;
}

@end

void OrgSpongycastleMathFieldGenericPolynomialExtensionField_initWithOrgSpongycastleMathFieldFiniteField_withOrgSpongycastleMathFieldPolynomial_(OrgSpongycastleMathFieldGenericPolynomialExtensionField *self, id<OrgSpongycastleMathFieldFiniteField> subfield, id<OrgSpongycastleMathFieldPolynomial> polynomial) {
  NSObject_init(self);
  self->subfield_ = subfield;
  self->minimalPolynomial_ = polynomial;
}

OrgSpongycastleMathFieldGenericPolynomialExtensionField *new_OrgSpongycastleMathFieldGenericPolynomialExtensionField_initWithOrgSpongycastleMathFieldFiniteField_withOrgSpongycastleMathFieldPolynomial_(id<OrgSpongycastleMathFieldFiniteField> subfield, id<OrgSpongycastleMathFieldPolynomial> polynomial) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathFieldGenericPolynomialExtensionField, initWithOrgSpongycastleMathFieldFiniteField_withOrgSpongycastleMathFieldPolynomial_, subfield, polynomial)
}

OrgSpongycastleMathFieldGenericPolynomialExtensionField *create_OrgSpongycastleMathFieldGenericPolynomialExtensionField_initWithOrgSpongycastleMathFieldFiniteField_withOrgSpongycastleMathFieldPolynomial_(id<OrgSpongycastleMathFieldFiniteField> subfield, id<OrgSpongycastleMathFieldPolynomial> polynomial) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathFieldGenericPolynomialExtensionField, initWithOrgSpongycastleMathFieldFiniteField_withOrgSpongycastleMathFieldPolynomial_, subfield, polynomial)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathFieldGenericPolynomialExtensionField)
