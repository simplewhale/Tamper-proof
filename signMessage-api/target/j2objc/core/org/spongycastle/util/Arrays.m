//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/util/Arrays.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/math/BigInteger.h"
#include "java/util/Iterator.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/function/Consumer.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastleUtilArrays ()

- (instancetype)init;

+ (jint)getLengthWithInt:(jint)from
                 withInt:(jint)to;

@end

__attribute__((unused)) static void OrgSpongycastleUtilArrays_init(OrgSpongycastleUtilArrays *self);

__attribute__((unused)) static OrgSpongycastleUtilArrays *new_OrgSpongycastleUtilArrays_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleUtilArrays *create_OrgSpongycastleUtilArrays_init(void);

__attribute__((unused)) static jint OrgSpongycastleUtilArrays_getLengthWithInt_withInt_(jint from, jint to);

@interface OrgSpongycastleUtilArrays_Iterator () {
 @public
  IOSObjectArray *dataArray_;
  jint position_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleUtilArrays_Iterator, dataArray_, IOSObjectArray *)

@implementation OrgSpongycastleUtilArrays

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleUtilArrays_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)areEqualWithBooleanArray:(IOSBooleanArray *)a
                    withBooleanArray:(IOSBooleanArray *)b {
  return OrgSpongycastleUtilArrays_areEqualWithBooleanArray_withBooleanArray_(a, b);
}

+ (jboolean)areEqualWithCharArray:(IOSCharArray *)a
                    withCharArray:(IOSCharArray *)b {
  return OrgSpongycastleUtilArrays_areEqualWithCharArray_withCharArray_(a, b);
}

+ (jboolean)areEqualWithByteArray:(IOSByteArray *)a
                    withByteArray:(IOSByteArray *)b {
  return OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_(a, b);
}

+ (jboolean)areEqualWithShortArray:(IOSShortArray *)a
                    withShortArray:(IOSShortArray *)b {
  return OrgSpongycastleUtilArrays_areEqualWithShortArray_withShortArray_(a, b);
}

+ (jboolean)constantTimeAreEqualWithByteArray:(IOSByteArray *)expected
                                withByteArray:(IOSByteArray *)supplied {
  return OrgSpongycastleUtilArrays_constantTimeAreEqualWithByteArray_withByteArray_(expected, supplied);
}

+ (jboolean)areEqualWithIntArray:(IOSIntArray *)a
                    withIntArray:(IOSIntArray *)b {
  return OrgSpongycastleUtilArrays_areEqualWithIntArray_withIntArray_(a, b);
}

+ (jboolean)areEqualWithLongArray:(IOSLongArray *)a
                    withLongArray:(IOSLongArray *)b {
  return OrgSpongycastleUtilArrays_areEqualWithLongArray_withLongArray_(a, b);
}

+ (jboolean)areEqualWithNSObjectArray:(IOSObjectArray *)a
                    withNSObjectArray:(IOSObjectArray *)b {
  return OrgSpongycastleUtilArrays_areEqualWithNSObjectArray_withNSObjectArray_(a, b);
}

+ (jint)compareUnsignedWithByteArray:(IOSByteArray *)a
                       withByteArray:(IOSByteArray *)b {
  return OrgSpongycastleUtilArrays_compareUnsignedWithByteArray_withByteArray_(a, b);
}

+ (jboolean)containsWithShortArray:(IOSShortArray *)a
                         withShort:(jshort)n {
  return OrgSpongycastleUtilArrays_containsWithShortArray_withShort_(a, n);
}

+ (jboolean)containsWithIntArray:(IOSIntArray *)a
                         withInt:(jint)n {
  return OrgSpongycastleUtilArrays_containsWithIntArray_withInt_(a, n);
}

+ (void)fillWithByteArray:(IOSByteArray *)array
                 withByte:(jbyte)value {
  OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(array, value);
}

+ (void)fillWithCharArray:(IOSCharArray *)array
                 withChar:(jchar)value {
  OrgSpongycastleUtilArrays_fillWithCharArray_withChar_(array, value);
}

+ (void)fillWithLongArray:(IOSLongArray *)array
                 withLong:(jlong)value {
  OrgSpongycastleUtilArrays_fillWithLongArray_withLong_(array, value);
}

+ (void)fillWithShortArray:(IOSShortArray *)array
                 withShort:(jshort)value {
  OrgSpongycastleUtilArrays_fillWithShortArray_withShort_(array, value);
}

+ (void)fillWithIntArray:(IOSIntArray *)array
                 withInt:(jint)value {
  OrgSpongycastleUtilArrays_fillWithIntArray_withInt_(array, value);
}

+ (jint)hashCodeWithByteArray:(IOSByteArray *)data {
  return OrgSpongycastleUtilArrays_hashCodeWithByteArray_(data);
}

+ (jint)hashCodeWithByteArray:(IOSByteArray *)data
                      withInt:(jint)off
                      withInt:(jint)len {
  return OrgSpongycastleUtilArrays_hashCodeWithByteArray_withInt_withInt_(data, off, len);
}

+ (jint)hashCodeWithCharArray:(IOSCharArray *)data {
  return OrgSpongycastleUtilArrays_hashCodeWithCharArray_(data);
}

+ (jint)hashCodeWithIntArray2:(IOSObjectArray *)ints {
  return OrgSpongycastleUtilArrays_hashCodeWithIntArray2_(ints);
}

+ (jint)hashCodeWithIntArray:(IOSIntArray *)data {
  return OrgSpongycastleUtilArrays_hashCodeWithIntArray_(data);
}

+ (jint)hashCodeWithIntArray:(IOSIntArray *)data
                     withInt:(jint)off
                     withInt:(jint)len {
  return OrgSpongycastleUtilArrays_hashCodeWithIntArray_withInt_withInt_(data, off, len);
}

+ (jint)hashCodeWithLongArray:(IOSLongArray *)data {
  return OrgSpongycastleUtilArrays_hashCodeWithLongArray_(data);
}

+ (jint)hashCodeWithLongArray:(IOSLongArray *)data
                      withInt:(jint)off
                      withInt:(jint)len {
  return OrgSpongycastleUtilArrays_hashCodeWithLongArray_withInt_withInt_(data, off, len);
}

+ (jint)hashCodeWithShortArray3:(IOSObjectArray *)shorts {
  return OrgSpongycastleUtilArrays_hashCodeWithShortArray3_(shorts);
}

+ (jint)hashCodeWithShortArray2:(IOSObjectArray *)shorts {
  return OrgSpongycastleUtilArrays_hashCodeWithShortArray2_(shorts);
}

+ (jint)hashCodeWithShortArray:(IOSShortArray *)data {
  return OrgSpongycastleUtilArrays_hashCodeWithShortArray_(data);
}

+ (jint)hashCodeWithNSObjectArray:(IOSObjectArray *)data {
  return OrgSpongycastleUtilArrays_hashCodeWithNSObjectArray_(data);
}

+ (IOSByteArray *)cloneWithByteArray:(IOSByteArray *)data {
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(data);
}

+ (IOSCharArray *)cloneWithCharArray:(IOSCharArray *)data {
  return OrgSpongycastleUtilArrays_cloneWithCharArray_(data);
}

+ (IOSByteArray *)cloneWithByteArray:(IOSByteArray *)data
                       withByteArray:(IOSByteArray *)existing {
  return OrgSpongycastleUtilArrays_cloneWithByteArray_withByteArray_(data, existing);
}

+ (IOSObjectArray *)cloneWithByteArray2:(IOSObjectArray *)data {
  return OrgSpongycastleUtilArrays_cloneWithByteArray2_(data);
}

+ (IOSObjectArray *)cloneWithByteArray3:(IOSObjectArray *)data {
  return OrgSpongycastleUtilArrays_cloneWithByteArray3_(data);
}

+ (IOSIntArray *)cloneWithIntArray:(IOSIntArray *)data {
  return OrgSpongycastleUtilArrays_cloneWithIntArray_(data);
}

+ (IOSLongArray *)cloneWithLongArray:(IOSLongArray *)data {
  return OrgSpongycastleUtilArrays_cloneWithLongArray_(data);
}

+ (IOSLongArray *)cloneWithLongArray:(IOSLongArray *)data
                       withLongArray:(IOSLongArray *)existing {
  return OrgSpongycastleUtilArrays_cloneWithLongArray_withLongArray_(data, existing);
}

+ (IOSShortArray *)cloneWithShortArray:(IOSShortArray *)data {
  return OrgSpongycastleUtilArrays_cloneWithShortArray_(data);
}

+ (IOSObjectArray *)cloneWithJavaMathBigIntegerArray:(IOSObjectArray *)data {
  return OrgSpongycastleUtilArrays_cloneWithJavaMathBigIntegerArray_(data);
}

+ (IOSByteArray *)copyOfWithByteArray:(IOSByteArray *)data
                              withInt:(jint)newLength {
  return OrgSpongycastleUtilArrays_copyOfWithByteArray_withInt_(data, newLength);
}

+ (IOSCharArray *)copyOfWithCharArray:(IOSCharArray *)data
                              withInt:(jint)newLength {
  return OrgSpongycastleUtilArrays_copyOfWithCharArray_withInt_(data, newLength);
}

+ (IOSIntArray *)copyOfWithIntArray:(IOSIntArray *)data
                            withInt:(jint)newLength {
  return OrgSpongycastleUtilArrays_copyOfWithIntArray_withInt_(data, newLength);
}

+ (IOSLongArray *)copyOfWithLongArray:(IOSLongArray *)data
                              withInt:(jint)newLength {
  return OrgSpongycastleUtilArrays_copyOfWithLongArray_withInt_(data, newLength);
}

+ (IOSObjectArray *)copyOfWithJavaMathBigIntegerArray:(IOSObjectArray *)data
                                              withInt:(jint)newLength {
  return OrgSpongycastleUtilArrays_copyOfWithJavaMathBigIntegerArray_withInt_(data, newLength);
}

+ (IOSByteArray *)copyOfRangeWithByteArray:(IOSByteArray *)data
                                   withInt:(jint)from
                                   withInt:(jint)to {
  return OrgSpongycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(data, from, to);
}

+ (IOSIntArray *)copyOfRangeWithIntArray:(IOSIntArray *)data
                                 withInt:(jint)from
                                 withInt:(jint)to {
  return OrgSpongycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(data, from, to);
}

+ (IOSLongArray *)copyOfRangeWithLongArray:(IOSLongArray *)data
                                   withInt:(jint)from
                                   withInt:(jint)to {
  return OrgSpongycastleUtilArrays_copyOfRangeWithLongArray_withInt_withInt_(data, from, to);
}

+ (IOSObjectArray *)copyOfRangeWithJavaMathBigIntegerArray:(IOSObjectArray *)data
                                                   withInt:(jint)from
                                                   withInt:(jint)to {
  return OrgSpongycastleUtilArrays_copyOfRangeWithJavaMathBigIntegerArray_withInt_withInt_(data, from, to);
}

+ (jint)getLengthWithInt:(jint)from
                 withInt:(jint)to {
  return OrgSpongycastleUtilArrays_getLengthWithInt_withInt_(from, to);
}

+ (IOSByteArray *)appendWithByteArray:(IOSByteArray *)a
                             withByte:(jbyte)b {
  return OrgSpongycastleUtilArrays_appendWithByteArray_withByte_(a, b);
}

+ (IOSShortArray *)appendWithShortArray:(IOSShortArray *)a
                              withShort:(jshort)b {
  return OrgSpongycastleUtilArrays_appendWithShortArray_withShort_(a, b);
}

+ (IOSIntArray *)appendWithIntArray:(IOSIntArray *)a
                            withInt:(jint)b {
  return OrgSpongycastleUtilArrays_appendWithIntArray_withInt_(a, b);
}

+ (IOSObjectArray *)appendWithNSStringArray:(IOSObjectArray *)a
                               withNSString:(NSString *)b {
  return OrgSpongycastleUtilArrays_appendWithNSStringArray_withNSString_(a, b);
}

+ (IOSByteArray *)concatenateWithByteArray:(IOSByteArray *)a
                             withByteArray:(IOSByteArray *)b {
  return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_(a, b);
}

+ (IOSByteArray *)concatenateWithByteArray:(IOSByteArray *)a
                             withByteArray:(IOSByteArray *)b
                             withByteArray:(IOSByteArray *)c {
  return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(a, b, c);
}

+ (IOSByteArray *)concatenateWithByteArray:(IOSByteArray *)a
                             withByteArray:(IOSByteArray *)b
                             withByteArray:(IOSByteArray *)c
                             withByteArray:(IOSByteArray *)d {
  return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_withByteArray_(a, b, c, d);
}

+ (IOSByteArray *)concatenateWithByteArray2:(IOSObjectArray *)arrays {
  return OrgSpongycastleUtilArrays_concatenateWithByteArray2_(arrays);
}

+ (IOSIntArray *)concatenateWithIntArray:(IOSIntArray *)a
                            withIntArray:(IOSIntArray *)b {
  return OrgSpongycastleUtilArrays_concatenateWithIntArray_withIntArray_(a, b);
}

+ (IOSByteArray *)prependWithByteArray:(IOSByteArray *)a
                              withByte:(jbyte)b {
  return OrgSpongycastleUtilArrays_prependWithByteArray_withByte_(a, b);
}

+ (IOSShortArray *)prependWithShortArray:(IOSShortArray *)a
                               withShort:(jshort)b {
  return OrgSpongycastleUtilArrays_prependWithShortArray_withShort_(a, b);
}

+ (IOSIntArray *)prependWithIntArray:(IOSIntArray *)a
                             withInt:(jint)b {
  return OrgSpongycastleUtilArrays_prependWithIntArray_withInt_(a, b);
}

+ (IOSByteArray *)reverseWithByteArray:(IOSByteArray *)a {
  return OrgSpongycastleUtilArrays_reverseWithByteArray_(a);
}

+ (IOSIntArray *)reverseWithIntArray:(IOSIntArray *)a {
  return OrgSpongycastleUtilArrays_reverseWithIntArray_(a);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 10, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 20, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 21, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 23, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 24, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 25, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 26, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 28, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 29, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 30, 18, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 30, 20, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 30, 3, -1, -1, -1, -1 },
    { NULL, "[[B", 0x9, 30, 31, -1, -1, -1, -1 },
    { NULL, "[[[B", 0x9, 30, 32, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 30, 22, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 30, 24, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 30, 7, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 30, 28, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigInteger;", 0x9, 30, 33, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 34, 35, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 34, 36, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 34, 12, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 34, 37, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigInteger;", 0x9, 34, 38, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 39, 19, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 39, 23, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 39, 25, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigInteger;", 0x9, 39, 40, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 41, 42, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 43, 14, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 43, 11, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 43, 12, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x9, 43, 44, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 45, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 45, 46, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 45, 47, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 45, 31, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 45, 6, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 48, 14, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 48, 11, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 48, 12, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 49, 18, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 49, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(areEqualWithBooleanArray:withBooleanArray:);
  methods[2].selector = @selector(areEqualWithCharArray:withCharArray:);
  methods[3].selector = @selector(areEqualWithByteArray:withByteArray:);
  methods[4].selector = @selector(areEqualWithShortArray:withShortArray:);
  methods[5].selector = @selector(constantTimeAreEqualWithByteArray:withByteArray:);
  methods[6].selector = @selector(areEqualWithIntArray:withIntArray:);
  methods[7].selector = @selector(areEqualWithLongArray:withLongArray:);
  methods[8].selector = @selector(areEqualWithNSObjectArray:withNSObjectArray:);
  methods[9].selector = @selector(compareUnsignedWithByteArray:withByteArray:);
  methods[10].selector = @selector(containsWithShortArray:withShort:);
  methods[11].selector = @selector(containsWithIntArray:withInt:);
  methods[12].selector = @selector(fillWithByteArray:withByte:);
  methods[13].selector = @selector(fillWithCharArray:withChar:);
  methods[14].selector = @selector(fillWithLongArray:withLong:);
  methods[15].selector = @selector(fillWithShortArray:withShort:);
  methods[16].selector = @selector(fillWithIntArray:withInt:);
  methods[17].selector = @selector(hashCodeWithByteArray:);
  methods[18].selector = @selector(hashCodeWithByteArray:withInt:withInt:);
  methods[19].selector = @selector(hashCodeWithCharArray:);
  methods[20].selector = @selector(hashCodeWithIntArray2:);
  methods[21].selector = @selector(hashCodeWithIntArray:);
  methods[22].selector = @selector(hashCodeWithIntArray:withInt:withInt:);
  methods[23].selector = @selector(hashCodeWithLongArray:);
  methods[24].selector = @selector(hashCodeWithLongArray:withInt:withInt:);
  methods[25].selector = @selector(hashCodeWithShortArray3:);
  methods[26].selector = @selector(hashCodeWithShortArray2:);
  methods[27].selector = @selector(hashCodeWithShortArray:);
  methods[28].selector = @selector(hashCodeWithNSObjectArray:);
  methods[29].selector = @selector(cloneWithByteArray:);
  methods[30].selector = @selector(cloneWithCharArray:);
  methods[31].selector = @selector(cloneWithByteArray:withByteArray:);
  methods[32].selector = @selector(cloneWithByteArray2:);
  methods[33].selector = @selector(cloneWithByteArray3:);
  methods[34].selector = @selector(cloneWithIntArray:);
  methods[35].selector = @selector(cloneWithLongArray:);
  methods[36].selector = @selector(cloneWithLongArray:withLongArray:);
  methods[37].selector = @selector(cloneWithShortArray:);
  methods[38].selector = @selector(cloneWithJavaMathBigIntegerArray:);
  methods[39].selector = @selector(copyOfWithByteArray:withInt:);
  methods[40].selector = @selector(copyOfWithCharArray:withInt:);
  methods[41].selector = @selector(copyOfWithIntArray:withInt:);
  methods[42].selector = @selector(copyOfWithLongArray:withInt:);
  methods[43].selector = @selector(copyOfWithJavaMathBigIntegerArray:withInt:);
  methods[44].selector = @selector(copyOfRangeWithByteArray:withInt:withInt:);
  methods[45].selector = @selector(copyOfRangeWithIntArray:withInt:withInt:);
  methods[46].selector = @selector(copyOfRangeWithLongArray:withInt:withInt:);
  methods[47].selector = @selector(copyOfRangeWithJavaMathBigIntegerArray:withInt:withInt:);
  methods[48].selector = @selector(getLengthWithInt:withInt:);
  methods[49].selector = @selector(appendWithByteArray:withByte:);
  methods[50].selector = @selector(appendWithShortArray:withShort:);
  methods[51].selector = @selector(appendWithIntArray:withInt:);
  methods[52].selector = @selector(appendWithNSStringArray:withNSString:);
  methods[53].selector = @selector(concatenateWithByteArray:withByteArray:);
  methods[54].selector = @selector(concatenateWithByteArray:withByteArray:withByteArray:);
  methods[55].selector = @selector(concatenateWithByteArray:withByteArray:withByteArray:withByteArray:);
  methods[56].selector = @selector(concatenateWithByteArray2:);
  methods[57].selector = @selector(concatenateWithIntArray:withIntArray:);
  methods[58].selector = @selector(prependWithByteArray:withByte:);
  methods[59].selector = @selector(prependWithShortArray:withShort:);
  methods[60].selector = @selector(prependWithIntArray:withInt:);
  methods[61].selector = @selector(reverseWithByteArray:);
  methods[62].selector = @selector(reverseWithIntArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "areEqual", "[Z[Z", "[C[C", "[B[B", "[S[S", "constantTimeAreEqual", "[I[I", "[J[J", "[LNSObject;[LNSObject;", "compareUnsigned", "contains", "[SS", "[II", "fill", "[BB", "[CC", "[JJ", "hashCode", "[B", "[BII", "[C", "[[I", "[I", "[III", "[J", "[JII", "[[[S", "[[S", "[S", "[LNSObject;", "clone", "[[B", "[[[B", "[LJavaMathBigInteger;", "copyOf", "[BI", "[CI", "[JI", "[LJavaMathBigInteger;I", "copyOfRange", "[LJavaMathBigInteger;II", "getLength", "II", "append", "[LNSString;LNSString;", "concatenate", "[B[B[B", "[B[B[B[B", "prepend", "reverse", "LOrgSpongycastleUtilArrays_Iterator;" };
  static const J2ObjcClassInfo _OrgSpongycastleUtilArrays = { "Arrays", "org.spongycastle.util", ptrTable, methods, NULL, 7, 0x11, 63, 0, -1, 50, -1, -1, -1 };
  return &_OrgSpongycastleUtilArrays;
}

@end

void OrgSpongycastleUtilArrays_init(OrgSpongycastleUtilArrays *self) {
  NSObject_init(self);
}

OrgSpongycastleUtilArrays *new_OrgSpongycastleUtilArrays_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleUtilArrays, init)
}

OrgSpongycastleUtilArrays *create_OrgSpongycastleUtilArrays_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleUtilArrays, init)
}

jboolean OrgSpongycastleUtilArrays_areEqualWithBooleanArray_withBooleanArray_(IOSBooleanArray *a, IOSBooleanArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == b) {
    return true;
  }
  if (a == nil || b == nil) {
    return false;
  }
  if (a->size_ != b->size_) {
    return false;
  }
  for (jint i = 0; i != a->size_; i++) {
    if (IOSBooleanArray_Get(a, i) != IOSBooleanArray_Get(b, i)) {
      return false;
    }
  }
  return true;
}

jboolean OrgSpongycastleUtilArrays_areEqualWithCharArray_withCharArray_(IOSCharArray *a, IOSCharArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == b) {
    return true;
  }
  if (a == nil || b == nil) {
    return false;
  }
  if (a->size_ != b->size_) {
    return false;
  }
  for (jint i = 0; i != a->size_; i++) {
    if (IOSCharArray_Get(a, i) != IOSCharArray_Get(b, i)) {
      return false;
    }
  }
  return true;
}

jboolean OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == b) {
    return true;
  }
  if (a == nil || b == nil) {
    return false;
  }
  if (a->size_ != b->size_) {
    return false;
  }
  for (jint i = 0; i != a->size_; i++) {
    if (IOSByteArray_Get(a, i) != IOSByteArray_Get(b, i)) {
      return false;
    }
  }
  return true;
}

jboolean OrgSpongycastleUtilArrays_areEqualWithShortArray_withShortArray_(IOSShortArray *a, IOSShortArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == b) {
    return true;
  }
  if (a == nil || b == nil) {
    return false;
  }
  if (a->size_ != b->size_) {
    return false;
  }
  for (jint i = 0; i != a->size_; i++) {
    if (IOSShortArray_Get(a, i) != IOSShortArray_Get(b, i)) {
      return false;
    }
  }
  return true;
}

jboolean OrgSpongycastleUtilArrays_constantTimeAreEqualWithByteArray_withByteArray_(IOSByteArray *expected, IOSByteArray *supplied) {
  OrgSpongycastleUtilArrays_initialize();
  if (expected == supplied) {
    return true;
  }
  if (expected == nil || supplied == nil) {
    return false;
  }
  if (expected->size_ != supplied->size_) {
    return !OrgSpongycastleUtilArrays_constantTimeAreEqualWithByteArray_withByteArray_(expected, expected);
  }
  jint nonEqual = 0;
  for (jint i = 0; i != expected->size_; i++) {
    nonEqual |= (IOSByteArray_Get(expected, i) ^ IOSByteArray_Get(supplied, i));
  }
  return nonEqual == 0;
}

jboolean OrgSpongycastleUtilArrays_areEqualWithIntArray_withIntArray_(IOSIntArray *a, IOSIntArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == b) {
    return true;
  }
  if (a == nil || b == nil) {
    return false;
  }
  if (a->size_ != b->size_) {
    return false;
  }
  for (jint i = 0; i != a->size_; i++) {
    if (IOSIntArray_Get(a, i) != IOSIntArray_Get(b, i)) {
      return false;
    }
  }
  return true;
}

jboolean OrgSpongycastleUtilArrays_areEqualWithLongArray_withLongArray_(IOSLongArray *a, IOSLongArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == b) {
    return true;
  }
  if (a == nil || b == nil) {
    return false;
  }
  if (a->size_ != b->size_) {
    return false;
  }
  for (jint i = 0; i != a->size_; i++) {
    if (IOSLongArray_Get(a, i) != IOSLongArray_Get(b, i)) {
      return false;
    }
  }
  return true;
}

jboolean OrgSpongycastleUtilArrays_areEqualWithNSObjectArray_withNSObjectArray_(IOSObjectArray *a, IOSObjectArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == b) {
    return true;
  }
  if (a == nil || b == nil) {
    return false;
  }
  if (a->size_ != b->size_) {
    return false;
  }
  for (jint i = 0; i != a->size_; i++) {
    id objA = IOSObjectArray_Get(a, i);
    id objB = IOSObjectArray_Get(b, i);
    if (objA == nil) {
      if (objB != nil) {
        return false;
      }
    }
    else if (![objA isEqual:objB]) {
      return false;
    }
  }
  return true;
}

jint OrgSpongycastleUtilArrays_compareUnsignedWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == b) {
    return 0;
  }
  if (a == nil) {
    return -1;
  }
  if (b == nil) {
    return 1;
  }
  jint minLen = JavaLangMath_minWithInt_withInt_(a->size_, b->size_);
  for (jint i = 0; i < minLen; ++i) {
    jint aVal = IOSByteArray_Get(a, i) & (jint) 0xFF;
    jint bVal = IOSByteArray_Get(b, i) & (jint) 0xFF;
    if (aVal < bVal) {
      return -1;
    }
    if (aVal > bVal) {
      return 1;
    }
  }
  if (a->size_ < b->size_) {
    return -1;
  }
  if (a->size_ > b->size_) {
    return 1;
  }
  return 0;
}

jboolean OrgSpongycastleUtilArrays_containsWithShortArray_withShort_(IOSShortArray *a, jshort n) {
  OrgSpongycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSShortArray *) nil_chk(a))->size_; ++i) {
    if (IOSShortArray_Get(a, i) == n) {
      return true;
    }
  }
  return false;
}

jboolean OrgSpongycastleUtilArrays_containsWithIntArray_withInt_(IOSIntArray *a, jint n) {
  OrgSpongycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(a))->size_; ++i) {
    if (IOSIntArray_Get(a, i) == n) {
      return true;
    }
  }
  return false;
}

void OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(IOSByteArray *array, jbyte value) {
  OrgSpongycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(array))->size_; i++) {
    *IOSByteArray_GetRef(array, i) = value;
  }
}

void OrgSpongycastleUtilArrays_fillWithCharArray_withChar_(IOSCharArray *array, jchar value) {
  OrgSpongycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSCharArray *) nil_chk(array))->size_; i++) {
    *IOSCharArray_GetRef(array, i) = value;
  }
}

void OrgSpongycastleUtilArrays_fillWithLongArray_withLong_(IOSLongArray *array, jlong value) {
  OrgSpongycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(array))->size_; i++) {
    *IOSLongArray_GetRef(array, i) = value;
  }
}

void OrgSpongycastleUtilArrays_fillWithShortArray_withShort_(IOSShortArray *array, jshort value) {
  OrgSpongycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSShortArray *) nil_chk(array))->size_; i++) {
    *IOSShortArray_GetRef(array, i) = value;
  }
}

void OrgSpongycastleUtilArrays_fillWithIntArray_withInt_(IOSIntArray *array, jint value) {
  OrgSpongycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(array))->size_; i++) {
    *IOSIntArray_GetRef(array, i) = value;
  }
}

jint OrgSpongycastleUtilArrays_hashCodeWithByteArray_(IOSByteArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = data->size_;
  jint hc = i + 1;
  while (--i >= 0) {
    hc *= 257;
    hc ^= IOSByteArray_Get(data, i);
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithByteArray_withInt_withInt_(IOSByteArray *data, jint off, jint len) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = len;
  jint hc = i + 1;
  while (--i >= 0) {
    hc *= 257;
    hc ^= IOSByteArray_Get(data, off + i);
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithCharArray_(IOSCharArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = data->size_;
  jint hc = i + 1;
  while (--i >= 0) {
    hc *= 257;
    hc ^= IOSCharArray_Get(data, i);
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithIntArray2_(IOSObjectArray *ints) {
  OrgSpongycastleUtilArrays_initialize();
  jint hc = 0;
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(ints))->size_; i++) {
    hc = hc * 257 + OrgSpongycastleUtilArrays_hashCodeWithIntArray_(IOSObjectArray_Get(ints, i));
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithIntArray_(IOSIntArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = data->size_;
  jint hc = i + 1;
  while (--i >= 0) {
    hc *= 257;
    hc ^= IOSIntArray_Get(data, i);
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithIntArray_withInt_withInt_(IOSIntArray *data, jint off, jint len) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = len;
  jint hc = i + 1;
  while (--i >= 0) {
    hc *= 257;
    hc ^= IOSIntArray_Get(data, off + i);
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithLongArray_(IOSLongArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = data->size_;
  jint hc = i + 1;
  while (--i >= 0) {
    jlong di = IOSLongArray_Get(data, i);
    hc *= 257;
    hc ^= (jint) di;
    hc *= 257;
    hc ^= (jint) (JreURShift64(di, 32));
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithLongArray_withInt_withInt_(IOSLongArray *data, jint off, jint len) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = len;
  jint hc = i + 1;
  while (--i >= 0) {
    jlong di = IOSLongArray_Get(data, off + i);
    hc *= 257;
    hc ^= (jint) di;
    hc *= 257;
    hc ^= (jint) (JreURShift64(di, 32));
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithShortArray3_(IOSObjectArray *shorts) {
  OrgSpongycastleUtilArrays_initialize();
  jint hc = 0;
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(shorts))->size_; i++) {
    hc = hc * 257 + OrgSpongycastleUtilArrays_hashCodeWithShortArray2_(IOSObjectArray_Get(shorts, i));
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithShortArray2_(IOSObjectArray *shorts) {
  OrgSpongycastleUtilArrays_initialize();
  jint hc = 0;
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(shorts))->size_; i++) {
    hc = hc * 257 + OrgSpongycastleUtilArrays_hashCodeWithShortArray_(IOSObjectArray_Get(shorts, i));
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithShortArray_(IOSShortArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = data->size_;
  jint hc = i + 1;
  while (--i >= 0) {
    hc *= 257;
    hc ^= (IOSShortArray_Get(data, i) & (jint) 0xff);
  }
  return hc;
}

jint OrgSpongycastleUtilArrays_hashCodeWithNSObjectArray_(IOSObjectArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return 0;
  }
  jint i = data->size_;
  jint hc = i + 1;
  while (--i >= 0) {
    hc *= 257;
    hc ^= ((jint) [nil_chk(IOSObjectArray_Get(data, i)) hash]);
  }
  return hc;
}

IOSByteArray *OrgSpongycastleUtilArrays_cloneWithByteArray_(IOSByteArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  IOSByteArray *copy_ = [IOSByteArray newArrayWithLength:data->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, copy_, 0, data->size_);
  return copy_;
}

IOSCharArray *OrgSpongycastleUtilArrays_cloneWithCharArray_(IOSCharArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  IOSCharArray *copy_ = [IOSCharArray newArrayWithLength:data->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, copy_, 0, data->size_);
  return copy_;
}

IOSByteArray *OrgSpongycastleUtilArrays_cloneWithByteArray_withByteArray_(IOSByteArray *data, IOSByteArray *existing) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  if ((existing == nil) || (((IOSByteArray *) nil_chk(existing))->size_ != data->size_)) {
    return OrgSpongycastleUtilArrays_cloneWithByteArray_(data);
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, existing, 0, ((IOSByteArray *) nil_chk(existing))->size_);
  return existing;
}

IOSObjectArray *OrgSpongycastleUtilArrays_cloneWithByteArray2_(IOSObjectArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  IOSObjectArray *copy_ = [IOSObjectArray newArrayWithLength:data->size_ type:IOSClass_byteArray(1)];
  for (jint i = 0; i != copy_->size_; i++) {
    (void) IOSObjectArray_Set(copy_, i, OrgSpongycastleUtilArrays_cloneWithByteArray_(IOSObjectArray_Get(data, i)));
  }
  return copy_;
}

IOSObjectArray *OrgSpongycastleUtilArrays_cloneWithByteArray3_(IOSObjectArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  IOSObjectArray *copy_ = [IOSObjectArray newArrayWithLength:data->size_ type:IOSClass_byteArray(2)];
  for (jint i = 0; i != copy_->size_; i++) {
    (void) IOSObjectArray_Set(copy_, i, OrgSpongycastleUtilArrays_cloneWithByteArray2_(IOSObjectArray_Get(data, i)));
  }
  return copy_;
}

IOSIntArray *OrgSpongycastleUtilArrays_cloneWithIntArray_(IOSIntArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  IOSIntArray *copy_ = [IOSIntArray newArrayWithLength:data->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, copy_, 0, data->size_);
  return copy_;
}

IOSLongArray *OrgSpongycastleUtilArrays_cloneWithLongArray_(IOSLongArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  IOSLongArray *copy_ = [IOSLongArray newArrayWithLength:data->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, copy_, 0, data->size_);
  return copy_;
}

IOSLongArray *OrgSpongycastleUtilArrays_cloneWithLongArray_withLongArray_(IOSLongArray *data, IOSLongArray *existing) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  if ((existing == nil) || (((IOSLongArray *) nil_chk(existing))->size_ != data->size_)) {
    return OrgSpongycastleUtilArrays_cloneWithLongArray_(data);
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, existing, 0, ((IOSLongArray *) nil_chk(existing))->size_);
  return existing;
}

IOSShortArray *OrgSpongycastleUtilArrays_cloneWithShortArray_(IOSShortArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  IOSShortArray *copy_ = [IOSShortArray newArrayWithLength:data->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, copy_, 0, data->size_);
  return copy_;
}

IOSObjectArray *OrgSpongycastleUtilArrays_cloneWithJavaMathBigIntegerArray_(IOSObjectArray *data) {
  OrgSpongycastleUtilArrays_initialize();
  if (data == nil) {
    return nil;
  }
  IOSObjectArray *copy_ = [IOSObjectArray newArrayWithLength:data->size_ type:JavaMathBigInteger_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, copy_, 0, data->size_);
  return copy_;
}

IOSByteArray *OrgSpongycastleUtilArrays_copyOfWithByteArray_withInt_(IOSByteArray *data, jint newLength) {
  OrgSpongycastleUtilArrays_initialize();
  IOSByteArray *tmp = [IOSByteArray newArrayWithLength:newLength];
  if (newLength < ((IOSByteArray *) nil_chk(data))->size_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, newLength);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, data->size_);
  }
  return tmp;
}

IOSCharArray *OrgSpongycastleUtilArrays_copyOfWithCharArray_withInt_(IOSCharArray *data, jint newLength) {
  OrgSpongycastleUtilArrays_initialize();
  IOSCharArray *tmp = [IOSCharArray newArrayWithLength:newLength];
  if (newLength < ((IOSCharArray *) nil_chk(data))->size_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, newLength);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, data->size_);
  }
  return tmp;
}

IOSIntArray *OrgSpongycastleUtilArrays_copyOfWithIntArray_withInt_(IOSIntArray *data, jint newLength) {
  OrgSpongycastleUtilArrays_initialize();
  IOSIntArray *tmp = [IOSIntArray newArrayWithLength:newLength];
  if (newLength < ((IOSIntArray *) nil_chk(data))->size_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, newLength);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, data->size_);
  }
  return tmp;
}

IOSLongArray *OrgSpongycastleUtilArrays_copyOfWithLongArray_withInt_(IOSLongArray *data, jint newLength) {
  OrgSpongycastleUtilArrays_initialize();
  IOSLongArray *tmp = [IOSLongArray newArrayWithLength:newLength];
  if (newLength < ((IOSLongArray *) nil_chk(data))->size_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, newLength);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, data->size_);
  }
  return tmp;
}

IOSObjectArray *OrgSpongycastleUtilArrays_copyOfWithJavaMathBigIntegerArray_withInt_(IOSObjectArray *data, jint newLength) {
  OrgSpongycastleUtilArrays_initialize();
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:newLength type:JavaMathBigInteger_class_()];
  if (newLength < ((IOSObjectArray *) nil_chk(data))->size_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, newLength);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, tmp, 0, data->size_);
  }
  return tmp;
}

IOSByteArray *OrgSpongycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(IOSByteArray *data, jint from, jint to) {
  OrgSpongycastleUtilArrays_initialize();
  jint newLength = OrgSpongycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSByteArray *tmp = [IOSByteArray newArrayWithLength:newLength];
  if (((IOSByteArray *) nil_chk(data))->size_ - from < newLength) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, from, tmp, 0, data->size_ - from);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, from, tmp, 0, newLength);
  }
  return tmp;
}

IOSIntArray *OrgSpongycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(IOSIntArray *data, jint from, jint to) {
  OrgSpongycastleUtilArrays_initialize();
  jint newLength = OrgSpongycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSIntArray *tmp = [IOSIntArray newArrayWithLength:newLength];
  if (((IOSIntArray *) nil_chk(data))->size_ - from < newLength) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, from, tmp, 0, data->size_ - from);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, from, tmp, 0, newLength);
  }
  return tmp;
}

IOSLongArray *OrgSpongycastleUtilArrays_copyOfRangeWithLongArray_withInt_withInt_(IOSLongArray *data, jint from, jint to) {
  OrgSpongycastleUtilArrays_initialize();
  jint newLength = OrgSpongycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSLongArray *tmp = [IOSLongArray newArrayWithLength:newLength];
  if (((IOSLongArray *) nil_chk(data))->size_ - from < newLength) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, from, tmp, 0, data->size_ - from);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, from, tmp, 0, newLength);
  }
  return tmp;
}

IOSObjectArray *OrgSpongycastleUtilArrays_copyOfRangeWithJavaMathBigIntegerArray_withInt_withInt_(IOSObjectArray *data, jint from, jint to) {
  OrgSpongycastleUtilArrays_initialize();
  jint newLength = OrgSpongycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:newLength type:JavaMathBigInteger_class_()];
  if (((IOSObjectArray *) nil_chk(data))->size_ - from < newLength) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, from, tmp, 0, data->size_ - from);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, from, tmp, 0, newLength);
  }
  return tmp;
}

jint OrgSpongycastleUtilArrays_getLengthWithInt_withInt_(jint from, jint to) {
  OrgSpongycastleUtilArrays_initialize();
  jint newLength = to - from;
  if (newLength < 0) {
    JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithInt_(from);
    (void) [((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@" > "])) appendWithInt:to];
    @throw new_JavaLangIllegalArgumentException_initWithNSString_([sb description]);
  }
  return newLength;
}

IOSByteArray *OrgSpongycastleUtilArrays_appendWithByteArray_withByte_(IOSByteArray *a, jbyte b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return [IOSByteArray newArrayWithBytes:(jbyte[]){ b } count:1];
  }
  jint length = a->size_;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, length);
  *IOSByteArray_GetRef(result, length) = b;
  return result;
}

IOSShortArray *OrgSpongycastleUtilArrays_appendWithShortArray_withShort_(IOSShortArray *a, jshort b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return [IOSShortArray newArrayWithShorts:(jshort[]){ b } count:1];
  }
  jint length = a->size_;
  IOSShortArray *result = [IOSShortArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, length);
  *IOSShortArray_GetRef(result, length) = b;
  return result;
}

IOSIntArray *OrgSpongycastleUtilArrays_appendWithIntArray_withInt_(IOSIntArray *a, jint b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return [IOSIntArray newArrayWithInts:(jint[]){ b } count:1];
  }
  jint length = a->size_;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, length);
  *IOSIntArray_GetRef(result, length) = b;
  return result;
}

IOSObjectArray *OrgSpongycastleUtilArrays_appendWithNSStringArray_withNSString_(IOSObjectArray *a, NSString *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return [IOSObjectArray newArrayWithObjects:(id[]){ b } count:1 type:NSString_class_()];
  }
  jint length = a->size_;
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:length + 1 type:NSString_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, length);
  (void) IOSObjectArray_Set(result, length, b);
  return result;
}

IOSByteArray *OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a != nil && b != nil) {
    IOSByteArray *rv = [IOSByteArray newArrayWithLength:a->size_ + b->size_];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, rv, 0, a->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, rv, a->size_, b->size_);
    return rv;
  }
  else if (b != nil) {
    return OrgSpongycastleUtilArrays_cloneWithByteArray_(b);
  }
  else {
    return OrgSpongycastleUtilArrays_cloneWithByteArray_(a);
  }
}

IOSByteArray *OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b, IOSByteArray *c) {
  OrgSpongycastleUtilArrays_initialize();
  if (a != nil && b != nil && c != nil) {
    IOSByteArray *rv = [IOSByteArray newArrayWithLength:a->size_ + b->size_ + c->size_];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, rv, 0, a->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, rv, a->size_, b->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(c, 0, rv, a->size_ + b->size_, c->size_);
    return rv;
  }
  else if (a == nil) {
    return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_(b, c);
  }
  else if (b == nil) {
    return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_(a, c);
  }
  else {
    return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_(a, b);
  }
}

IOSByteArray *OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b, IOSByteArray *c, IOSByteArray *d) {
  OrgSpongycastleUtilArrays_initialize();
  if (a != nil && b != nil && c != nil && d != nil) {
    IOSByteArray *rv = [IOSByteArray newArrayWithLength:a->size_ + b->size_ + c->size_ + d->size_];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, rv, 0, a->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, rv, a->size_, b->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(c, 0, rv, a->size_ + b->size_, c->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(d, 0, rv, a->size_ + b->size_ + c->size_, d->size_);
    return rv;
  }
  else if (d == nil) {
    return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(a, b, c);
  }
  else if (c == nil) {
    return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(a, b, d);
  }
  else if (b == nil) {
    return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(a, c, d);
  }
  else {
    return OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(b, c, d);
  }
}

IOSByteArray *OrgSpongycastleUtilArrays_concatenateWithByteArray2_(IOSObjectArray *arrays) {
  OrgSpongycastleUtilArrays_initialize();
  jint size = 0;
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(arrays))->size_; i++) {
    size += ((IOSByteArray *) nil_chk(IOSObjectArray_Get(arrays, i)))->size_;
  }
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:size];
  jint offSet = 0;
  for (jint i = 0; i != arrays->size_; i++) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(arrays, i), 0, rv, offSet, ((IOSByteArray *) nil_chk(IOSObjectArray_Get(arrays, i)))->size_);
    offSet += ((IOSByteArray *) nil_chk(IOSObjectArray_Get(arrays, i)))->size_;
  }
  return rv;
}

IOSIntArray *OrgSpongycastleUtilArrays_concatenateWithIntArray_withIntArray_(IOSIntArray *a, IOSIntArray *b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return OrgSpongycastleUtilArrays_cloneWithIntArray_(b);
  }
  if (b == nil) {
    return OrgSpongycastleUtilArrays_cloneWithIntArray_(a);
  }
  IOSIntArray *c = [IOSIntArray newArrayWithLength:a->size_ + b->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, c, 0, a->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, c, a->size_, b->size_);
  return c;
}

IOSByteArray *OrgSpongycastleUtilArrays_prependWithByteArray_withByte_(IOSByteArray *a, jbyte b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return [IOSByteArray newArrayWithBytes:(jbyte[]){ b } count:1];
  }
  jint length = a->size_;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 1, length);
  *IOSByteArray_GetRef(result, 0) = b;
  return result;
}

IOSShortArray *OrgSpongycastleUtilArrays_prependWithShortArray_withShort_(IOSShortArray *a, jshort b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return [IOSShortArray newArrayWithShorts:(jshort[]){ b } count:1];
  }
  jint length = a->size_;
  IOSShortArray *result = [IOSShortArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 1, length);
  *IOSShortArray_GetRef(result, 0) = b;
  return result;
}

IOSIntArray *OrgSpongycastleUtilArrays_prependWithIntArray_withInt_(IOSIntArray *a, jint b) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return [IOSIntArray newArrayWithInts:(jint[]){ b } count:1];
  }
  jint length = a->size_;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 1, length);
  *IOSIntArray_GetRef(result, 0) = b;
  return result;
}

IOSByteArray *OrgSpongycastleUtilArrays_reverseWithByteArray_(IOSByteArray *a) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return nil;
  }
  jint p1 = 0;
  jint p2 = a->size_;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:p2];
  while (--p2 >= 0) {
    *IOSByteArray_GetRef(result, p2) = IOSByteArray_Get(a, p1++);
  }
  return result;
}

IOSIntArray *OrgSpongycastleUtilArrays_reverseWithIntArray_(IOSIntArray *a) {
  OrgSpongycastleUtilArrays_initialize();
  if (a == nil) {
    return nil;
  }
  jint p1 = 0;
  jint p2 = a->size_;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:p2];
  while (--p2 >= 0) {
    *IOSIntArray_GetRef(result, p2) = IOSIntArray_Get(a, p1++);
  }
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleUtilArrays)

@implementation OrgSpongycastleUtilArrays_Iterator

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)dataArray {
  OrgSpongycastleUtilArrays_Iterator_initWithNSObjectArray_(self, dataArray);
  return self;
}

- (jboolean)hasNext {
  return position_ < ((IOSObjectArray *) nil_chk(dataArray_))->size_;
}

- (id)next {
  if (position_ == ((IOSObjectArray *) nil_chk(dataArray_))->size_) {
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(JreStrcat("$I", @"Out of elements: ", position_));
  }
  return IOSObjectArray_Get(dataArray_, position_++);
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Cannot remove element from an Array.");
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSObjectArray:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dataArray_", "[LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSObject;", "([TT;)V", "()TT;", "[TT;", "LOrgSpongycastleUtilArrays;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TT;>;" };
  static const J2ObjcClassInfo _OrgSpongycastleUtilArrays_Iterator = { "Iterator", "org.spongycastle.util", ptrTable, methods, fields, 7, 0x9, 4, 2, 4, -1, -1, 5, -1 };
  return &_OrgSpongycastleUtilArrays_Iterator;
}

@end

void OrgSpongycastleUtilArrays_Iterator_initWithNSObjectArray_(OrgSpongycastleUtilArrays_Iterator *self, IOSObjectArray *dataArray) {
  NSObject_init(self);
  self->position_ = 0;
  self->dataArray_ = dataArray;
}

OrgSpongycastleUtilArrays_Iterator *new_OrgSpongycastleUtilArrays_Iterator_initWithNSObjectArray_(IOSObjectArray *dataArray) {
  J2OBJC_NEW_IMPL(OrgSpongycastleUtilArrays_Iterator, initWithNSObjectArray_, dataArray)
}

OrgSpongycastleUtilArrays_Iterator *create_OrgSpongycastleUtilArrays_Iterator_initWithNSObjectArray_(IOSObjectArray *dataArray) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleUtilArrays_Iterator, initWithNSObjectArray_, dataArray)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleUtilArrays_Iterator)
