//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/util/io/Streams.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleUtilIoStreams")
#ifdef RESTRICT_OrgSpongycastleUtilIoStreams
#define INCLUDE_ALL_OrgSpongycastleUtilIoStreams 0
#else
#define INCLUDE_ALL_OrgSpongycastleUtilIoStreams 1
#endif
#undef RESTRICT_OrgSpongycastleUtilIoStreams

#if !defined (OrgSpongycastleUtilIoStreams_) && (INCLUDE_ALL_OrgSpongycastleUtilIoStreams || defined(INCLUDE_OrgSpongycastleUtilIoStreams))
#define OrgSpongycastleUtilIoStreams_

@class IOSByteArray;
@class JavaIoByteArrayOutputStream;
@class JavaIoInputStream;
@class JavaIoOutputStream;

@interface OrgSpongycastleUtilIoStreams : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)drainWithJavaIoInputStream:(JavaIoInputStream *)inStr;

+ (void)pipeAllWithJavaIoInputStream:(JavaIoInputStream *)inStr
              withJavaIoOutputStream:(JavaIoOutputStream *)outStr;

+ (jlong)pipeAllLimitedWithJavaIoInputStream:(JavaIoInputStream *)inStr
                                    withLong:(jlong)limit
                      withJavaIoOutputStream:(JavaIoOutputStream *)outStr;

+ (IOSByteArray *)readAllWithJavaIoInputStream:(JavaIoInputStream *)inStr;

+ (IOSByteArray *)readAllLimitedWithJavaIoInputStream:(JavaIoInputStream *)inStr
                                              withInt:(jint)limit;

+ (jint)readFullyWithJavaIoInputStream:(JavaIoInputStream *)inStr
                         withByteArray:(IOSByteArray *)buf;

+ (jint)readFullyWithJavaIoInputStream:(JavaIoInputStream *)inStr
                         withByteArray:(IOSByteArray *)buf
                               withInt:(jint)off
                               withInt:(jint)len;

+ (void)writeBufToWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)buf
                           withJavaIoOutputStream:(JavaIoOutputStream *)output;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleUtilIoStreams)

FOUNDATION_EXPORT void OrgSpongycastleUtilIoStreams_init(OrgSpongycastleUtilIoStreams *self);

FOUNDATION_EXPORT OrgSpongycastleUtilIoStreams *new_OrgSpongycastleUtilIoStreams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleUtilIoStreams *create_OrgSpongycastleUtilIoStreams_init(void);

FOUNDATION_EXPORT void OrgSpongycastleUtilIoStreams_drainWithJavaIoInputStream_(JavaIoInputStream *inStr);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleUtilIoStreams_readAllWithJavaIoInputStream_(JavaIoInputStream *inStr);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleUtilIoStreams_readAllLimitedWithJavaIoInputStream_withInt_(JavaIoInputStream *inStr, jint limit);

FOUNDATION_EXPORT jint OrgSpongycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_(JavaIoInputStream *inStr, IOSByteArray *buf);

FOUNDATION_EXPORT jint OrgSpongycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(JavaIoInputStream *inStr, IOSByteArray *buf, jint off, jint len);

FOUNDATION_EXPORT void OrgSpongycastleUtilIoStreams_pipeAllWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *inStr, JavaIoOutputStream *outStr);

FOUNDATION_EXPORT jlong OrgSpongycastleUtilIoStreams_pipeAllLimitedWithJavaIoInputStream_withLong_withJavaIoOutputStream_(JavaIoInputStream *inStr, jlong limit, JavaIoOutputStream *outStr);

FOUNDATION_EXPORT void OrgSpongycastleUtilIoStreams_writeBufToWithJavaIoByteArrayOutputStream_withJavaIoOutputStream_(JavaIoByteArrayOutputStream *buf, JavaIoOutputStream *output);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleUtilIoStreams)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleUtilIoStreams")
