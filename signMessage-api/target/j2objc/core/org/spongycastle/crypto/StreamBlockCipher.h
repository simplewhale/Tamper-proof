//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/StreamBlockCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoStreamBlockCipher")
#ifdef RESTRICT_OrgSpongycastleCryptoStreamBlockCipher
#define INCLUDE_ALL_OrgSpongycastleCryptoStreamBlockCipher 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoStreamBlockCipher 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoStreamBlockCipher

#if !defined (OrgSpongycastleCryptoStreamBlockCipher_) && (INCLUDE_ALL_OrgSpongycastleCryptoStreamBlockCipher || defined(INCLUDE_OrgSpongycastleCryptoStreamBlockCipher))
#define OrgSpongycastleCryptoStreamBlockCipher_

#define RESTRICT_OrgSpongycastleCryptoBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoBlockCipher 1
#include "org/spongycastle/crypto/BlockCipher.h"

#define RESTRICT_OrgSpongycastleCryptoStreamCipher 1
#define INCLUDE_OrgSpongycastleCryptoStreamCipher 1
#include "org/spongycastle/crypto/StreamCipher.h"

@class IOSByteArray;

@interface OrgSpongycastleCryptoStreamBlockCipher : NSObject < OrgSpongycastleCryptoBlockCipher, OrgSpongycastleCryptoStreamCipher >

#pragma mark Public

- (id<OrgSpongycastleCryptoBlockCipher>)getUnderlyingCipher;

- (jint)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (jbyte)returnByteWithByte:(jbyte)inArg;

#pragma mark Protected

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher;

- (jbyte)calculateByteWithByte:(jbyte)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoStreamBlockCipher)

FOUNDATION_EXPORT void OrgSpongycastleCryptoStreamBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoStreamBlockCipher *self, id<OrgSpongycastleCryptoBlockCipher> cipher);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoStreamBlockCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoStreamBlockCipher")
