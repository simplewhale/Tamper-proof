//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/Poly1305KeyGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator")
#ifdef RESTRICT_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator

#if !defined (OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator_) && (INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator || defined(INCLUDE_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator))
#define OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator_

#define RESTRICT_OrgSpongycastleCryptoCipherKeyGenerator 1
#define INCLUDE_OrgSpongycastleCryptoCipherKeyGenerator 1
#include "org/spongycastle/crypto/CipherKeyGenerator.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoKeyGenerationParameters;

@interface OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator : OrgSpongycastleCryptoCipherKeyGenerator

#pragma mark Public

- (instancetype)init;

+ (void)checkKeyWithByteArray:(IOSByteArray *)key;

+ (void)clampWithByteArray:(IOSByteArray *)key;

- (IOSByteArray *)generateKey;

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator)

FOUNDATION_EXPORT void OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator_init(OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator *new_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator *create_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator_clampWithByteArray_(IOSByteArray *key);

FOUNDATION_EXPORT void OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator_checkKeyWithByteArray_(IOSByteArray *key);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsPoly1305KeyGenerator")
