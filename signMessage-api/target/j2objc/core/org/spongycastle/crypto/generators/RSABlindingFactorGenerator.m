//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/RSABlindingFactorGenerator.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/generators/RSABlindingFactorGenerator.h"
#include "org/spongycastle/crypto/params/ParametersWithRandom.h"
#include "org/spongycastle/crypto/params/RSAKeyParameters.h"
#include "org/spongycastle/crypto/params/RSAPrivateCrtKeyParameters.h"

@interface OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator () {
 @public
  OrgSpongycastleCryptoParamsRSAKeyParameters *key_;
  JavaSecuritySecureRandom *random_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator, key_, OrgSpongycastleCryptoParamsRSAKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator, random_, JavaSecuritySecureRandom *)

inline JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_get_ZERO(void);
inline JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_set_ZERO(JavaMathBigInteger *value);
static JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ZERO;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator, ZERO, JavaMathBigInteger *)

inline JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_get_ONE(void);
inline JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_set_ONE(JavaMathBigInteger *value);
static JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ONE;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator, ONE, JavaMathBigInteger *)

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator)

@implementation OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param {
  if ([param isKindOfClass:[OrgSpongycastleCryptoParamsParametersWithRandom class]]) {
    OrgSpongycastleCryptoParamsParametersWithRandom *rParam = (OrgSpongycastleCryptoParamsParametersWithRandom *) param;
    key_ = (OrgSpongycastleCryptoParamsRSAKeyParameters *) cast_chk([((OrgSpongycastleCryptoParamsParametersWithRandom *) nil_chk(rParam)) getParameters], [OrgSpongycastleCryptoParamsRSAKeyParameters class]);
    random_ = [rParam getRandom];
  }
  else {
    key_ = (OrgSpongycastleCryptoParamsRSAKeyParameters *) cast_chk(param, [OrgSpongycastleCryptoParamsRSAKeyParameters class]);
    random_ = new_JavaSecuritySecureRandom_init();
  }
  if ([key_ isKindOfClass:[OrgSpongycastleCryptoParamsRSAPrivateCrtKeyParameters class]]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"generator requires RSA public key");
  }
}

- (JavaMathBigInteger *)generateBlindingFactor {
  if (key_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"generator not initialised");
  }
  JavaMathBigInteger *m = [key_ getModulus];
  jint length = [((JavaMathBigInteger *) nil_chk(m)) bitLength] - 1;
  JavaMathBigInteger *factor;
  JavaMathBigInteger *gcd;
  do {
    factor = new_JavaMathBigInteger_initWithInt_withJavaUtilRandom_(length, random_);
    gcd = [factor gcdWithJavaMathBigInteger:m];
  }
  while ([factor isEqual:OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ZERO] || [factor isEqual:OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ONE] || ![((JavaMathBigInteger *) nil_chk(gcd)) isEqual:OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ONE]);
  return factor;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(generateBlindingFactor);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0xa, -1, 2, -1, -1 },
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0xa, -1, 3, -1, -1 },
    { "key_", "LOrgSpongycastleCryptoParamsRSAKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoCipherParameters;", &OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ZERO, &OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ONE };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator = { "RSABlindingFactorGenerator", "org.spongycastle.crypto.generators", ptrTable, methods, fields, 7, 0x1, 3, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator class]) {
    OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ZERO = JavaMathBigInteger_valueOfWithLong_(0);
    OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_ONE = JavaMathBigInteger_valueOfWithLong_(1);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator)
  }
}

@end

void OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_init(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator *new_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator, init)
}

OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator *create_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator)
