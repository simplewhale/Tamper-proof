//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/DSAParametersGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator")
#ifdef RESTRICT_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator

#if !defined (OrgSpongycastleCryptoGeneratorsDSAParametersGenerator_) && (INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator || defined(INCLUDE_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator))
#define OrgSpongycastleCryptoGeneratorsDSAParametersGenerator_

@class JavaSecuritySecureRandom;
@class OrgSpongycastleCryptoParamsDSAParameterGenerationParameters;
@class OrgSpongycastleCryptoParamsDSAParameters;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastleCryptoGeneratorsDSAParametersGenerator : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest;

- (OrgSpongycastleCryptoParamsDSAParameters *)generateParameters;

- (void)init__WithOrgSpongycastleCryptoParamsDSAParameterGenerationParameters:(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters *)params OBJC_METHOD_FAMILY_NONE;

- (void)init__WithInt:(jint)size
              withInt:(jint)certainty
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoGeneratorsDSAParametersGenerator)

FOUNDATION_EXPORT void OrgSpongycastleCryptoGeneratorsDSAParametersGenerator_init(OrgSpongycastleCryptoGeneratorsDSAParametersGenerator *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsDSAParametersGenerator *new_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsDSAParametersGenerator *create_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoGeneratorsDSAParametersGenerator_initWithOrgSpongycastleCryptoDigest_(OrgSpongycastleCryptoGeneratorsDSAParametersGenerator *self, id<OrgSpongycastleCryptoDigest> digest);

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsDSAParametersGenerator *new_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator_initWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsDSAParametersGenerator *create_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator_initWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoGeneratorsDSAParametersGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsDSAParametersGenerator")
