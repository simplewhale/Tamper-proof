//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/DHBasicKeyPairGenerator.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/crypto/generators/DHBasicKeyPairGenerator.h"
#include "org/spongycastle/crypto/generators/DHKeyGeneratorHelper.h"
#include "org/spongycastle/crypto/params/DHKeyGenerationParameters.h"
#include "org/spongycastle/crypto/params/DHParameters.h"
#include "org/spongycastle/crypto/params/DHPrivateKeyParameters.h"
#include "org/spongycastle/crypto/params/DHPublicKeyParameters.h"

@interface OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator () {
 @public
  OrgSpongycastleCryptoParamsDHKeyGenerationParameters *param_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator, param_, OrgSpongycastleCryptoParamsDHKeyGenerationParameters *)

@implementation OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param {
  self->param_ = (OrgSpongycastleCryptoParamsDHKeyGenerationParameters *) cast_chk(param, [OrgSpongycastleCryptoParamsDHKeyGenerationParameters class]);
}

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair {
  OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *helper = JreLoadStatic(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper, INSTANCE);
  OrgSpongycastleCryptoParamsDHParameters *dhp = [((OrgSpongycastleCryptoParamsDHKeyGenerationParameters *) nil_chk(param_)) getParameters];
  JavaMathBigInteger *x = [((OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *) nil_chk(helper)) calculatePrivateWithOrgSpongycastleCryptoParamsDHParameters:dhp withJavaSecuritySecureRandom:[((OrgSpongycastleCryptoParamsDHKeyGenerationParameters *) nil_chk(param_)) getRandom]];
  JavaMathBigInteger *y = [helper calculatePublicWithOrgSpongycastleCryptoParamsDHParameters:dhp withJavaMathBigInteger:x];
  return new_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(new_OrgSpongycastleCryptoParamsDHPublicKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsDHParameters_(y, dhp), new_OrgSpongycastleCryptoParamsDHPrivateKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsDHParameters_(x, dhp));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoKeyGenerationParameters:);
  methods[2].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "param_", "LOrgSpongycastleCryptoParamsDHKeyGenerationParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoKeyGenerationParameters;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator = { "DHBasicKeyPairGenerator", "org.spongycastle.crypto.generators", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator;
}

@end

void OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator_init(OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator *new_OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator, init)
}

OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator *create_OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoGeneratorsDHBasicKeyPairGenerator)
