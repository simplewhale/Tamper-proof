//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/EphemeralKeyPairGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator")
#ifdef RESTRICT_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator

#if !defined (OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator_) && (INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator || defined(INCLUDE_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator))
#define OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator_

@class OrgSpongycastleCryptoEphemeralKeyPair;
@protocol OrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator;
@protocol OrgSpongycastleCryptoKeyEncoder;

@interface OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator : NSObject

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator:(id<OrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator>)gen
                                          withOrgSpongycastleCryptoKeyEncoder:(id<OrgSpongycastleCryptoKeyEncoder>)keyEncoder;

- (OrgSpongycastleCryptoEphemeralKeyPair *)generate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator)

FOUNDATION_EXPORT void OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator_initWithOrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator_withOrgSpongycastleCryptoKeyEncoder_(OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator *self, id<OrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator> gen, id<OrgSpongycastleCryptoKeyEncoder> keyEncoder);

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator *new_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator_initWithOrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator_withOrgSpongycastleCryptoKeyEncoder_(id<OrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator> gen, id<OrgSpongycastleCryptoKeyEncoder> keyEncoder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator *create_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator_initWithOrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator_withOrgSpongycastleCryptoKeyEncoder_(id<OrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator> gen, id<OrgSpongycastleCryptoKeyEncoder> keyEncoder);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator")
