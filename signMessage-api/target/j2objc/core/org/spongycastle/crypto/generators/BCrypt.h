//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/BCrypt.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsBCrypt")
#ifdef RESTRICT_OrgSpongycastleCryptoGeneratorsBCrypt
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsBCrypt 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsBCrypt 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoGeneratorsBCrypt

#if !defined (OrgSpongycastleCryptoGeneratorsBCrypt_) && (INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsBCrypt || defined(INCLUDE_OrgSpongycastleCryptoGeneratorsBCrypt))
#define OrgSpongycastleCryptoGeneratorsBCrypt_

@class IOSByteArray;

@interface OrgSpongycastleCryptoGeneratorsBCrypt : NSObject

#pragma mark Public

+ (IOSByteArray *)generateWithByteArray:(IOSByteArray *)password
                          withByteArray:(IOSByteArray *)salt
                                withInt:(jint)cost;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoGeneratorsBCrypt)

inline jint OrgSpongycastleCryptoGeneratorsBCrypt_get_MAGIC_STRING_LENGTH(void);
#define OrgSpongycastleCryptoGeneratorsBCrypt_MAGIC_STRING_LENGTH 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoGeneratorsBCrypt, MAGIC_STRING_LENGTH, jint)

inline jint OrgSpongycastleCryptoGeneratorsBCrypt_get_SALT_SIZE_BYTES(void);
#define OrgSpongycastleCryptoGeneratorsBCrypt_SALT_SIZE_BYTES 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoGeneratorsBCrypt, SALT_SIZE_BYTES, jint)

inline jint OrgSpongycastleCryptoGeneratorsBCrypt_get_MIN_COST(void);
#define OrgSpongycastleCryptoGeneratorsBCrypt_MIN_COST 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoGeneratorsBCrypt, MIN_COST, jint)

inline jint OrgSpongycastleCryptoGeneratorsBCrypt_get_MAX_COST(void);
#define OrgSpongycastleCryptoGeneratorsBCrypt_MAX_COST 31
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoGeneratorsBCrypt, MAX_COST, jint)

inline jint OrgSpongycastleCryptoGeneratorsBCrypt_get_MAX_PASSWORD_BYTES(void);
#define OrgSpongycastleCryptoGeneratorsBCrypt_MAX_PASSWORD_BYTES 72
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoGeneratorsBCrypt, MAX_PASSWORD_BYTES, jint)

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoGeneratorsBCrypt_generateWithByteArray_withByteArray_withInt_(IOSByteArray *password, IOSByteArray *salt, jint cost);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoGeneratorsBCrypt)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsBCrypt")
