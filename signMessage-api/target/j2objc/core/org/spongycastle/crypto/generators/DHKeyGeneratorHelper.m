//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/DHKeyGeneratorHelper.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/generators/DHKeyGeneratorHelper.h"
#include "org/spongycastle/crypto/params/DHParameters.h"
#include "org/spongycastle/math/ec/WNafUtil.h"
#include "org/spongycastle/util/BigIntegers.h"

@interface OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper ()

- (instancetype)init;

@end

inline JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_get_ONE(void);
static JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper, ONE, JavaMathBigInteger *)

inline JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_get_TWO(void);
static JavaMathBigInteger *OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_TWO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper, TWO, JavaMathBigInteger *)

__attribute__((unused)) static void OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_init(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *self);

__attribute__((unused)) static OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *new_OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *create_OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_init(void);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper)

OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_INSTANCE;

@implementation OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaMathBigInteger *)calculatePrivateWithOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)dhParams
                                                       withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  jint limit = [((OrgSpongycastleCryptoParamsDHParameters *) nil_chk(dhParams)) getL];
  if (limit != 0) {
    jint minWeight = JreURShift32(limit, 2);
    for (; ; ) {
      JavaMathBigInteger *x = [new_JavaMathBigInteger_initWithInt_withJavaUtilRandom_(limit, random) setBitWithInt:limit - 1];
      if (OrgSpongycastleMathEcWNafUtil_getNafWeightWithJavaMathBigInteger_(x) >= minWeight) {
        return x;
      }
    }
  }
  JavaMathBigInteger *min = OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_TWO;
  jint m = [dhParams getM];
  if (m != 0) {
    min = [((JavaMathBigInteger *) nil_chk(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_ONE)) shiftLeftWithInt:m - 1];
  }
  JavaMathBigInteger *q = [dhParams getQ];
  if (q == nil) {
    q = [dhParams getP];
  }
  JavaMathBigInteger *max = [((JavaMathBigInteger *) nil_chk(q)) subtractWithJavaMathBigInteger:OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_TWO];
  jint minWeight = JreURShift32([((JavaMathBigInteger *) nil_chk(max)) bitLength], 2);
  for (; ; ) {
    JavaMathBigInteger *x = OrgSpongycastleUtilBigIntegers_createRandomInRangeWithJavaMathBigInteger_withJavaMathBigInteger_withJavaSecuritySecureRandom_(min, max, random);
    if (OrgSpongycastleMathEcWNafUtil_getNafWeightWithJavaMathBigInteger_(x) >= minWeight) {
      return x;
    }
  }
}

- (JavaMathBigInteger *)calculatePublicWithOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)dhParams
                                                            withJavaMathBigInteger:(JavaMathBigInteger *)x {
  return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleCryptoParamsDHParameters *) nil_chk(dhParams)) getG])) modPowWithJavaMathBigInteger:x withJavaMathBigInteger:[dhParams getP]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x0, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(calculatePrivateWithOrgSpongycastleCryptoParamsDHParameters:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(calculatePublicWithOrgSpongycastleCryptoParamsDHParameters:withJavaMathBigInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper;", .constantValue.asLong = 0, 0x18, -1, 4, -1, -1 },
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "TWO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "calculatePrivate", "LOrgSpongycastleCryptoParamsDHParameters;LJavaSecuritySecureRandom;", "calculatePublic", "LOrgSpongycastleCryptoParamsDHParameters;LJavaMathBigInteger;", &OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_INSTANCE, &OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_ONE, &OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_TWO };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper = { "DHKeyGeneratorHelper", "org.spongycastle.crypto.generators", ptrTable, methods, fields, 7, 0x0, 3, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper class]) {
    OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_INSTANCE = new_OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_init();
    OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_ONE = JavaMathBigInteger_valueOfWithLong_(1);
    OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_TWO = JavaMathBigInteger_valueOfWithLong_(2);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper)
  }
}

@end

void OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_init(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *new_OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper, init)
}

OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *create_OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper)
