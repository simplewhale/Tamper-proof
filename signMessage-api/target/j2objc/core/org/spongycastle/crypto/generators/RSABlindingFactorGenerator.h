//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/RSABlindingFactorGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator")
#ifdef RESTRICT_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator

#if !defined (OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_) && (INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator || defined(INCLUDE_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator))
#define OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_

@class JavaMathBigInteger;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator : NSObject

#pragma mark Public

- (instancetype)init;

- (JavaMathBigInteger *)generateBlindingFactor;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator)

FOUNDATION_EXPORT void OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_init(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator *new_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator *create_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSABlindingFactorGenerator")
