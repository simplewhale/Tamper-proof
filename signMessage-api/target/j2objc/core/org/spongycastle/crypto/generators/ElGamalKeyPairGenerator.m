//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/ElGamalKeyPairGenerator.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/crypto/generators/DHKeyGeneratorHelper.h"
#include "org/spongycastle/crypto/generators/ElGamalKeyPairGenerator.h"
#include "org/spongycastle/crypto/params/DHParameters.h"
#include "org/spongycastle/crypto/params/ElGamalKeyGenerationParameters.h"
#include "org/spongycastle/crypto/params/ElGamalParameters.h"
#include "org/spongycastle/crypto/params/ElGamalPrivateKeyParameters.h"
#include "org/spongycastle/crypto/params/ElGamalPublicKeyParameters.h"

@interface OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator () {
 @public
  OrgSpongycastleCryptoParamsElGamalKeyGenerationParameters *param_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator, param_, OrgSpongycastleCryptoParamsElGamalKeyGenerationParameters *)

@implementation OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param {
  self->param_ = (OrgSpongycastleCryptoParamsElGamalKeyGenerationParameters *) cast_chk(param, [OrgSpongycastleCryptoParamsElGamalKeyGenerationParameters class]);
}

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair {
  OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *helper = JreLoadStatic(OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper, INSTANCE);
  OrgSpongycastleCryptoParamsElGamalParameters *egp = [((OrgSpongycastleCryptoParamsElGamalKeyGenerationParameters *) nil_chk(param_)) getParameters];
  OrgSpongycastleCryptoParamsDHParameters *dhp = new_OrgSpongycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_([((OrgSpongycastleCryptoParamsElGamalParameters *) nil_chk(egp)) getP], [egp getG], nil, [egp getL]);
  JavaMathBigInteger *x = [((OrgSpongycastleCryptoGeneratorsDHKeyGeneratorHelper *) nil_chk(helper)) calculatePrivateWithOrgSpongycastleCryptoParamsDHParameters:dhp withJavaSecuritySecureRandom:[((OrgSpongycastleCryptoParamsElGamalKeyGenerationParameters *) nil_chk(param_)) getRandom]];
  JavaMathBigInteger *y = [helper calculatePublicWithOrgSpongycastleCryptoParamsDHParameters:dhp withJavaMathBigInteger:x];
  return new_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(new_OrgSpongycastleCryptoParamsElGamalPublicKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsElGamalParameters_(y, egp), new_OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsElGamalParameters_(x, egp));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoKeyGenerationParameters:);
  methods[2].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "param_", "LOrgSpongycastleCryptoParamsElGamalKeyGenerationParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoKeyGenerationParameters;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator = { "ElGamalKeyPairGenerator", "org.spongycastle.crypto.generators", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator;
}

@end

void OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator_init(OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator *new_OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator, init)
}

OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator *create_OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoGeneratorsElGamalKeyPairGenerator)
