//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/DESKeyGenerator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/CipherKeyGenerator.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/crypto/generators/DESKeyGenerator.h"
#include "org/spongycastle/crypto/params/DESParameters.h"

@implementation OrgSpongycastleCryptoGeneratorsDESKeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoGeneratorsDESKeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param {
  [super init__WithOrgSpongycastleCryptoKeyGenerationParameters:param];
  if (strength_ == 0 || strength_ == (56 / 8)) {
    strength_ = OrgSpongycastleCryptoParamsDESParameters_DES_KEY_LENGTH;
  }
  else if (strength_ != OrgSpongycastleCryptoParamsDESParameters_DES_KEY_LENGTH) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"DES key must be ", (OrgSpongycastleCryptoParamsDESParameters_DES_KEY_LENGTH * 8), @" bits long."));
  }
}

- (IOSByteArray *)generateKey {
  IOSByteArray *newKey = [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoParamsDESParameters_DES_KEY_LENGTH];
  do {
    [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:newKey];
    OrgSpongycastleCryptoParamsDESParameters_setOddParityWithByteArray_(newKey);
  }
  while (OrgSpongycastleCryptoParamsDESParameters_isWeakKeyWithByteArray_withInt_(newKey, 0));
  return newKey;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoKeyGenerationParameters:);
  methods[2].selector = @selector(generateKey);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoKeyGenerationParameters;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoGeneratorsDESKeyGenerator = { "DESKeyGenerator", "org.spongycastle.crypto.generators", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoGeneratorsDESKeyGenerator;
}

@end

void OrgSpongycastleCryptoGeneratorsDESKeyGenerator_init(OrgSpongycastleCryptoGeneratorsDESKeyGenerator *self) {
  OrgSpongycastleCryptoCipherKeyGenerator_init(self);
}

OrgSpongycastleCryptoGeneratorsDESKeyGenerator *new_OrgSpongycastleCryptoGeneratorsDESKeyGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoGeneratorsDESKeyGenerator, init)
}

OrgSpongycastleCryptoGeneratorsDESKeyGenerator *create_OrgSpongycastleCryptoGeneratorsDESKeyGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoGeneratorsDESKeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoGeneratorsDESKeyGenerator)
