//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/generators/RSAKeyPairGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator")
#ifdef RESTRICT_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator

#if !defined (OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator_) && (INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator || defined(INCLUDE_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator))
#define OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator_

#define RESTRICT_OrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator 1
#define INCLUDE_OrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator 1
#include "org/spongycastle/crypto/AsymmetricCipherKeyPairGenerator.h"

@class JavaMathBigInteger;
@class OrgSpongycastleCryptoAsymmetricCipherKeyPair;
@class OrgSpongycastleCryptoKeyGenerationParameters;

@interface OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator : NSObject < OrgSpongycastleCryptoAsymmetricCipherKeyPairGenerator >

#pragma mark Public

- (instancetype)init;

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair;

- (void)init__WithOrgSpongycastleCryptoKeyGenerationParameters:(OrgSpongycastleCryptoKeyGenerationParameters *)param OBJC_METHOD_FAMILY_NONE;

#pragma mark Protected

- (JavaMathBigInteger *)chooseRandomPrimeWithInt:(jint)bitlength
                          withJavaMathBigInteger:(JavaMathBigInteger *)e
                          withJavaMathBigInteger:(JavaMathBigInteger *)sqrdBound;

- (jboolean)isProbablePrimeWithJavaMathBigInteger:(JavaMathBigInteger *)x;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator)

FOUNDATION_EXPORT void OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator_init(OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator *new_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator *create_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoGeneratorsRSAKeyPairGenerator")
