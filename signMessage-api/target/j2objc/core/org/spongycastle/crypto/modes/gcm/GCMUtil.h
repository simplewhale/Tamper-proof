//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/modes/gcm/GCMUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoModesGcmGCMUtil")
#ifdef RESTRICT_OrgSpongycastleCryptoModesGcmGCMUtil
#define INCLUDE_ALL_OrgSpongycastleCryptoModesGcmGCMUtil 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoModesGcmGCMUtil 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoModesGcmGCMUtil

#if !defined (OrgSpongycastleCryptoModesGcmGCMUtil_) && (INCLUDE_ALL_OrgSpongycastleCryptoModesGcmGCMUtil || defined(INCLUDE_OrgSpongycastleCryptoModesGcmGCMUtil))
#define OrgSpongycastleCryptoModesGcmGCMUtil_

@class IOSByteArray;
@class IOSIntArray;
@class IOSLongArray;

@interface OrgSpongycastleCryptoModesGcmGCMUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSByteArray *)asBytesWithIntArray:(IOSIntArray *)x;

+ (void)asBytesWithIntArray:(IOSIntArray *)x
              withByteArray:(IOSByteArray *)z;

+ (IOSByteArray *)asBytesWithLongArray:(IOSLongArray *)x;

+ (void)asBytesWithLongArray:(IOSLongArray *)x
               withByteArray:(IOSByteArray *)z;

+ (IOSIntArray *)asIntsWithByteArray:(IOSByteArray *)x;

+ (void)asIntsWithByteArray:(IOSByteArray *)x
               withIntArray:(IOSIntArray *)z;

+ (IOSLongArray *)asLongsWithByteArray:(IOSByteArray *)x;

+ (void)asLongsWithByteArray:(IOSByteArray *)x
               withLongArray:(IOSLongArray *)z;

+ (void)multiplyWithByteArray:(IOSByteArray *)x
                withByteArray:(IOSByteArray *)y;

+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y;

+ (void)multiplyWithLongArray:(IOSLongArray *)x
                withLongArray:(IOSLongArray *)y;

+ (void)multiplyPWithIntArray:(IOSIntArray *)x;

+ (void)multiplyPWithIntArray:(IOSIntArray *)x
                 withIntArray:(IOSIntArray *)z;

+ (void)multiplyP8WithIntArray:(IOSIntArray *)x;

+ (void)multiplyP8WithIntArray:(IOSIntArray *)x
                  withIntArray:(IOSIntArray *)y;

+ (IOSByteArray *)oneAsBytes;

+ (IOSIntArray *)oneAsInts;

+ (IOSLongArray *)oneAsLongs;

+ (void)xor__WithByteArray:(IOSByteArray *)x
             withByteArray:(IOSByteArray *)y;

+ (void)xor__WithByteArray:(IOSByteArray *)x
             withByteArray:(IOSByteArray *)y
             withByteArray:(IOSByteArray *)z;

+ (void)xor__WithByteArray:(IOSByteArray *)x
             withByteArray:(IOSByteArray *)y
                   withInt:(jint)yOff
                   withInt:(jint)yLen;

+ (void)xor__WithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)y;

+ (void)xor__WithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)y
             withIntArray:(IOSIntArray *)z;

+ (void)xor__WithLongArray:(IOSLongArray *)x
             withLongArray:(IOSLongArray *)y;

+ (void)xor__WithLongArray:(IOSLongArray *)x
             withLongArray:(IOSLongArray *)y
             withLongArray:(IOSLongArray *)z;

#pragma mark Package-Private

+ (jint)shiftRightWithIntArray:(IOSIntArray *)x;

+ (jint)shiftRightWithIntArray:(IOSIntArray *)x
                  withIntArray:(IOSIntArray *)z;

+ (jlong)shiftRightWithLongArray:(IOSLongArray *)x;

+ (jlong)shiftRightWithLongArray:(IOSLongArray *)x
                   withLongArray:(IOSLongArray *)z;

+ (jint)shiftRightNWithIntArray:(IOSIntArray *)x
                        withInt:(jint)n;

+ (jint)shiftRightNWithIntArray:(IOSIntArray *)x
                        withInt:(jint)n
                   withIntArray:(IOSIntArray *)z;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoModesGcmGCMUtil)

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_init(OrgSpongycastleCryptoModesGcmGCMUtil *self);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoModesGcmGCMUtil_oneAsBytes(void);

FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoModesGcmGCMUtil_oneAsInts(void);

FOUNDATION_EXPORT IOSLongArray *OrgSpongycastleCryptoModesGcmGCMUtil_oneAsLongs(void);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoModesGcmGCMUtil_asBytesWithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_asBytesWithIntArray_withByteArray_(IOSIntArray *x, IOSByteArray *z);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoModesGcmGCMUtil_asBytesWithLongArray_(IOSLongArray *x);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_asBytesWithLongArray_withByteArray_(IOSLongArray *x, IOSByteArray *z);

FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoModesGcmGCMUtil_asIntsWithByteArray_(IOSByteArray *x);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_asIntsWithByteArray_withIntArray_(IOSByteArray *x, IOSIntArray *z);

FOUNDATION_EXPORT IOSLongArray *OrgSpongycastleCryptoModesGcmGCMUtil_asLongsWithByteArray_(IOSByteArray *x);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_asLongsWithByteArray_withLongArray_(IOSByteArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_multiplyWithByteArray_withByteArray_(IOSByteArray *x, IOSByteArray *y);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_multiplyWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_multiplyWithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *y);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_multiplyPWithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_multiplyPWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_multiplyP8WithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_multiplyP8WithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y);

FOUNDATION_EXPORT jint OrgSpongycastleCryptoModesGcmGCMUtil_shiftRightWithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT jint OrgSpongycastleCryptoModesGcmGCMUtil_shiftRightWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jlong OrgSpongycastleCryptoModesGcmGCMUtil_shiftRightWithLongArray_(IOSLongArray *x);

FOUNDATION_EXPORT jlong OrgSpongycastleCryptoModesGcmGCMUtil_shiftRightWithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleCryptoModesGcmGCMUtil_shiftRightNWithIntArray_withInt_(IOSIntArray *x, jint n);

FOUNDATION_EXPORT jint OrgSpongycastleCryptoModesGcmGCMUtil_shiftRightNWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withByteArray_(IOSByteArray *x, IOSByteArray *y);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withByteArray_withInt_withInt_(IOSByteArray *x, IOSByteArray *y, jint yOff, jint yLen);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withByteArray_withByteArray_(IOSByteArray *x, IOSByteArray *y, IOSByteArray *z);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_xor__WithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_xor__WithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_xor__WithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *y);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGcmGCMUtil_xor__WithLongArray_withLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *y, IOSLongArray *z);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoModesGcmGCMUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoModesGcmGCMUtil")
