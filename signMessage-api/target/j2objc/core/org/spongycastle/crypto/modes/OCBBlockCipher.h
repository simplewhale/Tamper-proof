//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/modes/OCBBlockCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoModesOCBBlockCipher")
#ifdef RESTRICT_OrgSpongycastleCryptoModesOCBBlockCipher
#define INCLUDE_ALL_OrgSpongycastleCryptoModesOCBBlockCipher 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoModesOCBBlockCipher 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoModesOCBBlockCipher

#if !defined (OrgSpongycastleCryptoModesOCBBlockCipher_) && (INCLUDE_ALL_OrgSpongycastleCryptoModesOCBBlockCipher || defined(INCLUDE_OrgSpongycastleCryptoModesOCBBlockCipher))
#define OrgSpongycastleCryptoModesOCBBlockCipher_

#define RESTRICT_OrgSpongycastleCryptoModesAEADBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoModesAEADBlockCipher 1
#include "org/spongycastle/crypto/modes/AEADBlockCipher.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoModesOCBBlockCipher : NSObject < OrgSpongycastleCryptoModesAEADBlockCipher >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)hashCipher
                    withOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)mainCipher;

- (jint)doFinalWithByteArray:(IOSByteArray *)output
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (IOSByteArray *)getMac;

- (jint)getOutputSizeWithInt:(jint)len;

- (id<OrgSpongycastleCryptoBlockCipher>)getUnderlyingCipher;

- (jint)getUpdateOutputSizeWithInt:(jint)len;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)parameters OBJC_METHOD_FAMILY_NONE;

- (void)processAADByteWithByte:(jbyte)input;

- (void)processAADBytesWithByteArray:(IOSByteArray *)input
                             withInt:(jint)off
                             withInt:(jint)len;

- (jint)processByteWithByte:(jbyte)input
              withByteArray:(IOSByteArray *)output
                    withInt:(jint)outOff;

- (jint)processBytesWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)output
                          withInt:(jint)outOff;

- (void)reset;

#pragma mark Protected

- (void)clearWithByteArray:(IOSByteArray *)bs;

- (IOSByteArray *)getLSubWithInt:(jint)n;

+ (IOSByteArray *)OCB_doubleWithByteArray:(IOSByteArray *)block;

+ (void)OCB_extendWithByteArray:(IOSByteArray *)block
                        withInt:(jint)pos;

+ (jint)OCB_ntzWithLong:(jlong)x;

- (void)processHashBlock;

- (void)processMainBlockWithByteArray:(IOSByteArray *)output
                              withInt:(jint)outOff;

- (jint)processNonceWithByteArray:(IOSByteArray *)N;

- (void)resetWithBoolean:(jboolean)clearMac;

+ (jint)shiftLeftWithByteArray:(IOSByteArray *)block
                 withByteArray:(IOSByteArray *)output;

- (void)updateHASHWithByteArray:(IOSByteArray *)LSub;

+ (void)xor__WithByteArray:(IOSByteArray *)block
             withByteArray:(IOSByteArray *)val;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoModesOCBBlockCipher)

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesOCBBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoModesOCBBlockCipher *self, id<OrgSpongycastleCryptoBlockCipher> hashCipher, id<OrgSpongycastleCryptoBlockCipher> mainCipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoModesOCBBlockCipher *new_OrgSpongycastleCryptoModesOCBBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> hashCipher, id<OrgSpongycastleCryptoBlockCipher> mainCipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoModesOCBBlockCipher *create_OrgSpongycastleCryptoModesOCBBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> hashCipher, id<OrgSpongycastleCryptoBlockCipher> mainCipher);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoModesOCBBlockCipher_OCB_doubleWithByteArray_(IOSByteArray *block);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesOCBBlockCipher_OCB_extendWithByteArray_withInt_(IOSByteArray *block, jint pos);

FOUNDATION_EXPORT jint OrgSpongycastleCryptoModesOCBBlockCipher_OCB_ntzWithLong_(jlong x);

FOUNDATION_EXPORT jint OrgSpongycastleCryptoModesOCBBlockCipher_shiftLeftWithByteArray_withByteArray_(IOSByteArray *block, IOSByteArray *output);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesOCBBlockCipher_xor__WithByteArray_withByteArray_(IOSByteArray *block, IOSByteArray *val);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoModesOCBBlockCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoModesOCBBlockCipher")
