//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/modes/gcm/BasicGCMMultiplier.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/modes/gcm/BasicGCMMultiplier.h"
#include "org/spongycastle/crypto/modes/gcm/GCMUtil.h"

@interface OrgSpongycastleCryptoModesGcmBasicGCMMultiplier () {
 @public
  IOSIntArray *H_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoModesGcmBasicGCMMultiplier, H_, IOSIntArray *)

@implementation OrgSpongycastleCryptoModesGcmBasicGCMMultiplier

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoModesGcmBasicGCMMultiplier_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithByteArray:(IOSByteArray *)H {
  self->H_ = OrgSpongycastleCryptoModesGcmGCMUtil_asIntsWithByteArray_(H);
}

- (void)multiplyHWithByteArray:(IOSByteArray *)x {
  IOSIntArray *t = OrgSpongycastleCryptoModesGcmGCMUtil_asIntsWithByteArray_(x);
  OrgSpongycastleCryptoModesGcmGCMUtil_multiplyWithIntArray_withIntArray_(t, H_);
  OrgSpongycastleCryptoModesGcmGCMUtil_asBytesWithIntArray_withByteArray_(t, x);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithByteArray:);
  methods[2].selector = @selector(multiplyHWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "H_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "[B", "multiplyH" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoModesGcmBasicGCMMultiplier = { "BasicGCMMultiplier", "org.spongycastle.crypto.modes.gcm", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoModesGcmBasicGCMMultiplier;
}

@end

void OrgSpongycastleCryptoModesGcmBasicGCMMultiplier_init(OrgSpongycastleCryptoModesGcmBasicGCMMultiplier *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoModesGcmBasicGCMMultiplier *new_OrgSpongycastleCryptoModesGcmBasicGCMMultiplier_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoModesGcmBasicGCMMultiplier, init)
}

OrgSpongycastleCryptoModesGcmBasicGCMMultiplier *create_OrgSpongycastleCryptoModesGcmBasicGCMMultiplier_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoModesGcmBasicGCMMultiplier, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoModesGcmBasicGCMMultiplier)
