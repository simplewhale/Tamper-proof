//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/modes/GCMBlockCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoModesGCMBlockCipher")
#ifdef RESTRICT_OrgSpongycastleCryptoModesGCMBlockCipher
#define INCLUDE_ALL_OrgSpongycastleCryptoModesGCMBlockCipher 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoModesGCMBlockCipher 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoModesGCMBlockCipher

#if !defined (OrgSpongycastleCryptoModesGCMBlockCipher_) && (INCLUDE_ALL_OrgSpongycastleCryptoModesGCMBlockCipher || defined(INCLUDE_OrgSpongycastleCryptoModesGCMBlockCipher))
#define OrgSpongycastleCryptoModesGCMBlockCipher_

#define RESTRICT_OrgSpongycastleCryptoModesAEADBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoModesAEADBlockCipher 1
#include "org/spongycastle/crypto/modes/AEADBlockCipher.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoModesGcmGCMMultiplier;

@interface OrgSpongycastleCryptoModesGCMBlockCipher : NSObject < OrgSpongycastleCryptoModesAEADBlockCipher >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)c;

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)c
          withOrgSpongycastleCryptoModesGcmGCMMultiplier:(id<OrgSpongycastleCryptoModesGcmGCMMultiplier>)m;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (IOSByteArray *)getMac;

- (jint)getOutputSizeWithInt:(jint)len;

- (id<OrgSpongycastleCryptoBlockCipher>)getUnderlyingCipher;

- (jint)getUpdateOutputSizeWithInt:(jint)len;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (void)processAADByteWithByte:(jbyte)inArg;

- (void)processAADBytesWithByteArray:(IOSByteArray *)inArg
                             withInt:(jint)inOff
                             withInt:(jint)len;

- (jint)processByteWithByte:(jbyte)inArg
              withByteArray:(IOSByteArray *)outArg
                    withInt:(jint)outOff;

- (jint)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoModesGCMBlockCipher)

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGCMBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoModesGCMBlockCipher *self, id<OrgSpongycastleCryptoBlockCipher> c);

FOUNDATION_EXPORT OrgSpongycastleCryptoModesGCMBlockCipher *new_OrgSpongycastleCryptoModesGCMBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoModesGCMBlockCipher *create_OrgSpongycastleCryptoModesGCMBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> c);

FOUNDATION_EXPORT void OrgSpongycastleCryptoModesGCMBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoModesGcmGCMMultiplier_(OrgSpongycastleCryptoModesGCMBlockCipher *self, id<OrgSpongycastleCryptoBlockCipher> c, id<OrgSpongycastleCryptoModesGcmGCMMultiplier> m);

FOUNDATION_EXPORT OrgSpongycastleCryptoModesGCMBlockCipher *new_OrgSpongycastleCryptoModesGCMBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoModesGcmGCMMultiplier_(id<OrgSpongycastleCryptoBlockCipher> c, id<OrgSpongycastleCryptoModesGcmGCMMultiplier> m) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoModesGCMBlockCipher *create_OrgSpongycastleCryptoModesGCMBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoModesGcmGCMMultiplier_(id<OrgSpongycastleCryptoBlockCipher> c, id<OrgSpongycastleCryptoModesGcmGCMMultiplier> m);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoModesGCMBlockCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoModesGCMBlockCipher")
