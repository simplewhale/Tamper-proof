//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/IESEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesIESEngine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesIESEngine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesIESEngine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesIESEngine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesIESEngine

#if !defined (OrgSpongycastleCryptoEnginesIESEngine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesIESEngine || defined(INCLUDE_OrgSpongycastleCryptoEnginesIESEngine))
#define OrgSpongycastleCryptoEnginesIESEngine_

@class IOSByteArray;
@class OrgSpongycastleCryptoBufferedBlockCipher;
@class OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@class OrgSpongycastleCryptoParamsIESParameters;
@protocol OrgSpongycastleCryptoBasicAgreement;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoDerivationFunction;
@protocol OrgSpongycastleCryptoKeyParser;
@protocol OrgSpongycastleCryptoMac;

@interface OrgSpongycastleCryptoEnginesIESEngine : NSObject {
 @public
  id<OrgSpongycastleCryptoBasicAgreement> agree_;
  id<OrgSpongycastleCryptoDerivationFunction> kdf_;
  id<OrgSpongycastleCryptoMac> mac_;
  OrgSpongycastleCryptoBufferedBlockCipher *cipher_;
  IOSByteArray *macBuf_;
  jboolean forEncryption_;
  id<OrgSpongycastleCryptoCipherParameters> privParam_;
  id<OrgSpongycastleCryptoCipherParameters> pubParam_;
  OrgSpongycastleCryptoParamsIESParameters *param_;
  IOSByteArray *V_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBasicAgreement:(id<OrgSpongycastleCryptoBasicAgreement>)agree
                withOrgSpongycastleCryptoDerivationFunction:(id<OrgSpongycastleCryptoDerivationFunction>)kdf
                               withOrgSpongycastleCryptoMac:(id<OrgSpongycastleCryptoMac>)mac;

- (instancetype)initWithOrgSpongycastleCryptoBasicAgreement:(id<OrgSpongycastleCryptoBasicAgreement>)agree
                withOrgSpongycastleCryptoDerivationFunction:(id<OrgSpongycastleCryptoDerivationFunction>)kdf
                               withOrgSpongycastleCryptoMac:(id<OrgSpongycastleCryptoMac>)mac
               withOrgSpongycastleCryptoBufferedBlockCipher:(OrgSpongycastleCryptoBufferedBlockCipher *)cipher;

- (OrgSpongycastleCryptoBufferedBlockCipher *)getCipher;

- (id<OrgSpongycastleCryptoMac>)getMac;

- (void)init__WithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                          withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params
       withOrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator:(OrgSpongycastleCryptoGeneratorsEphemeralKeyPairGenerator *)ephemeralKeyPairGenerator OBJC_METHOD_FAMILY_NONE;

- (void)init__WithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey
                          withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params
                                 withOrgSpongycastleCryptoKeyParser:(id<OrgSpongycastleCryptoKeyParser>)publicKeyParser OBJC_METHOD_FAMILY_NONE;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)privParam
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)pubParam
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)inLen;

#pragma mark Protected

- (IOSByteArray *)getLengthTagWithByteArray:(IOSByteArray *)p2;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEnginesIESEngine)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, agree_, id<OrgSpongycastleCryptoBasicAgreement>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, kdf_, id<OrgSpongycastleCryptoDerivationFunction>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, mac_, id<OrgSpongycastleCryptoMac>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, cipher_, OrgSpongycastleCryptoBufferedBlockCipher *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, macBuf_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, privParam_, id<OrgSpongycastleCryptoCipherParameters>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, pubParam_, id<OrgSpongycastleCryptoCipherParameters>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, param_, OrgSpongycastleCryptoParamsIESParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesIESEngine, V_, IOSByteArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_(OrgSpongycastleCryptoEnginesIESEngine *self, id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesIESEngine *new_OrgSpongycastleCryptoEnginesIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_(id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesIESEngine *create_OrgSpongycastleCryptoEnginesIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_(id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_withOrgSpongycastleCryptoBufferedBlockCipher_(OrgSpongycastleCryptoEnginesIESEngine *self, id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac, OrgSpongycastleCryptoBufferedBlockCipher *cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesIESEngine *new_OrgSpongycastleCryptoEnginesIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_withOrgSpongycastleCryptoBufferedBlockCipher_(id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac, OrgSpongycastleCryptoBufferedBlockCipher *cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesIESEngine *create_OrgSpongycastleCryptoEnginesIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_withOrgSpongycastleCryptoBufferedBlockCipher_(id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac, OrgSpongycastleCryptoBufferedBlockCipher *cipher);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesIESEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesIESEngine")
