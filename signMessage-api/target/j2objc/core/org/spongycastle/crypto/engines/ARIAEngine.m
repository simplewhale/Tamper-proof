//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/ARIAEngine.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/DataLengthException.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/engines/ARIAEngine.h"
#include "org/spongycastle/crypto/params/KeyParameter.h"
#include "org/spongycastle/util/encoders/Hex.h"

@interface OrgSpongycastleCryptoEnginesARIAEngine () {
 @public
  IOSObjectArray *roundKeys_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesARIAEngine, roundKeys_, IOSObjectArray *)

inline IOSObjectArray *OrgSpongycastleCryptoEnginesARIAEngine_get_C(void);
static IOSObjectArray *OrgSpongycastleCryptoEnginesARIAEngine_C;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesARIAEngine, C, IOSObjectArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesARIAEngine_get_SB1_sbox(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesARIAEngine_SB1_sbox;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesARIAEngine, SB1_sbox, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesARIAEngine_get_SB2_sbox(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesARIAEngine_SB2_sbox;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesARIAEngine, SB2_sbox, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesARIAEngine_get_SB3_sbox(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesARIAEngine_SB3_sbox;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesARIAEngine, SB3_sbox, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesARIAEngine_get_SB4_sbox(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesARIAEngine_SB4_sbox;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesARIAEngine, SB4_sbox, IOSByteArray *)

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoEnginesARIAEngine)

@implementation OrgSpongycastleCryptoEnginesARIAEngine

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEnginesARIAEngine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if (!([params isKindOfClass:[OrgSpongycastleCryptoParamsKeyParameter class]])) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid parameter passed to ARIA init - ", [[((id<OrgSpongycastleCryptoCipherParameters>) nil_chk(params)) java_getClass] getName]));
  }
  self->roundKeys_ = OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleWithBoolean_withByteArray_(forEncryption, [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) cast_chk(params, [OrgSpongycastleCryptoParamsKeyParameter class])))) getKey]);
}

- (NSString *)getAlgorithmName {
  return @"ARIA";
}

- (jint)getBlockSize {
  return OrgSpongycastleCryptoEnginesARIAEngine_BLOCK_SIZE;
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  if (roundKeys_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"ARIA engine not initialised");
  }
  if (inOff > (((IOSByteArray *) nil_chk(inArg))->size_ - OrgSpongycastleCryptoEnginesARIAEngine_BLOCK_SIZE)) {
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  if (outOff > (((IOSByteArray *) nil_chk(outArg))->size_ - OrgSpongycastleCryptoEnginesARIAEngine_BLOCK_SIZE)) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  IOSByteArray *z = [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoEnginesARIAEngine_BLOCK_SIZE];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(inArg, inOff, z, 0, OrgSpongycastleCryptoEnginesARIAEngine_BLOCK_SIZE);
  jint i = 0;
  jint rounds = ((IOSObjectArray *) nil_chk(roundKeys_))->size_ - 3;
  while (i < rounds) {
    OrgSpongycastleCryptoEnginesARIAEngine_FOWithByteArray_withByteArray_(z, IOSObjectArray_Get(nil_chk(roundKeys_), i++));
    OrgSpongycastleCryptoEnginesARIAEngine_FEWithByteArray_withByteArray_(z, IOSObjectArray_Get(nil_chk(roundKeys_), i++));
  }
  OrgSpongycastleCryptoEnginesARIAEngine_FOWithByteArray_withByteArray_(z, IOSObjectArray_Get(nil_chk(roundKeys_), i++));
  OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(z, IOSObjectArray_Get(nil_chk(roundKeys_), i++));
  OrgSpongycastleCryptoEnginesARIAEngine_SL2WithByteArray_(z);
  OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(z, IOSObjectArray_Get(nil_chk(roundKeys_), i));
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(z, 0, outArg, outOff, OrgSpongycastleCryptoEnginesARIAEngine_BLOCK_SIZE);
  return OrgSpongycastleCryptoEnginesARIAEngine_BLOCK_SIZE;
}

- (void)reset {
}

+ (void)AWithByteArray:(IOSByteArray *)z {
  OrgSpongycastleCryptoEnginesARIAEngine_AWithByteArray_(z);
}

+ (void)FEWithByteArray:(IOSByteArray *)D
          withByteArray:(IOSByteArray *)RK {
  OrgSpongycastleCryptoEnginesARIAEngine_FEWithByteArray_withByteArray_(D, RK);
}

+ (void)FOWithByteArray:(IOSByteArray *)D
          withByteArray:(IOSByteArray *)RK {
  OrgSpongycastleCryptoEnginesARIAEngine_FOWithByteArray_withByteArray_(D, RK);
}

+ (IOSObjectArray *)keyScheduleWithBoolean:(jboolean)forEncryption
                             withByteArray:(IOSByteArray *)K {
  return OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleWithBoolean_withByteArray_(forEncryption, K);
}

+ (void)keyScheduleRoundWithByteArray:(IOSByteArray *)rk
                        withByteArray:(IOSByteArray *)w
                        withByteArray:(IOSByteArray *)wr
                              withInt:(jint)n {
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(rk, w, wr, n);
}

+ (void)reverseKeysWithByteArray2:(IOSObjectArray *)keys {
  OrgSpongycastleCryptoEnginesARIAEngine_reverseKeysWithByteArray2_(keys);
}

+ (jbyte)SB1WithByte:(jbyte)x {
  return OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(x);
}

+ (jbyte)SB2WithByte:(jbyte)x {
  return OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(x);
}

+ (jbyte)SB3WithByte:(jbyte)x {
  return OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(x);
}

+ (jbyte)SB4WithByte:(jbyte)x {
  return OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(x);
}

+ (void)SL1WithByteArray:(IOSByteArray *)z {
  OrgSpongycastleCryptoEnginesARIAEngine_SL1WithByteArray_(z);
}

+ (void)SL2WithByteArray:(IOSByteArray *)z {
  OrgSpongycastleCryptoEnginesARIAEngine_SL2WithByteArray_(z);
}

+ (void)xor__WithByteArray:(IOSByteArray *)z
             withByteArray:(IOSByteArray *)x {
  OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(z, x);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 10, 9, -1, -1, -1, -1 },
    { NULL, "[[B", 0xc, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 15, 16, -1, -1, -1, -1 },
    { NULL, "B", 0xc, 17, 18, -1, -1, -1, -1 },
    { NULL, "B", 0xc, 19, 18, -1, -1, -1, -1 },
    { NULL, "B", 0xc, 20, 18, -1, -1, -1, -1 },
    { NULL, "B", 0xc, 21, 18, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 22, 7, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 23, 7, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 24, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(getAlgorithmName);
  methods[3].selector = @selector(getBlockSize);
  methods[4].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[5].selector = @selector(reset);
  methods[6].selector = @selector(AWithByteArray:);
  methods[7].selector = @selector(FEWithByteArray:withByteArray:);
  methods[8].selector = @selector(FOWithByteArray:withByteArray:);
  methods[9].selector = @selector(keyScheduleWithBoolean:withByteArray:);
  methods[10].selector = @selector(keyScheduleRoundWithByteArray:withByteArray:withByteArray:withInt:);
  methods[11].selector = @selector(reverseKeysWithByteArray2:);
  methods[12].selector = @selector(SB1WithByte:);
  methods[13].selector = @selector(SB2WithByte:);
  methods[14].selector = @selector(SB3WithByte:);
  methods[15].selector = @selector(SB4WithByte:);
  methods[16].selector = @selector(SL1WithByteArray:);
  methods[17].selector = @selector(SL2WithByteArray:);
  methods[18].selector = @selector(xor__WithByteArray:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "C", "[[B", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "SB1_sbox", "[B", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "SB2_sbox", "[B", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "SB3_sbox", "[B", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "SB4_sbox", "[B", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesARIAEngine_BLOCK_SIZE, 0x1c, -1, -1, -1, -1 },
    { "roundKeys_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "ZLOrgSpongycastleCryptoCipherParameters;", "LJavaLangIllegalArgumentException;", "processBlock", "[BI[BI", "LOrgSpongycastleCryptoDataLengthException;LJavaLangIllegalStateException;", "A", "[B", "FE", "[B[B", "FO", "keySchedule", "Z[B", "keyScheduleRound", "[B[B[BI", "reverseKeys", "[[B", "SB1", "B", "SB2", "SB3", "SB4", "SL1", "SL2", "xor", &OrgSpongycastleCryptoEnginesARIAEngine_C, &OrgSpongycastleCryptoEnginesARIAEngine_SB1_sbox, &OrgSpongycastleCryptoEnginesARIAEngine_SB2_sbox, &OrgSpongycastleCryptoEnginesARIAEngine_SB3_sbox, &OrgSpongycastleCryptoEnginesARIAEngine_SB4_sbox };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesARIAEngine = { "ARIAEngine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 19, 7, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesARIAEngine;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoEnginesARIAEngine class]) {
    OrgSpongycastleCryptoEnginesARIAEngine_C = [IOSObjectArray newArrayWithObjects:(id[]){ OrgSpongycastleUtilEncodersHex_decodeWithNSString_(@"517cc1b727220a94fe13abe8fa9a6ee0"), OrgSpongycastleUtilEncodersHex_decodeWithNSString_(@"6db14acc9e21c820ff28b1d5ef5de2b0"), OrgSpongycastleUtilEncodersHex_decodeWithNSString_(@"db92371d2126e9700324977504e8c90e") } count:3 type:IOSClass_byteArray(1)];
    OrgSpongycastleCryptoEnginesARIAEngine_SB1_sbox = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x63, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x77, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x30, (jbyte) (jint) 0x01, (jbyte) (jint) 0x67, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xd7, (jbyte) (jint) 0xab, (jbyte) (jint) 0x76, (jbyte) (jint) 0xca, (jbyte) (jint) 0x82, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xfa, (jbyte) (jint) 0x59, (jbyte) (jint) 0x47, (jbyte) (jint) 0xf0, (jbyte) (jint) 0xad, (jbyte) (jint) 0xd4, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x72, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x93, (jbyte) (jint) 0x26, (jbyte) (jint) 0x36, (jbyte) (jint) 0x3f, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x34, (jbyte) (jint) 0xa5, (jbyte) (jint) 0xe5, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x71, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x31, (jbyte) (jint) 0x15, (jbyte) (jint) 0x04, (jbyte) (jint) 0xc7, (jbyte) (jint) 0x23, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x18, (jbyte) (jint) 0x96, (jbyte) (jint) 0x05, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x07, (jbyte) (jint) 0x12, (jbyte) (jint) 0x80, (jbyte) (jint) 0xe2, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x27, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x75, (jbyte) (jint) 0x09, (jbyte) (jint) 0x83, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x5a, (jbyte) (jint) 0xa0, (jbyte) (jint) 0x52, (jbyte) (jint) 0x3b, (jbyte) (jint) 0xd6, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x29, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x84, (jbyte) (jint) 0x53, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x00, (jbyte) (jint) 0xed, (jbyte) (jint) 0x20, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x6a, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x39, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x58, (jbyte) (jint) 0xcf, (jbyte) (jint) 0xd0, (jbyte) (jint) 0xef, (jbyte) (jint) 0xaa, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x43, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x33, (jbyte) (jint) 0x85, (jbyte) (jint) 0x45, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x02, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x50, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x51, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x40, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x92, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x38, (jbyte) (jint) 0xf5, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xda, (jbyte) (jint) 0x21, (jbyte) (jint) 0x10, (jbyte) (jint) 0xff, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xd2, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x13, (jbyte) (jint) 0xec, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x97, (jbyte) (jint) 0x44, (jbyte) (jint) 0x17, (jbyte) (jint) 0xc4, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x64, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x19, (jbyte) (jint) 0x73, (jbyte) (jint) 0x60, (jbyte) (jint) 0x81, (jbyte) (jint) 0x4f, (jbyte) (jint) 0xdc, (jbyte) (jint) 0x22, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x90, (jbyte) (jint) 0x88, (jbyte) (jint) 0x46, (jbyte) (jint) 0xee, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x14, (jbyte) (jint) 0xde, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x0b, (jbyte) (jint) 0xdb, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x32, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x49, (jbyte) (jint) 0x06, (jbyte) (jint) 0x24, (jbyte) (jint) 0x5c, (jbyte) (jint) 0xc2, (jbyte) (jint) 0xd3, (jbyte) (jint) 0xac, (jbyte) (jint) 0x62, (jbyte) (jint) 0x91, (jbyte) (jint) 0x95, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x79, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x37, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x4e, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x56, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xea, (jbyte) (jint) 0x65, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xae, (jbyte) (jint) 0x08, (jbyte) (jint) 0xba, (jbyte) (jint) 0x78, (jbyte) (jint) 0x25, (jbyte) (jint) 0x2e, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xc6, (jbyte) (jint) 0xe8, (jbyte) (jint) 0xdd, (jbyte) (jint) 0x74, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x4b, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x70, (jbyte) (jint) 0x3e, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x66, (jbyte) (jint) 0x48, (jbyte) (jint) 0x03, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x61, (jbyte) (jint) 0x35, (jbyte) (jint) 0x57, (jbyte) (jint) 0xb9, (jbyte) (jint) 0x86, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x9e, (jbyte) (jint) 0xe1, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x98, (jbyte) (jint) 0x11, (jbyte) (jint) 0x69, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x94, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x87, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xce, (jbyte) (jint) 0x55, (jbyte) (jint) 0x28, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x8c, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x89, (jbyte) (jint) 0x0d, (jbyte) (jint) 0xbf, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x42, (jbyte) (jint) 0x68, (jbyte) (jint) 0x41, (jbyte) (jint) 0x99, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x54, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x16 } count:256];
    OrgSpongycastleCryptoEnginesARIAEngine_SB2_sbox = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xe2, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x54, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x94, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x4a, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x62, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x46, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x8b, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xfa, (jbyte) (jint) 0x64, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x97, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x77, (jbyte) (jint) 0x2e, (jbyte) (jint) 0x03, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x19, (jbyte) (jint) 0x59, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x06, (jbyte) (jint) 0x41, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x55, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x99, (jbyte) (jint) 0x69, (jbyte) (jint) 0xea, (jbyte) (jint) 0x9c, (jbyte) (jint) 0x18, (jbyte) (jint) 0xae, (jbyte) (jint) 0x63, (jbyte) (jint) 0xdf, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x00, (jbyte) (jint) 0x73, (jbyte) (jint) 0x66, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x96, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x85, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x09, (jbyte) (jint) 0x45, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xee, (jbyte) (jint) 0x10, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x29, (jbyte) (jint) 0xac, (jbyte) (jint) 0xcf, (jbyte) (jint) 0xad, (jbyte) (jint) 0x91, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x78, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x95, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x2f, (jbyte) (jint) 0xce, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x08, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x88, (jbyte) (jint) 0x38, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x83, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x28, (jbyte) (jint) 0x47, (jbyte) (jint) 0xdb, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xc7, (jbyte) (jint) 0x93, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x12, (jbyte) (jint) 0x53, (jbyte) (jint) 0xff, (jbyte) (jint) 0x87, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x31, (jbyte) (jint) 0x36, (jbyte) (jint) 0x21, (jbyte) (jint) 0x58, (jbyte) (jint) 0x48, (jbyte) (jint) 0x01, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x37, (jbyte) (jint) 0x74, (jbyte) (jint) 0x32, (jbyte) (jint) 0xca, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xab, (jbyte) (jint) 0x0c, (jbyte) (jint) 0xd7, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x56, (jbyte) (jint) 0x42, (jbyte) (jint) 0x26, (jbyte) (jint) 0x07, (jbyte) (jint) 0x98, (jbyte) (jint) 0x60, (jbyte) (jint) 0xd9, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xb9, (jbyte) (jint) 0x11, (jbyte) (jint) 0x40, (jbyte) (jint) 0xec, (jbyte) (jint) 0x20, (jbyte) (jint) 0x8c, (jbyte) (jint) 0xbd, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x84, (jbyte) (jint) 0x04, (jbyte) (jint) 0x49, (jbyte) (jint) 0x23, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x50, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x13, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xc0, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x57, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x65, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x02, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x3e, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x25, (jbyte) (jint) 0x92, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x15, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x17, (jbyte) (jint) 0xa9, (jbyte) (jint) 0xbf, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x39, (jbyte) (jint) 0x67, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x76, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x43, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xe1, (jbyte) (jint) 0xd0, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x68, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x34, (jbyte) (jint) 0x70, (jbyte) (jint) 0x05, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x8a, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x79, (jbyte) (jint) 0x86, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x30, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x51, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x1e, (jbyte) (jint) 0xa6, (jbyte) (jint) 0x27, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x35, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x24, (jbyte) (jint) 0x16, (jbyte) (jint) 0x82, (jbyte) (jint) 0x5f, (jbyte) (jint) 0xda, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x75, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xef, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x80, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x72, (jbyte) (jint) 0x44, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x90, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x33, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x52, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x61, (jbyte) (jint) 0xa1, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xb0, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xed, (jbyte) (jint) 0x14, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x22, (jbyte) (jint) 0xb3, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x89, (jbyte) (jint) 0xde, (jbyte) (jint) 0x71, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xaf, (jbyte) (jint) 0xba, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x81 } count:256];
    OrgSpongycastleCryptoEnginesARIAEngine_SB3_sbox = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x52, (jbyte) (jint) 0x09, (jbyte) (jint) 0x6a, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x30, (jbyte) (jint) 0x36, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x38, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x40, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x81, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xd7, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x7c, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x39, (jbyte) (jint) 0x82, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x2f, (jbyte) (jint) 0xff, (jbyte) (jint) 0x87, (jbyte) (jint) 0x34, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x43, (jbyte) (jint) 0x44, (jbyte) (jint) 0xc4, (jbyte) (jint) 0xde, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x54, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x94, (jbyte) (jint) 0x32, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x23, (jbyte) (jint) 0x3d, (jbyte) (jint) 0xee, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x95, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x42, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x08, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x66, (jbyte) (jint) 0x28, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x24, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x76, (jbyte) (jint) 0x5b, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x49, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x8b, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x25, (jbyte) (jint) 0x72, (jbyte) (jint) 0xf8, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x64, (jbyte) (jint) 0x86, (jbyte) (jint) 0x68, (jbyte) (jint) 0x98, (jbyte) (jint) 0x16, (jbyte) (jint) 0xd4, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x5c, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x65, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x92, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x70, (jbyte) (jint) 0x48, (jbyte) (jint) 0x50, (jbyte) (jint) 0xfd, (jbyte) (jint) 0xed, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xda, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x15, (jbyte) (jint) 0x46, (jbyte) (jint) 0x57, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x84, (jbyte) (jint) 0x90, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xab, (jbyte) (jint) 0x00, (jbyte) (jint) 0x8c, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x0a, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x58, (jbyte) (jint) 0x05, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x45, (jbyte) (jint) 0x06, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x8f, (jbyte) (jint) 0xca, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x02, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xaf, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x03, (jbyte) (jint) 0x01, (jbyte) (jint) 0x13, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x91, (jbyte) (jint) 0x11, (jbyte) (jint) 0x41, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x67, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xea, (jbyte) (jint) 0x97, (jbyte) (jint) 0xf2, (jbyte) (jint) 0xcf, (jbyte) (jint) 0xce, (jbyte) (jint) 0xf0, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x73, (jbyte) (jint) 0x96, (jbyte) (jint) 0xac, (jbyte) (jint) 0x74, (jbyte) (jint) 0x22, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xad, (jbyte) (jint) 0x35, (jbyte) (jint) 0x85, (jbyte) (jint) 0xe2, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x37, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x75, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x47, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x71, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x29, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x89, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x62, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x18, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x1b, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x56, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x4b, (jbyte) (jint) 0xc6, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x79, (jbyte) (jint) 0x20, (jbyte) (jint) 0x9a, (jbyte) (jint) 0xdb, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x78, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x5a, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x33, (jbyte) (jint) 0x88, (jbyte) (jint) 0x07, (jbyte) (jint) 0xc7, (jbyte) (jint) 0x31, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x12, (jbyte) (jint) 0x10, (jbyte) (jint) 0x59, (jbyte) (jint) 0x27, (jbyte) (jint) 0x80, (jbyte) (jint) 0xec, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x60, (jbyte) (jint) 0x51, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x19, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x2d, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x93, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xef, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x4d, (jbyte) (jint) 0xae, (jbyte) (jint) 0x2a, (jbyte) (jint) 0xf5, (jbyte) (jint) 0xb0, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xeb, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x83, (jbyte) (jint) 0x53, (jbyte) (jint) 0x99, (jbyte) (jint) 0x61, (jbyte) (jint) 0x17, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x04, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xba, (jbyte) (jint) 0x77, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x26, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x69, (jbyte) (jint) 0x14, (jbyte) (jint) 0x63, (jbyte) (jint) 0x55, (jbyte) (jint) 0x21, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x7d } count:256];
    OrgSpongycastleCryptoEnginesARIAEngine_SB4_sbox = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x30, (jbyte) (jint) 0x68, (jbyte) (jint) 0x99, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x87, (jbyte) (jint) 0xb9, (jbyte) (jint) 0x21, (jbyte) (jint) 0x78, (jbyte) (jint) 0x50, (jbyte) (jint) 0x39, (jbyte) (jint) 0xdb, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x72, (jbyte) (jint) 0x9, (jbyte) (jint) 0x62, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x8e, (jbyte) (jint) 0xf1, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xcc, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x20, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x81, (jbyte) (jint) 0x65, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x89, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x77, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x57, (jbyte) (jint) 0x43, (jbyte) (jint) 0x56, (jbyte) (jint) 0x17, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x40, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x4d, (jbyte) (jint) 0xc0, (jbyte) (jint) 0x63, (jbyte) (jint) 0x6c, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x64, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x53, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x38, (jbyte) (jint) 0x98, (jbyte) (jint) 0x0c, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x9b, (jbyte) (jint) 0xed, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x22, (jbyte) (jint) 0x76, (jbyte) (jint) 0xaf, (jbyte) (jint) 0xdd, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x58, (jbyte) (jint) 0x67, (jbyte) (jint) 0x88, (jbyte) (jint) 0x06, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x35, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x01, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x8c, (jbyte) (jint) 0xc2, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x02, (jbyte) (jint) 0x24, (jbyte) (jint) 0x75, (jbyte) (jint) 0x93, (jbyte) (jint) 0x66, (jbyte) (jint) 0x1e, (jbyte) (jint) 0xe5, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x54, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x10, (jbyte) (jint) 0xce, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x08, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x12, (jbyte) (jint) 0x97, (jbyte) (jint) 0x32, (jbyte) (jint) 0xab, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x27, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x23, (jbyte) (jint) 0xdf, (jbyte) (jint) 0xef, (jbyte) (jint) 0xca, (jbyte) (jint) 0xd9, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xdc, (jbyte) (jint) 0x31, (jbyte) (jint) 0x6b, (jbyte) (jint) 0xd1, (jbyte) (jint) 0xad, (jbyte) (jint) 0x19, (jbyte) (jint) 0x49, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x51, (jbyte) (jint) 0x96, (jbyte) (jint) 0xee, (jbyte) (jint) 0xe4, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x41, (jbyte) (jint) 0xda, (jbyte) (jint) 0xff, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x55, (jbyte) (jint) 0x86, (jbyte) (jint) 0x36, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x61, (jbyte) (jint) 0x52, (jbyte) (jint) 0xf8, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x82, (jbyte) (jint) 0x48, (jbyte) (jint) 0x69, (jbyte) (jint) 0x9a, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x47, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x04, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x34, (jbyte) (jint) 0x15, (jbyte) (jint) 0x79, (jbyte) (jint) 0x26, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xde, (jbyte) (jint) 0x29, (jbyte) (jint) 0xae, (jbyte) (jint) 0x92, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x84, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xd2, (jbyte) (jint) 0xba, (jbyte) (jint) 0x5d, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xb0, (jbyte) (jint) 0xbf, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x71, (jbyte) (jint) 0x44, (jbyte) (jint) 0x46, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xd5, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x14, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x70, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x18, (jbyte) (jint) 0x83, (jbyte) (jint) 0x16, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x91, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x05, (jbyte) (jint) 0x95, (jbyte) (jint) 0x74, (jbyte) (jint) 0xa9, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x85, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x13, (jbyte) (jint) 0x07, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x45, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xec, (jbyte) (jint) 0x73, (jbyte) (jint) 0x90, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x59, (jbyte) (jint) 0x8f, (jbyte) (jint) 0xa1, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x2d, (jbyte) (jint) 0xf2, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x00, (jbyte) (jint) 0x94, (jbyte) (jint) 0x37, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x2e, (jbyte) (jint) 0x9c, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x28, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x80, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x3d, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x25, (jbyte) (jint) 0x8a, (jbyte) (jint) 0xb5, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x42, (jbyte) (jint) 0xb3, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xea, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x11, (jbyte) (jint) 0x33, (jbyte) (jint) 0x03, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xac, (jbyte) (jint) 0x60 } count:256];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoEnginesARIAEngine)
  }
}

@end

void OrgSpongycastleCryptoEnginesARIAEngine_init(OrgSpongycastleCryptoEnginesARIAEngine *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoEnginesARIAEngine *new_OrgSpongycastleCryptoEnginesARIAEngine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesARIAEngine, init)
}

OrgSpongycastleCryptoEnginesARIAEngine *create_OrgSpongycastleCryptoEnginesARIAEngine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesARIAEngine, init)
}

void OrgSpongycastleCryptoEnginesARIAEngine_AWithByteArray_(IOSByteArray *z) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  jbyte x0 = IOSByteArray_Get(nil_chk(z), 0);
  jbyte x1 = IOSByteArray_Get(z, 1);
  jbyte x2 = IOSByteArray_Get(z, 2);
  jbyte x3 = IOSByteArray_Get(z, 3);
  jbyte x4 = IOSByteArray_Get(z, 4);
  jbyte x5 = IOSByteArray_Get(z, 5);
  jbyte x6 = IOSByteArray_Get(z, 6);
  jbyte x7 = IOSByteArray_Get(z, 7);
  jbyte x8 = IOSByteArray_Get(z, 8);
  jbyte x9 = IOSByteArray_Get(z, 9);
  jbyte x10 = IOSByteArray_Get(z, 10);
  jbyte x11 = IOSByteArray_Get(z, 11);
  jbyte x12 = IOSByteArray_Get(z, 12);
  jbyte x13 = IOSByteArray_Get(z, 13);
  jbyte x14 = IOSByteArray_Get(z, 14);
  jbyte x15 = IOSByteArray_Get(z, 15);
  *IOSByteArray_GetRef(z, 0) = (jbyte) (x3 ^ x4 ^ x6 ^ x8 ^ x9 ^ x13 ^ x14);
  *IOSByteArray_GetRef(z, 1) = (jbyte) (x2 ^ x5 ^ x7 ^ x8 ^ x9 ^ x12 ^ x15);
  *IOSByteArray_GetRef(z, 2) = (jbyte) (x1 ^ x4 ^ x6 ^ x10 ^ x11 ^ x12 ^ x15);
  *IOSByteArray_GetRef(z, 3) = (jbyte) (x0 ^ x5 ^ x7 ^ x10 ^ x11 ^ x13 ^ x14);
  *IOSByteArray_GetRef(z, 4) = (jbyte) (x0 ^ x2 ^ x5 ^ x8 ^ x11 ^ x14 ^ x15);
  *IOSByteArray_GetRef(z, 5) = (jbyte) (x1 ^ x3 ^ x4 ^ x9 ^ x10 ^ x14 ^ x15);
  *IOSByteArray_GetRef(z, 6) = (jbyte) (x0 ^ x2 ^ x7 ^ x9 ^ x10 ^ x12 ^ x13);
  *IOSByteArray_GetRef(z, 7) = (jbyte) (x1 ^ x3 ^ x6 ^ x8 ^ x11 ^ x12 ^ x13);
  *IOSByteArray_GetRef(z, 8) = (jbyte) (x0 ^ x1 ^ x4 ^ x7 ^ x10 ^ x13 ^ x15);
  *IOSByteArray_GetRef(z, 9) = (jbyte) (x0 ^ x1 ^ x5 ^ x6 ^ x11 ^ x12 ^ x14);
  *IOSByteArray_GetRef(z, 10) = (jbyte) (x2 ^ x3 ^ x5 ^ x6 ^ x8 ^ x13 ^ x15);
  *IOSByteArray_GetRef(z, 11) = (jbyte) (x2 ^ x3 ^ x4 ^ x7 ^ x9 ^ x12 ^ x14);
  *IOSByteArray_GetRef(z, 12) = (jbyte) (x1 ^ x2 ^ x6 ^ x7 ^ x9 ^ x11 ^ x12);
  *IOSByteArray_GetRef(z, 13) = (jbyte) (x0 ^ x3 ^ x6 ^ x7 ^ x8 ^ x10 ^ x13);
  *IOSByteArray_GetRef(z, 14) = (jbyte) (x0 ^ x3 ^ x4 ^ x5 ^ x9 ^ x11 ^ x14);
  *IOSByteArray_GetRef(z, 15) = (jbyte) (x1 ^ x2 ^ x4 ^ x5 ^ x8 ^ x10 ^ x15);
}

void OrgSpongycastleCryptoEnginesARIAEngine_FEWithByteArray_withByteArray_(IOSByteArray *D, IOSByteArray *RK) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(D, RK);
  OrgSpongycastleCryptoEnginesARIAEngine_SL2WithByteArray_(D);
  OrgSpongycastleCryptoEnginesARIAEngine_AWithByteArray_(D);
}

void OrgSpongycastleCryptoEnginesARIAEngine_FOWithByteArray_withByteArray_(IOSByteArray *D, IOSByteArray *RK) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(D, RK);
  OrgSpongycastleCryptoEnginesARIAEngine_SL1WithByteArray_(D);
  OrgSpongycastleCryptoEnginesARIAEngine_AWithByteArray_(D);
}

IOSObjectArray *OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleWithBoolean_withByteArray_(jboolean forEncryption, IOSByteArray *K) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  jint keyLen = ((IOSByteArray *) nil_chk(K))->size_;
  if (keyLen < 16 || keyLen > 32 || (keyLen & 7) != 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Key length not 128/192/256 bits.");
  }
  jint keyLenIdx = (JreURShift32(keyLen, 3)) - 2;
  IOSByteArray *CK1 = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesARIAEngine_C), keyLenIdx);
  IOSByteArray *CK2 = IOSObjectArray_Get(OrgSpongycastleCryptoEnginesARIAEngine_C, (keyLenIdx + 1) % 3);
  IOSByteArray *CK3 = IOSObjectArray_Get(OrgSpongycastleCryptoEnginesARIAEngine_C, (keyLenIdx + 2) % 3);
  IOSByteArray *KL = [IOSByteArray newArrayWithLength:16];
  IOSByteArray *KR = [IOSByteArray newArrayWithLength:16];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(K, 0, KL, 0, 16);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(K, 16, KR, 0, keyLen - 16);
  IOSByteArray *W0 = [IOSByteArray newArrayWithLength:16];
  IOSByteArray *W1 = [IOSByteArray newArrayWithLength:16];
  IOSByteArray *W2 = [IOSByteArray newArrayWithLength:16];
  IOSByteArray *W3 = [IOSByteArray newArrayWithLength:16];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(KL, 0, W0, 0, 16);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(W0, 0, W1, 0, 16);
  OrgSpongycastleCryptoEnginesARIAEngine_FOWithByteArray_withByteArray_(W1, CK1);
  OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(W1, KR);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(W1, 0, W2, 0, 16);
  OrgSpongycastleCryptoEnginesARIAEngine_FEWithByteArray_withByteArray_(W2, CK2);
  OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(W2, W0);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(W2, 0, W3, 0, 16);
  OrgSpongycastleCryptoEnginesARIAEngine_FOWithByteArray_withByteArray_(W3, CK3);
  OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(W3, W1);
  jint numRounds = 12 + (keyLenIdx * 2);
  IOSObjectArray *rks = [IOSByteArray newArrayWithDimensions:2 lengths:(jint[]){ numRounds + 1, 16 }];
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 0), W0, W1, 19);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 1), W1, W2, 19);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 2), W2, W3, 19);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 3), W3, W0, 19);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 4), W0, W1, 31);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 5), W1, W2, 31);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 6), W2, W3, 31);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 7), W3, W0, 31);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 8), W0, W1, 67);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 9), W1, W2, 67);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 10), W2, W3, 67);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 11), W3, W0, 67);
  OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 12), W0, W1, 97);
  if (numRounds > 12) {
    OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 13), W1, W2, 97);
    OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 14), W2, W3, 97);
    if (numRounds > 14) {
      OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 15), W3, W0, 97);
      OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSObjectArray_Get(rks, 16), W0, W1, 109);
    }
  }
  if (!forEncryption) {
    OrgSpongycastleCryptoEnginesARIAEngine_reverseKeysWithByteArray2_(rks);
    for (jint i = 1; i < numRounds; ++i) {
      OrgSpongycastleCryptoEnginesARIAEngine_AWithByteArray_(IOSObjectArray_Get(rks, i));
    }
  }
  return rks;
}

void OrgSpongycastleCryptoEnginesARIAEngine_keyScheduleRoundWithByteArray_withByteArray_withByteArray_withInt_(IOSByteArray *rk, IOSByteArray *w, IOSByteArray *wr, jint n) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  jint off = JreURShift32(n, 3);
  jint right = n & 7;
  jint left = 8 - right;
  jint hi = IOSByteArray_Get(nil_chk(wr), 15 - off) & (jint) 0xFF;
  for (jint to = 0; to < 16; ++to) {
    jint lo = IOSByteArray_Get(wr, (to - off) & (jint) 0xF) & (jint) 0xFF;
    jint b = (JreLShift32(hi, left)) | (JreURShift32(lo, right));
    b ^= (IOSByteArray_Get(nil_chk(w), to) & (jint) 0xFF);
    *IOSByteArray_GetRef(nil_chk(rk), to) = (jbyte) b;
    hi = lo;
  }
}

void OrgSpongycastleCryptoEnginesARIAEngine_reverseKeysWithByteArray2_(IOSObjectArray *keys) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  jint length = ((IOSObjectArray *) nil_chk(keys))->size_;
  jint limit = length / 2;
  jint last = length - 1;
  for (jint i = 0; i < limit; ++i) {
    IOSByteArray *t = IOSObjectArray_Get(keys, i);
    (void) IOSObjectArray_Set(keys, i, IOSObjectArray_Get(keys, last - i));
    (void) IOSObjectArray_Set(keys, last - i, t);
  }
}

jbyte OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(jbyte x) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesARIAEngine_SB1_sbox), x & (jint) 0xFF);
}

jbyte OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(jbyte x) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesARIAEngine_SB2_sbox), x & (jint) 0xFF);
}

jbyte OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(jbyte x) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesARIAEngine_SB3_sbox), x & (jint) 0xFF);
}

jbyte OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(jbyte x) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesARIAEngine_SB4_sbox), x & (jint) 0xFF);
}

void OrgSpongycastleCryptoEnginesARIAEngine_SL1WithByteArray_(IOSByteArray *z) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  *IOSByteArray_GetRef(nil_chk(z), 0) = OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(IOSByteArray_Get(z, 0));
  *IOSByteArray_GetRef(z, 1) = OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(IOSByteArray_Get(z, 1));
  *IOSByteArray_GetRef(z, 2) = OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(IOSByteArray_Get(z, 2));
  *IOSByteArray_GetRef(z, 3) = OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(IOSByteArray_Get(z, 3));
  *IOSByteArray_GetRef(z, 4) = OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(IOSByteArray_Get(z, 4));
  *IOSByteArray_GetRef(z, 5) = OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(IOSByteArray_Get(z, 5));
  *IOSByteArray_GetRef(z, 6) = OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(IOSByteArray_Get(z, 6));
  *IOSByteArray_GetRef(z, 7) = OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(IOSByteArray_Get(z, 7));
  *IOSByteArray_GetRef(z, 8) = OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(IOSByteArray_Get(z, 8));
  *IOSByteArray_GetRef(z, 9) = OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(IOSByteArray_Get(z, 9));
  *IOSByteArray_GetRef(z, 10) = OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(IOSByteArray_Get(z, 10));
  *IOSByteArray_GetRef(z, 11) = OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(IOSByteArray_Get(z, 11));
  *IOSByteArray_GetRef(z, 12) = OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(IOSByteArray_Get(z, 12));
  *IOSByteArray_GetRef(z, 13) = OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(IOSByteArray_Get(z, 13));
  *IOSByteArray_GetRef(z, 14) = OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(IOSByteArray_Get(z, 14));
  *IOSByteArray_GetRef(z, 15) = OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(IOSByteArray_Get(z, 15));
}

void OrgSpongycastleCryptoEnginesARIAEngine_SL2WithByteArray_(IOSByteArray *z) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  *IOSByteArray_GetRef(nil_chk(z), 0) = OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(IOSByteArray_Get(z, 0));
  *IOSByteArray_GetRef(z, 1) = OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(IOSByteArray_Get(z, 1));
  *IOSByteArray_GetRef(z, 2) = OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(IOSByteArray_Get(z, 2));
  *IOSByteArray_GetRef(z, 3) = OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(IOSByteArray_Get(z, 3));
  *IOSByteArray_GetRef(z, 4) = OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(IOSByteArray_Get(z, 4));
  *IOSByteArray_GetRef(z, 5) = OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(IOSByteArray_Get(z, 5));
  *IOSByteArray_GetRef(z, 6) = OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(IOSByteArray_Get(z, 6));
  *IOSByteArray_GetRef(z, 7) = OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(IOSByteArray_Get(z, 7));
  *IOSByteArray_GetRef(z, 8) = OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(IOSByteArray_Get(z, 8));
  *IOSByteArray_GetRef(z, 9) = OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(IOSByteArray_Get(z, 9));
  *IOSByteArray_GetRef(z, 10) = OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(IOSByteArray_Get(z, 10));
  *IOSByteArray_GetRef(z, 11) = OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(IOSByteArray_Get(z, 11));
  *IOSByteArray_GetRef(z, 12) = OrgSpongycastleCryptoEnginesARIAEngine_SB3WithByte_(IOSByteArray_Get(z, 12));
  *IOSByteArray_GetRef(z, 13) = OrgSpongycastleCryptoEnginesARIAEngine_SB4WithByte_(IOSByteArray_Get(z, 13));
  *IOSByteArray_GetRef(z, 14) = OrgSpongycastleCryptoEnginesARIAEngine_SB1WithByte_(IOSByteArray_Get(z, 14));
  *IOSByteArray_GetRef(z, 15) = OrgSpongycastleCryptoEnginesARIAEngine_SB2WithByte_(IOSByteArray_Get(z, 15));
}

void OrgSpongycastleCryptoEnginesARIAEngine_xor__WithByteArray_withByteArray_(IOSByteArray *z, IOSByteArray *x) {
  OrgSpongycastleCryptoEnginesARIAEngine_initialize();
  for (jint i = 0; i < 16; ++i) {
    *IOSByteArray_GetRef(nil_chk(z), i) ^= IOSByteArray_Get(nil_chk(x), i);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesARIAEngine)
