//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/SEEDWrapEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesSEEDWrapEngine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesSEEDWrapEngine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesSEEDWrapEngine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesSEEDWrapEngine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesSEEDWrapEngine

#if !defined (OrgSpongycastleCryptoEnginesSEEDWrapEngine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesSEEDWrapEngine || defined(INCLUDE_OrgSpongycastleCryptoEnginesSEEDWrapEngine))
#define OrgSpongycastleCryptoEnginesSEEDWrapEngine_

#define RESTRICT_OrgSpongycastleCryptoEnginesRFC3394WrapEngine 1
#define INCLUDE_OrgSpongycastleCryptoEnginesRFC3394WrapEngine 1
#include "org/spongycastle/crypto/engines/RFC3394WrapEngine.h"

@protocol OrgSpongycastleCryptoBlockCipher;

@interface OrgSpongycastleCryptoEnginesSEEDWrapEngine : OrgSpongycastleCryptoEnginesRFC3394WrapEngine

#pragma mark Public

- (instancetype)init;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)arg0
                                             withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEnginesSEEDWrapEngine)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesSEEDWrapEngine_init(OrgSpongycastleCryptoEnginesSEEDWrapEngine *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesSEEDWrapEngine *new_OrgSpongycastleCryptoEnginesSEEDWrapEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesSEEDWrapEngine *create_OrgSpongycastleCryptoEnginesSEEDWrapEngine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesSEEDWrapEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesSEEDWrapEngine")
