//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/DSTU7624Engine.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/DataLengthException.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/engines/DSTU7624Engine.h"
#include "org/spongycastle/crypto/params/KeyParameter.h"
#include "org/spongycastle/util/Arrays.h"
#include "org/spongycastle/util/Pack.h"

@interface OrgSpongycastleCryptoEnginesDSTU7624Engine () {
 @public
  IOSLongArray *internalState_;
  IOSLongArray *workingKey_;
  IOSObjectArray *roundKeys_;
  jint wordsInBlock_;
  jint wordsInKey_;
  jint roundsAmount_;
  jboolean forEncryption_;
  IOSByteArray *internalStateBytes_;
  IOSByteArray *tempInternalStateBytes_;
  IOSObjectArray *mdsMatrix_;
  IOSObjectArray *mdsInvMatrix_;
  IOSObjectArray *sboxesForEncryption_;
  IOSObjectArray *sboxesForDecryption_;
}

- (void)workingKeyExpandKTWithLongArray:(IOSLongArray *)workingKey
                          withLongArray:(IOSLongArray *)tempKeys;

- (void)workingKeyExpandEvenWithLongArray:(IOSLongArray *)workingKey
                            withLongArray:(IOSLongArray *)tempKey;

- (void)workingKeyExpandOdd;

- (void)SubBytes;

- (void)InvSubBytes;

- (void)ShiftRows;

- (void)InvShiftRows;

- (void)MixColumnsWithByteArray2:(IOSObjectArray *)matrix;

- (jbyte)MultiplyGFWithByte:(jbyte)x
                   withByte:(jbyte)y;

- (void)ShiftLeftWithLongArray:(IOSLongArray *)value;

- (void)RotateLeftWithLongArray:(IOSLongArray *)value;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, internalState_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, workingKey_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, roundKeys_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, internalStateBytes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, tempInternalStateBytes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, mdsMatrix_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, mdsInvMatrix_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, sboxesForEncryption_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesDSTU7624Engine, sboxesForDecryption_, IOSObjectArray *)

inline jint OrgSpongycastleCryptoEnginesDSTU7624Engine_get_BITS_IN_WORD(void);
#define OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_WORD 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesDSTU7624Engine, BITS_IN_WORD, jint)

inline jint OrgSpongycastleCryptoEnginesDSTU7624Engine_get_BITS_IN_BYTE(void);
#define OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesDSTU7624Engine, BITS_IN_BYTE, jint)

inline jint OrgSpongycastleCryptoEnginesDSTU7624Engine_get_BITS_IN_LONG(void);
#define OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesDSTU7624Engine, BITS_IN_LONG, jint)

inline jint OrgSpongycastleCryptoEnginesDSTU7624Engine_get_ROUNDS_128(void);
#define OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_128 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesDSTU7624Engine, ROUNDS_128, jint)

inline jint OrgSpongycastleCryptoEnginesDSTU7624Engine_get_ROUNDS_256(void);
#define OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_256 14
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesDSTU7624Engine, ROUNDS_256, jint)

inline jint OrgSpongycastleCryptoEnginesDSTU7624Engine_get_ROUNDS_512(void);
#define OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_512 18
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesDSTU7624Engine, ROUNDS_512, jint)

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandKTWithLongArray_withLongArray_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSLongArray *workingKey, IOSLongArray *tempKeys);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandEvenWithLongArray_withLongArray_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSLongArray *workingKey, IOSLongArray *tempKey);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandOdd(OrgSpongycastleCryptoEnginesDSTU7624Engine *self);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(OrgSpongycastleCryptoEnginesDSTU7624Engine *self);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_InvSubBytes(OrgSpongycastleCryptoEnginesDSTU7624Engine *self);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(OrgSpongycastleCryptoEnginesDSTU7624Engine *self);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_InvShiftRows(OrgSpongycastleCryptoEnginesDSTU7624Engine *self);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSObjectArray *matrix);

__attribute__((unused)) static jbyte OrgSpongycastleCryptoEnginesDSTU7624Engine_MultiplyGFWithByte_withByte_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, jbyte x, jbyte y);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftLeftWithLongArray_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSLongArray *value);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesDSTU7624Engine_RotateLeftWithLongArray_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSLongArray *value);

@implementation OrgSpongycastleCryptoEnginesDSTU7624Engine

- (instancetype)initWithInt:(jint)blockBitLength {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_initWithInt_(self, blockBitLength);
  return self;
}

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if ([params isKindOfClass:[OrgSpongycastleCryptoParamsKeyParameter class]]) {
    self->forEncryption_ = forEncryption;
    IOSByteArray *keyBytes = [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) params))) getKey];
    jint keyBitLength = ((IOSByteArray *) nil_chk(keyBytes))->size_ * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE;
    jint blockBitLength = wordsInBlock_ * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_WORD;
    if (keyBitLength != 128 && keyBitLength != 256 && keyBitLength != 512) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"unsupported key length: only 128/256/512 are allowed");
    }
    if (blockBitLength == 128) {
      if (keyBitLength == 512) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unsupported key length");
      }
    }
    if (blockBitLength == 256) {
      if (keyBitLength == 128) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unsupported key length");
      }
    }
    if (blockBitLength == 512) {
      if (keyBitLength != 512) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unsupported key length");
      }
    }
    switch (keyBitLength) {
      case 128:
      roundsAmount_ = OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_128;
      break;
      case 256:
      roundsAmount_ = OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_256;
      break;
      case 512:
      roundsAmount_ = OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_512;
      break;
    }
    wordsInKey_ = keyBitLength / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_WORD;
    roundKeys_ = [IOSObjectArray newArrayWithLength:roundsAmount_ + 1 type:IOSClass_longArray(1)];
    for (jint roundKeyIndex = 0; roundKeyIndex < roundKeys_->size_; roundKeyIndex++) {
      (void) IOSObjectArray_SetAndConsume(roundKeys_, roundKeyIndex, [IOSLongArray newArrayWithLength:wordsInBlock_]);
    }
    workingKey_ = [IOSLongArray newArrayWithLength:wordsInKey_];
    if (keyBytes->size_ != wordsInKey_ * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_WORD / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid key parameter passed to DSTU7624Engine init");
    }
    OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(keyBytes, 0, workingKey_);
    IOSLongArray *tempKeys = [IOSLongArray newArrayWithLength:wordsInBlock_];
    OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandKTWithLongArray_withLongArray_(self, workingKey_, tempKeys);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandEvenWithLongArray_withLongArray_(self, workingKey_, tempKeys);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandOdd(self);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid parameter passed to DSTU7624Engine init");
  }
}

- (NSString *)getAlgorithmName {
  return @"DSTU7624";
}

- (jint)getBlockSize {
  return wordsInBlock_ * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_WORD / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE;
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  if (workingKey_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"DSTU7624 engine not initialised");
  }
  if (inOff + [self getBlockSize] > ((IOSByteArray *) nil_chk(inArg))->size_) {
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"Input buffer too short");
  }
  if (outOff + [self getBlockSize] > ((IOSByteArray *) nil_chk(outArg))->size_) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"Output buffer too short");
  }
  if (forEncryption_) {
    jint round = 0;
    OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(inArg, inOff, internalState_);
    for (jint wordIndex = 0; wordIndex < wordsInBlock_; wordIndex++) {
      *IOSLongArray_GetRef(nil_chk(internalState_), wordIndex) += IOSLongArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(roundKeys_), round)), wordIndex);
    }
    for (round = 1; round < roundsAmount_; round++) {
      OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
      OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
      OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, mdsMatrix_);
      for (jint wordIndex = 0; wordIndex < wordsInBlock_; wordIndex++) {
        *IOSLongArray_GetRef(nil_chk(internalState_), wordIndex) ^= IOSLongArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(roundKeys_), round)), wordIndex);
      }
    }
    OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, mdsMatrix_);
    for (jint wordIndex = 0; wordIndex < wordsInBlock_; wordIndex++) {
      *IOSLongArray_GetRef(nil_chk(internalState_), wordIndex) += IOSLongArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(roundKeys_), roundsAmount_)), wordIndex);
    }
    OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(internalState_, outArg, outOff);
  }
  else {
    jint round = roundsAmount_;
    OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(inArg, inOff, internalState_);
    for (jint wordIndex = 0; wordIndex < wordsInBlock_; wordIndex++) {
      *IOSLongArray_GetRef(nil_chk(internalState_), wordIndex) -= IOSLongArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(roundKeys_), round)), wordIndex);
    }
    for (round = roundsAmount_ - 1; round > 0; round--) {
      OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, mdsInvMatrix_);
      OrgSpongycastleCryptoEnginesDSTU7624Engine_InvShiftRows(self);
      OrgSpongycastleCryptoEnginesDSTU7624Engine_InvSubBytes(self);
      for (jint wordIndex = 0; wordIndex < wordsInBlock_; wordIndex++) {
        *IOSLongArray_GetRef(nil_chk(internalState_), wordIndex) ^= IOSLongArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(roundKeys_), round)), wordIndex);
      }
    }
    OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, mdsInvMatrix_);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_InvShiftRows(self);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_InvSubBytes(self);
    for (jint wordIndex = 0; wordIndex < wordsInBlock_; wordIndex++) {
      *IOSLongArray_GetRef(nil_chk(internalState_), wordIndex) -= IOSLongArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(roundKeys_), 0)), wordIndex);
    }
    OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(internalState_, outArg, outOff);
  }
  return [self getBlockSize];
}

- (void)reset {
  OrgSpongycastleUtilArrays_fillWithLongArray_withLong_(internalState_, 0);
  OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(internalStateBytes_, (jbyte) (jint) 0x00);
  OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(tempInternalStateBytes_, (jbyte) (jint) 0x00);
}

- (void)workingKeyExpandKTWithLongArray:(IOSLongArray *)workingKey
                          withLongArray:(IOSLongArray *)tempKeys {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandKTWithLongArray_withLongArray_(self, workingKey, tempKeys);
}

- (void)workingKeyExpandEvenWithLongArray:(IOSLongArray *)workingKey
                            withLongArray:(IOSLongArray *)tempKey {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandEvenWithLongArray_withLongArray_(self, workingKey, tempKey);
}

- (void)workingKeyExpandOdd {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandOdd(self);
}

- (void)SubBytes {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
}

- (void)InvSubBytes {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_InvSubBytes(self);
}

- (void)ShiftRows {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
}

- (void)InvShiftRows {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_InvShiftRows(self);
}

- (void)MixColumnsWithByteArray2:(IOSObjectArray *)matrix {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, matrix);
}

- (jbyte)MultiplyGFWithByte:(jbyte)x
                   withByte:(jbyte)y {
  return OrgSpongycastleCryptoEnginesDSTU7624Engine_MultiplyGFWithByte_withByte_(self, x, y);
}

- (void)ShiftLeftWithLongArray:(IOSLongArray *)value {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftLeftWithLongArray_(self, value);
}

- (void)RotateLeftWithLongArray:(IOSLongArray *)value {
  OrgSpongycastleCryptoEnginesDSTU7624Engine_RotateLeftWithLongArray_(self, value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(getAlgorithmName);
  methods[3].selector = @selector(getBlockSize);
  methods[4].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[5].selector = @selector(reset);
  methods[6].selector = @selector(workingKeyExpandKTWithLongArray:withLongArray:);
  methods[7].selector = @selector(workingKeyExpandEvenWithLongArray:withLongArray:);
  methods[8].selector = @selector(workingKeyExpandOdd);
  methods[9].selector = @selector(SubBytes);
  methods[10].selector = @selector(InvSubBytes);
  methods[11].selector = @selector(ShiftRows);
  methods[12].selector = @selector(InvShiftRows);
  methods[13].selector = @selector(MixColumnsWithByteArray2:);
  methods[14].selector = @selector(MultiplyGFWithByte:withByte:);
  methods[15].selector = @selector(ShiftLeftWithLongArray:);
  methods[16].selector = @selector(RotateLeftWithLongArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BITS_IN_WORD", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_WORD, 0x1a, -1, -1, -1, -1 },
    { "BITS_IN_BYTE", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE, 0x1a, -1, -1, -1, -1 },
    { "BITS_IN_LONG", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG, 0x1a, -1, -1, -1, -1 },
    { "internalState_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "workingKey_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "roundKeys_", "[[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "wordsInBlock_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "wordsInKey_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ROUNDS_128", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_128, 0x1a, -1, -1, -1, -1 },
    { "ROUNDS_256", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_256, 0x1a, -1, -1, -1, -1 },
    { "ROUNDS_512", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesDSTU7624Engine_ROUNDS_512, 0x1a, -1, -1, -1, -1 },
    { "roundsAmount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "forEncryption_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "internalStateBytes_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempInternalStateBytes_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mdsMatrix_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mdsInvMatrix_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sboxesForEncryption_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sboxesForDecryption_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LJavaLangIllegalArgumentException;", "init", "ZLOrgSpongycastleCryptoCipherParameters;", "processBlock", "[BI[BI", "LOrgSpongycastleCryptoDataLengthException;LJavaLangIllegalStateException;", "workingKeyExpandKT", "[J[J", "workingKeyExpandEven", "MixColumns", "[[B", "MultiplyGF", "BB", "ShiftLeft", "[J", "RotateLeft" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesDSTU7624Engine = { "DSTU7624Engine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 17, 19, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesDSTU7624Engine;
}

@end

void OrgSpongycastleCryptoEnginesDSTU7624Engine_initWithInt_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, jint blockBitLength) {
  NSObject_init(self);
  self->mdsMatrix_ = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x05, (jbyte) (jint) 0x01, (jbyte) (jint) 0x08, (jbyte) (jint) 0x06, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x04, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x05, (jbyte) (jint) 0x01, (jbyte) (jint) 0x08, (jbyte) (jint) 0x06, (jbyte) (jint) 0x07 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x05, (jbyte) (jint) 0x01, (jbyte) (jint) 0x08, (jbyte) (jint) 0x06 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x06, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x05, (jbyte) (jint) 0x01, (jbyte) (jint) 0x08 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x08, (jbyte) (jint) 0x06, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x05, (jbyte) (jint) 0x01 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x01, (jbyte) (jint) 0x08, (jbyte) (jint) 0x06, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x05 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x05, (jbyte) (jint) 0x01, (jbyte) (jint) 0x08, (jbyte) (jint) 0x06, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x01, (jbyte) (jint) 0x05, (jbyte) (jint) 0x01, (jbyte) (jint) 0x08, (jbyte) (jint) 0x06, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x01 } count:8] } count:8 type:IOSClass_byteArray(1)];
  self->mdsInvMatrix_ = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xAD, (jbyte) (jint) 0x95, (jbyte) (jint) 0x76, (jbyte) (jint) 0xA8, (jbyte) (jint) 0x2F, (jbyte) (jint) 0x49, (jbyte) (jint) 0xD7, (jbyte) (jint) 0xCA } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xCA, (jbyte) (jint) 0xAD, (jbyte) (jint) 0x95, (jbyte) (jint) 0x76, (jbyte) (jint) 0xA8, (jbyte) (jint) 0x2F, (jbyte) (jint) 0x49, (jbyte) (jint) 0xD7 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xD7, (jbyte) (jint) 0xCA, (jbyte) (jint) 0xAD, (jbyte) (jint) 0x95, (jbyte) (jint) 0x76, (jbyte) (jint) 0xA8, (jbyte) (jint) 0x2F, (jbyte) (jint) 0x49 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x49, (jbyte) (jint) 0xD7, (jbyte) (jint) 0xCA, (jbyte) (jint) 0xAD, (jbyte) (jint) 0x95, (jbyte) (jint) 0x76, (jbyte) (jint) 0xA8, (jbyte) (jint) 0x2F } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x2F, (jbyte) (jint) 0x49, (jbyte) (jint) 0xD7, (jbyte) (jint) 0xCA, (jbyte) (jint) 0xAD, (jbyte) (jint) 0x95, (jbyte) (jint) 0x76, (jbyte) (jint) 0xA8 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xA8, (jbyte) (jint) 0x2F, (jbyte) (jint) 0x49, (jbyte) (jint) 0xD7, (jbyte) (jint) 0xCA, (jbyte) (jint) 0xAD, (jbyte) (jint) 0x95, (jbyte) (jint) 0x76 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x76, (jbyte) (jint) 0xA8, (jbyte) (jint) 0x2F, (jbyte) (jint) 0x49, (jbyte) (jint) 0xD7, (jbyte) (jint) 0xCA, (jbyte) (jint) 0xAD, (jbyte) (jint) 0x95 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x95, (jbyte) (jint) 0x76, (jbyte) (jint) 0xA8, (jbyte) (jint) 0x2F, (jbyte) (jint) 0x49, (jbyte) (jint) 0xD7, (jbyte) (jint) 0xCA, (jbyte) (jint) 0xAD } count:8] } count:8 type:IOSClass_byteArray(1)];
  self->sboxesForEncryption_ = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xa8, (jbyte) (jint) 0x43, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x06, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x75, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x59, (jbyte) (jint) 0x71, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x87, (jbyte) (jint) 0x95, (jbyte) (jint) 0x17, (jbyte) (jint) 0xf0, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x09, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x79, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x97, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x45, (jbyte) (jint) 0x39, (jbyte) (jint) 0x3e, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x4f, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x15, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x49, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x93, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x92, (jbyte) (jint) 0x72, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x61, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x63, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xee, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x19, (jbyte) (jint) 0xd5, (jbyte) (jint) 0xad, (jbyte) (jint) 0x58, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xa1, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x83, (jbyte) (jint) 0x37, (jbyte) (jint) 0x42, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x32, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xcc, (jbyte) (jint) 0xab, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x04, (jbyte) (jint) 0x27, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x96, (jbyte) (jint) 0x16, (jbyte) (jint) 0x23, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x65, (jbyte) (jint) 0x66, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x47, (jbyte) (jint) 0x41, (jbyte) (jint) 0x34, (jbyte) (jint) 0x48, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x88, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x53, (jbyte) (jint) 0x86, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x5b, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x38, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x22, (jbyte) (jint) 0x33, (jbyte) (jint) 0x24, (jbyte) (jint) 0x28, (jbyte) (jint) 0x36, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x77, (jbyte) (jint) 0xba, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x14, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x08, (jbyte) (jint) 0x55, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x4c, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x60, (jbyte) (jint) 0x5c, (jbyte) (jint) 0xda, (jbyte) (jint) 0x18, (jbyte) (jint) 0x46, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x21, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x89, (jbyte) (jint) 0xff, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x84, (jbyte) (jint) 0x69, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x9d, (jbyte) (jint) 0xd7, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x70, (jbyte) (jint) 0x67, (jbyte) (jint) 0x40, (jbyte) (jint) 0xb5, (jbyte) (jint) 0xde, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x30, (jbyte) (jint) 0x91, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x78, (jbyte) (jint) 0x11, (jbyte) (jint) 0x01, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x00, (jbyte) (jint) 0x68, (jbyte) (jint) 0x98, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x02, (jbyte) (jint) 0xa6, (jbyte) (jint) 0x74, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x0b, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x76, (jbyte) (jint) 0xb3, (jbyte) (jint) 0xbe, (jbyte) (jint) 0xce, (jbyte) (jint) 0xbd, (jbyte) (jint) 0xae, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x31, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xec, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x99, (jbyte) (jint) 0x94, (jbyte) (jint) 0xaa, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x26, (jbyte) (jint) 0x2f, (jbyte) (jint) 0xef, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x35, (jbyte) (jint) 0x03, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x05, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x90, (jbyte) (jint) 0x20, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x82, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xea, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x50, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x07, (jbyte) (jint) 0x57, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x62, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xac, (jbyte) (jint) 0x52, (jbyte) (jint) 0x64, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd0, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x13, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x12, (jbyte) (jint) 0x29, (jbyte) (jint) 0x51, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xcf, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x73, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x81, (jbyte) (jint) 0x54, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xed, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x44, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x85, (jbyte) (jint) 0x25, (jbyte) (jint) 0xe6, (jbyte) (jint) 0xca, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x56, (jbyte) (jint) 0x80 } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xce, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x92, (jbyte) (jint) 0xea, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x13, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x3a, (jbyte) (jint) 0xd6, (jbyte) (jint) 0xb2, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x90, (jbyte) (jint) 0x17, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x42, (jbyte) (jint) 0x15, (jbyte) (jint) 0x56, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x65, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x88, (jbyte) (jint) 0x43, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x36, (jbyte) (jint) 0xba, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x57, (jbyte) (jint) 0x67, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x31, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x64, (jbyte) (jint) 0x58, (jbyte) (jint) 0x9e, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x22, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x75, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x02, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x73, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x26, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x08, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x44, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x14, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xae, (jbyte) (jint) 0x54, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x69, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x33, (jbyte) (jint) 0xab, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x68, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x16, (jbyte) (jint) 0x95, (jbyte) (jint) 0x91, (jbyte) (jint) 0xee, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x63, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x5b, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x19, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x81, (jbyte) (jint) 0x49, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x37, (jbyte) (jint) 0x60, (jbyte) (jint) 0xca, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x48, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x96, (jbyte) (jint) 0x45, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x41, (jbyte) (jint) 0x12, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x79, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x89, (jbyte) (jint) 0x8c, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x20, (jbyte) (jint) 0x30, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x4a, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x97, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x62, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x06, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x83, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x2a, (jbyte) (jint) 0xda, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x00, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x55, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x11, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x51, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x93, (jbyte) (jint) 0x1b, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x47, (jbyte) (jint) 0x09, (jbyte) (jint) 0x86, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x07, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x98, (jbyte) (jint) 0x18, (jbyte) (jint) 0x32, (jbyte) (jint) 0x71, (jbyte) (jint) 0x4b, (jbyte) (jint) 0xef, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x70, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x40, (jbyte) (jint) 0xff, (jbyte) (jint) 0xc3, (jbyte) (jint) 0xa9, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x78, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x46, (jbyte) (jint) 0x80, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x38, (jbyte) (jint) 0xe1, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xa8, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x23, (jbyte) (jint) 0x76, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x25, (jbyte) (jint) 0x24, (jbyte) (jint) 0x05, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x94, (jbyte) (jint) 0x28, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x84, (jbyte) (jint) 0xe8, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x77, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x85, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x52, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x82, (jbyte) (jint) 0x50, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x74, (jbyte) (jint) 0x53, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x61, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x39, (jbyte) (jint) 0x35, (jbyte) (jint) 0xde, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x99, (jbyte) (jint) 0xac, (jbyte) (jint) 0xad, (jbyte) (jint) 0x72, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x87, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xec, (jbyte) (jint) 0x04, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x03, (jbyte) (jint) 0x34, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x59, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x01, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x5a, (jbyte) (jint) 0xed, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x66, (jbyte) (jint) 0x21, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x27, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xc0, (jbyte) (jint) 0x29, (jbyte) (jint) 0xd7 } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x93, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x9a, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x98, (jbyte) (jint) 0x22, (jbyte) (jint) 0x45, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xba, (jbyte) (jint) 0x6a, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x02, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xdc, (jbyte) (jint) 0x51, (jbyte) (jint) 0x59, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x17, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x94, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x62, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x71, (jbyte) (jint) 0xd4, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x70, (jbyte) (jint) 0x16, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x49, (jbyte) (jint) 0x3c, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x9b, (jbyte) (jint) 0xad, (jbyte) (jint) 0x85, (jbyte) (jint) 0x53, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x2d, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x72, (jbyte) (jint) 0xa6, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xc4, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x76, (jbyte) (jint) 0x78, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x09, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x41, (jbyte) (jint) 0x4c, (jbyte) (jint) 0xde, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x90, (jbyte) (jint) 0x25, (jbyte) (jint) 0xa5, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x03, (jbyte) (jint) 0x11, (jbyte) (jint) 0x00, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x2e, (jbyte) (jint) 0x92, (jbyte) (jint) 0xef, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x12, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x35, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x4d, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x55, (jbyte) (jint) 0xc6, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x18, (jbyte) (jint) 0x97, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x36, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x48, (jbyte) (jint) 0x56, (jbyte) (jint) 0x81, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x77, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xe2, (jbyte) (jint) 0xac, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x15, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x7c, (jbyte) (jint) 0xda, (jbyte) (jint) 0x38, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x05, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x14, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x66, (jbyte) (jint) 0xfd, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x60, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x33, (jbyte) (jint) 0x87, (jbyte) (jint) 0xc9, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x88, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xec, (jbyte) (jint) 0xed, (jbyte) (jint) 0x80, (jbyte) (jint) 0x29, (jbyte) (jint) 0x27, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x99, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x50, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x37, (jbyte) (jint) 0x24, (jbyte) (jint) 0x28, (jbyte) (jint) 0x30, (jbyte) (jint) 0x95, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x40, (jbyte) (jint) 0x83, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x69, (jbyte) (jint) 0x57, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x07, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x8a, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x20, (jbyte) (jint) 0xeb, (jbyte) (jint) 0xce, (jbyte) (jint) 0x8e, (jbyte) (jint) 0xab, (jbyte) (jint) 0xee, (jbyte) (jint) 0x31, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x73, (jbyte) (jint) 0xf9, (jbyte) (jint) 0xca, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x0d, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x96, (jbyte) (jint) 0xdd, (jbyte) (jint) 0x43, (jbyte) (jint) 0x52, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x08, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xae, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x19, (jbyte) (jint) 0x89, (jbyte) (jint) 0x32, (jbyte) (jint) 0x26, (jbyte) (jint) 0xb0, (jbyte) (jint) 0xea, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x64, (jbyte) (jint) 0x84, (jbyte) (jint) 0x82, (jbyte) (jint) 0x6b, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x79, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x01, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x75, (jbyte) (jint) 0x63, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x23, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x68, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x65, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x91, (jbyte) (jint) 0xf6, (jbyte) (jint) 0xff, (jbyte) (jint) 0x13, (jbyte) (jint) 0x58, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x47, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x61, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x06, (jbyte) (jint) 0x46, (jbyte) (jint) 0x44, (jbyte) (jint) 0x42, (jbyte) (jint) 0x04, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x39, (jbyte) (jint) 0x86, (jbyte) (jint) 0x54, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x34, (jbyte) (jint) 0x21, (jbyte) (jint) 0x8b, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x74, (jbyte) (jint) 0x67 } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x68, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xca, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x73, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x2a, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x52, (jbyte) (jint) 0x26, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x54, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x19, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x22, (jbyte) (jint) 0x03, (jbyte) (jint) 0x46, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x53, (jbyte) (jint) 0x83, (jbyte) (jint) 0x13, (jbyte) (jint) 0x8a, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x25, (jbyte) (jint) 0x79, (jbyte) (jint) 0xf5, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x58, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x02, (jbyte) (jint) 0xed, (jbyte) (jint) 0x51, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x11, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x55, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x16, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x66, (jbyte) (jint) 0x70, (jbyte) (jint) 0x5d, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x45, (jbyte) (jint) 0x40, (jbyte) (jint) 0xcc, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x94, (jbyte) (jint) 0x56, (jbyte) (jint) 0x08, (jbyte) (jint) 0xce, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x3a, (jbyte) (jint) 0xd2, (jbyte) (jint) 0xe1, (jbyte) (jint) 0xdf, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x38, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xe5, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x86, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x4f, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x85, (jbyte) (jint) 0x23, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x32, (jbyte) (jint) 0x99, (jbyte) (jint) 0x31, (jbyte) (jint) 0x14, (jbyte) (jint) 0xae, (jbyte) (jint) 0xee, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x48, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x30, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x92, (jbyte) (jint) 0x41, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x18, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x71, (jbyte) (jint) 0x72, (jbyte) (jint) 0x44, (jbyte) (jint) 0x15, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x37, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x5f, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x88, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xab, (jbyte) (jint) 0x89, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xfa, (jbyte) (jint) 0x60, (jbyte) (jint) 0xea, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x62, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x24, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xa8, (jbyte) (jint) 0xec, (jbyte) (jint) 0x67, (jbyte) (jint) 0x20, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x28, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xac, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x34, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x10, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x63, (jbyte) (jint) 0xa0, (jbyte) (jint) 0x05, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x43, (jbyte) (jint) 0x77, (jbyte) (jint) 0x21, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x27, (jbyte) (jint) 0x09, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x29, (jbyte) (jint) 0xc2, (jbyte) (jint) 0xeb, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xff, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x97, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x65, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x75, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x49, (jbyte) (jint) 0x33, (jbyte) (jint) 0xe4, (jbyte) (jint) 0xd9, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x42, (jbyte) (jint) 0xc7, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x90, (jbyte) (jint) 0x00, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x50, (jbyte) (jint) 0x01, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xda, (jbyte) (jint) 0x47, (jbyte) (jint) 0x3f, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x69, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x93, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x06, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x96, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x12, (jbyte) (jint) 0x84, (jbyte) (jint) 0x39, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x82, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x87, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x81, (jbyte) (jint) 0x35, (jbyte) (jint) 0xde, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xa5, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x80, (jbyte) (jint) 0xef, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x76, (jbyte) (jint) 0xba, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x78, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x95, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xad, (jbyte) (jint) 0x74, (jbyte) (jint) 0x98, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x36, (jbyte) (jint) 0x64, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x59, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x17, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x91, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x57, (jbyte) (jint) 0x1b, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x61 } count:256] } count:4 type:IOSClass_byteArray(1)];
  self->sboxesForDecryption_ = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xa4, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xa9, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x4e, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x03, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xd2, (jbyte) (jint) 0xad, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x27, (jbyte) (jint) 0x5b, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xa1, (jbyte) (jint) 0xe8, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x55, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x86, (jbyte) (jint) 0x39, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x12, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x28, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x70, (jbyte) (jint) 0x56, (jbyte) (jint) 0x72, (jbyte) (jint) 0xf9, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x73, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x57, (jbyte) (jint) 0x16, (jbyte) (jint) 0xac, (jbyte) (jint) 0x50, (jbyte) (jint) 0xc0, (jbyte) (jint) 0x9d, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x47, (jbyte) (jint) 0x71, (jbyte) (jint) 0x60, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x74, (jbyte) (jint) 0x43, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x93, (jbyte) (jint) 0x77, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xce, (jbyte) (jint) 0x20, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x99, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x44, (jbyte) (jint) 0x01, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x87, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x61, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x81, (jbyte) (jint) 0x15, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x23, (jbyte) (jint) 0xd6, (jbyte) (jint) 0xea, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x67, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xda, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x07, (jbyte) (jint) 0x53, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x84, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x02, (jbyte) (jint) 0x83, (jbyte) (jint) 0x33, (jbyte) (jint) 0xdd, (jbyte) (jint) 0x35, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x59, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x98, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x92, (jbyte) (jint) 0x64, (jbyte) (jint) 0x04, (jbyte) (jint) 0x06, (jbyte) (jint) 0x10, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x97, (jbyte) (jint) 0x08, (jbyte) (jint) 0x31, (jbyte) (jint) 0xee, (jbyte) (jint) 0xab, (jbyte) (jint) 0x05, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x79, (jbyte) (jint) 0xa0, (jbyte) (jint) 0x18, (jbyte) (jint) 0x46, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x89, (jbyte) (jint) 0xd4, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xff, (jbyte) (jint) 0xf0, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x42, (jbyte) (jint) 0x91, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x68, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x65, (jbyte) (jint) 0x8e, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xfd, (jbyte) (jint) 0xc3, (jbyte) (jint) 0xef, (jbyte) (jint) 0x78, (jbyte) (jint) 0x4c, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x30, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x54, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x26, (jbyte) (jint) 0x80, (jbyte) (jint) 0x48, (jbyte) (jint) 0x94, (jbyte) (jint) 0x32, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x3f, (jbyte) (jint) 0xae, (jbyte) (jint) 0x22, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x66, (jbyte) (jint) 0xaa, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x00, (jbyte) (jint) 0x5d, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x4a, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x3b, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x17, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x76, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x24, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x25, (jbyte) (jint) 0x63, (jbyte) (jint) 0xdb, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x5c, (jbyte) (jint) 0xb3, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x29, (jbyte) (jint) 0xf2, (jbyte) (jint) 0xca, (jbyte) (jint) 0x58, (jbyte) (jint) 0x6e, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x75, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x14, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x13, (jbyte) (jint) 0x49, (jbyte) (jint) 0x88, (jbyte) (jint) 0xb2, (jbyte) (jint) 0xec, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x34, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x96, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x3a, (jbyte) (jint) 0xed, (jbyte) (jint) 0x95, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x85, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x40, (jbyte) (jint) 0x21, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x09, (jbyte) (jint) 0x19, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x52, (jbyte) (jint) 0xde, (jbyte) (jint) 0x45, (jbyte) (jint) 0xa3, (jbyte) (jint) 0xfa, (jbyte) (jint) 0x51, (jbyte) (jint) 0xc2, (jbyte) (jint) 0xb5, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x90, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x37, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x0d, (jbyte) (jint) 0xba, (jbyte) (jint) 0x41, (jbyte) (jint) 0x11, (jbyte) (jint) 0x38, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xbe, (jbyte) (jint) 0xd0, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x69, (jbyte) (jint) 0x36, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x62, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x82, (jbyte) (jint) 0x8f } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x83, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x2a, (jbyte) (jint) 0xeb, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x9c, (jbyte) (jint) 0x34, (jbyte) (jint) 0x96, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x98, (jbyte) (jint) 0xb9, (jbyte) (jint) 0x69, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x29, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x88, (jbyte) (jint) 0x68, (jbyte) (jint) 0x06, (jbyte) (jint) 0x39, (jbyte) (jint) 0x11, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xa0, (jbyte) (jint) 0x56, (jbyte) (jint) 0x40, (jbyte) (jint) 0x92, (jbyte) (jint) 0x15, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xb3, (jbyte) (jint) 0xdc, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x26, (jbyte) (jint) 0xba, (jbyte) (jint) 0xbe, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x31, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xc3, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x80, (jbyte) (jint) 0x61, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x32, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x70, (jbyte) (jint) 0x20, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x45, (jbyte) (jint) 0xec, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x5d, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x09, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x55, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x37, (jbyte) (jint) 0x76, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x67, (jbyte) (jint) 0x10, (jbyte) (jint) 0x17, (jbyte) (jint) 0x36, (jbyte) (jint) 0x65, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x95, (jbyte) (jint) 0x62, (jbyte) (jint) 0x59, (jbyte) (jint) 0x74, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x50, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x4b, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x8f, (jbyte) (jint) 0xcd, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x86, (jbyte) (jint) 0x12, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x23, (jbyte) (jint) 0xef, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x53, (jbyte) (jint) 0x19, (jbyte) (jint) 0x35, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x79, (jbyte) (jint) 0x51, (jbyte) (jint) 0x22, (jbyte) (jint) 0x14, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x42, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x41, (jbyte) (jint) 0x73, (jbyte) (jint) 0x2d, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x5c, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x28, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xc9, (jbyte) (jint) 0xae, (jbyte) (jint) 0x6a, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x30, (jbyte) (jint) 0x90, (jbyte) (jint) 0x84, (jbyte) (jint) 0xf9, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x58, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x97, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x16, (jbyte) (jint) 0x6c, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x52, (jbyte) (jint) 0x99, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x03, (jbyte) (jint) 0x91, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x64, (jbyte) (jint) 0x77, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x49, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x24, (jbyte) (jint) 0x38, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x57, (jbyte) (jint) 0x85, (jbyte) (jint) 0xc7, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xf6, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xac, (jbyte) (jint) 0x27, (jbyte) (jint) 0x46, (jbyte) (jint) 0xde, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x3b, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x0b, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x13, (jbyte) (jint) 0x75, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x72, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x01, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x44, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x87, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x07, (jbyte) (jint) 0xf1, (jbyte) (jint) 0xab, (jbyte) (jint) 0x94, (jbyte) (jint) 0x18, (jbyte) (jint) 0xea, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x82, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x05, (jbyte) (jint) 0x54, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x00, (jbyte) (jint) 0x8b, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x48, (jbyte) (jint) 0x0c, (jbyte) (jint) 0xca, (jbyte) (jint) 0x78, (jbyte) (jint) 0x89, (jbyte) (jint) 0x0a, (jbyte) (jint) 0xff, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x81, (jbyte) (jint) 0xee, (jbyte) (jint) 0x71, (jbyte) (jint) 0xe2, (jbyte) (jint) 0xda, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xb5, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x6e, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x6b, (jbyte) (jint) 0xad, (jbyte) (jint) 0x60, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x08, (jbyte) (jint) 0x04, (jbyte) (jint) 0x02, (jbyte) (jint) 0xe8, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x4f, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xce, (jbyte) (jint) 0x43, (jbyte) (jint) 0x25, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x21, (jbyte) (jint) 0x33, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x47, (jbyte) (jint) 0xed, (jbyte) (jint) 0x66, (jbyte) (jint) 0x63, (jbyte) (jint) 0x93, (jbyte) (jint) 0xaa } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x45, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x43, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x72, (jbyte) (jint) 0xed, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x38, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x71, (jbyte) (jint) 0xfd, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x95, (jbyte) (jint) 0x50, (jbyte) (jint) 0x44, (jbyte) (jint) 0x4b, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x74, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x11, (jbyte) (jint) 0x5a, (jbyte) (jint) 0xc6, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x70, (jbyte) (jint) 0xa3, (jbyte) (jint) 0xa8, (jbyte) (jint) 0xfa, (jbyte) (jint) 0x05, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x97, (jbyte) (jint) 0x40, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x90, (jbyte) (jint) 0x98, (jbyte) (jint) 0x8f, (jbyte) (jint) 0xdc, (jbyte) (jint) 0x12, (jbyte) (jint) 0x31, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x47, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x99, (jbyte) (jint) 0xae, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x96, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x39, (jbyte) (jint) 0x21, (jbyte) (jint) 0xda, (jbyte) (jint) 0x9c, (jbyte) (jint) 0x85, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x3b, (jbyte) (jint) 0xf0, (jbyte) (jint) 0xbf, (jbyte) (jint) 0xef, (jbyte) (jint) 0x06, (jbyte) (jint) 0xee, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x20, (jbyte) (jint) 0x10, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x54, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x52, (jbyte) (jint) 0x94, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xc0, (jbyte) (jint) 0x28, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x56, (jbyte) (jint) 0x60, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xec, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x24, (jbyte) (jint) 0x83, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x7c, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x18, (jbyte) (jint) 0xd7, (jbyte) (jint) 0xcd, (jbyte) (jint) 0xdd, (jbyte) (jint) 0x78, (jbyte) (jint) 0xff, (jbyte) (jint) 0xdb, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x09, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x76, (jbyte) (jint) 0x84, (jbyte) (jint) 0x75, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x2f, (jbyte) (jint) 0xb0, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x34, (jbyte) (jint) 0x63, (jbyte) (jint) 0x35, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x59, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x77, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x61, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xce, (jbyte) (jint) 0x27, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x80, (jbyte) (jint) 0x86, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x87, (jbyte) (jint) 0xab, (jbyte) (jint) 0x62, (jbyte) (jint) 0x3f, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x48, (jbyte) (jint) 0x00, (jbyte) (jint) 0x14, (jbyte) (jint) 0x9a, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x04, (jbyte) (jint) 0x92, (jbyte) (jint) 0x02, (jbyte) (jint) 0x25, (jbyte) (jint) 0x65, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x53, (jbyte) (jint) 0x0c, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x29, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x17, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x41, (jbyte) (jint) 0x30, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x93, (jbyte) (jint) 0x55, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xac, (jbyte) (jint) 0x68, (jbyte) (jint) 0x26, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xca, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x3e, (jbyte) (jint) 0xa0, (jbyte) (jint) 0x37, (jbyte) (jint) 0x03, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x36, (jbyte) (jint) 0x69, (jbyte) (jint) 0x66, (jbyte) (jint) 0x08, (jbyte) (jint) 0x16, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x22, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x13, (jbyte) (jint) 0x46, (jbyte) (jint) 0x32, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x57, (jbyte) (jint) 0x88, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x81, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x64, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x91, (jbyte) (jint) 0x58, (jbyte) (jint) 0x2e, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x51, (jbyte) (jint) 0x73, (jbyte) (jint) 0x42, (jbyte) (jint) 0x23, (jbyte) (jint) 0x01, (jbyte) (jint) 0x6e, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x0d, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x67, (jbyte) (jint) 0x33, (jbyte) (jint) 0x19, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xea, (jbyte) (jint) 0xde, (jbyte) (jint) 0x8b, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xad, (jbyte) (jint) 0x49, (jbyte) (jint) 0x82, (jbyte) (jint) 0xe4, (jbyte) (jint) 0xba, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x15, (jbyte) (jint) 0xd1, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x89, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x07, (jbyte) (jint) 0x79, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xe1 } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xb2, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x23, (jbyte) (jint) 0x11, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x88, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xa6, (jbyte) (jint) 0x39, (jbyte) (jint) 0x8f, (jbyte) (jint) 0xc4, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x73, (jbyte) (jint) 0x22, (jbyte) (jint) 0x43, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x82, (jbyte) (jint) 0x27, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x18, (jbyte) (jint) 0x51, (jbyte) (jint) 0x62, (jbyte) (jint) 0x2d, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x3b, (jbyte) (jint) 0xfd, (jbyte) (jint) 0xca, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x79, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x10, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x74, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x94, (jbyte) (jint) 0x07, (jbyte) (jint) 0xc7, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x14, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x21, (jbyte) (jint) 0x57, (jbyte) (jint) 0x50, (jbyte) (jint) 0x4e, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x80, (jbyte) (jint) 0xd9, (jbyte) (jint) 0xef, (jbyte) (jint) 0x64, (jbyte) (jint) 0x41, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x3c, (jbyte) (jint) 0xee, (jbyte) (jint) 0x2e, (jbyte) (jint) 0x13, (jbyte) (jint) 0x29, (jbyte) (jint) 0xba, (jbyte) (jint) 0x34, (jbyte) (jint) 0x5a, (jbyte) (jint) 0xae, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x61, (jbyte) (jint) 0x33, (jbyte) (jint) 0x12, (jbyte) (jint) 0xb9, (jbyte) (jint) 0x55, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x15, (jbyte) (jint) 0x05, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x03, (jbyte) (jint) 0x06, (jbyte) (jint) 0x49, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x25, (jbyte) (jint) 0x09, (jbyte) (jint) 0x16, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x38, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x20, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x31, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x66, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xff, (jbyte) (jint) 0x72, (jbyte) (jint) 0x86, (jbyte) (jint) 0xf0, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x78, (jbyte) (jint) 0x00, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xcc, (jbyte) (jint) 0xe2, (jbyte) (jint) 0xb0, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x42, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x30, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x60, (jbyte) (jint) 0x04, (jbyte) (jint) 0xec, (jbyte) (jint) 0xa5, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x8b, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x84, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x81, (jbyte) (jint) 0xf8, (jbyte) (jint) 0xde, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x17, (jbyte) (jint) 0xce, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x47, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x69, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x19, (jbyte) (jint) 0x99, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x01, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x85, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x59, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x37, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xed, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x89, (jbyte) (jint) 0x68, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x26, (jbyte) (jint) 0x91, (jbyte) (jint) 0x87, (jbyte) (jint) 0x58, (jbyte) (jint) 0xbd, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x98, (jbyte) (jint) 0xdc, (jbyte) (jint) 0x75, (jbyte) (jint) 0xc0, (jbyte) (jint) 0x76, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x67, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x52, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x0b, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x40, (jbyte) (jint) 0x92, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xac, (jbyte) (jint) 0xe4, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x71, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x65, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x97, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x95, (jbyte) (jint) 0x90, (jbyte) (jint) 0x5d, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x54, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x02, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x35, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x4d, (jbyte) (jint) 0xad, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x56, (jbyte) (jint) 0x08, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x93, (jbyte) (jint) 0x6a, (jbyte) (jint) 0xab, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xda, (jbyte) (jint) 0x3f, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x3e, (jbyte) (jint) 0xbe, (jbyte) (jint) 0xea, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x44, (jbyte) (jint) 0xc6, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x36, (jbyte) (jint) 0x48, (jbyte) (jint) 0x70, (jbyte) (jint) 0x96, (jbyte) (jint) 0x77, (jbyte) (jint) 0x24, (jbyte) (jint) 0x53, (jbyte) (jint) 0xdf, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x83, (jbyte) (jint) 0x28, (jbyte) (jint) 0x32, (jbyte) (jint) 0x45, (jbyte) (jint) 0x1e, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xd3, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x46, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xdd, (jbyte) (jint) 0x63, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x9d } count:256] } count:4 type:IOSClass_byteArray(1)];
  if (blockBitLength != 128 && blockBitLength != 256 && blockBitLength != 512) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"unsupported block length: only 128/256/512 are allowed");
  }
  self->wordsInBlock_ = blockBitLength / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_WORD;
  self->internalState_ = [IOSLongArray newArrayWithLength:self->wordsInBlock_];
  self->internalStateBytes_ = [IOSByteArray newArrayWithLength:self->internalState_->size_ * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE];
  self->tempInternalStateBytes_ = [IOSByteArray newArrayWithLength:self->internalState_->size_ * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE];
}

OrgSpongycastleCryptoEnginesDSTU7624Engine *new_OrgSpongycastleCryptoEnginesDSTU7624Engine_initWithInt_(jint blockBitLength) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesDSTU7624Engine, initWithInt_, blockBitLength)
}

OrgSpongycastleCryptoEnginesDSTU7624Engine *create_OrgSpongycastleCryptoEnginesDSTU7624Engine_initWithInt_(jint blockBitLength) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesDSTU7624Engine, initWithInt_, blockBitLength)
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandKTWithLongArray_withLongArray_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSLongArray *workingKey, IOSLongArray *tempKeys) {
  IOSLongArray *k0 = [IOSLongArray newArrayWithLength:self->wordsInBlock_];
  IOSLongArray *k1 = [IOSLongArray newArrayWithLength:self->wordsInBlock_];
  self->internalState_ = [IOSLongArray newArrayWithLength:self->wordsInBlock_];
  *IOSLongArray_GetRef(self->internalState_, 0) += self->wordsInBlock_ + self->wordsInKey_ + 1;
  if (self->wordsInBlock_ == self->wordsInKey_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(workingKey, 0, k0, 0, k0->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(workingKey, 0, k1, 0, k1->size_);
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(workingKey, 0, k0, 0, self->wordsInBlock_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(workingKey, self->wordsInBlock_, k1, 0, self->wordsInBlock_);
  }
  for (jint wordIndex = 0; wordIndex < ((IOSLongArray *) nil_chk(self->internalState_))->size_; wordIndex++) {
    *IOSLongArray_GetRef(self->internalState_, wordIndex) += IOSLongArray_Get(k0, wordIndex);
  }
  OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
  OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
  OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, self->mdsMatrix_);
  for (jint wordIndex = 0; wordIndex < ((IOSLongArray *) nil_chk(self->internalState_))->size_; wordIndex++) {
    *IOSLongArray_GetRef(self->internalState_, wordIndex) ^= IOSLongArray_Get(k1, wordIndex);
  }
  OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
  OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
  OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, self->mdsMatrix_);
  for (jint wordIndex = 0; wordIndex < ((IOSLongArray *) nil_chk(self->internalState_))->size_; wordIndex++) {
    *IOSLongArray_GetRef(self->internalState_, wordIndex) += IOSLongArray_Get(k0, wordIndex);
  }
  OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
  OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
  OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, self->mdsMatrix_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->internalState_, 0, tempKeys, 0, self->wordsInBlock_);
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandEvenWithLongArray_withLongArray_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSLongArray *workingKey, IOSLongArray *tempKey) {
  IOSLongArray *initialData = [IOSLongArray newArrayWithLength:self->wordsInKey_];
  IOSLongArray *tempRoundKey = [IOSLongArray newArrayWithLength:self->wordsInBlock_];
  IOSLongArray *tmv = [IOSLongArray newArrayWithLength:self->wordsInBlock_];
  jint round = 0;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(workingKey, 0, initialData, 0, self->wordsInKey_);
  for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
    *IOSLongArray_GetRef(tmv, wordIndex) = (jlong) 0x0001000100010001LL;
  }
  while (true) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tempKey, 0, self->internalState_, 0, self->wordsInBlock_);
    for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
      *IOSLongArray_GetRef(nil_chk(self->internalState_), wordIndex) += IOSLongArray_Get(tmv, wordIndex);
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->internalState_, 0, tempRoundKey, 0, self->wordsInBlock_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(initialData, 0, self->internalState_, 0, self->wordsInBlock_);
    for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
      *IOSLongArray_GetRef(nil_chk(self->internalState_), wordIndex) += IOSLongArray_Get(tempRoundKey, wordIndex);
    }
    OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, self->mdsMatrix_);
    for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
      *IOSLongArray_GetRef(nil_chk(self->internalState_), wordIndex) ^= IOSLongArray_Get(tempRoundKey, wordIndex);
    }
    OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, self->mdsMatrix_);
    for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
      *IOSLongArray_GetRef(nil_chk(self->internalState_), wordIndex) += IOSLongArray_Get(tempRoundKey, wordIndex);
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->internalState_, 0, IOSObjectArray_Get(nil_chk(self->roundKeys_), round), 0, self->wordsInBlock_);
    if (self->roundsAmount_ == round) {
      break;
    }
    if (self->wordsInBlock_ != self->wordsInKey_) {
      round += 2;
      OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftLeftWithLongArray_(self, tmv);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tempKey, 0, self->internalState_, 0, self->wordsInBlock_);
      for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
        *IOSLongArray_GetRef(nil_chk(self->internalState_), wordIndex) += IOSLongArray_Get(tmv, wordIndex);
      }
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->internalState_, 0, tempRoundKey, 0, self->wordsInBlock_);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(initialData, self->wordsInBlock_, self->internalState_, 0, self->wordsInBlock_);
      for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
        *IOSLongArray_GetRef(nil_chk(self->internalState_), wordIndex) += IOSLongArray_Get(tempRoundKey, wordIndex);
      }
      OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
      OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
      OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, self->mdsMatrix_);
      for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
        *IOSLongArray_GetRef(nil_chk(self->internalState_), wordIndex) ^= IOSLongArray_Get(tempRoundKey, wordIndex);
      }
      OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(self);
      OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(self);
      OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(self, self->mdsMatrix_);
      for (jint wordIndex = 0; wordIndex < self->wordsInBlock_; wordIndex++) {
        *IOSLongArray_GetRef(nil_chk(self->internalState_), wordIndex) += IOSLongArray_Get(tempRoundKey, wordIndex);
      }
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->internalState_, 0, IOSObjectArray_Get(nil_chk(self->roundKeys_), round), 0, self->wordsInBlock_);
      if (self->roundsAmount_ == round) {
        break;
      }
    }
    round += 2;
    OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftLeftWithLongArray_(self, tmv);
    jlong temp = IOSLongArray_Get(initialData, 0);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(initialData, 1, initialData, 0, initialData->size_ - 1);
    *IOSLongArray_GetRef(initialData, initialData->size_ - 1) = temp;
  }
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_workingKeyExpandOdd(OrgSpongycastleCryptoEnginesDSTU7624Engine *self) {
  for (jint roundIndex = 1; roundIndex < self->roundsAmount_; roundIndex += 2) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(self->roundKeys_), roundIndex - 1), 0, IOSObjectArray_Get(self->roundKeys_, roundIndex), 0, self->wordsInBlock_);
    OrgSpongycastleCryptoEnginesDSTU7624Engine_RotateLeftWithLongArray_(self, IOSObjectArray_Get(nil_chk(self->roundKeys_), roundIndex));
  }
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_SubBytes(OrgSpongycastleCryptoEnginesDSTU7624Engine *self) {
  for (jint i = 0; i < self->wordsInBlock_; i++) {
    *IOSLongArray_GetRef(nil_chk(self->internalState_), i) = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->sboxesForEncryption_), 0)), (jint) (IOSLongArray_Get(self->internalState_, i) & (jlong) 0x00000000000000FFLL)) & (jlong) 0x00000000000000FFLL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForEncryption_, 1)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x000000000000FF00LL), 8))), 8)) & (jlong) 0x000000000000FF00LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForEncryption_, 2)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x0000000000FF0000LL), 16))), 16)) & (jlong) 0x0000000000FF0000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForEncryption_, 3)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x00000000FF000000LL), 24))), 24)) & (jlong) 0x00000000FF000000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForEncryption_, 0)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x000000FF00000000LL), 32))), 32)) & (jlong) 0x000000FF00000000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForEncryption_, 1)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x0000FF0000000000LL), 40))), 40)) & (jlong) 0x0000FF0000000000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForEncryption_, 2)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x00FF000000000000LL), 48))), 48)) & (jlong) 0x00FF000000000000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForEncryption_, 3)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0xFF00000000000000LL), 56))), 56)) & (jlong) 0xFF00000000000000LL);
  }
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_InvSubBytes(OrgSpongycastleCryptoEnginesDSTU7624Engine *self) {
  for (jint i = 0; i < self->wordsInBlock_; i++) {
    *IOSLongArray_GetRef(nil_chk(self->internalState_), i) = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->sboxesForDecryption_), 0)), (jint) (IOSLongArray_Get(self->internalState_, i) & (jlong) 0x00000000000000FFLL)) & (jlong) 0x00000000000000FFLL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForDecryption_, 1)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x000000000000FF00LL), 8))), 8)) & (jlong) 0x000000000000FF00LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForDecryption_, 2)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x0000000000FF0000LL), 16))), 16)) & (jlong) 0x0000000000FF0000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForDecryption_, 3)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x00000000FF000000LL), 24))), 24)) & (jlong) 0x00000000FF000000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForDecryption_, 0)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x000000FF00000000LL), 32))), 32)) & (jlong) 0x000000FF00000000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForDecryption_, 1)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x0000FF0000000000LL), 40))), 40)) & (jlong) 0x0000FF0000000000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForDecryption_, 2)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0x00FF000000000000LL), 48))), 48)) & (jlong) 0x00FF000000000000LL) | ((JreLShift64((jlong) IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->sboxesForDecryption_, 3)), (jint) (JreURShift64((IOSLongArray_Get(self->internalState_, i) & (jlong) 0xFF00000000000000LL), 56))), 56)) & (jlong) 0xFF00000000000000LL);
  }
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftRows(OrgSpongycastleCryptoEnginesDSTU7624Engine *self) {
  jint row;
  jint col;
  jint shift = -1;
  OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(self->internalState_, self->internalStateBytes_, 0);
  for (row = 0; row < OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE; row++) {
    if (row % (OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE / self->wordsInBlock_) == 0) {
      shift += 1;
    }
    for (col = 0; col < self->wordsInBlock_; col++) {
      *IOSByteArray_GetRef(nil_chk(self->tempInternalStateBytes_), row + ((col + shift) % self->wordsInBlock_) * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE) = IOSByteArray_Get(nil_chk(self->internalStateBytes_), row + col * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE);
    }
  }
  OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(self->tempInternalStateBytes_, 0, self->internalState_);
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_InvShiftRows(OrgSpongycastleCryptoEnginesDSTU7624Engine *self) {
  jint row;
  jint col;
  jint shift = -1;
  OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(self->internalState_, self->internalStateBytes_, 0);
  for (row = 0; row < OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE; row++) {
    if (row % (OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE / self->wordsInBlock_) == 0) {
      shift += 1;
    }
    for (col = 0; col < self->wordsInBlock_; col++) {
      *IOSByteArray_GetRef(nil_chk(self->tempInternalStateBytes_), row + col * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE) = IOSByteArray_Get(nil_chk(self->internalStateBytes_), row + ((col + shift) % self->wordsInBlock_) * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE);
    }
  }
  OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(self->tempInternalStateBytes_, 0, self->internalState_);
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_MixColumnsWithByteArray2_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSObjectArray *matrix) {
  jint col;
  jint row;
  jint b;
  jbyte product;
  jlong result;
  OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(self->internalState_, self->internalStateBytes_, 0);
  jlong shift;
  for (col = 0; col < self->wordsInBlock_; ++col) {
    result = 0;
    shift = (jlong) 0xFF00000000000000LL;
    for (row = OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE - 1; row >= 0; --row) {
      product = 0;
      for (b = OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE - 1; b >= 0; --b) {
        product ^= OrgSpongycastleCryptoEnginesDSTU7624Engine_MultiplyGFWithByte_withByte_(self, IOSByteArray_Get(nil_chk(self->internalStateBytes_), b + col * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(matrix), row)), b));
      }
      result |= ((JreLShift64((jlong) product, (row * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE))) & shift);
      JreURShiftAssignLong(&shift, 8);
    }
    *IOSLongArray_GetRef(nil_chk(self->internalState_), col) = result;
  }
}

jbyte OrgSpongycastleCryptoEnginesDSTU7624Engine_MultiplyGFWithByte_withByte_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, jbyte x, jbyte y) {
  jint u = x & (jint) 0xFF;
  jint v = y & (jint) 0xFF;
  jint r = u & -(v & 1);
  for (jint i = 1; i < OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE; i++) {
    JreLShiftAssignInt(&u, 1);
    JreURShiftAssignInt(&v, 1);
    r ^= u & -(v & 1);
  }
  jint hi = r & (jint) 0xFF00;
  r ^= hi ^ (JreURShift32(hi, 4)) ^ (JreURShift32(hi, 5)) ^ (JreURShift32(hi, 6)) ^ (JreURShift32(hi, 8));
  hi = r & (jint) 0x0F00;
  r ^= hi ^ (JreURShift32(hi, 4)) ^ (JreURShift32(hi, 5)) ^ (JreURShift32(hi, 6)) ^ (JreURShift32(hi, 8));
  return (jbyte) r;
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_ShiftLeftWithLongArray_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSLongArray *value) {
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(value))->size_; i++) {
    JreLShiftAssignLong(IOSLongArray_GetRef(value, i), 1);
  }
  for (jint i = 0; i < value->size_ / 2; i++) {
    jlong temp = IOSLongArray_Get(value, i);
    *IOSLongArray_GetRef(value, i) = IOSLongArray_Get(value, value->size_ - i - 1);
    *IOSLongArray_GetRef(value, value->size_ - i - 1) = temp;
  }
}

void OrgSpongycastleCryptoEnginesDSTU7624Engine_RotateLeftWithLongArray_(OrgSpongycastleCryptoEnginesDSTU7624Engine *self, IOSLongArray *value) {
  jint rotateBytesLength = 2 * ((IOSLongArray *) nil_chk(value))->size_ + 3;
  jint bytesLength = value->size_ * (OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_WORD / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE);
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:value->size_ * OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_LONG / OrgSpongycastleCryptoEnginesDSTU7624Engine_BITS_IN_BYTE];
  OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(value, bytes, 0);
  IOSByteArray *buffer = [IOSByteArray newArrayWithLength:rotateBytesLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bytes, 0, buffer, 0, rotateBytesLength);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bytes, rotateBytesLength, bytes, 0, bytesLength - rotateBytesLength);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buffer, 0, bytes, bytesLength - rotateBytesLength, rotateBytesLength);
  OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(bytes, 0, value);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesDSTU7624Engine)
