//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/RijndaelEngine.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/DataLengthException.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/engines/RijndaelEngine.h"
#include "org/spongycastle/crypto/params/KeyParameter.h"

@interface OrgSpongycastleCryptoEnginesRijndaelEngine () {
 @public
  jint BC_;
  jlong BC_MASK_;
  jint ROUNDS_;
  jint blockBits_;
  IOSObjectArray *workingKey_;
  jlong A0_;
  jlong A1_;
  jlong A2_;
  jlong A3_;
  jboolean forEncryption_;
  IOSByteArray *shifts0SC_;
  IOSByteArray *shifts1SC_;
}

- (jbyte)mul0x2WithInt:(jint)b;

- (jbyte)mul0x3WithInt:(jint)b;

- (jbyte)mul0x9WithInt:(jint)b;

- (jbyte)mul0xbWithInt:(jint)b;

- (jbyte)mul0xdWithInt:(jint)b;

- (jbyte)mul0xeWithInt:(jint)b;

- (void)KeyAdditionWithLongArray:(IOSLongArray *)rk;

- (jlong)shiftWithLong:(jlong)r
               withInt:(jint)shift;

- (void)ShiftRowWithByteArray:(IOSByteArray *)shiftsSC;

- (jlong)applySWithLong:(jlong)r
          withByteArray:(IOSByteArray *)box;

- (void)SubstitutionWithByteArray:(IOSByteArray *)box;

- (void)MixColumn;

- (void)InvMixColumn;

- (IOSObjectArray *)generateWorkingKeyWithByteArray:(IOSByteArray *)key;

- (void)unpackBlockWithByteArray:(IOSByteArray *)bytes
                         withInt:(jint)off;

- (void)packBlockWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)off;

- (void)encryptBlockWithLongArray2:(IOSObjectArray *)rk;

- (void)decryptBlockWithLongArray2:(IOSObjectArray *)rk;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesRijndaelEngine, workingKey_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesRijndaelEngine, shifts0SC_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesRijndaelEngine, shifts1SC_, IOSByteArray *)

inline jint OrgSpongycastleCryptoEnginesRijndaelEngine_get_MAXROUNDS(void);
#define OrgSpongycastleCryptoEnginesRijndaelEngine_MAXROUNDS 14
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesRijndaelEngine, MAXROUNDS, jint)

inline jint OrgSpongycastleCryptoEnginesRijndaelEngine_get_MAXKC(void);
#define OrgSpongycastleCryptoEnginesRijndaelEngine_MAXKC 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesRijndaelEngine, MAXKC, jint)

inline IOSByteArray *OrgSpongycastleCryptoEnginesRijndaelEngine_get_logtable(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesRijndaelEngine_logtable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesRijndaelEngine, logtable, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesRijndaelEngine_get_aLogtable(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesRijndaelEngine, aLogtable, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesRijndaelEngine_get_S(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesRijndaelEngine_S;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesRijndaelEngine, S, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesRijndaelEngine_get_Si(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesRijndaelEngine_Si;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesRijndaelEngine, Si, IOSByteArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesRijndaelEngine_get_rcon(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesRijndaelEngine_rcon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesRijndaelEngine, rcon, IOSIntArray *)

__attribute__((unused)) static jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x2WithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b);

__attribute__((unused)) static jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x3WithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b);

__attribute__((unused)) static jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x9WithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b);

__attribute__((unused)) static jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xbWithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b);

__attribute__((unused)) static jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xdWithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b);

__attribute__((unused)) static jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xeWithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSLongArray *rk);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesRijndaelEngine_shiftWithLong_withInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jlong r, jint shift);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_ShiftRowWithByteArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *shiftsSC);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesRijndaelEngine_applySWithLong_withByteArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jlong r, IOSByteArray *box);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_SubstitutionWithByteArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *box);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_MixColumn(OrgSpongycastleCryptoEnginesRijndaelEngine *self);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_InvMixColumn(OrgSpongycastleCryptoEnginesRijndaelEngine *self);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_generateWorkingKeyWithByteArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *key);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_unpackBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *bytes, jint off);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_packBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *bytes, jint off);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_encryptBlockWithLongArray2_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSObjectArray *rk);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRijndaelEngine_decryptBlockWithLongArray2_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSObjectArray *rk);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoEnginesRijndaelEngine)

IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0;
IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1;

@implementation OrgSpongycastleCryptoEnginesRijndaelEngine

- (jbyte)mul0x2WithInt:(jint)b {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x2WithInt_(self, b);
}

- (jbyte)mul0x3WithInt:(jint)b {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x3WithInt_(self, b);
}

- (jbyte)mul0x9WithInt:(jint)b {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x9WithInt_(self, b);
}

- (jbyte)mul0xbWithInt:(jint)b {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xbWithInt_(self, b);
}

- (jbyte)mul0xdWithInt:(jint)b {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xdWithInt_(self, b);
}

- (jbyte)mul0xeWithInt:(jint)b {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xeWithInt_(self, b);
}

- (void)KeyAdditionWithLongArray:(IOSLongArray *)rk {
  OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(self, rk);
}

- (jlong)shiftWithLong:(jlong)r
               withInt:(jint)shift {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_shiftWithLong_withInt_(self, r, shift);
}

- (void)ShiftRowWithByteArray:(IOSByteArray *)shiftsSC {
  OrgSpongycastleCryptoEnginesRijndaelEngine_ShiftRowWithByteArray_(self, shiftsSC);
}

- (jlong)applySWithLong:(jlong)r
          withByteArray:(IOSByteArray *)box {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_applySWithLong_withByteArray_(self, r, box);
}

- (void)SubstitutionWithByteArray:(IOSByteArray *)box {
  OrgSpongycastleCryptoEnginesRijndaelEngine_SubstitutionWithByteArray_(self, box);
}

- (void)MixColumn {
  OrgSpongycastleCryptoEnginesRijndaelEngine_MixColumn(self);
}

- (void)InvMixColumn {
  OrgSpongycastleCryptoEnginesRijndaelEngine_InvMixColumn(self);
}

- (IOSObjectArray *)generateWorkingKeyWithByteArray:(IOSByteArray *)key {
  return OrgSpongycastleCryptoEnginesRijndaelEngine_generateWorkingKeyWithByteArray_(self, key);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEnginesRijndaelEngine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)blockBits {
  OrgSpongycastleCryptoEnginesRijndaelEngine_initWithInt_(self, blockBits);
  return self;
}

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if ([params isKindOfClass:[OrgSpongycastleCryptoParamsKeyParameter class]]) {
    workingKey_ = OrgSpongycastleCryptoEnginesRijndaelEngine_generateWorkingKeyWithByteArray_(self, [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) params))) getKey]);
    self->forEncryption_ = forEncryption;
    return;
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid parameter passed to Rijndael init - ", [[((id<OrgSpongycastleCryptoCipherParameters>) nil_chk(params)) java_getClass] getName]));
}

- (NSString *)getAlgorithmName {
  return @"Rijndael";
}

- (jint)getBlockSize {
  return BC_ / 2;
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  if (workingKey_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Rijndael engine not initialised");
  }
  if ((inOff + (BC_ / 2)) > ((IOSByteArray *) nil_chk(inArg))->size_) {
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  if ((outOff + (BC_ / 2)) > ((IOSByteArray *) nil_chk(outArg))->size_) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  if (forEncryption_) {
    OrgSpongycastleCryptoEnginesRijndaelEngine_unpackBlockWithByteArray_withInt_(self, inArg, inOff);
    OrgSpongycastleCryptoEnginesRijndaelEngine_encryptBlockWithLongArray2_(self, workingKey_);
    OrgSpongycastleCryptoEnginesRijndaelEngine_packBlockWithByteArray_withInt_(self, outArg, outOff);
  }
  else {
    OrgSpongycastleCryptoEnginesRijndaelEngine_unpackBlockWithByteArray_withInt_(self, inArg, inOff);
    OrgSpongycastleCryptoEnginesRijndaelEngine_decryptBlockWithLongArray2_(self, workingKey_);
    OrgSpongycastleCryptoEnginesRijndaelEngine_packBlockWithByteArray_withInt_(self, outArg, outOff);
  }
  return BC_ / 2;
}

- (void)reset {
}

- (void)unpackBlockWithByteArray:(IOSByteArray *)bytes
                         withInt:(jint)off {
  OrgSpongycastleCryptoEnginesRijndaelEngine_unpackBlockWithByteArray_withInt_(self, bytes, off);
}

- (void)packBlockWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)off {
  OrgSpongycastleCryptoEnginesRijndaelEngine_packBlockWithByteArray_withInt_(self, bytes, off);
}

- (void)encryptBlockWithLongArray2:(IOSObjectArray *)rk {
  OrgSpongycastleCryptoEnginesRijndaelEngine_encryptBlockWithLongArray2_(self, rk);
}

- (void)decryptBlockWithLongArray2:(IOSObjectArray *)rk {
  OrgSpongycastleCryptoEnginesRijndaelEngine_decryptBlockWithLongArray2_(self, rk);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "B", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 2, 1, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 3, 1, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 4, 1, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 5, 1, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 6, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[J", 0x2, 16, 12, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 23, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 26, 25, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(mul0x2WithInt:);
  methods[1].selector = @selector(mul0x3WithInt:);
  methods[2].selector = @selector(mul0x9WithInt:);
  methods[3].selector = @selector(mul0xbWithInt:);
  methods[4].selector = @selector(mul0xdWithInt:);
  methods[5].selector = @selector(mul0xeWithInt:);
  methods[6].selector = @selector(KeyAdditionWithLongArray:);
  methods[7].selector = @selector(shiftWithLong:withInt:);
  methods[8].selector = @selector(ShiftRowWithByteArray:);
  methods[9].selector = @selector(applySWithLong:withByteArray:);
  methods[10].selector = @selector(SubstitutionWithByteArray:);
  methods[11].selector = @selector(MixColumn);
  methods[12].selector = @selector(InvMixColumn);
  methods[13].selector = @selector(generateWorkingKeyWithByteArray:);
  methods[14].selector = @selector(init);
  methods[15].selector = @selector(initWithInt:);
  methods[16].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[17].selector = @selector(getAlgorithmName);
  methods[18].selector = @selector(getBlockSize);
  methods[19].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[20].selector = @selector(reset);
  methods[21].selector = @selector(unpackBlockWithByteArray:withInt:);
  methods[22].selector = @selector(packBlockWithByteArray:withInt:);
  methods[23].selector = @selector(encryptBlockWithLongArray2:);
  methods[24].selector = @selector(decryptBlockWithLongArray2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAXROUNDS", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesRijndaelEngine_MAXROUNDS, 0x1a, -1, -1, -1, -1 },
    { "MAXKC", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesRijndaelEngine_MAXKC, 0x1a, -1, -1, -1, -1 },
    { "logtable", "[B", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "aLogtable", "[B", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "S", "[B", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "Si", "[B", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "rcon", "[I", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "shifts0", "[[B", .constantValue.asLong = 0, 0x8, -1, 32, -1, -1 },
    { "shifts1", "[[B", .constantValue.asLong = 0, 0x8, -1, 33, -1, -1 },
    { "BC_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "BC_MASK_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ROUNDS_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "blockBits_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "workingKey_", "[[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "A0_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "A1_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "A2_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "A3_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "forEncryption_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "shifts0SC_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "shifts1SC_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "mul0x2", "I", "mul0x3", "mul0x9", "mul0xb", "mul0xd", "mul0xe", "KeyAddition", "[J", "shift", "JI", "ShiftRow", "[B", "applyS", "J[B", "Substitution", "generateWorkingKey", "init", "ZLOrgSpongycastleCryptoCipherParameters;", "processBlock", "[BI[BI", "unpackBlock", "[BI", "packBlock", "encryptBlock", "[[J", "decryptBlock", &OrgSpongycastleCryptoEnginesRijndaelEngine_logtable, &OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable, &OrgSpongycastleCryptoEnginesRijndaelEngine_S, &OrgSpongycastleCryptoEnginesRijndaelEngine_Si, &OrgSpongycastleCryptoEnginesRijndaelEngine_rcon, &OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0, &OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1 };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesRijndaelEngine = { "RijndaelEngine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 25, 21, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesRijndaelEngine;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoEnginesRijndaelEngine class]) {
    OrgSpongycastleCryptoEnginesRijndaelEngine_logtable = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) 0, (jbyte) 0, (jbyte) 25, (jbyte) 1, (jbyte) 50, (jbyte) 2, (jbyte) 26, (jbyte) 198, (jbyte) 75, (jbyte) 199, (jbyte) 27, (jbyte) 104, (jbyte) 51, (jbyte) 238, (jbyte) 223, (jbyte) 3, (jbyte) 100, (jbyte) 4, (jbyte) 224, (jbyte) 14, (jbyte) 52, (jbyte) 141, (jbyte) 129, (jbyte) 239, (jbyte) 76, (jbyte) 113, (jbyte) 8, (jbyte) 200, (jbyte) 248, (jbyte) 105, (jbyte) 28, (jbyte) 193, (jbyte) 125, (jbyte) 194, (jbyte) 29, (jbyte) 181, (jbyte) 249, (jbyte) 185, (jbyte) 39, (jbyte) 106, (jbyte) 77, (jbyte) 228, (jbyte) 166, (jbyte) 114, (jbyte) 154, (jbyte) 201, (jbyte) 9, (jbyte) 120, (jbyte) 101, (jbyte) 47, (jbyte) 138, (jbyte) 5, (jbyte) 33, (jbyte) 15, (jbyte) 225, (jbyte) 36, (jbyte) 18, (jbyte) 240, (jbyte) 130, (jbyte) 69, (jbyte) 53, (jbyte) 147, (jbyte) 218, (jbyte) 142, (jbyte) 150, (jbyte) 143, (jbyte) 219, (jbyte) 189, (jbyte) 54, (jbyte) 208, (jbyte) 206, (jbyte) 148, (jbyte) 19, (jbyte) 92, (jbyte) 210, (jbyte) 241, (jbyte) 64, (jbyte) 70, (jbyte) 131, (jbyte) 56, (jbyte) 102, (jbyte) 221, (jbyte) 253, (jbyte) 48, (jbyte) 191, (jbyte) 6, (jbyte) 139, (jbyte) 98, (jbyte) 179, (jbyte) 37, (jbyte) 226, (jbyte) 152, (jbyte) 34, (jbyte) 136, (jbyte) 145, (jbyte) 16, (jbyte) 126, (jbyte) 110, (jbyte) 72, (jbyte) 195, (jbyte) 163, (jbyte) 182, (jbyte) 30, (jbyte) 66, (jbyte) 58, (jbyte) 107, (jbyte) 40, (jbyte) 84, (jbyte) 250, (jbyte) 133, (jbyte) 61, (jbyte) 186, (jbyte) 43, (jbyte) 121, (jbyte) 10, (jbyte) 21, (jbyte) 155, (jbyte) 159, (jbyte) 94, (jbyte) 202, (jbyte) 78, (jbyte) 212, (jbyte) 172, (jbyte) 229, (jbyte) 243, (jbyte) 115, (jbyte) 167, (jbyte) 87, (jbyte) 175, (jbyte) 88, (jbyte) 168, (jbyte) 80, (jbyte) 244, (jbyte) 234, (jbyte) 214, (jbyte) 116, (jbyte) 79, (jbyte) 174, (jbyte) 233, (jbyte) 213, (jbyte) 231, (jbyte) 230, (jbyte) 173, (jbyte) 232, (jbyte) 44, (jbyte) 215, (jbyte) 117, (jbyte) 122, (jbyte) 235, (jbyte) 22, (jbyte) 11, (jbyte) 245, (jbyte) 89, (jbyte) 203, (jbyte) 95, (jbyte) 176, (jbyte) 156, (jbyte) 169, (jbyte) 81, (jbyte) 160, (jbyte) 127, (jbyte) 12, (jbyte) 246, (jbyte) 111, (jbyte) 23, (jbyte) 196, (jbyte) 73, (jbyte) 236, (jbyte) 216, (jbyte) 67, (jbyte) 31, (jbyte) 45, (jbyte) 164, (jbyte) 118, (jbyte) 123, (jbyte) 183, (jbyte) 204, (jbyte) 187, (jbyte) 62, (jbyte) 90, (jbyte) 251, (jbyte) 96, (jbyte) 177, (jbyte) 134, (jbyte) 59, (jbyte) 82, (jbyte) 161, (jbyte) 108, (jbyte) 170, (jbyte) 85, (jbyte) 41, (jbyte) 157, (jbyte) 151, (jbyte) 178, (jbyte) 135, (jbyte) 144, (jbyte) 97, (jbyte) 190, (jbyte) 220, (jbyte) 252, (jbyte) 188, (jbyte) 149, (jbyte) 207, (jbyte) 205, (jbyte) 55, (jbyte) 63, (jbyte) 91, (jbyte) 209, (jbyte) 83, (jbyte) 57, (jbyte) 132, (jbyte) 60, (jbyte) 65, (jbyte) 162, (jbyte) 109, (jbyte) 71, (jbyte) 20, (jbyte) 42, (jbyte) 158, (jbyte) 93, (jbyte) 86, (jbyte) 242, (jbyte) 211, (jbyte) 171, (jbyte) 68, (jbyte) 17, (jbyte) 146, (jbyte) 217, (jbyte) 35, (jbyte) 32, (jbyte) 46, (jbyte) 137, (jbyte) 180, (jbyte) 124, (jbyte) 184, (jbyte) 38, (jbyte) 119, (jbyte) 153, (jbyte) 227, (jbyte) 165, (jbyte) 103, (jbyte) 74, (jbyte) 237, (jbyte) 222, (jbyte) 197, (jbyte) 49, (jbyte) 254, (jbyte) 24, (jbyte) 13, (jbyte) 99, (jbyte) 140, (jbyte) 128, (jbyte) 192, (jbyte) 247, (jbyte) 112, (jbyte) 7 } count:256];
    OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) 0, (jbyte) 3, (jbyte) 5, (jbyte) 15, (jbyte) 17, (jbyte) 51, (jbyte) 85, (jbyte) 255, (jbyte) 26, (jbyte) 46, (jbyte) 114, (jbyte) 150, (jbyte) 161, (jbyte) 248, (jbyte) 19, (jbyte) 53, (jbyte) 95, (jbyte) 225, (jbyte) 56, (jbyte) 72, (jbyte) 216, (jbyte) 115, (jbyte) 149, (jbyte) 164, (jbyte) 247, (jbyte) 2, (jbyte) 6, (jbyte) 10, (jbyte) 30, (jbyte) 34, (jbyte) 102, (jbyte) 170, (jbyte) 229, (jbyte) 52, (jbyte) 92, (jbyte) 228, (jbyte) 55, (jbyte) 89, (jbyte) 235, (jbyte) 38, (jbyte) 106, (jbyte) 190, (jbyte) 217, (jbyte) 112, (jbyte) 144, (jbyte) 171, (jbyte) 230, (jbyte) 49, (jbyte) 83, (jbyte) 245, (jbyte) 4, (jbyte) 12, (jbyte) 20, (jbyte) 60, (jbyte) 68, (jbyte) 204, (jbyte) 79, (jbyte) 209, (jbyte) 104, (jbyte) 184, (jbyte) 211, (jbyte) 110, (jbyte) 178, (jbyte) 205, (jbyte) 76, (jbyte) 212, (jbyte) 103, (jbyte) 169, (jbyte) 224, (jbyte) 59, (jbyte) 77, (jbyte) 215, (jbyte) 98, (jbyte) 166, (jbyte) 241, (jbyte) 8, (jbyte) 24, (jbyte) 40, (jbyte) 120, (jbyte) 136, (jbyte) 131, (jbyte) 158, (jbyte) 185, (jbyte) 208, (jbyte) 107, (jbyte) 189, (jbyte) 220, (jbyte) 127, (jbyte) 129, (jbyte) 152, (jbyte) 179, (jbyte) 206, (jbyte) 73, (jbyte) 219, (jbyte) 118, (jbyte) 154, (jbyte) 181, (jbyte) 196, (jbyte) 87, (jbyte) 249, (jbyte) 16, (jbyte) 48, (jbyte) 80, (jbyte) 240, (jbyte) 11, (jbyte) 29, (jbyte) 39, (jbyte) 105, (jbyte) 187, (jbyte) 214, (jbyte) 97, (jbyte) 163, (jbyte) 254, (jbyte) 25, (jbyte) 43, (jbyte) 125, (jbyte) 135, (jbyte) 146, (jbyte) 173, (jbyte) 236, (jbyte) 47, (jbyte) 113, (jbyte) 147, (jbyte) 174, (jbyte) 233, (jbyte) 32, (jbyte) 96, (jbyte) 160, (jbyte) 251, (jbyte) 22, (jbyte) 58, (jbyte) 78, (jbyte) 210, (jbyte) 109, (jbyte) 183, (jbyte) 194, (jbyte) 93, (jbyte) 231, (jbyte) 50, (jbyte) 86, (jbyte) 250, (jbyte) 21, (jbyte) 63, (jbyte) 65, (jbyte) 195, (jbyte) 94, (jbyte) 226, (jbyte) 61, (jbyte) 71, (jbyte) 201, (jbyte) 64, (jbyte) 192, (jbyte) 91, (jbyte) 237, (jbyte) 44, (jbyte) 116, (jbyte) 156, (jbyte) 191, (jbyte) 218, (jbyte) 117, (jbyte) 159, (jbyte) 186, (jbyte) 213, (jbyte) 100, (jbyte) 172, (jbyte) 239, (jbyte) 42, (jbyte) 126, (jbyte) 130, (jbyte) 157, (jbyte) 188, (jbyte) 223, (jbyte) 122, (jbyte) 142, (jbyte) 137, (jbyte) 128, (jbyte) 155, (jbyte) 182, (jbyte) 193, (jbyte) 88, (jbyte) 232, (jbyte) 35, (jbyte) 101, (jbyte) 175, (jbyte) 234, (jbyte) 37, (jbyte) 111, (jbyte) 177, (jbyte) 200, (jbyte) 67, (jbyte) 197, (jbyte) 84, (jbyte) 252, (jbyte) 31, (jbyte) 33, (jbyte) 99, (jbyte) 165, (jbyte) 244, (jbyte) 7, (jbyte) 9, (jbyte) 27, (jbyte) 45, (jbyte) 119, (jbyte) 153, (jbyte) 176, (jbyte) 203, (jbyte) 70, (jbyte) 202, (jbyte) 69, (jbyte) 207, (jbyte) 74, (jbyte) 222, (jbyte) 121, (jbyte) 139, (jbyte) 134, (jbyte) 145, (jbyte) 168, (jbyte) 227, (jbyte) 62, (jbyte) 66, (jbyte) 198, (jbyte) 81, (jbyte) 243, (jbyte) 14, (jbyte) 18, (jbyte) 54, (jbyte) 90, (jbyte) 238, (jbyte) 41, (jbyte) 123, (jbyte) 141, (jbyte) 140, (jbyte) 143, (jbyte) 138, (jbyte) 133, (jbyte) 148, (jbyte) 167, (jbyte) 242, (jbyte) 13, (jbyte) 23, (jbyte) 57, (jbyte) 75, (jbyte) 221, (jbyte) 124, (jbyte) 132, (jbyte) 151, (jbyte) 162, (jbyte) 253, (jbyte) 28, (jbyte) 36, (jbyte) 108, (jbyte) 180, (jbyte) 199, (jbyte) 82, (jbyte) 246, (jbyte) 1, (jbyte) 3, (jbyte) 5, (jbyte) 15, (jbyte) 17, (jbyte) 51, (jbyte) 85, (jbyte) 255, (jbyte) 26, (jbyte) 46, (jbyte) 114, (jbyte) 150, (jbyte) 161, (jbyte) 248, (jbyte) 19, (jbyte) 53, (jbyte) 95, (jbyte) 225, (jbyte) 56, (jbyte) 72, (jbyte) 216, (jbyte) 115, (jbyte) 149, (jbyte) 164, (jbyte) 247, (jbyte) 2, (jbyte) 6, (jbyte) 10, (jbyte) 30, (jbyte) 34, (jbyte) 102, (jbyte) 170, (jbyte) 229, (jbyte) 52, (jbyte) 92, (jbyte) 228, (jbyte) 55, (jbyte) 89, (jbyte) 235, (jbyte) 38, (jbyte) 106, (jbyte) 190, (jbyte) 217, (jbyte) 112, (jbyte) 144, (jbyte) 171, (jbyte) 230, (jbyte) 49, (jbyte) 83, (jbyte) 245, (jbyte) 4, (jbyte) 12, (jbyte) 20, (jbyte) 60, (jbyte) 68, (jbyte) 204, (jbyte) 79, (jbyte) 209, (jbyte) 104, (jbyte) 184, (jbyte) 211, (jbyte) 110, (jbyte) 178, (jbyte) 205, (jbyte) 76, (jbyte) 212, (jbyte) 103, (jbyte) 169, (jbyte) 224, (jbyte) 59, (jbyte) 77, (jbyte) 215, (jbyte) 98, (jbyte) 166, (jbyte) 241, (jbyte) 8, (jbyte) 24, (jbyte) 40, (jbyte) 120, (jbyte) 136, (jbyte) 131, (jbyte) 158, (jbyte) 185, (jbyte) 208, (jbyte) 107, (jbyte) 189, (jbyte) 220, (jbyte) 127, (jbyte) 129, (jbyte) 152, (jbyte) 179, (jbyte) 206, (jbyte) 73, (jbyte) 219, (jbyte) 118, (jbyte) 154, (jbyte) 181, (jbyte) 196, (jbyte) 87, (jbyte) 249, (jbyte) 16, (jbyte) 48, (jbyte) 80, (jbyte) 240, (jbyte) 11, (jbyte) 29, (jbyte) 39, (jbyte) 105, (jbyte) 187, (jbyte) 214, (jbyte) 97, (jbyte) 163, (jbyte) 254, (jbyte) 25, (jbyte) 43, (jbyte) 125, (jbyte) 135, (jbyte) 146, (jbyte) 173, (jbyte) 236, (jbyte) 47, (jbyte) 113, (jbyte) 147, (jbyte) 174, (jbyte) 233, (jbyte) 32, (jbyte) 96, (jbyte) 160, (jbyte) 251, (jbyte) 22, (jbyte) 58, (jbyte) 78, (jbyte) 210, (jbyte) 109, (jbyte) 183, (jbyte) 194, (jbyte) 93, (jbyte) 231, (jbyte) 50, (jbyte) 86, (jbyte) 250, (jbyte) 21, (jbyte) 63, (jbyte) 65, (jbyte) 195, (jbyte) 94, (jbyte) 226, (jbyte) 61, (jbyte) 71, (jbyte) 201, (jbyte) 64, (jbyte) 192, (jbyte) 91, (jbyte) 237, (jbyte) 44, (jbyte) 116, (jbyte) 156, (jbyte) 191, (jbyte) 218, (jbyte) 117, (jbyte) 159, (jbyte) 186, (jbyte) 213, (jbyte) 100, (jbyte) 172, (jbyte) 239, (jbyte) 42, (jbyte) 126, (jbyte) 130, (jbyte) 157, (jbyte) 188, (jbyte) 223, (jbyte) 122, (jbyte) 142, (jbyte) 137, (jbyte) 128, (jbyte) 155, (jbyte) 182, (jbyte) 193, (jbyte) 88, (jbyte) 232, (jbyte) 35, (jbyte) 101, (jbyte) 175, (jbyte) 234, (jbyte) 37, (jbyte) 111, (jbyte) 177, (jbyte) 200, (jbyte) 67, (jbyte) 197, (jbyte) 84, (jbyte) 252, (jbyte) 31, (jbyte) 33, (jbyte) 99, (jbyte) 165, (jbyte) 244, (jbyte) 7, (jbyte) 9, (jbyte) 27, (jbyte) 45, (jbyte) 119, (jbyte) 153, (jbyte) 176, (jbyte) 203, (jbyte) 70, (jbyte) 202, (jbyte) 69, (jbyte) 207, (jbyte) 74, (jbyte) 222, (jbyte) 121, (jbyte) 139, (jbyte) 134, (jbyte) 145, (jbyte) 168, (jbyte) 227, (jbyte) 62, (jbyte) 66, (jbyte) 198, (jbyte) 81, (jbyte) 243, (jbyte) 14, (jbyte) 18, (jbyte) 54, (jbyte) 90, (jbyte) 238, (jbyte) 41, (jbyte) 123, (jbyte) 141, (jbyte) 140, (jbyte) 143, (jbyte) 138, (jbyte) 133, (jbyte) 148, (jbyte) 167, (jbyte) 242, (jbyte) 13, (jbyte) 23, (jbyte) 57, (jbyte) 75, (jbyte) 221, (jbyte) 124, (jbyte) 132, (jbyte) 151, (jbyte) 162, (jbyte) 253, (jbyte) 28, (jbyte) 36, (jbyte) 108, (jbyte) 180, (jbyte) 199, (jbyte) 82, (jbyte) 246, (jbyte) 1 } count:511];
    OrgSpongycastleCryptoEnginesRijndaelEngine_S = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) 99, (jbyte) 124, (jbyte) 119, (jbyte) 123, (jbyte) 242, (jbyte) 107, (jbyte) 111, (jbyte) 197, (jbyte) 48, (jbyte) 1, (jbyte) 103, (jbyte) 43, (jbyte) 254, (jbyte) 215, (jbyte) 171, (jbyte) 118, (jbyte) 202, (jbyte) 130, (jbyte) 201, (jbyte) 125, (jbyte) 250, (jbyte) 89, (jbyte) 71, (jbyte) 240, (jbyte) 173, (jbyte) 212, (jbyte) 162, (jbyte) 175, (jbyte) 156, (jbyte) 164, (jbyte) 114, (jbyte) 192, (jbyte) 183, (jbyte) 253, (jbyte) 147, (jbyte) 38, (jbyte) 54, (jbyte) 63, (jbyte) 247, (jbyte) 204, (jbyte) 52, (jbyte) 165, (jbyte) 229, (jbyte) 241, (jbyte) 113, (jbyte) 216, (jbyte) 49, (jbyte) 21, (jbyte) 4, (jbyte) 199, (jbyte) 35, (jbyte) 195, (jbyte) 24, (jbyte) 150, (jbyte) 5, (jbyte) 154, (jbyte) 7, (jbyte) 18, (jbyte) 128, (jbyte) 226, (jbyte) 235, (jbyte) 39, (jbyte) 178, (jbyte) 117, (jbyte) 9, (jbyte) 131, (jbyte) 44, (jbyte) 26, (jbyte) 27, (jbyte) 110, (jbyte) 90, (jbyte) 160, (jbyte) 82, (jbyte) 59, (jbyte) 214, (jbyte) 179, (jbyte) 41, (jbyte) 227, (jbyte) 47, (jbyte) 132, (jbyte) 83, (jbyte) 209, (jbyte) 0, (jbyte) 237, (jbyte) 32, (jbyte) 252, (jbyte) 177, (jbyte) 91, (jbyte) 106, (jbyte) 203, (jbyte) 190, (jbyte) 57, (jbyte) 74, (jbyte) 76, (jbyte) 88, (jbyte) 207, (jbyte) 208, (jbyte) 239, (jbyte) 170, (jbyte) 251, (jbyte) 67, (jbyte) 77, (jbyte) 51, (jbyte) 133, (jbyte) 69, (jbyte) 249, (jbyte) 2, (jbyte) 127, (jbyte) 80, (jbyte) 60, (jbyte) 159, (jbyte) 168, (jbyte) 81, (jbyte) 163, (jbyte) 64, (jbyte) 143, (jbyte) 146, (jbyte) 157, (jbyte) 56, (jbyte) 245, (jbyte) 188, (jbyte) 182, (jbyte) 218, (jbyte) 33, (jbyte) 16, (jbyte) 255, (jbyte) 243, (jbyte) 210, (jbyte) 205, (jbyte) 12, (jbyte) 19, (jbyte) 236, (jbyte) 95, (jbyte) 151, (jbyte) 68, (jbyte) 23, (jbyte) 196, (jbyte) 167, (jbyte) 126, (jbyte) 61, (jbyte) 100, (jbyte) 93, (jbyte) 25, (jbyte) 115, (jbyte) 96, (jbyte) 129, (jbyte) 79, (jbyte) 220, (jbyte) 34, (jbyte) 42, (jbyte) 144, (jbyte) 136, (jbyte) 70, (jbyte) 238, (jbyte) 184, (jbyte) 20, (jbyte) 222, (jbyte) 94, (jbyte) 11, (jbyte) 219, (jbyte) 224, (jbyte) 50, (jbyte) 58, (jbyte) 10, (jbyte) 73, (jbyte) 6, (jbyte) 36, (jbyte) 92, (jbyte) 194, (jbyte) 211, (jbyte) 172, (jbyte) 98, (jbyte) 145, (jbyte) 149, (jbyte) 228, (jbyte) 121, (jbyte) 231, (jbyte) 200, (jbyte) 55, (jbyte) 109, (jbyte) 141, (jbyte) 213, (jbyte) 78, (jbyte) 169, (jbyte) 108, (jbyte) 86, (jbyte) 244, (jbyte) 234, (jbyte) 101, (jbyte) 122, (jbyte) 174, (jbyte) 8, (jbyte) 186, (jbyte) 120, (jbyte) 37, (jbyte) 46, (jbyte) 28, (jbyte) 166, (jbyte) 180, (jbyte) 198, (jbyte) 232, (jbyte) 221, (jbyte) 116, (jbyte) 31, (jbyte) 75, (jbyte) 189, (jbyte) 139, (jbyte) 138, (jbyte) 112, (jbyte) 62, (jbyte) 181, (jbyte) 102, (jbyte) 72, (jbyte) 3, (jbyte) 246, (jbyte) 14, (jbyte) 97, (jbyte) 53, (jbyte) 87, (jbyte) 185, (jbyte) 134, (jbyte) 193, (jbyte) 29, (jbyte) 158, (jbyte) 225, (jbyte) 248, (jbyte) 152, (jbyte) 17, (jbyte) 105, (jbyte) 217, (jbyte) 142, (jbyte) 148, (jbyte) 155, (jbyte) 30, (jbyte) 135, (jbyte) 233, (jbyte) 206, (jbyte) 85, (jbyte) 40, (jbyte) 223, (jbyte) 140, (jbyte) 161, (jbyte) 137, (jbyte) 13, (jbyte) 191, (jbyte) 230, (jbyte) 66, (jbyte) 104, (jbyte) 65, (jbyte) 153, (jbyte) 45, (jbyte) 15, (jbyte) 176, (jbyte) 84, (jbyte) 187, (jbyte) 22 } count:256];
    OrgSpongycastleCryptoEnginesRijndaelEngine_Si = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) 82, (jbyte) 9, (jbyte) 106, (jbyte) 213, (jbyte) 48, (jbyte) 54, (jbyte) 165, (jbyte) 56, (jbyte) 191, (jbyte) 64, (jbyte) 163, (jbyte) 158, (jbyte) 129, (jbyte) 243, (jbyte) 215, (jbyte) 251, (jbyte) 124, (jbyte) 227, (jbyte) 57, (jbyte) 130, (jbyte) 155, (jbyte) 47, (jbyte) 255, (jbyte) 135, (jbyte) 52, (jbyte) 142, (jbyte) 67, (jbyte) 68, (jbyte) 196, (jbyte) 222, (jbyte) 233, (jbyte) 203, (jbyte) 84, (jbyte) 123, (jbyte) 148, (jbyte) 50, (jbyte) 166, (jbyte) 194, (jbyte) 35, (jbyte) 61, (jbyte) 238, (jbyte) 76, (jbyte) 149, (jbyte) 11, (jbyte) 66, (jbyte) 250, (jbyte) 195, (jbyte) 78, (jbyte) 8, (jbyte) 46, (jbyte) 161, (jbyte) 102, (jbyte) 40, (jbyte) 217, (jbyte) 36, (jbyte) 178, (jbyte) 118, (jbyte) 91, (jbyte) 162, (jbyte) 73, (jbyte) 109, (jbyte) 139, (jbyte) 209, (jbyte) 37, (jbyte) 114, (jbyte) 248, (jbyte) 246, (jbyte) 100, (jbyte) 134, (jbyte) 104, (jbyte) 152, (jbyte) 22, (jbyte) 212, (jbyte) 164, (jbyte) 92, (jbyte) 204, (jbyte) 93, (jbyte) 101, (jbyte) 182, (jbyte) 146, (jbyte) 108, (jbyte) 112, (jbyte) 72, (jbyte) 80, (jbyte) 253, (jbyte) 237, (jbyte) 185, (jbyte) 218, (jbyte) 94, (jbyte) 21, (jbyte) 70, (jbyte) 87, (jbyte) 167, (jbyte) 141, (jbyte) 157, (jbyte) 132, (jbyte) 144, (jbyte) 216, (jbyte) 171, (jbyte) 0, (jbyte) 140, (jbyte) 188, (jbyte) 211, (jbyte) 10, (jbyte) 247, (jbyte) 228, (jbyte) 88, (jbyte) 5, (jbyte) 184, (jbyte) 179, (jbyte) 69, (jbyte) 6, (jbyte) 208, (jbyte) 44, (jbyte) 30, (jbyte) 143, (jbyte) 202, (jbyte) 63, (jbyte) 15, (jbyte) 2, (jbyte) 193, (jbyte) 175, (jbyte) 189, (jbyte) 3, (jbyte) 1, (jbyte) 19, (jbyte) 138, (jbyte) 107, (jbyte) 58, (jbyte) 145, (jbyte) 17, (jbyte) 65, (jbyte) 79, (jbyte) 103, (jbyte) 220, (jbyte) 234, (jbyte) 151, (jbyte) 242, (jbyte) 207, (jbyte) 206, (jbyte) 240, (jbyte) 180, (jbyte) 230, (jbyte) 115, (jbyte) 150, (jbyte) 172, (jbyte) 116, (jbyte) 34, (jbyte) 231, (jbyte) 173, (jbyte) 53, (jbyte) 133, (jbyte) 226, (jbyte) 249, (jbyte) 55, (jbyte) 232, (jbyte) 28, (jbyte) 117, (jbyte) 223, (jbyte) 110, (jbyte) 71, (jbyte) 241, (jbyte) 26, (jbyte) 113, (jbyte) 29, (jbyte) 41, (jbyte) 197, (jbyte) 137, (jbyte) 111, (jbyte) 183, (jbyte) 98, (jbyte) 14, (jbyte) 170, (jbyte) 24, (jbyte) 190, (jbyte) 27, (jbyte) 252, (jbyte) 86, (jbyte) 62, (jbyte) 75, (jbyte) 198, (jbyte) 210, (jbyte) 121, (jbyte) 32, (jbyte) 154, (jbyte) 219, (jbyte) 192, (jbyte) 254, (jbyte) 120, (jbyte) 205, (jbyte) 90, (jbyte) 244, (jbyte) 31, (jbyte) 221, (jbyte) 168, (jbyte) 51, (jbyte) 136, (jbyte) 7, (jbyte) 199, (jbyte) 49, (jbyte) 177, (jbyte) 18, (jbyte) 16, (jbyte) 89, (jbyte) 39, (jbyte) 128, (jbyte) 236, (jbyte) 95, (jbyte) 96, (jbyte) 81, (jbyte) 127, (jbyte) 169, (jbyte) 25, (jbyte) 181, (jbyte) 74, (jbyte) 13, (jbyte) 45, (jbyte) 229, (jbyte) 122, (jbyte) 159, (jbyte) 147, (jbyte) 201, (jbyte) 156, (jbyte) 239, (jbyte) 160, (jbyte) 224, (jbyte) 59, (jbyte) 77, (jbyte) 174, (jbyte) 42, (jbyte) 245, (jbyte) 176, (jbyte) 200, (jbyte) 235, (jbyte) 187, (jbyte) 60, (jbyte) 131, (jbyte) 83, (jbyte) 153, (jbyte) 97, (jbyte) 23, (jbyte) 43, (jbyte) 4, (jbyte) 126, (jbyte) 186, (jbyte) 119, (jbyte) 214, (jbyte) 38, (jbyte) 225, (jbyte) 105, (jbyte) 20, (jbyte) 99, (jbyte) 85, (jbyte) 33, (jbyte) 12, (jbyte) 125 } count:256];
    OrgSpongycastleCryptoEnginesRijndaelEngine_rcon = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x01, (jint) 0x02, (jint) 0x04, (jint) 0x08, (jint) 0x10, (jint) 0x20, (jint) 0x40, (jint) 0x80, (jint) 0x1b, (jint) 0x36, (jint) 0x6c, (jint) 0xd8, (jint) 0xab, (jint) 0x4d, (jint) 0x9a, (jint) 0x2f, (jint) 0x5e, (jint) 0xbc, (jint) 0x63, (jint) 0xc6, (jint) 0x97, (jint) 0x35, (jint) 0x6a, (jint) 0xd4, (jint) 0xb3, (jint) 0x7d, (jint) 0xfa, (jint) 0xef, (jint) 0xc5, (jint) 0x91 } count:30];
    OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0 = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 8, 16, 24 } count:4], [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 8, 16, 24 } count:4], [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 8, 16, 24 } count:4], [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 8, 16, 32 } count:4], [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 8, 24, 32 } count:4] } count:5 type:IOSClass_byteArray(1)];
    OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1 = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 24, 16, 8 } count:4], [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 32, 24, 16 } count:4], [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 40, 32, 24 } count:4], [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 48, 40, 24 } count:4], [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 56, 40, 32 } count:4] } count:5 type:IOSClass_byteArray(1)];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoEnginesRijndaelEngine)
  }
}

@end

jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x2WithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b) {
  if (b != 0) {
    return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable), 25 + (IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_logtable), b) & (jint) 0xff));
  }
  else {
    return 0;
  }
}

jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x3WithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b) {
  if (b != 0) {
    return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable), 1 + (IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_logtable), b) & (jint) 0xff));
  }
  else {
    return 0;
  }
}

jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x9WithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b) {
  if (b >= 0) {
    return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable), 199 + b);
  }
  else {
    return 0;
  }
}

jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xbWithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b) {
  if (b >= 0) {
    return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable), 104 + b);
  }
  else {
    return 0;
  }
}

jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xdWithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b) {
  if (b >= 0) {
    return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable), 238 + b);
  }
  else {
    return 0;
  }
}

jbyte OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xeWithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint b) {
  if (b >= 0) {
    return IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_aLogtable), 223 + b);
  }
  else {
    return 0;
  }
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSLongArray *rk) {
  self->A0_ ^= IOSLongArray_Get(nil_chk(rk), 0);
  self->A1_ ^= IOSLongArray_Get(rk, 1);
  self->A2_ ^= IOSLongArray_Get(rk, 2);
  self->A3_ ^= IOSLongArray_Get(rk, 3);
}

jlong OrgSpongycastleCryptoEnginesRijndaelEngine_shiftWithLong_withInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jlong r, jint shift) {
  return (((JreURShift64(r, shift)) | (JreLShift64(r, (self->BC_ - shift))))) & self->BC_MASK_;
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_ShiftRowWithByteArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *shiftsSC) {
  self->A1_ = OrgSpongycastleCryptoEnginesRijndaelEngine_shiftWithLong_withInt_(self, self->A1_, IOSByteArray_Get(nil_chk(shiftsSC), 1));
  self->A2_ = OrgSpongycastleCryptoEnginesRijndaelEngine_shiftWithLong_withInt_(self, self->A2_, IOSByteArray_Get(shiftsSC, 2));
  self->A3_ = OrgSpongycastleCryptoEnginesRijndaelEngine_shiftWithLong_withInt_(self, self->A3_, IOSByteArray_Get(shiftsSC, 3));
}

jlong OrgSpongycastleCryptoEnginesRijndaelEngine_applySWithLong_withByteArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jlong r, IOSByteArray *box) {
  jlong res = 0;
  for (jint j = 0; j < self->BC_; j += 8) {
    res |= JreLShift64((jlong) (IOSByteArray_Get(nil_chk(box), (jint) ((JreRShift64(r, j)) & (jint) 0xff)) & (jint) 0xff), j);
  }
  return res;
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_SubstitutionWithByteArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *box) {
  self->A0_ = OrgSpongycastleCryptoEnginesRijndaelEngine_applySWithLong_withByteArray_(self, self->A0_, box);
  self->A1_ = OrgSpongycastleCryptoEnginesRijndaelEngine_applySWithLong_withByteArray_(self, self->A1_, box);
  self->A2_ = OrgSpongycastleCryptoEnginesRijndaelEngine_applySWithLong_withByteArray_(self, self->A2_, box);
  self->A3_ = OrgSpongycastleCryptoEnginesRijndaelEngine_applySWithLong_withByteArray_(self, self->A3_, box);
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_MixColumn(OrgSpongycastleCryptoEnginesRijndaelEngine *self) {
  jlong r0;
  jlong r1;
  jlong r2;
  jlong r3;
  r0 = r1 = r2 = r3 = 0;
  for (jint j = 0; j < self->BC_; j += 8) {
    jint a0 = (jint) ((JreRShift64(self->A0_, j)) & (jint) 0xff);
    jint a1 = (jint) ((JreRShift64(self->A1_, j)) & (jint) 0xff);
    jint a2 = (jint) ((JreRShift64(self->A2_, j)) & (jint) 0xff);
    jint a3 = (jint) ((JreRShift64(self->A3_, j)) & (jint) 0xff);
    r0 |= JreLShift64((jlong) ((OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x2WithInt_(self, a0) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x3WithInt_(self, a1) ^ a2 ^ a3) & (jint) 0xff), j);
    r1 |= JreLShift64((jlong) ((OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x2WithInt_(self, a1) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x3WithInt_(self, a2) ^ a3 ^ a0) & (jint) 0xff), j);
    r2 |= JreLShift64((jlong) ((OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x2WithInt_(self, a2) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x3WithInt_(self, a3) ^ a0 ^ a1) & (jint) 0xff), j);
    r3 |= JreLShift64((jlong) ((OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x2WithInt_(self, a3) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x3WithInt_(self, a0) ^ a1 ^ a2) & (jint) 0xff), j);
  }
  self->A0_ = r0;
  self->A1_ = r1;
  self->A2_ = r2;
  self->A3_ = r3;
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_InvMixColumn(OrgSpongycastleCryptoEnginesRijndaelEngine *self) {
  jlong r0;
  jlong r1;
  jlong r2;
  jlong r3;
  r0 = r1 = r2 = r3 = 0;
  for (jint j = 0; j < self->BC_; j += 8) {
    jint a0 = (jint) ((JreRShift64(self->A0_, j)) & (jint) 0xff);
    jint a1 = (jint) ((JreRShift64(self->A1_, j)) & (jint) 0xff);
    jint a2 = (jint) ((JreRShift64(self->A2_, j)) & (jint) 0xff);
    jint a3 = (jint) ((JreRShift64(self->A3_, j)) & (jint) 0xff);
    a0 = (a0 != 0) ? (IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_logtable), a0 & (jint) 0xff) & (jint) 0xff) : -1;
    a1 = (a1 != 0) ? (IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_logtable), a1 & (jint) 0xff) & (jint) 0xff) : -1;
    a2 = (a2 != 0) ? (IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_logtable), a2 & (jint) 0xff) & (jint) 0xff) : -1;
    a3 = (a3 != 0) ? (IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_logtable), a3 & (jint) 0xff) & (jint) 0xff) : -1;
    r0 |= JreLShift64((jlong) ((OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xeWithInt_(self, a0) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xbWithInt_(self, a1) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xdWithInt_(self, a2) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x9WithInt_(self, a3)) & (jint) 0xff), j);
    r1 |= JreLShift64((jlong) ((OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xeWithInt_(self, a1) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xbWithInt_(self, a2) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xdWithInt_(self, a3) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x9WithInt_(self, a0)) & (jint) 0xff), j);
    r2 |= JreLShift64((jlong) ((OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xeWithInt_(self, a2) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xbWithInt_(self, a3) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xdWithInt_(self, a0) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x9WithInt_(self, a1)) & (jint) 0xff), j);
    r3 |= JreLShift64((jlong) ((OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xeWithInt_(self, a3) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xbWithInt_(self, a0) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0xdWithInt_(self, a1) ^ OrgSpongycastleCryptoEnginesRijndaelEngine_mul0x9WithInt_(self, a2)) & (jint) 0xff), j);
  }
  self->A0_ = r0;
  self->A1_ = r1;
  self->A2_ = r2;
  self->A3_ = r3;
}

IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_generateWorkingKeyWithByteArray_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *key) {
  jint KC;
  jint t;
  jint rconpointer = 0;
  jint keyBits = ((IOSByteArray *) nil_chk(key))->size_ * 8;
  IOSObjectArray *tk = [IOSByteArray newArrayWithDimensions:2 lengths:(jint[]){ 4, OrgSpongycastleCryptoEnginesRijndaelEngine_MAXKC }];
  IOSObjectArray *W = [IOSLongArray newArrayWithDimensions:2 lengths:(jint[]){ OrgSpongycastleCryptoEnginesRijndaelEngine_MAXROUNDS + 1, 4 }];
  switch (keyBits) {
    case 128:
    KC = 4;
    break;
    case 160:
    KC = 5;
    break;
    case 192:
    KC = 6;
    break;
    case 224:
    KC = 7;
    break;
    case 256:
    KC = 8;
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Key length not 128/160/192/224/256 bits.");
  }
  if (keyBits >= self->blockBits_) {
    self->ROUNDS_ = KC + 6;
  }
  else {
    self->ROUNDS_ = (self->BC_ / 8) + 6;
  }
  jint index = 0;
  for (jint i = 0; i < key->size_; i++) {
    *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(tk, i % 4)), i / 4) = IOSByteArray_Get(key, index++);
  }
  t = 0;
  for (jint j = 0; (j < KC) && (t < (self->ROUNDS_ + 1) * (self->BC_ / 8)); j++, t++) {
    for (jint i = 0; i < 4; i++) {
      *IOSLongArray_GetRef(nil_chk(IOSObjectArray_Get(W, t / (self->BC_ / 8))), i) |= JreLShift64((jlong) (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(tk, i)), j) & (jint) 0xff), ((t * 8) % self->BC_));
    }
  }
  while (t < (self->ROUNDS_ + 1) * (self->BC_ / 8)) {
    for (jint i = 0; i < 4; i++) {
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(tk, i)), 0) ^= IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_S), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(tk, (i + 1) % 4)), KC - 1) & (jint) 0xff);
    }
    *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(tk, 0)), 0) ^= IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_rcon), rconpointer++);
    if (KC <= 6) {
      for (jint j = 1; j < KC; j++) {
        for (jint i = 0; i < 4; i++) {
          *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(tk, i)), j) ^= IOSByteArray_Get(nil_chk(IOSObjectArray_Get(tk, i)), j - 1);
        }
      }
    }
    else {
      for (jint j = 1; j < 4; j++) {
        for (jint i = 0; i < 4; i++) {
          *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(tk, i)), j) ^= IOSByteArray_Get(nil_chk(IOSObjectArray_Get(tk, i)), j - 1);
        }
      }
      for (jint i = 0; i < 4; i++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(tk, i)), 4) ^= IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_S), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(tk, i)), 3) & (jint) 0xff);
      }
      for (jint j = 5; j < KC; j++) {
        for (jint i = 0; i < 4; i++) {
          *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(tk, i)), j) ^= IOSByteArray_Get(nil_chk(IOSObjectArray_Get(tk, i)), j - 1);
        }
      }
    }
    for (jint j = 0; (j < KC) && (t < (self->ROUNDS_ + 1) * (self->BC_ / 8)); j++, t++) {
      for (jint i = 0; i < 4; i++) {
        *IOSLongArray_GetRef(nil_chk(IOSObjectArray_Get(W, t / (self->BC_ / 8))), i) |= JreLShift64((jlong) (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(tk, i)), j) & (jint) 0xff), ((t * 8) % (self->BC_)));
      }
    }
  }
  return W;
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_init(OrgSpongycastleCryptoEnginesRijndaelEngine *self) {
  OrgSpongycastleCryptoEnginesRijndaelEngine_initWithInt_(self, 128);
}

OrgSpongycastleCryptoEnginesRijndaelEngine *new_OrgSpongycastleCryptoEnginesRijndaelEngine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesRijndaelEngine, init)
}

OrgSpongycastleCryptoEnginesRijndaelEngine *create_OrgSpongycastleCryptoEnginesRijndaelEngine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesRijndaelEngine, init)
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_initWithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint blockBits) {
  NSObject_init(self);
  switch (blockBits) {
    case 128:
    self->BC_ = 32;
    self->BC_MASK_ = (jlong) 0xffffffffLL;
    self->shifts0SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0), 0);
    self->shifts1SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1), 0);
    break;
    case 160:
    self->BC_ = 40;
    self->BC_MASK_ = (jlong) 0xffffffffffLL;
    self->shifts0SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0), 1);
    self->shifts1SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1), 1);
    break;
    case 192:
    self->BC_ = 48;
    self->BC_MASK_ = (jlong) 0xffffffffffffLL;
    self->shifts0SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0), 2);
    self->shifts1SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1), 2);
    break;
    case 224:
    self->BC_ = 56;
    self->BC_MASK_ = (jlong) 0xffffffffffffffLL;
    self->shifts0SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0), 3);
    self->shifts1SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1), 3);
    break;
    case 256:
    self->BC_ = 64;
    self->BC_MASK_ = (jlong) 0xffffffffffffffffLL;
    self->shifts0SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0), 4);
    self->shifts1SC_ = IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1), 4);
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"unknown blocksize to Rijndael");
  }
  self->blockBits_ = blockBits;
}

OrgSpongycastleCryptoEnginesRijndaelEngine *new_OrgSpongycastleCryptoEnginesRijndaelEngine_initWithInt_(jint blockBits) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesRijndaelEngine, initWithInt_, blockBits)
}

OrgSpongycastleCryptoEnginesRijndaelEngine *create_OrgSpongycastleCryptoEnginesRijndaelEngine_initWithInt_(jint blockBits) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesRijndaelEngine, initWithInt_, blockBits)
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_unpackBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *bytes, jint off) {
  jint index = off;
  self->A0_ = (IOSByteArray_Get(nil_chk(bytes), index++) & (jint) 0xff);
  self->A1_ = (IOSByteArray_Get(bytes, index++) & (jint) 0xff);
  self->A2_ = (IOSByteArray_Get(bytes, index++) & (jint) 0xff);
  self->A3_ = (IOSByteArray_Get(bytes, index++) & (jint) 0xff);
  for (jint j = 8; j != self->BC_; j += 8) {
    self->A0_ |= JreLShift64((jlong) (IOSByteArray_Get(bytes, index++) & (jint) 0xff), j);
    self->A1_ |= JreLShift64((jlong) (IOSByteArray_Get(bytes, index++) & (jint) 0xff), j);
    self->A2_ |= JreLShift64((jlong) (IOSByteArray_Get(bytes, index++) & (jint) 0xff), j);
    self->A3_ |= JreLShift64((jlong) (IOSByteArray_Get(bytes, index++) & (jint) 0xff), j);
  }
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_packBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSByteArray *bytes, jint off) {
  jint index = off;
  for (jint j = 0; j != self->BC_; j += 8) {
    *IOSByteArray_GetRef(nil_chk(bytes), index++) = (jbyte) (JreRShift64(self->A0_, j));
    *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift64(self->A1_, j));
    *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift64(self->A2_, j));
    *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift64(self->A3_, j));
  }
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_encryptBlockWithLongArray2_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSObjectArray *rk) {
  jint r;
  OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(self, IOSObjectArray_Get(nil_chk(rk), 0));
  for (r = 1; r < self->ROUNDS_; r++) {
    OrgSpongycastleCryptoEnginesRijndaelEngine_SubstitutionWithByteArray_(self, OrgSpongycastleCryptoEnginesRijndaelEngine_S);
    OrgSpongycastleCryptoEnginesRijndaelEngine_ShiftRowWithByteArray_(self, self->shifts0SC_);
    OrgSpongycastleCryptoEnginesRijndaelEngine_MixColumn(self);
    OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(self, IOSObjectArray_Get(rk, r));
  }
  OrgSpongycastleCryptoEnginesRijndaelEngine_SubstitutionWithByteArray_(self, OrgSpongycastleCryptoEnginesRijndaelEngine_S);
  OrgSpongycastleCryptoEnginesRijndaelEngine_ShiftRowWithByteArray_(self, self->shifts0SC_);
  OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(self, IOSObjectArray_Get(rk, self->ROUNDS_));
}

void OrgSpongycastleCryptoEnginesRijndaelEngine_decryptBlockWithLongArray2_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, IOSObjectArray *rk) {
  jint r;
  OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(self, IOSObjectArray_Get(nil_chk(rk), self->ROUNDS_));
  OrgSpongycastleCryptoEnginesRijndaelEngine_SubstitutionWithByteArray_(self, OrgSpongycastleCryptoEnginesRijndaelEngine_Si);
  OrgSpongycastleCryptoEnginesRijndaelEngine_ShiftRowWithByteArray_(self, self->shifts1SC_);
  for (r = self->ROUNDS_ - 1; r > 0; r--) {
    OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(self, IOSObjectArray_Get(rk, r));
    OrgSpongycastleCryptoEnginesRijndaelEngine_InvMixColumn(self);
    OrgSpongycastleCryptoEnginesRijndaelEngine_SubstitutionWithByteArray_(self, OrgSpongycastleCryptoEnginesRijndaelEngine_Si);
    OrgSpongycastleCryptoEnginesRijndaelEngine_ShiftRowWithByteArray_(self, self->shifts1SC_);
  }
  OrgSpongycastleCryptoEnginesRijndaelEngine_KeyAdditionWithLongArray_(self, IOSObjectArray_Get(rk, 0));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesRijndaelEngine)
