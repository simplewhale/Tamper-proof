//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/DESEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESEngine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesDESEngine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESEngine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESEngine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesDESEngine

#if !defined (OrgSpongycastleCryptoEnginesDESEngine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESEngine || defined(INCLUDE_OrgSpongycastleCryptoEnginesDESEngine))
#define OrgSpongycastleCryptoEnginesDESEngine_

#define RESTRICT_OrgSpongycastleCryptoBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoBlockCipher 1
#include "org/spongycastle/crypto/BlockCipher.h"

@class IOSByteArray;
@class IOSIntArray;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoEnginesDESEngine : NSObject < OrgSpongycastleCryptoBlockCipher >

#pragma mark Public

- (instancetype)init;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (void)init__WithBoolean:(jboolean)encrypting
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

#pragma mark Protected

- (void)desFuncWithIntArray:(IOSIntArray *)wKey
              withByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
              withByteArray:(IOSByteArray *)outArg
                    withInt:(jint)outOff;

- (IOSIntArray *)generateWorkingKeyWithBoolean:(jboolean)encrypting
                                 withByteArray:(IOSByteArray *)key;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoEnginesDESEngine)

inline jint OrgSpongycastleCryptoEnginesDESEngine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesDESEngine_BLOCK_SIZE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesDESEngine, BLOCK_SIZE, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesDESEngine_init(OrgSpongycastleCryptoEnginesDESEngine *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesDESEngine *new_OrgSpongycastleCryptoEnginesDESEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesDESEngine *create_OrgSpongycastleCryptoEnginesDESEngine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesDESEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESEngine")
