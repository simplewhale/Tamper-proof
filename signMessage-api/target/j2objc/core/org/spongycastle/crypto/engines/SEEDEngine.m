//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/SEEDEngine.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/DataLengthException.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/engines/SEEDEngine.h"
#include "org/spongycastle/crypto/params/KeyParameter.h"

@interface OrgSpongycastleCryptoEnginesSEEDEngine () {
 @public
  IOSIntArray *wKey_;
  jboolean forEncryption_;
}

- (IOSIntArray *)createWorkingKeyWithByteArray:(IOSByteArray *)inKey;

- (jint)extractW1WithLong:(jlong)lVal;

- (jint)extractW0WithLong:(jlong)lVal;

- (jlong)rotateLeft8WithLong:(jlong)x;

- (jlong)rotateRight8WithLong:(jlong)x;

- (jlong)bytesToLongWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcOff;

- (void)longToBytesWithByteArray:(IOSByteArray *)dest
                         withInt:(jint)destOff
                        withLong:(jlong)value;

- (jint)GWithInt:(jint)x;

- (jlong)FWithInt:(jint)ki0
          withInt:(jint)ki1
         withLong:(jlong)r;

- (jint)phaseCalc1WithInt:(jint)r0
                  withInt:(jint)ki0
                  withInt:(jint)r1
                  withInt:(jint)ki1;

- (jint)phaseCalc2WithInt:(jint)r0
                  withInt:(jint)ki0
                  withInt:(jint)r1
                  withInt:(jint)ki1;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesSEEDEngine, wKey_, IOSIntArray *)

inline jint OrgSpongycastleCryptoEnginesSEEDEngine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesSEEDEngine_BLOCK_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesSEEDEngine, BLOCK_SIZE, jint)

inline IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_get_SS0(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_SS0;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesSEEDEngine, SS0, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_get_SS1(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_SS1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesSEEDEngine, SS1, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_get_SS2(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_SS2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesSEEDEngine, SS2, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_get_SS3(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_SS3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesSEEDEngine, SS3, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_get_KC(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_KC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesSEEDEngine, KC, IOSIntArray *)

__attribute__((unused)) static IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_createWorkingKeyWithByteArray_(OrgSpongycastleCryptoEnginesSEEDEngine *self, IOSByteArray *inKey);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesSEEDEngine_extractW1WithLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jlong lVal);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesSEEDEngine_extractW0WithLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jlong lVal);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesSEEDEngine_rotateLeft8WithLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jlong x);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesSEEDEngine_rotateRight8WithLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jlong x);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesSEEDEngine_bytesToLongWithByteArray_withInt_(OrgSpongycastleCryptoEnginesSEEDEngine *self, IOSByteArray *src, jint srcOff);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesSEEDEngine_longToBytesWithByteArray_withInt_withLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, IOSByteArray *dest, jint destOff, jlong value);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jint x);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesSEEDEngine_FWithInt_withInt_withLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jint ki0, jint ki1, jlong r);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc1WithInt_withInt_withInt_withInt_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jint r0, jint ki0, jint r1, jint ki1);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc2WithInt_withInt_withInt_withInt_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jint r0, jint ki0, jint r1, jint ki1);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoEnginesSEEDEngine)

@implementation OrgSpongycastleCryptoEnginesSEEDEngine

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEnginesSEEDEngine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  self->forEncryption_ = forEncryption;
  wKey_ = OrgSpongycastleCryptoEnginesSEEDEngine_createWorkingKeyWithByteArray_(self, [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) cast_chk(params, [OrgSpongycastleCryptoParamsKeyParameter class])))) getKey]);
}

- (NSString *)getAlgorithmName {
  return @"SEED";
}

- (jint)getBlockSize {
  return OrgSpongycastleCryptoEnginesSEEDEngine_BLOCK_SIZE;
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  if (wKey_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"SEED engine not initialised");
  }
  if (inOff + OrgSpongycastleCryptoEnginesSEEDEngine_BLOCK_SIZE > ((IOSByteArray *) nil_chk(inArg))->size_) {
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  if (outOff + OrgSpongycastleCryptoEnginesSEEDEngine_BLOCK_SIZE > ((IOSByteArray *) nil_chk(outArg))->size_) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  jlong l = OrgSpongycastleCryptoEnginesSEEDEngine_bytesToLongWithByteArray_withInt_(self, inArg, inOff + 0);
  jlong r = OrgSpongycastleCryptoEnginesSEEDEngine_bytesToLongWithByteArray_withInt_(self, inArg, inOff + 8);
  if (forEncryption_) {
    for (jint i = 0; i < 16; i++) {
      jlong nl = r;
      r = l ^ OrgSpongycastleCryptoEnginesSEEDEngine_FWithInt_withInt_withLong_(self, IOSIntArray_Get(nil_chk(wKey_), 2 * i), IOSIntArray_Get(wKey_, (2 * i) + 1), r);
      l = nl;
    }
  }
  else {
    for (jint i = 15; i >= 0; i--) {
      jlong nl = r;
      r = l ^ OrgSpongycastleCryptoEnginesSEEDEngine_FWithInt_withInt_withLong_(self, IOSIntArray_Get(nil_chk(wKey_), 2 * i), IOSIntArray_Get(wKey_, (2 * i) + 1), r);
      l = nl;
    }
  }
  OrgSpongycastleCryptoEnginesSEEDEngine_longToBytesWithByteArray_withInt_withLong_(self, outArg, outOff + 0, r);
  OrgSpongycastleCryptoEnginesSEEDEngine_longToBytesWithByteArray_withInt_withLong_(self, outArg, outOff + 8, l);
  return OrgSpongycastleCryptoEnginesSEEDEngine_BLOCK_SIZE;
}

- (void)reset {
}

- (IOSIntArray *)createWorkingKeyWithByteArray:(IOSByteArray *)inKey {
  return OrgSpongycastleCryptoEnginesSEEDEngine_createWorkingKeyWithByteArray_(self, inKey);
}

- (jint)extractW1WithLong:(jlong)lVal {
  return OrgSpongycastleCryptoEnginesSEEDEngine_extractW1WithLong_(self, lVal);
}

- (jint)extractW0WithLong:(jlong)lVal {
  return OrgSpongycastleCryptoEnginesSEEDEngine_extractW0WithLong_(self, lVal);
}

- (jlong)rotateLeft8WithLong:(jlong)x {
  return OrgSpongycastleCryptoEnginesSEEDEngine_rotateLeft8WithLong_(self, x);
}

- (jlong)rotateRight8WithLong:(jlong)x {
  return OrgSpongycastleCryptoEnginesSEEDEngine_rotateRight8WithLong_(self, x);
}

- (jlong)bytesToLongWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcOff {
  return OrgSpongycastleCryptoEnginesSEEDEngine_bytesToLongWithByteArray_withInt_(self, src, srcOff);
}

- (void)longToBytesWithByteArray:(IOSByteArray *)dest
                         withInt:(jint)destOff
                        withLong:(jlong)value {
  OrgSpongycastleCryptoEnginesSEEDEngine_longToBytesWithByteArray_withInt_withLong_(self, dest, destOff, value);
}

- (jint)GWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(self, x);
}

- (jlong)FWithInt:(jint)ki0
          withInt:(jint)ki1
         withLong:(jlong)r {
  return OrgSpongycastleCryptoEnginesSEEDEngine_FWithInt_withInt_withLong_(self, ki0, ki1, r);
}

- (jint)phaseCalc1WithInt:(jint)r0
                  withInt:(jint)ki0
                  withInt:(jint)r1
                  withInt:(jint)ki1 {
  return OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc1WithInt_withInt_withInt_withInt_(self, r0, ki0, r1, ki1);
}

- (jint)phaseCalc2WithInt:(jint)r0
                  withInt:(jint)ki0
                  withInt:(jint)r1
                  withInt:(jint)ki1 {
  return OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc2WithInt_withInt_withInt_withInt_(self, r0, ki0, r1, ki1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 10, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 11, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 12, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 19, 20, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 23, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(getAlgorithmName);
  methods[3].selector = @selector(getBlockSize);
  methods[4].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[5].selector = @selector(reset);
  methods[6].selector = @selector(createWorkingKeyWithByteArray:);
  methods[7].selector = @selector(extractW1WithLong:);
  methods[8].selector = @selector(extractW0WithLong:);
  methods[9].selector = @selector(rotateLeft8WithLong:);
  methods[10].selector = @selector(rotateRight8WithLong:);
  methods[11].selector = @selector(bytesToLongWithByteArray:withInt:);
  methods[12].selector = @selector(longToBytesWithByteArray:withInt:withLong:);
  methods[13].selector = @selector(GWithInt:);
  methods[14].selector = @selector(FWithInt:withInt:withLong:);
  methods[15].selector = @selector(phaseCalc1WithInt:withInt:withInt:withInt:);
  methods[16].selector = @selector(phaseCalc2WithInt:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesSEEDEngine_BLOCK_SIZE, 0x12, 24, -1, -1, -1 },
    { "SS0", "[I", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "SS1", "[I", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "SS2", "[I", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "SS3", "[I", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "KC", "[I", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "wKey_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "forEncryption_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "ZLOrgSpongycastleCryptoCipherParameters;", "LJavaLangIllegalArgumentException;", "processBlock", "[BI[BI", "LOrgSpongycastleCryptoDataLengthException;LJavaLangIllegalStateException;", "createWorkingKey", "[B", "extractW1", "J", "extractW0", "rotateLeft8", "rotateRight8", "bytesToLong", "[BI", "longToBytes", "[BIJ", "G", "I", "F", "IIJ", "phaseCalc1", "IIII", "phaseCalc2", "BLOCK_SIZE", &OrgSpongycastleCryptoEnginesSEEDEngine_SS0, &OrgSpongycastleCryptoEnginesSEEDEngine_SS1, &OrgSpongycastleCryptoEnginesSEEDEngine_SS2, &OrgSpongycastleCryptoEnginesSEEDEngine_SS3, &OrgSpongycastleCryptoEnginesSEEDEngine_KC };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesSEEDEngine = { "SEEDEngine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 17, 8, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesSEEDEngine;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoEnginesSEEDEngine class]) {
    OrgSpongycastleCryptoEnginesSEEDEngine_SS0 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x2989a1a8, (jint) 0x05858184, (jint) 0x16c6d2d4, (jint) 0x13c3d3d0, (jint) 0x14445054, (jint) 0x1d0d111c, (jint) 0x2c8ca0ac, (jint) 0x25052124, (jint) 0x1d4d515c, (jint) 0x03434340, (jint) 0x18081018, (jint) 0x1e0e121c, (jint) 0x11415150, (jint) 0x3cccf0fc, (jint) 0x0acac2c8, (jint) 0x23436360, (jint) 0x28082028, (jint) 0x04444044, (jint) 0x20002020, (jint) 0x1d8d919c, (jint) 0x20c0e0e0, (jint) 0x22c2e2e0, (jint) 0x08c8c0c8, (jint) 0x17071314, (jint) 0x2585a1a4, (jint) 0x0f8f838c, (jint) 0x03030300, (jint) 0x3b4b7378, (jint) 0x3b8bb3b8, (jint) 0x13031310, (jint) 0x12c2d2d0, (jint) 0x2ecee2ec, (jint) 0x30407070, (jint) 0x0c8c808c, (jint) 0x3f0f333c, (jint) 0x2888a0a8, (jint) 0x32023230, (jint) 0x1dcdd1dc, (jint) 0x36c6f2f4, (jint) 0x34447074, (jint) 0x2ccce0ec, (jint) 0x15859194, (jint) 0x0b0b0308, (jint) 0x17475354, (jint) 0x1c4c505c, (jint) 0x1b4b5358, (jint) 0x3d8db1bc, (jint) 0x01010100, (jint) 0x24042024, (jint) 0x1c0c101c, (jint) 0x33437370, (jint) 0x18889098, (jint) 0x10001010, (jint) 0x0cccc0cc, (jint) 0x32c2f2f0, (jint) 0x19c9d1d8, (jint) 0x2c0c202c, (jint) 0x27c7e3e4, (jint) 0x32427270, (jint) 0x03838380, (jint) 0x1b8b9398, (jint) 0x11c1d1d0, (jint) 0x06868284, (jint) 0x09c9c1c8, (jint) 0x20406060, (jint) 0x10405050, (jint) 0x2383a3a0, (jint) 0x2bcbe3e8, (jint) 0x0d0d010c, (jint) 0x3686b2b4, (jint) 0x1e8e929c, (jint) 0x0f4f434c, (jint) 0x3787b3b4, (jint) 0x1a4a5258, (jint) 0x06c6c2c4, (jint) 0x38487078, (jint) 0x2686a2a4, (jint) 0x12021210, (jint) 0x2f8fa3ac, (jint) 0x15c5d1d4, (jint) 0x21416160, (jint) 0x03c3c3c0, (jint) 0x3484b0b4, (jint) 0x01414140, (jint) 0x12425250, (jint) 0x3d4d717c, (jint) 0x0d8d818c, (jint) 0x08080008, (jint) 0x1f0f131c, (jint) 0x19899198, (jint) 0x00000000, (jint) 0x19091118, (jint) 0x04040004, (jint) 0x13435350, (jint) 0x37c7f3f4, (jint) 0x21c1e1e0, (jint) 0x3dcdf1fc, (jint) 0x36467274, (jint) 0x2f0f232c, (jint) 0x27072324, (jint) 0x3080b0b0, (jint) 0x0b8b8388, (jint) 0x0e0e020c, (jint) 0x2b8ba3a8, (jint) 0x2282a2a0, (jint) 0x2e4e626c, (jint) 0x13839390, (jint) 0x0d4d414c, (jint) 0x29496168, (jint) 0x3c4c707c, (jint) 0x09090108, (jint) 0x0a0a0208, (jint) 0x3f8fb3bc, (jint) 0x2fcfe3ec, (jint) 0x33c3f3f0, (jint) 0x05c5c1c4, (jint) 0x07878384, (jint) 0x14041014, (jint) 0x3ecef2fc, (jint) 0x24446064, (jint) 0x1eced2dc, (jint) 0x2e0e222c, (jint) 0x0b4b4348, (jint) 0x1a0a1218, (jint) 0x06060204, (jint) 0x21012120, (jint) 0x2b4b6368, (jint) 0x26466264, (jint) 0x02020200, (jint) 0x35c5f1f4, (jint) 0x12829290, (jint) 0x0a8a8288, (jint) 0x0c0c000c, (jint) 0x3383b3b0, (jint) 0x3e4e727c, (jint) 0x10c0d0d0, (jint) 0x3a4a7278, (jint) 0x07474344, (jint) 0x16869294, (jint) 0x25c5e1e4, (jint) 0x26062224, (jint) 0x00808080, (jint) 0x2d8da1ac, (jint) 0x1fcfd3dc, (jint) 0x2181a1a0, (jint) 0x30003030, (jint) 0x37073334, (jint) 0x2e8ea2ac, (jint) 0x36063234, (jint) 0x15051114, (jint) 0x22022220, (jint) 0x38083038, (jint) 0x34c4f0f4, (jint) 0x2787a3a4, (jint) 0x05454144, (jint) 0x0c4c404c, (jint) 0x01818180, (jint) 0x29c9e1e8, (jint) 0x04848084, (jint) 0x17879394, (jint) 0x35053134, (jint) 0x0bcbc3c8, (jint) 0x0ecec2cc, (jint) 0x3c0c303c, (jint) 0x31417170, (jint) 0x11011110, (jint) 0x07c7c3c4, (jint) 0x09898188, (jint) 0x35457174, (jint) 0x3bcbf3f8, (jint) 0x1acad2d8, (jint) 0x38c8f0f8, (jint) 0x14849094, (jint) 0x19495158, (jint) 0x02828280, (jint) 0x04c4c0c4, (jint) 0x3fcff3fc, (jint) 0x09494148, (jint) 0x39093138, (jint) 0x27476364, (jint) 0x00c0c0c0, (jint) 0x0fcfc3cc, (jint) 0x17c7d3d4, (jint) 0x3888b0b8, (jint) 0x0f0f030c, (jint) 0x0e8e828c, (jint) 0x02424240, (jint) 0x23032320, (jint) 0x11819190, (jint) 0x2c4c606c, (jint) 0x1bcbd3d8, (jint) 0x2484a0a4, (jint) 0x34043034, (jint) 0x31c1f1f0, (jint) 0x08484048, (jint) 0x02c2c2c0, (jint) 0x2f4f636c, (jint) 0x3d0d313c, (jint) 0x2d0d212c, (jint) 0x00404040, (jint) 0x3e8eb2bc, (jint) 0x3e0e323c, (jint) 0x3c8cb0bc, (jint) 0x01c1c1c0, (jint) 0x2a8aa2a8, (jint) 0x3a8ab2b8, (jint) 0x0e4e424c, (jint) 0x15455154, (jint) 0x3b0b3338, (jint) 0x1cccd0dc, (jint) 0x28486068, (jint) 0x3f4f737c, (jint) 0x1c8c909c, (jint) 0x18c8d0d8, (jint) 0x0a4a4248, (jint) 0x16465254, (jint) 0x37477374, (jint) 0x2080a0a0, (jint) 0x2dcde1ec, (jint) 0x06464244, (jint) 0x3585b1b4, (jint) 0x2b0b2328, (jint) 0x25456164, (jint) 0x3acaf2f8, (jint) 0x23c3e3e0, (jint) 0x3989b1b8, (jint) 0x3181b1b0, (jint) 0x1f8f939c, (jint) 0x1e4e525c, (jint) 0x39c9f1f8, (jint) 0x26c6e2e4, (jint) 0x3282b2b0, (jint) 0x31013130, (jint) 0x2acae2e8, (jint) 0x2d4d616c, (jint) 0x1f4f535c, (jint) 0x24c4e0e4, (jint) 0x30c0f0f0, (jint) 0x0dcdc1cc, (jint) 0x08888088, (jint) 0x16061214, (jint) 0x3a0a3238, (jint) 0x18485058, (jint) 0x14c4d0d4, (jint) 0x22426260, (jint) 0x29092128, (jint) 0x07070304, (jint) 0x33033330, (jint) 0x28c8e0e8, (jint) 0x1b0b1318, (jint) 0x05050104, (jint) 0x39497178, (jint) 0x10809090, (jint) 0x2a4a6268, (jint) 0x2a0a2228, (jint) 0x1a8a9298 } count:256];
    OrgSpongycastleCryptoEnginesSEEDEngine_SS1 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x38380830, (jint) 0xe828c8e0, (jint) 0x2c2d0d21, (jint) 0xa42686a2, (jint) 0xcc0fcfc3, (jint) 0xdc1eced2, (jint) 0xb03383b3, (jint) 0xb83888b0, (jint) 0xac2f8fa3, (jint) 0x60204060, (jint) 0x54154551, (jint) 0xc407c7c3, (jint) 0x44044440, (jint) 0x6c2f4f63, (jint) 0x682b4b63, (jint) 0x581b4b53, (jint) 0xc003c3c3, (jint) 0x60224262, (jint) 0x30330333, (jint) 0xb43585b1, (jint) 0x28290921, (jint) 0xa02080a0, (jint) 0xe022c2e2, (jint) 0xa42787a3, (jint) 0xd013c3d3, (jint) 0x90118191, (jint) 0x10110111, (jint) 0x04060602, (jint) 0x1c1c0c10, (jint) 0xbc3c8cb0, (jint) 0x34360632, (jint) 0x480b4b43, (jint) 0xec2fcfe3, (jint) 0x88088880, (jint) 0x6c2c4c60, (jint) 0xa82888a0, (jint) 0x14170713, (jint) 0xc404c4c0, (jint) 0x14160612, (jint) 0xf434c4f0, (jint) 0xc002c2c2, (jint) 0x44054541, (jint) 0xe021c1e1, (jint) 0xd416c6d2, (jint) 0x3c3f0f33, (jint) 0x3c3d0d31, (jint) 0x8c0e8e82, (jint) 0x98188890, (jint) 0x28280820, (jint) 0x4c0e4e42, (jint) 0xf436c6f2, (jint) 0x3c3e0e32, (jint) 0xa42585a1, (jint) 0xf839c9f1, (jint) 0x0c0d0d01, (jint) 0xdc1fcfd3, (jint) 0xd818c8d0, (jint) 0x282b0b23, (jint) 0x64264662, (jint) 0x783a4a72, (jint) 0x24270723, (jint) 0x2c2f0f23, (jint) 0xf031c1f1, (jint) 0x70324272, (jint) 0x40024242, (jint) 0xd414c4d0, (jint) 0x40014141, (jint) 0xc000c0c0, (jint) 0x70334373, (jint) 0x64274763, (jint) 0xac2c8ca0, (jint) 0x880b8b83, (jint) 0xf437c7f3, (jint) 0xac2d8da1, (jint) 0x80008080, (jint) 0x1c1f0f13, (jint) 0xc80acac2, (jint) 0x2c2c0c20, (jint) 0xa82a8aa2, (jint) 0x34340430, (jint) 0xd012c2d2, (jint) 0x080b0b03, (jint) 0xec2ecee2, (jint) 0xe829c9e1, (jint) 0x5c1d4d51, (jint) 0x94148490, (jint) 0x18180810, (jint) 0xf838c8f0, (jint) 0x54174753, (jint) 0xac2e8ea2, (jint) 0x08080800, (jint) 0xc405c5c1, (jint) 0x10130313, (jint) 0xcc0dcdc1, (jint) 0x84068682, (jint) 0xb83989b1, (jint) 0xfc3fcff3, (jint) 0x7c3d4d71, (jint) 0xc001c1c1, (jint) 0x30310131, (jint) 0xf435c5f1, (jint) 0x880a8a82, (jint) 0x682a4a62, (jint) 0xb03181b1, (jint) 0xd011c1d1, (jint) 0x20200020, (jint) 0xd417c7d3, (jint) 0x00020202, (jint) 0x20220222, (jint) 0x04040400, (jint) 0x68284860, (jint) 0x70314171, (jint) 0x04070703, (jint) 0xd81bcbd3, (jint) 0x9c1d8d91, (jint) 0x98198991, (jint) 0x60214161, (jint) 0xbc3e8eb2, (jint) 0xe426c6e2, (jint) 0x58194951, (jint) 0xdc1dcdd1, (jint) 0x50114151, (jint) 0x90108090, (jint) 0xdc1cccd0, (jint) 0x981a8a92, (jint) 0xa02383a3, (jint) 0xa82b8ba3, (jint) 0xd010c0d0, (jint) 0x80018181, (jint) 0x0c0f0f03, (jint) 0x44074743, (jint) 0x181a0a12, (jint) 0xe023c3e3, (jint) 0xec2ccce0, (jint) 0x8c0d8d81, (jint) 0xbc3f8fb3, (jint) 0x94168692, (jint) 0x783b4b73, (jint) 0x5c1c4c50, (jint) 0xa02282a2, (jint) 0xa02181a1, (jint) 0x60234363, (jint) 0x20230323, (jint) 0x4c0d4d41, (jint) 0xc808c8c0, (jint) 0x9c1e8e92, (jint) 0x9c1c8c90, (jint) 0x383a0a32, (jint) 0x0c0c0c00, (jint) 0x2c2e0e22, (jint) 0xb83a8ab2, (jint) 0x6c2e4e62, (jint) 0x9c1f8f93, (jint) 0x581a4a52, (jint) 0xf032c2f2, (jint) 0x90128292, (jint) 0xf033c3f3, (jint) 0x48094941, (jint) 0x78384870, (jint) 0xcc0cccc0, (jint) 0x14150511, (jint) 0xf83bcbf3, (jint) 0x70304070, (jint) 0x74354571, (jint) 0x7c3f4f73, (jint) 0x34350531, (jint) 0x10100010, (jint) 0x00030303, (jint) 0x64244460, (jint) 0x6c2d4d61, (jint) 0xc406c6c2, (jint) 0x74344470, (jint) 0xd415c5d1, (jint) 0xb43484b0, (jint) 0xe82acae2, (jint) 0x08090901, (jint) 0x74364672, (jint) 0x18190911, (jint) 0xfc3ecef2, (jint) 0x40004040, (jint) 0x10120212, (jint) 0xe020c0e0, (jint) 0xbc3d8db1, (jint) 0x04050501, (jint) 0xf83acaf2, (jint) 0x00010101, (jint) 0xf030c0f0, (jint) 0x282a0a22, (jint) 0x5c1e4e52, (jint) 0xa82989a1, (jint) 0x54164652, (jint) 0x40034343, (jint) 0x84058581, (jint) 0x14140410, (jint) 0x88098981, (jint) 0x981b8b93, (jint) 0xb03080b0, (jint) 0xe425c5e1, (jint) 0x48084840, (jint) 0x78394971, (jint) 0x94178793, (jint) 0xfc3cccf0, (jint) 0x1c1e0e12, (jint) 0x80028282, (jint) 0x20210121, (jint) 0x8c0c8c80, (jint) 0x181b0b13, (jint) 0x5c1f4f53, (jint) 0x74374773, (jint) 0x54144450, (jint) 0xb03282b2, (jint) 0x1c1d0d11, (jint) 0x24250521, (jint) 0x4c0f4f43, (jint) 0x00000000, (jint) 0x44064642, (jint) 0xec2dcde1, (jint) 0x58184850, (jint) 0x50124252, (jint) 0xe82bcbe3, (jint) 0x7c3e4e72, (jint) 0xd81acad2, (jint) 0xc809c9c1, (jint) 0xfc3dcdf1, (jint) 0x30300030, (jint) 0x94158591, (jint) 0x64254561, (jint) 0x3c3c0c30, (jint) 0xb43686b2, (jint) 0xe424c4e0, (jint) 0xb83b8bb3, (jint) 0x7c3c4c70, (jint) 0x0c0e0e02, (jint) 0x50104050, (jint) 0x38390931, (jint) 0x24260622, (jint) 0x30320232, (jint) 0x84048480, (jint) 0x68294961, (jint) 0x90138393, (jint) 0x34370733, (jint) 0xe427c7e3, (jint) 0x24240420, (jint) 0xa42484a0, (jint) 0xc80bcbc3, (jint) 0x50134353, (jint) 0x080a0a02, (jint) 0x84078783, (jint) 0xd819c9d1, (jint) 0x4c0c4c40, (jint) 0x80038383, (jint) 0x8c0f8f83, (jint) 0xcc0ecec2, (jint) 0x383b0b33, (jint) 0x480a4a42, (jint) 0xb43787b3 } count:256];
    OrgSpongycastleCryptoEnginesSEEDEngine_SS2 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0xa1a82989, (jint) 0x81840585, (jint) 0xd2d416c6, (jint) 0xd3d013c3, (jint) 0x50541444, (jint) 0x111c1d0d, (jint) 0xa0ac2c8c, (jint) 0x21242505, (jint) 0x515c1d4d, (jint) 0x43400343, (jint) 0x10181808, (jint) 0x121c1e0e, (jint) 0x51501141, (jint) 0xf0fc3ccc, (jint) 0xc2c80aca, (jint) 0x63602343, (jint) 0x20282808, (jint) 0x40440444, (jint) 0x20202000, (jint) 0x919c1d8d, (jint) 0xe0e020c0, (jint) 0xe2e022c2, (jint) 0xc0c808c8, (jint) 0x13141707, (jint) 0xa1a42585, (jint) 0x838c0f8f, (jint) 0x03000303, (jint) 0x73783b4b, (jint) 0xb3b83b8b, (jint) 0x13101303, (jint) 0xd2d012c2, (jint) 0xe2ec2ece, (jint) 0x70703040, (jint) 0x808c0c8c, (jint) 0x333c3f0f, (jint) 0xa0a82888, (jint) 0x32303202, (jint) 0xd1dc1dcd, (jint) 0xf2f436c6, (jint) 0x70743444, (jint) 0xe0ec2ccc, (jint) 0x91941585, (jint) 0x03080b0b, (jint) 0x53541747, (jint) 0x505c1c4c, (jint) 0x53581b4b, (jint) 0xb1bc3d8d, (jint) 0x01000101, (jint) 0x20242404, (jint) 0x101c1c0c, (jint) 0x73703343, (jint) 0x90981888, (jint) 0x10101000, (jint) 0xc0cc0ccc, (jint) 0xf2f032c2, (jint) 0xd1d819c9, (jint) 0x202c2c0c, (jint) 0xe3e427c7, (jint) 0x72703242, (jint) 0x83800383, (jint) 0x93981b8b, (jint) 0xd1d011c1, (jint) 0x82840686, (jint) 0xc1c809c9, (jint) 0x60602040, (jint) 0x50501040, (jint) 0xa3a02383, (jint) 0xe3e82bcb, (jint) 0x010c0d0d, (jint) 0xb2b43686, (jint) 0x929c1e8e, (jint) 0x434c0f4f, (jint) 0xb3b43787, (jint) 0x52581a4a, (jint) 0xc2c406c6, (jint) 0x70783848, (jint) 0xa2a42686, (jint) 0x12101202, (jint) 0xa3ac2f8f, (jint) 0xd1d415c5, (jint) 0x61602141, (jint) 0xc3c003c3, (jint) 0xb0b43484, (jint) 0x41400141, (jint) 0x52501242, (jint) 0x717c3d4d, (jint) 0x818c0d8d, (jint) 0x00080808, (jint) 0x131c1f0f, (jint) 0x91981989, (jint) 0x00000000, (jint) 0x11181909, (jint) 0x00040404, (jint) 0x53501343, (jint) 0xf3f437c7, (jint) 0xe1e021c1, (jint) 0xf1fc3dcd, (jint) 0x72743646, (jint) 0x232c2f0f, (jint) 0x23242707, (jint) 0xb0b03080, (jint) 0x83880b8b, (jint) 0x020c0e0e, (jint) 0xa3a82b8b, (jint) 0xa2a02282, (jint) 0x626c2e4e, (jint) 0x93901383, (jint) 0x414c0d4d, (jint) 0x61682949, (jint) 0x707c3c4c, (jint) 0x01080909, (jint) 0x02080a0a, (jint) 0xb3bc3f8f, (jint) 0xe3ec2fcf, (jint) 0xf3f033c3, (jint) 0xc1c405c5, (jint) 0x83840787, (jint) 0x10141404, (jint) 0xf2fc3ece, (jint) 0x60642444, (jint) 0xd2dc1ece, (jint) 0x222c2e0e, (jint) 0x43480b4b, (jint) 0x12181a0a, (jint) 0x02040606, (jint) 0x21202101, (jint) 0x63682b4b, (jint) 0x62642646, (jint) 0x02000202, (jint) 0xf1f435c5, (jint) 0x92901282, (jint) 0x82880a8a, (jint) 0x000c0c0c, (jint) 0xb3b03383, (jint) 0x727c3e4e, (jint) 0xd0d010c0, (jint) 0x72783a4a, (jint) 0x43440747, (jint) 0x92941686, (jint) 0xe1e425c5, (jint) 0x22242606, (jint) 0x80800080, (jint) 0xa1ac2d8d, (jint) 0xd3dc1fcf, (jint) 0xa1a02181, (jint) 0x30303000, (jint) 0x33343707, (jint) 0xa2ac2e8e, (jint) 0x32343606, (jint) 0x11141505, (jint) 0x22202202, (jint) 0x30383808, (jint) 0xf0f434c4, (jint) 0xa3a42787, (jint) 0x41440545, (jint) 0x404c0c4c, (jint) 0x81800181, (jint) 0xe1e829c9, (jint) 0x80840484, (jint) 0x93941787, (jint) 0x31343505, (jint) 0xc3c80bcb, (jint) 0xc2cc0ece, (jint) 0x303c3c0c, (jint) 0x71703141, (jint) 0x11101101, (jint) 0xc3c407c7, (jint) 0x81880989, (jint) 0x71743545, (jint) 0xf3f83bcb, (jint) 0xd2d81aca, (jint) 0xf0f838c8, (jint) 0x90941484, (jint) 0x51581949, (jint) 0x82800282, (jint) 0xc0c404c4, (jint) 0xf3fc3fcf, (jint) 0x41480949, (jint) 0x31383909, (jint) 0x63642747, (jint) 0xc0c000c0, (jint) 0xc3cc0fcf, (jint) 0xd3d417c7, (jint) 0xb0b83888, (jint) 0x030c0f0f, (jint) 0x828c0e8e, (jint) 0x42400242, (jint) 0x23202303, (jint) 0x91901181, (jint) 0x606c2c4c, (jint) 0xd3d81bcb, (jint) 0xa0a42484, (jint) 0x30343404, (jint) 0xf1f031c1, (jint) 0x40480848, (jint) 0xc2c002c2, (jint) 0x636c2f4f, (jint) 0x313c3d0d, (jint) 0x212c2d0d, (jint) 0x40400040, (jint) 0xb2bc3e8e, (jint) 0x323c3e0e, (jint) 0xb0bc3c8c, (jint) 0xc1c001c1, (jint) 0xa2a82a8a, (jint) 0xb2b83a8a, (jint) 0x424c0e4e, (jint) 0x51541545, (jint) 0x33383b0b, (jint) 0xd0dc1ccc, (jint) 0x60682848, (jint) 0x737c3f4f, (jint) 0x909c1c8c, (jint) 0xd0d818c8, (jint) 0x42480a4a, (jint) 0x52541646, (jint) 0x73743747, (jint) 0xa0a02080, (jint) 0xe1ec2dcd, (jint) 0x42440646, (jint) 0xb1b43585, (jint) 0x23282b0b, (jint) 0x61642545, (jint) 0xf2f83aca, (jint) 0xe3e023c3, (jint) 0xb1b83989, (jint) 0xb1b03181, (jint) 0x939c1f8f, (jint) 0x525c1e4e, (jint) 0xf1f839c9, (jint) 0xe2e426c6, (jint) 0xb2b03282, (jint) 0x31303101, (jint) 0xe2e82aca, (jint) 0x616c2d4d, (jint) 0x535c1f4f, (jint) 0xe0e424c4, (jint) 0xf0f030c0, (jint) 0xc1cc0dcd, (jint) 0x80880888, (jint) 0x12141606, (jint) 0x32383a0a, (jint) 0x50581848, (jint) 0xd0d414c4, (jint) 0x62602242, (jint) 0x21282909, (jint) 0x03040707, (jint) 0x33303303, (jint) 0xe0e828c8, (jint) 0x13181b0b, (jint) 0x01040505, (jint) 0x71783949, (jint) 0x90901080, (jint) 0x62682a4a, (jint) 0x22282a0a, (jint) 0x92981a8a } count:256];
    OrgSpongycastleCryptoEnginesSEEDEngine_SS3 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x08303838, (jint) 0xc8e0e828, (jint) 0x0d212c2d, (jint) 0x86a2a426, (jint) 0xcfc3cc0f, (jint) 0xced2dc1e, (jint) 0x83b3b033, (jint) 0x88b0b838, (jint) 0x8fa3ac2f, (jint) 0x40606020, (jint) 0x45515415, (jint) 0xc7c3c407, (jint) 0x44404404, (jint) 0x4f636c2f, (jint) 0x4b63682b, (jint) 0x4b53581b, (jint) 0xc3c3c003, (jint) 0x42626022, (jint) 0x03333033, (jint) 0x85b1b435, (jint) 0x09212829, (jint) 0x80a0a020, (jint) 0xc2e2e022, (jint) 0x87a3a427, (jint) 0xc3d3d013, (jint) 0x81919011, (jint) 0x01111011, (jint) 0x06020406, (jint) 0x0c101c1c, (jint) 0x8cb0bc3c, (jint) 0x06323436, (jint) 0x4b43480b, (jint) 0xcfe3ec2f, (jint) 0x88808808, (jint) 0x4c606c2c, (jint) 0x88a0a828, (jint) 0x07131417, (jint) 0xc4c0c404, (jint) 0x06121416, (jint) 0xc4f0f434, (jint) 0xc2c2c002, (jint) 0x45414405, (jint) 0xc1e1e021, (jint) 0xc6d2d416, (jint) 0x0f333c3f, (jint) 0x0d313c3d, (jint) 0x8e828c0e, (jint) 0x88909818, (jint) 0x08202828, (jint) 0x4e424c0e, (jint) 0xc6f2f436, (jint) 0x0e323c3e, (jint) 0x85a1a425, (jint) 0xc9f1f839, (jint) 0x0d010c0d, (jint) 0xcfd3dc1f, (jint) 0xc8d0d818, (jint) 0x0b23282b, (jint) 0x46626426, (jint) 0x4a72783a, (jint) 0x07232427, (jint) 0x0f232c2f, (jint) 0xc1f1f031, (jint) 0x42727032, (jint) 0x42424002, (jint) 0xc4d0d414, (jint) 0x41414001, (jint) 0xc0c0c000, (jint) 0x43737033, (jint) 0x47636427, (jint) 0x8ca0ac2c, (jint) 0x8b83880b, (jint) 0xc7f3f437, (jint) 0x8da1ac2d, (jint) 0x80808000, (jint) 0x0f131c1f, (jint) 0xcac2c80a, (jint) 0x0c202c2c, (jint) 0x8aa2a82a, (jint) 0x04303434, (jint) 0xc2d2d012, (jint) 0x0b03080b, (jint) 0xcee2ec2e, (jint) 0xc9e1e829, (jint) 0x4d515c1d, (jint) 0x84909414, (jint) 0x08101818, (jint) 0xc8f0f838, (jint) 0x47535417, (jint) 0x8ea2ac2e, (jint) 0x08000808, (jint) 0xc5c1c405, (jint) 0x03131013, (jint) 0xcdc1cc0d, (jint) 0x86828406, (jint) 0x89b1b839, (jint) 0xcff3fc3f, (jint) 0x4d717c3d, (jint) 0xc1c1c001, (jint) 0x01313031, (jint) 0xc5f1f435, (jint) 0x8a82880a, (jint) 0x4a62682a, (jint) 0x81b1b031, (jint) 0xc1d1d011, (jint) 0x00202020, (jint) 0xc7d3d417, (jint) 0x02020002, (jint) 0x02222022, (jint) 0x04000404, (jint) 0x48606828, (jint) 0x41717031, (jint) 0x07030407, (jint) 0xcbd3d81b, (jint) 0x8d919c1d, (jint) 0x89919819, (jint) 0x41616021, (jint) 0x8eb2bc3e, (jint) 0xc6e2e426, (jint) 0x49515819, (jint) 0xcdd1dc1d, (jint) 0x41515011, (jint) 0x80909010, (jint) 0xccd0dc1c, (jint) 0x8a92981a, (jint) 0x83a3a023, (jint) 0x8ba3a82b, (jint) 0xc0d0d010, (jint) 0x81818001, (jint) 0x0f030c0f, (jint) 0x47434407, (jint) 0x0a12181a, (jint) 0xc3e3e023, (jint) 0xcce0ec2c, (jint) 0x8d818c0d, (jint) 0x8fb3bc3f, (jint) 0x86929416, (jint) 0x4b73783b, (jint) 0x4c505c1c, (jint) 0x82a2a022, (jint) 0x81a1a021, (jint) 0x43636023, (jint) 0x03232023, (jint) 0x4d414c0d, (jint) 0xc8c0c808, (jint) 0x8e929c1e, (jint) 0x8c909c1c, (jint) 0x0a32383a, (jint) 0x0c000c0c, (jint) 0x0e222c2e, (jint) 0x8ab2b83a, (jint) 0x4e626c2e, (jint) 0x8f939c1f, (jint) 0x4a52581a, (jint) 0xc2f2f032, (jint) 0x82929012, (jint) 0xc3f3f033, (jint) 0x49414809, (jint) 0x48707838, (jint) 0xccc0cc0c, (jint) 0x05111415, (jint) 0xcbf3f83b, (jint) 0x40707030, (jint) 0x45717435, (jint) 0x4f737c3f, (jint) 0x05313435, (jint) 0x00101010, (jint) 0x03030003, (jint) 0x44606424, (jint) 0x4d616c2d, (jint) 0xc6c2c406, (jint) 0x44707434, (jint) 0xc5d1d415, (jint) 0x84b0b434, (jint) 0xcae2e82a, (jint) 0x09010809, (jint) 0x46727436, (jint) 0x09111819, (jint) 0xcef2fc3e, (jint) 0x40404000, (jint) 0x02121012, (jint) 0xc0e0e020, (jint) 0x8db1bc3d, (jint) 0x05010405, (jint) 0xcaf2f83a, (jint) 0x01010001, (jint) 0xc0f0f030, (jint) 0x0a22282a, (jint) 0x4e525c1e, (jint) 0x89a1a829, (jint) 0x46525416, (jint) 0x43434003, (jint) 0x85818405, (jint) 0x04101414, (jint) 0x89818809, (jint) 0x8b93981b, (jint) 0x80b0b030, (jint) 0xc5e1e425, (jint) 0x48404808, (jint) 0x49717839, (jint) 0x87939417, (jint) 0xccf0fc3c, (jint) 0x0e121c1e, (jint) 0x82828002, (jint) 0x01212021, (jint) 0x8c808c0c, (jint) 0x0b13181b, (jint) 0x4f535c1f, (jint) 0x47737437, (jint) 0x44505414, (jint) 0x82b2b032, (jint) 0x0d111c1d, (jint) 0x05212425, (jint) 0x4f434c0f, (jint) 0x00000000, (jint) 0x46424406, (jint) 0xcde1ec2d, (jint) 0x48505818, (jint) 0x42525012, (jint) 0xcbe3e82b, (jint) 0x4e727c3e, (jint) 0xcad2d81a, (jint) 0xc9c1c809, (jint) 0xcdf1fc3d, (jint) 0x00303030, (jint) 0x85919415, (jint) 0x45616425, (jint) 0x0c303c3c, (jint) 0x86b2b436, (jint) 0xc4e0e424, (jint) 0x8bb3b83b, (jint) 0x4c707c3c, (jint) 0x0e020c0e, (jint) 0x40505010, (jint) 0x09313839, (jint) 0x06222426, (jint) 0x02323032, (jint) 0x84808404, (jint) 0x49616829, (jint) 0x83939013, (jint) 0x07333437, (jint) 0xc7e3e427, (jint) 0x04202424, (jint) 0x84a0a424, (jint) 0xcbc3c80b, (jint) 0x43535013, (jint) 0x0a02080a, (jint) 0x87838407, (jint) 0xc9d1d819, (jint) 0x4c404c0c, (jint) 0x83838003, (jint) 0x8f838c0f, (jint) 0xcec2cc0e, (jint) 0x0b33383b, (jint) 0x4a42480a, (jint) 0x87b3b437 } count:256];
    OrgSpongycastleCryptoEnginesSEEDEngine_KC = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x9e3779b9, (jint) 0x3c6ef373, (jint) 0x78dde6e6, (jint) 0xf1bbcdcc, (jint) 0xe3779b99, (jint) 0xc6ef3733, (jint) 0x8dde6e67, (jint) 0x1bbcdccf, (jint) 0x3779b99e, (jint) 0x6ef3733c, (jint) 0xdde6e678, (jint) 0xbbcdccf1, (jint) 0x779b99e3, (jint) 0xef3733c6, (jint) 0xde6e678d, (jint) 0xbcdccf1b } count:16];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoEnginesSEEDEngine)
  }
}

@end

void OrgSpongycastleCryptoEnginesSEEDEngine_init(OrgSpongycastleCryptoEnginesSEEDEngine *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoEnginesSEEDEngine *new_OrgSpongycastleCryptoEnginesSEEDEngine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesSEEDEngine, init)
}

OrgSpongycastleCryptoEnginesSEEDEngine *create_OrgSpongycastleCryptoEnginesSEEDEngine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesSEEDEngine, init)
}

IOSIntArray *OrgSpongycastleCryptoEnginesSEEDEngine_createWorkingKeyWithByteArray_(OrgSpongycastleCryptoEnginesSEEDEngine *self, IOSByteArray *inKey) {
  IOSIntArray *key = [IOSIntArray newArrayWithLength:32];
  jlong lower = OrgSpongycastleCryptoEnginesSEEDEngine_bytesToLongWithByteArray_withInt_(self, inKey, 0);
  jlong upper = OrgSpongycastleCryptoEnginesSEEDEngine_bytesToLongWithByteArray_withInt_(self, inKey, 8);
  jint key0 = OrgSpongycastleCryptoEnginesSEEDEngine_extractW0WithLong_(self, lower);
  jint key1 = OrgSpongycastleCryptoEnginesSEEDEngine_extractW1WithLong_(self, lower);
  jint key2 = OrgSpongycastleCryptoEnginesSEEDEngine_extractW0WithLong_(self, upper);
  jint key3 = OrgSpongycastleCryptoEnginesSEEDEngine_extractW1WithLong_(self, upper);
  for (jint i = 0; i < 16; i++) {
    *IOSIntArray_GetRef(key, 2 * i) = OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(self, key0 + key2 - IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesSEEDEngine_KC), i));
    *IOSIntArray_GetRef(key, 2 * i + 1) = OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(self, key1 - key3 + IOSIntArray_Get(OrgSpongycastleCryptoEnginesSEEDEngine_KC, i));
    if (i % 2 == 0) {
      lower = OrgSpongycastleCryptoEnginesSEEDEngine_rotateRight8WithLong_(self, lower);
      key0 = OrgSpongycastleCryptoEnginesSEEDEngine_extractW0WithLong_(self, lower);
      key1 = OrgSpongycastleCryptoEnginesSEEDEngine_extractW1WithLong_(self, lower);
    }
    else {
      upper = OrgSpongycastleCryptoEnginesSEEDEngine_rotateLeft8WithLong_(self, upper);
      key2 = OrgSpongycastleCryptoEnginesSEEDEngine_extractW0WithLong_(self, upper);
      key3 = OrgSpongycastleCryptoEnginesSEEDEngine_extractW1WithLong_(self, upper);
    }
  }
  return key;
}

jint OrgSpongycastleCryptoEnginesSEEDEngine_extractW1WithLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jlong lVal) {
  return (jint) lVal;
}

jint OrgSpongycastleCryptoEnginesSEEDEngine_extractW0WithLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jlong lVal) {
  return (jint) (JreRShift64(lVal, 32));
}

jlong OrgSpongycastleCryptoEnginesSEEDEngine_rotateLeft8WithLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jlong x) {
  return (JreLShift64(x, 8)) | (JreURShift64(x, 56));
}

jlong OrgSpongycastleCryptoEnginesSEEDEngine_rotateRight8WithLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jlong x) {
  return (JreURShift64(x, 8)) | (JreLShift64(x, 56));
}

jlong OrgSpongycastleCryptoEnginesSEEDEngine_bytesToLongWithByteArray_withInt_(OrgSpongycastleCryptoEnginesSEEDEngine *self, IOSByteArray *src, jint srcOff) {
  jlong word = 0;
  for (jint i = 0; i <= 7; i++) {
    word = (JreLShift64(word, 8)) + (IOSByteArray_Get(nil_chk(src), i + srcOff) & (jint) 0xff);
  }
  return word;
}

void OrgSpongycastleCryptoEnginesSEEDEngine_longToBytesWithByteArray_withInt_withLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, IOSByteArray *dest, jint destOff, jlong value) {
  for (jint i = 0; i < 8; i++) {
    *IOSByteArray_GetRef(nil_chk(dest), i + destOff) = (jbyte) (JreRShift64(value, ((7 - i) * 8)));
  }
}

jint OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jint x) {
  return IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesSEEDEngine_SS0), x & (jint) 0xff) ^ IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesSEEDEngine_SS1), (JreRShift32(x, 8)) & (jint) 0xff) ^ IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesSEEDEngine_SS2), (JreRShift32(x, 16)) & (jint) 0xff) ^ IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesSEEDEngine_SS3), (JreRShift32(x, 24)) & (jint) 0xff);
}

jlong OrgSpongycastleCryptoEnginesSEEDEngine_FWithInt_withInt_withLong_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jint ki0, jint ki1, jlong r) {
  jint r0 = (jint) (JreRShift64(r, 32));
  jint r1 = (jint) r;
  jint rd1 = OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc2WithInt_withInt_withInt_withInt_(self, r0, ki0, r1, ki1);
  jint rd0 = rd1 + OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc1WithInt_withInt_withInt_withInt_(self, r0, ki0, r1, ki1);
  return (JreLShift64((jlong) rd0, 32)) | (rd1 & (jlong) 0xffffffffLL);
}

jint OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc1WithInt_withInt_withInt_withInt_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jint r0, jint ki0, jint r1, jint ki1) {
  return OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(self, OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(self, (r0 ^ ki0) ^ (r1 ^ ki1)) + (r0 ^ ki0));
}

jint OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc2WithInt_withInt_withInt_withInt_(OrgSpongycastleCryptoEnginesSEEDEngine *self, jint r0, jint ki0, jint r1, jint ki1) {
  return OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(self, OrgSpongycastleCryptoEnginesSEEDEngine_phaseCalc1WithInt_withInt_withInt_withInt_(self, r0, ki0, r1, ki1) + OrgSpongycastleCryptoEnginesSEEDEngine_GWithInt_(self, (r0 ^ ki0) ^ (r1 ^ ki1)));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesSEEDEngine)
