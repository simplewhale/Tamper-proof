//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/RC564Engine.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/engines/RC564Engine.h"
#include "org/spongycastle/crypto/params/RC5Parameters.h"

@interface OrgSpongycastleCryptoEnginesRC564Engine () {
 @public
  jint _noRounds_;
  IOSLongArray *_S_;
  jboolean forEncryption_;
}

- (void)setKeyWithByteArray:(IOSByteArray *)key;

- (jint)encryptBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (jint)decryptBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (jlong)rotateLeftWithLong:(jlong)x
                   withLong:(jlong)y;

- (jlong)rotateRightWithLong:(jlong)x
                    withLong:(jlong)y;

- (jlong)bytesToWordWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcOff;

- (void)wordToBytesWithLong:(jlong)word
              withByteArray:(IOSByteArray *)dst
                    withInt:(jint)dstOff;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesRC564Engine, _S_, IOSLongArray *)

inline jint OrgSpongycastleCryptoEnginesRC564Engine_get_wordSize(void);
#define OrgSpongycastleCryptoEnginesRC564Engine_wordSize 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesRC564Engine, wordSize, jint)

inline jint OrgSpongycastleCryptoEnginesRC564Engine_get_bytesPerWord(void);
#define OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesRC564Engine, bytesPerWord, jint)

inline jlong OrgSpongycastleCryptoEnginesRC564Engine_get_P64(void);
#define OrgSpongycastleCryptoEnginesRC564Engine_P64 -5196783011329398165LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesRC564Engine, P64, jlong)

inline jlong OrgSpongycastleCryptoEnginesRC564Engine_get_Q64(void);
#define OrgSpongycastleCryptoEnginesRC564Engine_Q64 -7046029254386353131LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesRC564Engine, Q64, jlong)

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRC564Engine_setKeyWithByteArray_(OrgSpongycastleCryptoEnginesRC564Engine *self, IOSByteArray *key);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesRC564Engine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesRC564Engine *self, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesRC564Engine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesRC564Engine *self, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesRC564Engine_rotateLeftWithLong_withLong_(OrgSpongycastleCryptoEnginesRC564Engine *self, jlong x, jlong y);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesRC564Engine_rotateRightWithLong_withLong_(OrgSpongycastleCryptoEnginesRC564Engine *self, jlong x, jlong y);

__attribute__((unused)) static jlong OrgSpongycastleCryptoEnginesRC564Engine_bytesToWordWithByteArray_withInt_(OrgSpongycastleCryptoEnginesRC564Engine *self, IOSByteArray *src, jint srcOff);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesRC564Engine_wordToBytesWithLong_withByteArray_withInt_(OrgSpongycastleCryptoEnginesRC564Engine *self, jlong word, IOSByteArray *dst, jint dstOff);

@implementation OrgSpongycastleCryptoEnginesRC564Engine

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEnginesRC564Engine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getAlgorithmName {
  return @"RC5-64";
}

- (jint)getBlockSize {
  return 2 * OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord;
}

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if (!([params isKindOfClass:[OrgSpongycastleCryptoParamsRC5Parameters class]])) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid parameter passed to RC564 init - ", [[((id<OrgSpongycastleCryptoCipherParameters>) nil_chk(params)) java_getClass] getName]));
  }
  OrgSpongycastleCryptoParamsRC5Parameters *p = (OrgSpongycastleCryptoParamsRC5Parameters *) cast_chk(params, [OrgSpongycastleCryptoParamsRC5Parameters class]);
  self->forEncryption_ = forEncryption;
  _noRounds_ = [((OrgSpongycastleCryptoParamsRC5Parameters *) nil_chk(p)) getRounds];
  OrgSpongycastleCryptoEnginesRC564Engine_setKeyWithByteArray_(self, [p getKey]);
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  return (forEncryption_) ? OrgSpongycastleCryptoEnginesRC564Engine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff) : OrgSpongycastleCryptoEnginesRC564Engine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
}

- (void)reset {
}

- (void)setKeyWithByteArray:(IOSByteArray *)key {
  OrgSpongycastleCryptoEnginesRC564Engine_setKeyWithByteArray_(self, key);
}

- (jint)encryptBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  return OrgSpongycastleCryptoEnginesRC564Engine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
}

- (jint)decryptBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  return OrgSpongycastleCryptoEnginesRC564Engine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
}

- (jlong)rotateLeftWithLong:(jlong)x
                   withLong:(jlong)y {
  return OrgSpongycastleCryptoEnginesRC564Engine_rotateLeftWithLong_withLong_(self, x, y);
}

- (jlong)rotateRightWithLong:(jlong)x
                    withLong:(jlong)y {
  return OrgSpongycastleCryptoEnginesRC564Engine_rotateRightWithLong_withLong_(self, x, y);
}

- (jlong)bytesToWordWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcOff {
  return OrgSpongycastleCryptoEnginesRC564Engine_bytesToWordWithByteArray_withInt_(self, src, srcOff);
}

- (void)wordToBytesWithLong:(jlong)word
              withByteArray:(IOSByteArray *)dst
                    withInt:(jint)dstOff {
  OrgSpongycastleCryptoEnginesRC564Engine_wordToBytesWithLong_withByteArray_withInt_(self, word, dst, dstOff);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 6, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 7, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 10, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAlgorithmName);
  methods[2].selector = @selector(getBlockSize);
  methods[3].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[4].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[5].selector = @selector(reset);
  methods[6].selector = @selector(setKeyWithByteArray:);
  methods[7].selector = @selector(encryptBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[8].selector = @selector(decryptBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[9].selector = @selector(rotateLeftWithLong:withLong:);
  methods[10].selector = @selector(rotateRightWithLong:withLong:);
  methods[11].selector = @selector(bytesToWordWithByteArray:withInt:);
  methods[12].selector = @selector(wordToBytesWithLong:withByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "wordSize", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesRC564Engine_wordSize, 0x1a, -1, -1, -1, -1 },
    { "bytesPerWord", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord, 0x1a, -1, -1, -1, -1 },
    { "_noRounds_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_S_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "P64", "J", .constantValue.asLong = OrgSpongycastleCryptoEnginesRC564Engine_P64, 0x1a, -1, -1, -1, -1 },
    { "Q64", "J", .constantValue.asLong = OrgSpongycastleCryptoEnginesRC564Engine_Q64, 0x1a, -1, -1, -1, -1 },
    { "forEncryption_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "ZLOrgSpongycastleCryptoCipherParameters;", "processBlock", "[BI[BI", "setKey", "[B", "encryptBlock", "decryptBlock", "rotateLeft", "JJ", "rotateRight", "bytesToWord", "[BI", "wordToBytes", "J[BI" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesRC564Engine = { "RC564Engine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 13, 7, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesRC564Engine;
}

@end

void OrgSpongycastleCryptoEnginesRC564Engine_init(OrgSpongycastleCryptoEnginesRC564Engine *self) {
  NSObject_init(self);
  self->_noRounds_ = 12;
  self->_S_ = nil;
}

OrgSpongycastleCryptoEnginesRC564Engine *new_OrgSpongycastleCryptoEnginesRC564Engine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesRC564Engine, init)
}

OrgSpongycastleCryptoEnginesRC564Engine *create_OrgSpongycastleCryptoEnginesRC564Engine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesRC564Engine, init)
}

void OrgSpongycastleCryptoEnginesRC564Engine_setKeyWithByteArray_(OrgSpongycastleCryptoEnginesRC564Engine *self, IOSByteArray *key) {
  IOSLongArray *L = [IOSLongArray newArrayWithLength:(((IOSByteArray *) nil_chk(key))->size_ + (OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord - 1)) / OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord];
  for (jint i = 0; i != key->size_; i++) {
    *IOSLongArray_GetRef(L, i / OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord) += JreLShift64((jlong) (IOSByteArray_Get(key, i) & (jint) 0xff), (8 * (i % OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord)));
  }
  self->_S_ = [IOSLongArray newArrayWithLength:2 * (self->_noRounds_ + 1)];
  *IOSLongArray_GetRef(self->_S_, 0) = OrgSpongycastleCryptoEnginesRC564Engine_P64;
  for (jint i = 1; i < self->_S_->size_; i++) {
    *IOSLongArray_GetRef(self->_S_, i) = (IOSLongArray_Get(self->_S_, i - 1) + OrgSpongycastleCryptoEnginesRC564Engine_Q64);
  }
  jint iter;
  if (L->size_ > self->_S_->size_) {
    iter = 3 * L->size_;
  }
  else {
    iter = 3 * self->_S_->size_;
  }
  jlong A = 0;
  jlong B = 0;
  jint i = 0;
  jint j = 0;
  for (jint k = 0; k < iter; k++) {
    A = *IOSLongArray_GetRef(self->_S_, i) = OrgSpongycastleCryptoEnginesRC564Engine_rotateLeftWithLong_withLong_(self, IOSLongArray_Get(self->_S_, i) + A + B, 3);
    B = *IOSLongArray_GetRef(L, j) = OrgSpongycastleCryptoEnginesRC564Engine_rotateLeftWithLong_withLong_(self, IOSLongArray_Get(L, j) + A + B, A + B);
    i = (i + 1) % ((IOSLongArray *) nil_chk(self->_S_))->size_;
    j = (j + 1) % L->size_;
  }
}

jint OrgSpongycastleCryptoEnginesRC564Engine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesRC564Engine *self, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff) {
  jlong A = OrgSpongycastleCryptoEnginesRC564Engine_bytesToWordWithByteArray_withInt_(self, inArg, inOff) + IOSLongArray_Get(nil_chk(self->_S_), 0);
  jlong B = OrgSpongycastleCryptoEnginesRC564Engine_bytesToWordWithByteArray_withInt_(self, inArg, inOff + OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord) + IOSLongArray_Get(nil_chk(self->_S_), 1);
  for (jint i = 1; i <= self->_noRounds_; i++) {
    A = OrgSpongycastleCryptoEnginesRC564Engine_rotateLeftWithLong_withLong_(self, A ^ B, B) + IOSLongArray_Get(nil_chk(self->_S_), 2 * i);
    B = OrgSpongycastleCryptoEnginesRC564Engine_rotateLeftWithLong_withLong_(self, B ^ A, A) + IOSLongArray_Get(nil_chk(self->_S_), 2 * i + 1);
  }
  OrgSpongycastleCryptoEnginesRC564Engine_wordToBytesWithLong_withByteArray_withInt_(self, A, outArg, outOff);
  OrgSpongycastleCryptoEnginesRC564Engine_wordToBytesWithLong_withByteArray_withInt_(self, B, outArg, outOff + OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord);
  return 2 * OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord;
}

jint OrgSpongycastleCryptoEnginesRC564Engine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesRC564Engine *self, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff) {
  jlong A = OrgSpongycastleCryptoEnginesRC564Engine_bytesToWordWithByteArray_withInt_(self, inArg, inOff);
  jlong B = OrgSpongycastleCryptoEnginesRC564Engine_bytesToWordWithByteArray_withInt_(self, inArg, inOff + OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord);
  for (jint i = self->_noRounds_; i >= 1; i--) {
    B = OrgSpongycastleCryptoEnginesRC564Engine_rotateRightWithLong_withLong_(self, B - IOSLongArray_Get(nil_chk(self->_S_), 2 * i + 1), A) ^ A;
    A = OrgSpongycastleCryptoEnginesRC564Engine_rotateRightWithLong_withLong_(self, A - IOSLongArray_Get(nil_chk(self->_S_), 2 * i), B) ^ B;
  }
  OrgSpongycastleCryptoEnginesRC564Engine_wordToBytesWithLong_withByteArray_withInt_(self, A - IOSLongArray_Get(nil_chk(self->_S_), 0), outArg, outOff);
  OrgSpongycastleCryptoEnginesRC564Engine_wordToBytesWithLong_withByteArray_withInt_(self, B - IOSLongArray_Get(nil_chk(self->_S_), 1), outArg, outOff + OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord);
  return 2 * OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord;
}

jlong OrgSpongycastleCryptoEnginesRC564Engine_rotateLeftWithLong_withLong_(OrgSpongycastleCryptoEnginesRC564Engine *self, jlong x, jlong y) {
  return ((JreLShift64(x, (y & (OrgSpongycastleCryptoEnginesRC564Engine_wordSize - 1)))) | (JreURShift64(x, (OrgSpongycastleCryptoEnginesRC564Engine_wordSize - (y & (OrgSpongycastleCryptoEnginesRC564Engine_wordSize - 1))))));
}

jlong OrgSpongycastleCryptoEnginesRC564Engine_rotateRightWithLong_withLong_(OrgSpongycastleCryptoEnginesRC564Engine *self, jlong x, jlong y) {
  return ((JreURShift64(x, (y & (OrgSpongycastleCryptoEnginesRC564Engine_wordSize - 1)))) | (JreLShift64(x, (OrgSpongycastleCryptoEnginesRC564Engine_wordSize - (y & (OrgSpongycastleCryptoEnginesRC564Engine_wordSize - 1))))));
}

jlong OrgSpongycastleCryptoEnginesRC564Engine_bytesToWordWithByteArray_withInt_(OrgSpongycastleCryptoEnginesRC564Engine *self, IOSByteArray *src, jint srcOff) {
  jlong word = 0;
  for (jint i = OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord - 1; i >= 0; i--) {
    word = (JreLShift64(word, 8)) + (IOSByteArray_Get(nil_chk(src), i + srcOff) & (jint) 0xff);
  }
  return word;
}

void OrgSpongycastleCryptoEnginesRC564Engine_wordToBytesWithLong_withByteArray_withInt_(OrgSpongycastleCryptoEnginesRC564Engine *self, jlong word, IOSByteArray *dst, jint dstOff) {
  for (jint i = 0; i < OrgSpongycastleCryptoEnginesRC564Engine_bytesPerWord; i++) {
    *IOSByteArray_GetRef(nil_chk(dst), i + dstOff) = (jbyte) word;
    JreURShiftAssignLong(&word, 8);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesRC564Engine)
