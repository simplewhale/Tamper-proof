//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/OldIESEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesOldIESEngine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesOldIESEngine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesOldIESEngine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesOldIESEngine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesOldIESEngine

#if !defined (OrgSpongycastleCryptoEnginesOldIESEngine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesOldIESEngine || defined(INCLUDE_OrgSpongycastleCryptoEnginesOldIESEngine))
#define OrgSpongycastleCryptoEnginesOldIESEngine_

#define RESTRICT_OrgSpongycastleCryptoEnginesIESEngine 1
#define INCLUDE_OrgSpongycastleCryptoEnginesIESEngine 1
#include "org/spongycastle/crypto/engines/IESEngine.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoBufferedBlockCipher;
@protocol OrgSpongycastleCryptoBasicAgreement;
@protocol OrgSpongycastleCryptoDerivationFunction;
@protocol OrgSpongycastleCryptoMac;

@interface OrgSpongycastleCryptoEnginesOldIESEngine : OrgSpongycastleCryptoEnginesIESEngine

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBasicAgreement:(id<OrgSpongycastleCryptoBasicAgreement>)agree
                withOrgSpongycastleCryptoDerivationFunction:(id<OrgSpongycastleCryptoDerivationFunction>)kdf
                               withOrgSpongycastleCryptoMac:(id<OrgSpongycastleCryptoMac>)mac;

- (instancetype)initWithOrgSpongycastleCryptoBasicAgreement:(id<OrgSpongycastleCryptoBasicAgreement>)agree
                withOrgSpongycastleCryptoDerivationFunction:(id<OrgSpongycastleCryptoDerivationFunction>)kdf
                               withOrgSpongycastleCryptoMac:(id<OrgSpongycastleCryptoMac>)mac
               withOrgSpongycastleCryptoBufferedBlockCipher:(OrgSpongycastleCryptoBufferedBlockCipher *)cipher;

#pragma mark Protected

- (IOSByteArray *)getLengthTagWithByteArray:(IOSByteArray *)p2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEnginesOldIESEngine)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesOldIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_(OrgSpongycastleCryptoEnginesOldIESEngine *self, id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesOldIESEngine *new_OrgSpongycastleCryptoEnginesOldIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_(id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesOldIESEngine *create_OrgSpongycastleCryptoEnginesOldIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_(id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesOldIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_withOrgSpongycastleCryptoBufferedBlockCipher_(OrgSpongycastleCryptoEnginesOldIESEngine *self, id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac, OrgSpongycastleCryptoBufferedBlockCipher *cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesOldIESEngine *new_OrgSpongycastleCryptoEnginesOldIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_withOrgSpongycastleCryptoBufferedBlockCipher_(id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac, OrgSpongycastleCryptoBufferedBlockCipher *cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesOldIESEngine *create_OrgSpongycastleCryptoEnginesOldIESEngine_initWithOrgSpongycastleCryptoBasicAgreement_withOrgSpongycastleCryptoDerivationFunction_withOrgSpongycastleCryptoMac_withOrgSpongycastleCryptoBufferedBlockCipher_(id<OrgSpongycastleCryptoBasicAgreement> agree, id<OrgSpongycastleCryptoDerivationFunction> kdf, id<OrgSpongycastleCryptoMac> mac, OrgSpongycastleCryptoBufferedBlockCipher *cipher);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesOldIESEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesOldIESEngine")
