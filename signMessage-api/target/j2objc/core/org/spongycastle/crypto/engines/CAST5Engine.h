//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/CAST5Engine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST5Engine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesCAST5Engine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST5Engine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST5Engine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesCAST5Engine

#if !defined (OrgSpongycastleCryptoEnginesCAST5Engine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST5Engine || defined(INCLUDE_OrgSpongycastleCryptoEnginesCAST5Engine))
#define OrgSpongycastleCryptoEnginesCAST5Engine_

#define RESTRICT_OrgSpongycastleCryptoBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoBlockCipher 1
#include "org/spongycastle/crypto/BlockCipher.h"

@class IOSByteArray;
@class IOSIntArray;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoEnginesCAST5Engine : NSObject < OrgSpongycastleCryptoBlockCipher > {
 @public
  IOSIntArray *_Kr_;
  IOSIntArray *_Km_;
}

#pragma mark Public

- (instancetype)init;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (void)init__WithBoolean:(jboolean)encrypting
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

#pragma mark Protected

- (void)Bits32ToBytesWithInt:(jint)inArg
               withByteArray:(IOSByteArray *)b
                     withInt:(jint)offset;

- (void)Bits32ToIntsWithInt:(jint)inArg
               withIntArray:(IOSIntArray *)b
                    withInt:(jint)offset;

- (jint)BytesTo32bitsWithByteArray:(IOSByteArray *)b
                           withInt:(jint)i;

- (void)CAST_DecipherWithInt:(jint)L16
                     withInt:(jint)R16
                withIntArray:(IOSIntArray *)result;

- (void)CAST_EncipherWithInt:(jint)L0
                     withInt:(jint)R0
                withIntArray:(IOSIntArray *)result;

- (jint)decryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex;

- (jint)encryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex;

- (jint)F1WithInt:(jint)D
          withInt:(jint)Kmi
          withInt:(jint)Kri;

- (jint)F2WithInt:(jint)D
          withInt:(jint)Kmi
          withInt:(jint)Kri;

- (jint)F3WithInt:(jint)D
          withInt:(jint)Kmi
          withInt:(jint)Kri;

- (jint)IntsTo32bitsWithIntArray:(IOSIntArray *)b
                         withInt:(jint)i;

- (void)setKeyWithByteArray:(IOSByteArray *)key;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoEnginesCAST5Engine)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCAST5Engine, _Kr_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCAST5Engine, _Km_, IOSIntArray *)

inline jint OrgSpongycastleCryptoEnginesCAST5Engine_get_M32(void);
#define OrgSpongycastleCryptoEnginesCAST5Engine_M32 -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesCAST5Engine, M32, jint)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_get_S1(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_S1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCAST5Engine, S1, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_get_S2(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_S2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCAST5Engine, S2, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_get_S3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_S3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCAST5Engine, S3, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_get_S4(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_S4;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCAST5Engine, S4, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_get_S5(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_S5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCAST5Engine, S5, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_get_S6(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_S6;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCAST5Engine, S6, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_get_S7(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_S7;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCAST5Engine, S7, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_get_S8(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleCryptoEnginesCAST5Engine_S8;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCAST5Engine, S8, IOSIntArray *)

inline jint OrgSpongycastleCryptoEnginesCAST5Engine_get_MAX_ROUNDS(void);
#define OrgSpongycastleCryptoEnginesCAST5Engine_MAX_ROUNDS 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesCAST5Engine, MAX_ROUNDS, jint)

inline jint OrgSpongycastleCryptoEnginesCAST5Engine_get_RED_ROUNDS(void);
#define OrgSpongycastleCryptoEnginesCAST5Engine_RED_ROUNDS 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesCAST5Engine, RED_ROUNDS, jint)

inline jint OrgSpongycastleCryptoEnginesCAST5Engine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesCAST5Engine_BLOCK_SIZE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesCAST5Engine, BLOCK_SIZE, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesCAST5Engine_init(OrgSpongycastleCryptoEnginesCAST5Engine *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesCAST5Engine *new_OrgSpongycastleCryptoEnginesCAST5Engine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesCAST5Engine *create_OrgSpongycastleCryptoEnginesCAST5Engine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesCAST5Engine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST5Engine")
