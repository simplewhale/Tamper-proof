//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/DESedeEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESedeEngine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesDESedeEngine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESedeEngine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESedeEngine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesDESedeEngine

#if !defined (OrgSpongycastleCryptoEnginesDESedeEngine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESedeEngine || defined(INCLUDE_OrgSpongycastleCryptoEnginesDESedeEngine))
#define OrgSpongycastleCryptoEnginesDESedeEngine_

#define RESTRICT_OrgSpongycastleCryptoEnginesDESEngine 1
#define INCLUDE_OrgSpongycastleCryptoEnginesDESEngine 1
#include "org/spongycastle/crypto/engines/DESEngine.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoEnginesDESedeEngine : OrgSpongycastleCryptoEnginesDESEngine

#pragma mark Public

- (instancetype)init;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (void)init__WithBoolean:(jboolean)encrypting
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEnginesDESedeEngine)

inline jint OrgSpongycastleCryptoEnginesDESedeEngine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesDESedeEngine_BLOCK_SIZE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesDESedeEngine, BLOCK_SIZE, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesDESedeEngine_init(OrgSpongycastleCryptoEnginesDESedeEngine *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesDESedeEngine *new_OrgSpongycastleCryptoEnginesDESedeEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesDESedeEngine *create_OrgSpongycastleCryptoEnginesDESedeEngine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesDESedeEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesDESedeEngine")
