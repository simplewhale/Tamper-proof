//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/CamelliaEngine.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/DataLengthException.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/engines/CamelliaEngine.h"
#include "org/spongycastle/crypto/params/KeyParameter.h"

@interface OrgSpongycastleCryptoEnginesCamelliaEngine () {
 @public
  jboolean initialised_;
  jboolean _keyIs128_;
  IOSIntArray *subkey_;
  IOSIntArray *kw_;
  IOSIntArray *ke_;
  IOSIntArray *state_;
}

+ (jint)rightRotateWithInt:(jint)x
                   withInt:(jint)s;

+ (jint)leftRotateWithInt:(jint)x
                  withInt:(jint)s;

+ (void)roldqWithInt:(jint)rot
        withIntArray:(IOSIntArray *)ki
             withInt:(jint)ioff
        withIntArray:(IOSIntArray *)ko
             withInt:(jint)ooff;

+ (void)decroldqWithInt:(jint)rot
           withIntArray:(IOSIntArray *)ki
                withInt:(jint)ioff
           withIntArray:(IOSIntArray *)ko
                withInt:(jint)ooff;

+ (void)roldqo32WithInt:(jint)rot
           withIntArray:(IOSIntArray *)ki
                withInt:(jint)ioff
           withIntArray:(IOSIntArray *)ko
                withInt:(jint)ooff;

+ (void)decroldqo32WithInt:(jint)rot
              withIntArray:(IOSIntArray *)ki
                   withInt:(jint)ioff
              withIntArray:(IOSIntArray *)ko
                   withInt:(jint)ooff;

- (jint)bytes2intWithByteArray:(IOSByteArray *)src
                       withInt:(jint)offset;

- (void)int2bytesWithInt:(jint)word
           withByteArray:(IOSByteArray *)dst
                 withInt:(jint)offset;

- (void)camelliaF2WithIntArray:(IOSIntArray *)s
                  withIntArray:(IOSIntArray *)skey
                       withInt:(jint)keyoff;

- (void)camelliaFLsWithIntArray:(IOSIntArray *)s
                   withIntArray:(IOSIntArray *)fkey
                        withInt:(jint)keyoff;

- (void)setKeyWithBoolean:(jboolean)forEncryption
            withByteArray:(IOSByteArray *)key;

- (jint)processBlock128WithByteArray:(IOSByteArray *)inArg
                             withInt:(jint)inOff
                       withByteArray:(IOSByteArray *)outArg
                             withInt:(jint)outOff;

- (jint)processBlock192or256WithByteArray:(IOSByteArray *)inArg
                                  withInt:(jint)inOff
                            withByteArray:(IOSByteArray *)outArg
                                  withInt:(jint)outOff;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCamelliaEngine, subkey_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCamelliaEngine, kw_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCamelliaEngine, ke_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCamelliaEngine, state_, IOSIntArray *)

inline jint OrgSpongycastleCryptoEnginesCamelliaEngine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesCamelliaEngine_BLOCK_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesCamelliaEngine, BLOCK_SIZE, jint)

inline jint OrgSpongycastleCryptoEnginesCamelliaEngine_get_MASK8(void);
#define OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8 255
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesCamelliaEngine, MASK8, jint)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_get_SIGMA(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_SIGMA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCamelliaEngine, SIGMA, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_get_SBOX1_1110(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX1_1110;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCamelliaEngine, SBOX1_1110, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_get_SBOX4_4404(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX4_4404;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCamelliaEngine, SBOX4_4404, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_get_SBOX2_0222(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX2_0222;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCamelliaEngine, SBOX2_0222, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_get_SBOX3_3033(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX3_3033;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesCamelliaEngine, SBOX3_3033, IOSIntArray *)

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesCamelliaEngine_rightRotateWithInt_withInt_(jint x, jint s);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesCamelliaEngine_leftRotateWithInt_withInt_(jint x, jint s);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(jint rot, IOSIntArray *ki, jint ioff, IOSIntArray *ko, jint ooff);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(jint rot, IOSIntArray *ki, jint ioff, IOSIntArray *ko, jint ooff);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(jint rot, IOSIntArray *ki, jint ioff, IOSIntArray *ko, jint ooff);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(jint rot, IOSIntArray *ki, jint ioff, IOSIntArray *ko, jint ooff);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSByteArray *src, jint offset);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, jint word, IOSByteArray *dst, jint offset);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSIntArray *s, IOSIntArray *skey, jint keyoff);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaFLsWithIntArray_withIntArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSIntArray *s, IOSIntArray *fkey, jint keyoff);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesCamelliaEngine_setKeyWithBoolean_withByteArray_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, jboolean forEncryption, IOSByteArray *key);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesCamelliaEngine_processBlock128WithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesCamelliaEngine_processBlock192or256WithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoEnginesCamelliaEngine)

@implementation OrgSpongycastleCryptoEnginesCamelliaEngine

+ (jint)rightRotateWithInt:(jint)x
                   withInt:(jint)s {
  return OrgSpongycastleCryptoEnginesCamelliaEngine_rightRotateWithInt_withInt_(x, s);
}

+ (jint)leftRotateWithInt:(jint)x
                  withInt:(jint)s {
  return OrgSpongycastleCryptoEnginesCamelliaEngine_leftRotateWithInt_withInt_(x, s);
}

+ (void)roldqWithInt:(jint)rot
        withIntArray:(IOSIntArray *)ki
             withInt:(jint)ioff
        withIntArray:(IOSIntArray *)ko
             withInt:(jint)ooff {
  OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(rot, ki, ioff, ko, ooff);
}

+ (void)decroldqWithInt:(jint)rot
           withIntArray:(IOSIntArray *)ki
                withInt:(jint)ioff
           withIntArray:(IOSIntArray *)ko
                withInt:(jint)ooff {
  OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(rot, ki, ioff, ko, ooff);
}

+ (void)roldqo32WithInt:(jint)rot
           withIntArray:(IOSIntArray *)ki
                withInt:(jint)ioff
           withIntArray:(IOSIntArray *)ko
                withInt:(jint)ooff {
  OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(rot, ki, ioff, ko, ooff);
}

+ (void)decroldqo32WithInt:(jint)rot
              withIntArray:(IOSIntArray *)ki
                   withInt:(jint)ioff
              withIntArray:(IOSIntArray *)ko
                   withInt:(jint)ooff {
  OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(rot, ki, ioff, ko, ooff);
}

- (jint)bytes2intWithByteArray:(IOSByteArray *)src
                       withInt:(jint)offset {
  return OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, src, offset);
}

- (void)int2bytesWithInt:(jint)word
           withByteArray:(IOSByteArray *)dst
                 withInt:(jint)offset {
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, word, dst, offset);
}

- (void)camelliaF2WithIntArray:(IOSIntArray *)s
                  withIntArray:(IOSIntArray *)skey
                       withInt:(jint)keyoff {
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, s, skey, keyoff);
}

- (void)camelliaFLsWithIntArray:(IOSIntArray *)s
                   withIntArray:(IOSIntArray *)fkey
                        withInt:(jint)keyoff {
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaFLsWithIntArray_withIntArray_withInt_(self, s, fkey, keyoff);
}

- (void)setKeyWithBoolean:(jboolean)forEncryption
            withByteArray:(IOSByteArray *)key {
  OrgSpongycastleCryptoEnginesCamelliaEngine_setKeyWithBoolean_withByteArray_(self, forEncryption, key);
}

- (jint)processBlock128WithByteArray:(IOSByteArray *)inArg
                             withInt:(jint)inOff
                       withByteArray:(IOSByteArray *)outArg
                             withInt:(jint)outOff {
  return OrgSpongycastleCryptoEnginesCamelliaEngine_processBlock128WithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
}

- (jint)processBlock192or256WithByteArray:(IOSByteArray *)inArg
                                  withInt:(jint)inOff
                            withByteArray:(IOSByteArray *)outArg
                                  withInt:(jint)outOff {
  return OrgSpongycastleCryptoEnginesCamelliaEngine_processBlock192or256WithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEnginesCamelliaEngine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if (!([params isKindOfClass:[OrgSpongycastleCryptoParamsKeyParameter class]])) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"only simple KeyParameter expected.");
  }
  OrgSpongycastleCryptoEnginesCamelliaEngine_setKeyWithBoolean_withByteArray_(self, forEncryption, [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) cast_chk(params, [OrgSpongycastleCryptoParamsKeyParameter class])))) getKey]);
  initialised_ = true;
}

- (NSString *)getAlgorithmName {
  return @"Camellia";
}

- (jint)getBlockSize {
  return OrgSpongycastleCryptoEnginesCamelliaEngine_BLOCK_SIZE;
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  if (!initialised_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Camellia engine not initialised");
  }
  if ((inOff + OrgSpongycastleCryptoEnginesCamelliaEngine_BLOCK_SIZE) > ((IOSByteArray *) nil_chk(inArg))->size_) {
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  if ((outOff + OrgSpongycastleCryptoEnginesCamelliaEngine_BLOCK_SIZE) > ((IOSByteArray *) nil_chk(outArg))->size_) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  if (_keyIs128_) {
    return OrgSpongycastleCryptoEnginesCamelliaEngine_processBlock128WithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
  }
  else {
    return OrgSpongycastleCryptoEnginesCamelliaEngine_processBlock192or256WithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
  }
}

- (void)reset {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 6, 4, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 7, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 19, 18, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, 22, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 23, 18, 24, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(rightRotateWithInt:withInt:);
  methods[1].selector = @selector(leftRotateWithInt:withInt:);
  methods[2].selector = @selector(roldqWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[3].selector = @selector(decroldqWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[4].selector = @selector(roldqo32WithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[5].selector = @selector(decroldqo32WithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[6].selector = @selector(bytes2intWithByteArray:withInt:);
  methods[7].selector = @selector(int2bytesWithInt:withByteArray:withInt:);
  methods[8].selector = @selector(camelliaF2WithIntArray:withIntArray:withInt:);
  methods[9].selector = @selector(camelliaFLsWithIntArray:withIntArray:withInt:);
  methods[10].selector = @selector(setKeyWithBoolean:withByteArray:);
  methods[11].selector = @selector(processBlock128WithByteArray:withInt:withByteArray:withInt:);
  methods[12].selector = @selector(processBlock192or256WithByteArray:withInt:withByteArray:withInt:);
  methods[13].selector = @selector(init);
  methods[14].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[15].selector = @selector(getAlgorithmName);
  methods[16].selector = @selector(getBlockSize);
  methods[17].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[18].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "initialised_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_keyIs128_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesCamelliaEngine_BLOCK_SIZE, 0x1a, -1, -1, -1, -1 },
    { "MASK8", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8, 0x1a, -1, -1, -1, -1 },
    { "subkey_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "kw_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ke_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "state_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "SIGMA", "[I", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "SBOX1_1110", "[I", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "SBOX4_4404", "[I", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "SBOX2_0222", "[I", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "SBOX3_3033", "[I", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
  };
  static const void *ptrTable[] = { "rightRotate", "II", "leftRotate", "roldq", "I[II[II", "decroldq", "roldqo32", "decroldqo32", "bytes2int", "[BI", "int2bytes", "I[BI", "camelliaF2", "[I[II", "camelliaFLs", "setKey", "Z[B", "processBlock128", "[BI[BI", "processBlock192or256", "init", "ZLOrgSpongycastleCryptoCipherParameters;", "LJavaLangIllegalArgumentException;", "processBlock", "LOrgSpongycastleCryptoDataLengthException;LJavaLangIllegalStateException;", &OrgSpongycastleCryptoEnginesCamelliaEngine_SIGMA, &OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX1_1110, &OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX4_4404, &OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX2_0222, &OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX3_3033 };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesCamelliaEngine = { "CamelliaEngine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 19, 13, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesCamelliaEngine;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoEnginesCamelliaEngine class]) {
    OrgSpongycastleCryptoEnginesCamelliaEngine_SIGMA = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0xa09e667f, (jint) 0x3bcc908b, (jint) 0xb67ae858, (jint) 0x4caa73b2, (jint) 0xc6ef372f, (jint) 0xe94f82be, (jint) 0x54ff53a5, (jint) 0xf1d36f1c, (jint) 0x10e527fa, (jint) 0xde682d1d, (jint) 0xb05688c2, (jint) 0xb3e6c1fd } count:12];
    OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX1_1110 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x70707000, (jint) 0x82828200, (jint) 0x2c2c2c00, (jint) 0xececec00, (jint) 0xb3b3b300, (jint) 0x27272700, (jint) 0xc0c0c000, (jint) 0xe5e5e500, (jint) 0xe4e4e400, (jint) 0x85858500, (jint) 0x57575700, (jint) 0x35353500, (jint) 0xeaeaea00, (jint) 0x0c0c0c00, (jint) 0xaeaeae00, (jint) 0x41414100, (jint) 0x23232300, (jint) 0xefefef00, (jint) 0x6b6b6b00, (jint) 0x93939300, (jint) 0x45454500, (jint) 0x19191900, (jint) 0xa5a5a500, (jint) 0x21212100, (jint) 0xededed00, (jint) 0x0e0e0e00, (jint) 0x4f4f4f00, (jint) 0x4e4e4e00, (jint) 0x1d1d1d00, (jint) 0x65656500, (jint) 0x92929200, (jint) 0xbdbdbd00, (jint) 0x86868600, (jint) 0xb8b8b800, (jint) 0xafafaf00, (jint) 0x8f8f8f00, (jint) 0x7c7c7c00, (jint) 0xebebeb00, (jint) 0x1f1f1f00, (jint) 0xcecece00, (jint) 0x3e3e3e00, (jint) 0x30303000, (jint) 0xdcdcdc00, (jint) 0x5f5f5f00, (jint) 0x5e5e5e00, (jint) 0xc5c5c500, (jint) 0x0b0b0b00, (jint) 0x1a1a1a00, (jint) 0xa6a6a600, (jint) 0xe1e1e100, (jint) 0x39393900, (jint) 0xcacaca00, (jint) 0xd5d5d500, (jint) 0x47474700, (jint) 0x5d5d5d00, (jint) 0x3d3d3d00, (jint) 0xd9d9d900, (jint) 0x01010100, (jint) 0x5a5a5a00, (jint) 0xd6d6d600, (jint) 0x51515100, (jint) 0x56565600, (jint) 0x6c6c6c00, (jint) 0x4d4d4d00, (jint) 0x8b8b8b00, (jint) 0x0d0d0d00, (jint) 0x9a9a9a00, (jint) 0x66666600, (jint) 0xfbfbfb00, (jint) 0xcccccc00, (jint) 0xb0b0b000, (jint) 0x2d2d2d00, (jint) 0x74747400, (jint) 0x12121200, (jint) 0x2b2b2b00, (jint) 0x20202000, (jint) 0xf0f0f000, (jint) 0xb1b1b100, (jint) 0x84848400, (jint) 0x99999900, (jint) 0xdfdfdf00, (jint) 0x4c4c4c00, (jint) 0xcbcbcb00, (jint) 0xc2c2c200, (jint) 0x34343400, (jint) 0x7e7e7e00, (jint) 0x76767600, (jint) 0x05050500, (jint) 0x6d6d6d00, (jint) 0xb7b7b700, (jint) 0xa9a9a900, (jint) 0x31313100, (jint) 0xd1d1d100, (jint) 0x17171700, (jint) 0x04040400, (jint) 0xd7d7d700, (jint) 0x14141400, (jint) 0x58585800, (jint) 0x3a3a3a00, (jint) 0x61616100, (jint) 0xdedede00, (jint) 0x1b1b1b00, (jint) 0x11111100, (jint) 0x1c1c1c00, (jint) 0x32323200, (jint) 0x0f0f0f00, (jint) 0x9c9c9c00, (jint) 0x16161600, (jint) 0x53535300, (jint) 0x18181800, (jint) 0xf2f2f200, (jint) 0x22222200, (jint) 0xfefefe00, (jint) 0x44444400, (jint) 0xcfcfcf00, (jint) 0xb2b2b200, (jint) 0xc3c3c300, (jint) 0xb5b5b500, (jint) 0x7a7a7a00, (jint) 0x91919100, (jint) 0x24242400, (jint) 0x08080800, (jint) 0xe8e8e800, (jint) 0xa8a8a800, (jint) 0x60606000, (jint) 0xfcfcfc00, (jint) 0x69696900, (jint) 0x50505000, (jint) 0xaaaaaa00, (jint) 0xd0d0d000, (jint) 0xa0a0a000, (jint) 0x7d7d7d00, (jint) 0xa1a1a100, (jint) 0x89898900, (jint) 0x62626200, (jint) 0x97979700, (jint) 0x54545400, (jint) 0x5b5b5b00, (jint) 0x1e1e1e00, (jint) 0x95959500, (jint) 0xe0e0e000, (jint) 0xffffff00, (jint) 0x64646400, (jint) 0xd2d2d200, (jint) 0x10101000, (jint) 0xc4c4c400, (jint) 0x00000000, (jint) 0x48484800, (jint) 0xa3a3a300, (jint) 0xf7f7f700, (jint) 0x75757500, (jint) 0xdbdbdb00, (jint) 0x8a8a8a00, (jint) 0x03030300, (jint) 0xe6e6e600, (jint) 0xdadada00, (jint) 0x09090900, (jint) 0x3f3f3f00, (jint) 0xdddddd00, (jint) 0x94949400, (jint) 0x87878700, (jint) 0x5c5c5c00, (jint) 0x83838300, (jint) 0x02020200, (jint) 0xcdcdcd00, (jint) 0x4a4a4a00, (jint) 0x90909000, (jint) 0x33333300, (jint) 0x73737300, (jint) 0x67676700, (jint) 0xf6f6f600, (jint) 0xf3f3f300, (jint) 0x9d9d9d00, (jint) 0x7f7f7f00, (jint) 0xbfbfbf00, (jint) 0xe2e2e200, (jint) 0x52525200, (jint) 0x9b9b9b00, (jint) 0xd8d8d800, (jint) 0x26262600, (jint) 0xc8c8c800, (jint) 0x37373700, (jint) 0xc6c6c600, (jint) 0x3b3b3b00, (jint) 0x81818100, (jint) 0x96969600, (jint) 0x6f6f6f00, (jint) 0x4b4b4b00, (jint) 0x13131300, (jint) 0xbebebe00, (jint) 0x63636300, (jint) 0x2e2e2e00, (jint) 0xe9e9e900, (jint) 0x79797900, (jint) 0xa7a7a700, (jint) 0x8c8c8c00, (jint) 0x9f9f9f00, (jint) 0x6e6e6e00, (jint) 0xbcbcbc00, (jint) 0x8e8e8e00, (jint) 0x29292900, (jint) 0xf5f5f500, (jint) 0xf9f9f900, (jint) 0xb6b6b600, (jint) 0x2f2f2f00, (jint) 0xfdfdfd00, (jint) 0xb4b4b400, (jint) 0x59595900, (jint) 0x78787800, (jint) 0x98989800, (jint) 0x06060600, (jint) 0x6a6a6a00, (jint) 0xe7e7e700, (jint) 0x46464600, (jint) 0x71717100, (jint) 0xbababa00, (jint) 0xd4d4d400, (jint) 0x25252500, (jint) 0xababab00, (jint) 0x42424200, (jint) 0x88888800, (jint) 0xa2a2a200, (jint) 0x8d8d8d00, (jint) 0xfafafa00, (jint) 0x72727200, (jint) 0x07070700, (jint) 0xb9b9b900, (jint) 0x55555500, (jint) 0xf8f8f800, (jint) 0xeeeeee00, (jint) 0xacacac00, (jint) 0x0a0a0a00, (jint) 0x36363600, (jint) 0x49494900, (jint) 0x2a2a2a00, (jint) 0x68686800, (jint) 0x3c3c3c00, (jint) 0x38383800, (jint) 0xf1f1f100, (jint) 0xa4a4a400, (jint) 0x40404000, (jint) 0x28282800, (jint) 0xd3d3d300, (jint) 0x7b7b7b00, (jint) 0xbbbbbb00, (jint) 0xc9c9c900, (jint) 0x43434300, (jint) 0xc1c1c100, (jint) 0x15151500, (jint) 0xe3e3e300, (jint) 0xadadad00, (jint) 0xf4f4f400, (jint) 0x77777700, (jint) 0xc7c7c700, (jint) 0x80808000, (jint) 0x9e9e9e00 } count:256];
    OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX4_4404 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x70700070, (jint) 0x2c2c002c, (jint) 0xb3b300b3, (jint) 0xc0c000c0, (jint) 0xe4e400e4, (jint) 0x57570057, (jint) 0xeaea00ea, (jint) 0xaeae00ae, (jint) 0x23230023, (jint) 0x6b6b006b, (jint) 0x45450045, (jint) 0xa5a500a5, (jint) 0xeded00ed, (jint) 0x4f4f004f, (jint) 0x1d1d001d, (jint) 0x92920092, (jint) 0x86860086, (jint) 0xafaf00af, (jint) 0x7c7c007c, (jint) 0x1f1f001f, (jint) 0x3e3e003e, (jint) 0xdcdc00dc, (jint) 0x5e5e005e, (jint) 0x0b0b000b, (jint) 0xa6a600a6, (jint) 0x39390039, (jint) 0xd5d500d5, (jint) 0x5d5d005d, (jint) 0xd9d900d9, (jint) 0x5a5a005a, (jint) 0x51510051, (jint) 0x6c6c006c, (jint) 0x8b8b008b, (jint) 0x9a9a009a, (jint) 0xfbfb00fb, (jint) 0xb0b000b0, (jint) 0x74740074, (jint) 0x2b2b002b, (jint) 0xf0f000f0, (jint) 0x84840084, (jint) 0xdfdf00df, (jint) 0xcbcb00cb, (jint) 0x34340034, (jint) 0x76760076, (jint) 0x6d6d006d, (jint) 0xa9a900a9, (jint) 0xd1d100d1, (jint) 0x04040004, (jint) 0x14140014, (jint) 0x3a3a003a, (jint) 0xdede00de, (jint) 0x11110011, (jint) 0x32320032, (jint) 0x9c9c009c, (jint) 0x53530053, (jint) 0xf2f200f2, (jint) 0xfefe00fe, (jint) 0xcfcf00cf, (jint) 0xc3c300c3, (jint) 0x7a7a007a, (jint) 0x24240024, (jint) 0xe8e800e8, (jint) 0x60600060, (jint) 0x69690069, (jint) 0xaaaa00aa, (jint) 0xa0a000a0, (jint) 0xa1a100a1, (jint) 0x62620062, (jint) 0x54540054, (jint) 0x1e1e001e, (jint) 0xe0e000e0, (jint) 0x64640064, (jint) 0x10100010, (jint) 0x00000000, (jint) 0xa3a300a3, (jint) 0x75750075, (jint) 0x8a8a008a, (jint) 0xe6e600e6, (jint) 0x09090009, (jint) 0xdddd00dd, (jint) 0x87870087, (jint) 0x83830083, (jint) 0xcdcd00cd, (jint) 0x90900090, (jint) 0x73730073, (jint) 0xf6f600f6, (jint) 0x9d9d009d, (jint) 0xbfbf00bf, (jint) 0x52520052, (jint) 0xd8d800d8, (jint) 0xc8c800c8, (jint) 0xc6c600c6, (jint) 0x81810081, (jint) 0x6f6f006f, (jint) 0x13130013, (jint) 0x63630063, (jint) 0xe9e900e9, (jint) 0xa7a700a7, (jint) 0x9f9f009f, (jint) 0xbcbc00bc, (jint) 0x29290029, (jint) 0xf9f900f9, (jint) 0x2f2f002f, (jint) 0xb4b400b4, (jint) 0x78780078, (jint) 0x06060006, (jint) 0xe7e700e7, (jint) 0x71710071, (jint) 0xd4d400d4, (jint) 0xabab00ab, (jint) 0x88880088, (jint) 0x8d8d008d, (jint) 0x72720072, (jint) 0xb9b900b9, (jint) 0xf8f800f8, (jint) 0xacac00ac, (jint) 0x36360036, (jint) 0x2a2a002a, (jint) 0x3c3c003c, (jint) 0xf1f100f1, (jint) 0x40400040, (jint) 0xd3d300d3, (jint) 0xbbbb00bb, (jint) 0x43430043, (jint) 0x15150015, (jint) 0xadad00ad, (jint) 0x77770077, (jint) 0x80800080, (jint) 0x82820082, (jint) 0xecec00ec, (jint) 0x27270027, (jint) 0xe5e500e5, (jint) 0x85850085, (jint) 0x35350035, (jint) 0x0c0c000c, (jint) 0x41410041, (jint) 0xefef00ef, (jint) 0x93930093, (jint) 0x19190019, (jint) 0x21210021, (jint) 0x0e0e000e, (jint) 0x4e4e004e, (jint) 0x65650065, (jint) 0xbdbd00bd, (jint) 0xb8b800b8, (jint) 0x8f8f008f, (jint) 0xebeb00eb, (jint) 0xcece00ce, (jint) 0x30300030, (jint) 0x5f5f005f, (jint) 0xc5c500c5, (jint) 0x1a1a001a, (jint) 0xe1e100e1, (jint) 0xcaca00ca, (jint) 0x47470047, (jint) 0x3d3d003d, (jint) 0x01010001, (jint) 0xd6d600d6, (jint) 0x56560056, (jint) 0x4d4d004d, (jint) 0x0d0d000d, (jint) 0x66660066, (jint) 0xcccc00cc, (jint) 0x2d2d002d, (jint) 0x12120012, (jint) 0x20200020, (jint) 0xb1b100b1, (jint) 0x99990099, (jint) 0x4c4c004c, (jint) 0xc2c200c2, (jint) 0x7e7e007e, (jint) 0x05050005, (jint) 0xb7b700b7, (jint) 0x31310031, (jint) 0x17170017, (jint) 0xd7d700d7, (jint) 0x58580058, (jint) 0x61610061, (jint) 0x1b1b001b, (jint) 0x1c1c001c, (jint) 0x0f0f000f, (jint) 0x16160016, (jint) 0x18180018, (jint) 0x22220022, (jint) 0x44440044, (jint) 0xb2b200b2, (jint) 0xb5b500b5, (jint) 0x91910091, (jint) 0x08080008, (jint) 0xa8a800a8, (jint) 0xfcfc00fc, (jint) 0x50500050, (jint) 0xd0d000d0, (jint) 0x7d7d007d, (jint) 0x89890089, (jint) 0x97970097, (jint) 0x5b5b005b, (jint) 0x95950095, (jint) 0xffff00ff, (jint) 0xd2d200d2, (jint) 0xc4c400c4, (jint) 0x48480048, (jint) 0xf7f700f7, (jint) 0xdbdb00db, (jint) 0x03030003, (jint) 0xdada00da, (jint) 0x3f3f003f, (jint) 0x94940094, (jint) 0x5c5c005c, (jint) 0x02020002, (jint) 0x4a4a004a, (jint) 0x33330033, (jint) 0x67670067, (jint) 0xf3f300f3, (jint) 0x7f7f007f, (jint) 0xe2e200e2, (jint) 0x9b9b009b, (jint) 0x26260026, (jint) 0x37370037, (jint) 0x3b3b003b, (jint) 0x96960096, (jint) 0x4b4b004b, (jint) 0xbebe00be, (jint) 0x2e2e002e, (jint) 0x79790079, (jint) 0x8c8c008c, (jint) 0x6e6e006e, (jint) 0x8e8e008e, (jint) 0xf5f500f5, (jint) 0xb6b600b6, (jint) 0xfdfd00fd, (jint) 0x59590059, (jint) 0x98980098, (jint) 0x6a6a006a, (jint) 0x46460046, (jint) 0xbaba00ba, (jint) 0x25250025, (jint) 0x42420042, (jint) 0xa2a200a2, (jint) 0xfafa00fa, (jint) 0x07070007, (jint) 0x55550055, (jint) 0xeeee00ee, (jint) 0x0a0a000a, (jint) 0x49490049, (jint) 0x68680068, (jint) 0x38380038, (jint) 0xa4a400a4, (jint) 0x28280028, (jint) 0x7b7b007b, (jint) 0xc9c900c9, (jint) 0xc1c100c1, (jint) 0xe3e300e3, (jint) 0xf4f400f4, (jint) 0xc7c700c7, (jint) 0x9e9e009e } count:256];
    OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX2_0222 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x00e0e0e0, (jint) 0x00050505, (jint) 0x00585858, (jint) 0x00d9d9d9, (jint) 0x00676767, (jint) 0x004e4e4e, (jint) 0x00818181, (jint) 0x00cbcbcb, (jint) 0x00c9c9c9, (jint) 0x000b0b0b, (jint) 0x00aeaeae, (jint) 0x006a6a6a, (jint) 0x00d5d5d5, (jint) 0x00181818, (jint) 0x005d5d5d, (jint) 0x00828282, (jint) 0x00464646, (jint) 0x00dfdfdf, (jint) 0x00d6d6d6, (jint) 0x00272727, (jint) 0x008a8a8a, (jint) 0x00323232, (jint) 0x004b4b4b, (jint) 0x00424242, (jint) 0x00dbdbdb, (jint) 0x001c1c1c, (jint) 0x009e9e9e, (jint) 0x009c9c9c, (jint) 0x003a3a3a, (jint) 0x00cacaca, (jint) 0x00252525, (jint) 0x007b7b7b, (jint) 0x000d0d0d, (jint) 0x00717171, (jint) 0x005f5f5f, (jint) 0x001f1f1f, (jint) 0x00f8f8f8, (jint) 0x00d7d7d7, (jint) 0x003e3e3e, (jint) 0x009d9d9d, (jint) 0x007c7c7c, (jint) 0x00606060, (jint) 0x00b9b9b9, (jint) 0x00bebebe, (jint) 0x00bcbcbc, (jint) 0x008b8b8b, (jint) 0x00161616, (jint) 0x00343434, (jint) 0x004d4d4d, (jint) 0x00c3c3c3, (jint) 0x00727272, (jint) 0x00959595, (jint) 0x00ababab, (jint) 0x008e8e8e, (jint) 0x00bababa, (jint) 0x007a7a7a, (jint) 0x00b3b3b3, (jint) 0x00020202, (jint) 0x00b4b4b4, (jint) 0x00adadad, (jint) 0x00a2a2a2, (jint) 0x00acacac, (jint) 0x00d8d8d8, (jint) 0x009a9a9a, (jint) 0x00171717, (jint) 0x001a1a1a, (jint) 0x00353535, (jint) 0x00cccccc, (jint) 0x00f7f7f7, (jint) 0x00999999, (jint) 0x00616161, (jint) 0x005a5a5a, (jint) 0x00e8e8e8, (jint) 0x00242424, (jint) 0x00565656, (jint) 0x00404040, (jint) 0x00e1e1e1, (jint) 0x00636363, (jint) 0x00090909, (jint) 0x00333333, (jint) 0x00bfbfbf, (jint) 0x00989898, (jint) 0x00979797, (jint) 0x00858585, (jint) 0x00686868, (jint) 0x00fcfcfc, (jint) 0x00ececec, (jint) 0x000a0a0a, (jint) 0x00dadada, (jint) 0x006f6f6f, (jint) 0x00535353, (jint) 0x00626262, (jint) 0x00a3a3a3, (jint) 0x002e2e2e, (jint) 0x00080808, (jint) 0x00afafaf, (jint) 0x00282828, (jint) 0x00b0b0b0, (jint) 0x00747474, (jint) 0x00c2c2c2, (jint) 0x00bdbdbd, (jint) 0x00363636, (jint) 0x00222222, (jint) 0x00383838, (jint) 0x00646464, (jint) 0x001e1e1e, (jint) 0x00393939, (jint) 0x002c2c2c, (jint) 0x00a6a6a6, (jint) 0x00303030, (jint) 0x00e5e5e5, (jint) 0x00444444, (jint) 0x00fdfdfd, (jint) 0x00888888, (jint) 0x009f9f9f, (jint) 0x00656565, (jint) 0x00878787, (jint) 0x006b6b6b, (jint) 0x00f4f4f4, (jint) 0x00232323, (jint) 0x00484848, (jint) 0x00101010, (jint) 0x00d1d1d1, (jint) 0x00515151, (jint) 0x00c0c0c0, (jint) 0x00f9f9f9, (jint) 0x00d2d2d2, (jint) 0x00a0a0a0, (jint) 0x00555555, (jint) 0x00a1a1a1, (jint) 0x00414141, (jint) 0x00fafafa, (jint) 0x00434343, (jint) 0x00131313, (jint) 0x00c4c4c4, (jint) 0x002f2f2f, (jint) 0x00a8a8a8, (jint) 0x00b6b6b6, (jint) 0x003c3c3c, (jint) 0x002b2b2b, (jint) 0x00c1c1c1, (jint) 0x00ffffff, (jint) 0x00c8c8c8, (jint) 0x00a5a5a5, (jint) 0x00202020, (jint) 0x00898989, (jint) 0x00000000, (jint) 0x00909090, (jint) 0x00474747, (jint) 0x00efefef, (jint) 0x00eaeaea, (jint) 0x00b7b7b7, (jint) 0x00151515, (jint) 0x00060606, (jint) 0x00cdcdcd, (jint) 0x00b5b5b5, (jint) 0x00121212, (jint) 0x007e7e7e, (jint) 0x00bbbbbb, (jint) 0x00292929, (jint) 0x000f0f0f, (jint) 0x00b8b8b8, (jint) 0x00070707, (jint) 0x00040404, (jint) 0x009b9b9b, (jint) 0x00949494, (jint) 0x00212121, (jint) 0x00666666, (jint) 0x00e6e6e6, (jint) 0x00cecece, (jint) 0x00ededed, (jint) 0x00e7e7e7, (jint) 0x003b3b3b, (jint) 0x00fefefe, (jint) 0x007f7f7f, (jint) 0x00c5c5c5, (jint) 0x00a4a4a4, (jint) 0x00373737, (jint) 0x00b1b1b1, (jint) 0x004c4c4c, (jint) 0x00919191, (jint) 0x006e6e6e, (jint) 0x008d8d8d, (jint) 0x00767676, (jint) 0x00030303, (jint) 0x002d2d2d, (jint) 0x00dedede, (jint) 0x00969696, (jint) 0x00262626, (jint) 0x007d7d7d, (jint) 0x00c6c6c6, (jint) 0x005c5c5c, (jint) 0x00d3d3d3, (jint) 0x00f2f2f2, (jint) 0x004f4f4f, (jint) 0x00191919, (jint) 0x003f3f3f, (jint) 0x00dcdcdc, (jint) 0x00797979, (jint) 0x001d1d1d, (jint) 0x00525252, (jint) 0x00ebebeb, (jint) 0x00f3f3f3, (jint) 0x006d6d6d, (jint) 0x005e5e5e, (jint) 0x00fbfbfb, (jint) 0x00696969, (jint) 0x00b2b2b2, (jint) 0x00f0f0f0, (jint) 0x00313131, (jint) 0x000c0c0c, (jint) 0x00d4d4d4, (jint) 0x00cfcfcf, (jint) 0x008c8c8c, (jint) 0x00e2e2e2, (jint) 0x00757575, (jint) 0x00a9a9a9, (jint) 0x004a4a4a, (jint) 0x00575757, (jint) 0x00848484, (jint) 0x00111111, (jint) 0x00454545, (jint) 0x001b1b1b, (jint) 0x00f5f5f5, (jint) 0x00e4e4e4, (jint) 0x000e0e0e, (jint) 0x00737373, (jint) 0x00aaaaaa, (jint) 0x00f1f1f1, (jint) 0x00dddddd, (jint) 0x00595959, (jint) 0x00141414, (jint) 0x006c6c6c, (jint) 0x00929292, (jint) 0x00545454, (jint) 0x00d0d0d0, (jint) 0x00787878, (jint) 0x00707070, (jint) 0x00e3e3e3, (jint) 0x00494949, (jint) 0x00808080, (jint) 0x00505050, (jint) 0x00a7a7a7, (jint) 0x00f6f6f6, (jint) 0x00777777, (jint) 0x00939393, (jint) 0x00868686, (jint) 0x00838383, (jint) 0x002a2a2a, (jint) 0x00c7c7c7, (jint) 0x005b5b5b, (jint) 0x00e9e9e9, (jint) 0x00eeeeee, (jint) 0x008f8f8f, (jint) 0x00010101, (jint) 0x003d3d3d } count:256];
    OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX3_3033 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x38003838, (jint) 0x41004141, (jint) 0x16001616, (jint) 0x76007676, (jint) 0xd900d9d9, (jint) 0x93009393, (jint) 0x60006060, (jint) 0xf200f2f2, (jint) 0x72007272, (jint) 0xc200c2c2, (jint) 0xab00abab, (jint) 0x9a009a9a, (jint) 0x75007575, (jint) 0x06000606, (jint) 0x57005757, (jint) 0xa000a0a0, (jint) 0x91009191, (jint) 0xf700f7f7, (jint) 0xb500b5b5, (jint) 0xc900c9c9, (jint) 0xa200a2a2, (jint) 0x8c008c8c, (jint) 0xd200d2d2, (jint) 0x90009090, (jint) 0xf600f6f6, (jint) 0x07000707, (jint) 0xa700a7a7, (jint) 0x27002727, (jint) 0x8e008e8e, (jint) 0xb200b2b2, (jint) 0x49004949, (jint) 0xde00dede, (jint) 0x43004343, (jint) 0x5c005c5c, (jint) 0xd700d7d7, (jint) 0xc700c7c7, (jint) 0x3e003e3e, (jint) 0xf500f5f5, (jint) 0x8f008f8f, (jint) 0x67006767, (jint) 0x1f001f1f, (jint) 0x18001818, (jint) 0x6e006e6e, (jint) 0xaf00afaf, (jint) 0x2f002f2f, (jint) 0xe200e2e2, (jint) 0x85008585, (jint) 0x0d000d0d, (jint) 0x53005353, (jint) 0xf000f0f0, (jint) 0x9c009c9c, (jint) 0x65006565, (jint) 0xea00eaea, (jint) 0xa300a3a3, (jint) 0xae00aeae, (jint) 0x9e009e9e, (jint) 0xec00ecec, (jint) 0x80008080, (jint) 0x2d002d2d, (jint) 0x6b006b6b, (jint) 0xa800a8a8, (jint) 0x2b002b2b, (jint) 0x36003636, (jint) 0xa600a6a6, (jint) 0xc500c5c5, (jint) 0x86008686, (jint) 0x4d004d4d, (jint) 0x33003333, (jint) 0xfd00fdfd, (jint) 0x66006666, (jint) 0x58005858, (jint) 0x96009696, (jint) 0x3a003a3a, (jint) 0x09000909, (jint) 0x95009595, (jint) 0x10001010, (jint) 0x78007878, (jint) 0xd800d8d8, (jint) 0x42004242, (jint) 0xcc00cccc, (jint) 0xef00efef, (jint) 0x26002626, (jint) 0xe500e5e5, (jint) 0x61006161, (jint) 0x1a001a1a, (jint) 0x3f003f3f, (jint) 0x3b003b3b, (jint) 0x82008282, (jint) 0xb600b6b6, (jint) 0xdb00dbdb, (jint) 0xd400d4d4, (jint) 0x98009898, (jint) 0xe800e8e8, (jint) 0x8b008b8b, (jint) 0x02000202, (jint) 0xeb00ebeb, (jint) 0x0a000a0a, (jint) 0x2c002c2c, (jint) 0x1d001d1d, (jint) 0xb000b0b0, (jint) 0x6f006f6f, (jint) 0x8d008d8d, (jint) 0x88008888, (jint) 0x0e000e0e, (jint) 0x19001919, (jint) 0x87008787, (jint) 0x4e004e4e, (jint) 0x0b000b0b, (jint) 0xa900a9a9, (jint) 0x0c000c0c, (jint) 0x79007979, (jint) 0x11001111, (jint) 0x7f007f7f, (jint) 0x22002222, (jint) 0xe700e7e7, (jint) 0x59005959, (jint) 0xe100e1e1, (jint) 0xda00dada, (jint) 0x3d003d3d, (jint) 0xc800c8c8, (jint) 0x12001212, (jint) 0x04000404, (jint) 0x74007474, (jint) 0x54005454, (jint) 0x30003030, (jint) 0x7e007e7e, (jint) 0xb400b4b4, (jint) 0x28002828, (jint) 0x55005555, (jint) 0x68006868, (jint) 0x50005050, (jint) 0xbe00bebe, (jint) 0xd000d0d0, (jint) 0xc400c4c4, (jint) 0x31003131, (jint) 0xcb00cbcb, (jint) 0x2a002a2a, (jint) 0xad00adad, (jint) 0x0f000f0f, (jint) 0xca00caca, (jint) 0x70007070, (jint) 0xff00ffff, (jint) 0x32003232, (jint) 0x69006969, (jint) 0x08000808, (jint) 0x62006262, (jint) 0x00000000, (jint) 0x24002424, (jint) 0xd100d1d1, (jint) 0xfb00fbfb, (jint) 0xba00baba, (jint) 0xed00eded, (jint) 0x45004545, (jint) 0x81008181, (jint) 0x73007373, (jint) 0x6d006d6d, (jint) 0x84008484, (jint) 0x9f009f9f, (jint) 0xee00eeee, (jint) 0x4a004a4a, (jint) 0xc300c3c3, (jint) 0x2e002e2e, (jint) 0xc100c1c1, (jint) 0x01000101, (jint) 0xe600e6e6, (jint) 0x25002525, (jint) 0x48004848, (jint) 0x99009999, (jint) 0xb900b9b9, (jint) 0xb300b3b3, (jint) 0x7b007b7b, (jint) 0xf900f9f9, (jint) 0xce00cece, (jint) 0xbf00bfbf, (jint) 0xdf00dfdf, (jint) 0x71007171, (jint) 0x29002929, (jint) 0xcd00cdcd, (jint) 0x6c006c6c, (jint) 0x13001313, (jint) 0x64006464, (jint) 0x9b009b9b, (jint) 0x63006363, (jint) 0x9d009d9d, (jint) 0xc000c0c0, (jint) 0x4b004b4b, (jint) 0xb700b7b7, (jint) 0xa500a5a5, (jint) 0x89008989, (jint) 0x5f005f5f, (jint) 0xb100b1b1, (jint) 0x17001717, (jint) 0xf400f4f4, (jint) 0xbc00bcbc, (jint) 0xd300d3d3, (jint) 0x46004646, (jint) 0xcf00cfcf, (jint) 0x37003737, (jint) 0x5e005e5e, (jint) 0x47004747, (jint) 0x94009494, (jint) 0xfa00fafa, (jint) 0xfc00fcfc, (jint) 0x5b005b5b, (jint) 0x97009797, (jint) 0xfe00fefe, (jint) 0x5a005a5a, (jint) 0xac00acac, (jint) 0x3c003c3c, (jint) 0x4c004c4c, (jint) 0x03000303, (jint) 0x35003535, (jint) 0xf300f3f3, (jint) 0x23002323, (jint) 0xb800b8b8, (jint) 0x5d005d5d, (jint) 0x6a006a6a, (jint) 0x92009292, (jint) 0xd500d5d5, (jint) 0x21002121, (jint) 0x44004444, (jint) 0x51005151, (jint) 0xc600c6c6, (jint) 0x7d007d7d, (jint) 0x39003939, (jint) 0x83008383, (jint) 0xdc00dcdc, (jint) 0xaa00aaaa, (jint) 0x7c007c7c, (jint) 0x77007777, (jint) 0x56005656, (jint) 0x05000505, (jint) 0x1b001b1b, (jint) 0xa400a4a4, (jint) 0x15001515, (jint) 0x34003434, (jint) 0x1e001e1e, (jint) 0x1c001c1c, (jint) 0xf800f8f8, (jint) 0x52005252, (jint) 0x20002020, (jint) 0x14001414, (jint) 0xe900e9e9, (jint) 0xbd00bdbd, (jint) 0xdd00dddd, (jint) 0xe400e4e4, (jint) 0xa100a1a1, (jint) 0xe000e0e0, (jint) 0x8a008a8a, (jint) 0xf100f1f1, (jint) 0xd600d6d6, (jint) 0x7a007a7a, (jint) 0xbb00bbbb, (jint) 0xe300e3e3, (jint) 0x40004040, (jint) 0x4f004f4f } count:256];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoEnginesCamelliaEngine)
  }
}

@end

jint OrgSpongycastleCryptoEnginesCamelliaEngine_rightRotateWithInt_withInt_(jint x, jint s) {
  OrgSpongycastleCryptoEnginesCamelliaEngine_initialize();
  return ((JreURShift32((x), (s))) + (JreLShift32((x), (32 - s))));
}

jint OrgSpongycastleCryptoEnginesCamelliaEngine_leftRotateWithInt_withInt_(jint x, jint s) {
  OrgSpongycastleCryptoEnginesCamelliaEngine_initialize();
  return (JreLShift32((x), (s))) + (JreURShift32((x), (32 - s)));
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(jint rot, IOSIntArray *ki, jint ioff, IOSIntArray *ko, jint ooff) {
  OrgSpongycastleCryptoEnginesCamelliaEngine_initialize();
  *IOSIntArray_GetRef(nil_chk(ko), 0 + ooff) = (JreLShift32(IOSIntArray_Get(nil_chk(ki), 0 + ioff), rot)) | (JreURShift32(IOSIntArray_Get(ki, 1 + ioff), (32 - rot)));
  *IOSIntArray_GetRef(ko, 1 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 1 + ioff), rot)) | (JreURShift32(IOSIntArray_Get(ki, 2 + ioff), (32 - rot)));
  *IOSIntArray_GetRef(ko, 2 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 2 + ioff), rot)) | (JreURShift32(IOSIntArray_Get(ki, 3 + ioff), (32 - rot)));
  *IOSIntArray_GetRef(ko, 3 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 3 + ioff), rot)) | (JreURShift32(IOSIntArray_Get(ki, 0 + ioff), (32 - rot)));
  *IOSIntArray_GetRef(ki, 0 + ioff) = IOSIntArray_Get(ko, 0 + ooff);
  *IOSIntArray_GetRef(ki, 1 + ioff) = IOSIntArray_Get(ko, 1 + ooff);
  *IOSIntArray_GetRef(ki, 2 + ioff) = IOSIntArray_Get(ko, 2 + ooff);
  *IOSIntArray_GetRef(ki, 3 + ioff) = IOSIntArray_Get(ko, 3 + ooff);
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(jint rot, IOSIntArray *ki, jint ioff, IOSIntArray *ko, jint ooff) {
  OrgSpongycastleCryptoEnginesCamelliaEngine_initialize();
  *IOSIntArray_GetRef(nil_chk(ko), 2 + ooff) = (JreLShift32(IOSIntArray_Get(nil_chk(ki), 0 + ioff), rot)) | (JreURShift32(IOSIntArray_Get(ki, 1 + ioff), (32 - rot)));
  *IOSIntArray_GetRef(ko, 3 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 1 + ioff), rot)) | (JreURShift32(IOSIntArray_Get(ki, 2 + ioff), (32 - rot)));
  *IOSIntArray_GetRef(ko, 0 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 2 + ioff), rot)) | (JreURShift32(IOSIntArray_Get(ki, 3 + ioff), (32 - rot)));
  *IOSIntArray_GetRef(ko, 1 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 3 + ioff), rot)) | (JreURShift32(IOSIntArray_Get(ki, 0 + ioff), (32 - rot)));
  *IOSIntArray_GetRef(ki, 0 + ioff) = IOSIntArray_Get(ko, 2 + ooff);
  *IOSIntArray_GetRef(ki, 1 + ioff) = IOSIntArray_Get(ko, 3 + ooff);
  *IOSIntArray_GetRef(ki, 2 + ioff) = IOSIntArray_Get(ko, 0 + ooff);
  *IOSIntArray_GetRef(ki, 3 + ioff) = IOSIntArray_Get(ko, 1 + ooff);
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(jint rot, IOSIntArray *ki, jint ioff, IOSIntArray *ko, jint ooff) {
  OrgSpongycastleCryptoEnginesCamelliaEngine_initialize();
  *IOSIntArray_GetRef(nil_chk(ko), 0 + ooff) = (JreLShift32(IOSIntArray_Get(nil_chk(ki), 1 + ioff), (rot - 32))) | (JreURShift32(IOSIntArray_Get(ki, 2 + ioff), (64 - rot)));
  *IOSIntArray_GetRef(ko, 1 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 2 + ioff), (rot - 32))) | (JreURShift32(IOSIntArray_Get(ki, 3 + ioff), (64 - rot)));
  *IOSIntArray_GetRef(ko, 2 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 3 + ioff), (rot - 32))) | (JreURShift32(IOSIntArray_Get(ki, 0 + ioff), (64 - rot)));
  *IOSIntArray_GetRef(ko, 3 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 0 + ioff), (rot - 32))) | (JreURShift32(IOSIntArray_Get(ki, 1 + ioff), (64 - rot)));
  *IOSIntArray_GetRef(ki, 0 + ioff) = IOSIntArray_Get(ko, 0 + ooff);
  *IOSIntArray_GetRef(ki, 1 + ioff) = IOSIntArray_Get(ko, 1 + ooff);
  *IOSIntArray_GetRef(ki, 2 + ioff) = IOSIntArray_Get(ko, 2 + ooff);
  *IOSIntArray_GetRef(ki, 3 + ioff) = IOSIntArray_Get(ko, 3 + ooff);
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(jint rot, IOSIntArray *ki, jint ioff, IOSIntArray *ko, jint ooff) {
  OrgSpongycastleCryptoEnginesCamelliaEngine_initialize();
  *IOSIntArray_GetRef(nil_chk(ko), 2 + ooff) = (JreLShift32(IOSIntArray_Get(nil_chk(ki), 1 + ioff), (rot - 32))) | (JreURShift32(IOSIntArray_Get(ki, 2 + ioff), (64 - rot)));
  *IOSIntArray_GetRef(ko, 3 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 2 + ioff), (rot - 32))) | (JreURShift32(IOSIntArray_Get(ki, 3 + ioff), (64 - rot)));
  *IOSIntArray_GetRef(ko, 0 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 3 + ioff), (rot - 32))) | (JreURShift32(IOSIntArray_Get(ki, 0 + ioff), (64 - rot)));
  *IOSIntArray_GetRef(ko, 1 + ooff) = (JreLShift32(IOSIntArray_Get(ki, 0 + ioff), (rot - 32))) | (JreURShift32(IOSIntArray_Get(ki, 1 + ioff), (64 - rot)));
  *IOSIntArray_GetRef(ki, 0 + ioff) = IOSIntArray_Get(ko, 2 + ooff);
  *IOSIntArray_GetRef(ki, 1 + ioff) = IOSIntArray_Get(ko, 3 + ooff);
  *IOSIntArray_GetRef(ki, 2 + ioff) = IOSIntArray_Get(ko, 0 + ooff);
  *IOSIntArray_GetRef(ki, 3 + ioff) = IOSIntArray_Get(ko, 1 + ooff);
}

jint OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSByteArray *src, jint offset) {
  jint word = 0;
  for (jint i = 0; i < 4; i++) {
    word = (JreLShift32(word, 8)) + (IOSByteArray_Get(nil_chk(src), i + offset) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  }
  return word;
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, jint word, IOSByteArray *dst, jint offset) {
  for (jint i = 0; i < 4; i++) {
    *IOSByteArray_GetRef(nil_chk(dst), (3 - i) + offset) = (jbyte) word;
    JreURShiftAssignInt(&word, 8);
  }
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSIntArray *s, IOSIntArray *skey, jint keyoff) {
  jint t1;
  jint t2;
  jint u;
  jint v;
  t1 = IOSIntArray_Get(nil_chk(s), 0) ^ IOSIntArray_Get(nil_chk(skey), 0 + keyoff);
  u = IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX4_4404), t1 & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  u ^= IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX3_3033), (JreURShift32(t1, 8)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  u ^= IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX2_0222), (JreURShift32(t1, 16)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  u ^= IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX1_1110), (JreURShift32(t1, 24)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  t2 = IOSIntArray_Get(s, 1) ^ IOSIntArray_Get(skey, 1 + keyoff);
  v = IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX1_1110, t2 & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  v ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX4_4404, (JreURShift32(t2, 8)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  v ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX3_3033, (JreURShift32(t2, 16)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  v ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX2_0222, (JreURShift32(t2, 24)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  *IOSIntArray_GetRef(s, 2) ^= u ^ v;
  *IOSIntArray_GetRef(s, 3) ^= u ^ v ^ OrgSpongycastleCryptoEnginesCamelliaEngine_rightRotateWithInt_withInt_(u, 8);
  t1 = IOSIntArray_Get(s, 2) ^ IOSIntArray_Get(skey, 2 + keyoff);
  u = IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX4_4404, t1 & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  u ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX3_3033, (JreURShift32(t1, 8)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  u ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX2_0222, (JreURShift32(t1, 16)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  u ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX1_1110, (JreURShift32(t1, 24)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  t2 = IOSIntArray_Get(s, 3) ^ IOSIntArray_Get(skey, 3 + keyoff);
  v = IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX1_1110, t2 & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  v ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX4_4404, (JreURShift32(t2, 8)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  v ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX3_3033, (JreURShift32(t2, 16)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  v ^= IOSIntArray_Get(OrgSpongycastleCryptoEnginesCamelliaEngine_SBOX2_0222, (JreURShift32(t2, 24)) & OrgSpongycastleCryptoEnginesCamelliaEngine_MASK8);
  *IOSIntArray_GetRef(s, 0) ^= u ^ v;
  *IOSIntArray_GetRef(s, 1) ^= u ^ v ^ OrgSpongycastleCryptoEnginesCamelliaEngine_rightRotateWithInt_withInt_(u, 8);
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaFLsWithIntArray_withIntArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSIntArray *s, IOSIntArray *fkey, jint keyoff) {
  *IOSIntArray_GetRef(nil_chk(s), 1) ^= OrgSpongycastleCryptoEnginesCamelliaEngine_leftRotateWithInt_withInt_(IOSIntArray_Get(s, 0) & IOSIntArray_Get(nil_chk(fkey), 0 + keyoff), 1);
  *IOSIntArray_GetRef(s, 0) ^= IOSIntArray_Get(fkey, 1 + keyoff) | IOSIntArray_Get(s, 1);
  *IOSIntArray_GetRef(s, 2) ^= IOSIntArray_Get(fkey, 3 + keyoff) | IOSIntArray_Get(s, 3);
  *IOSIntArray_GetRef(s, 3) ^= OrgSpongycastleCryptoEnginesCamelliaEngine_leftRotateWithInt_withInt_(IOSIntArray_Get(fkey, 2 + keyoff) & IOSIntArray_Get(s, 2), 1);
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_setKeyWithBoolean_withByteArray_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, jboolean forEncryption, IOSByteArray *key) {
  IOSIntArray *k = [IOSIntArray newArrayWithLength:8];
  IOSIntArray *ka = [IOSIntArray newArrayWithLength:4];
  IOSIntArray *kb = [IOSIntArray newArrayWithLength:4];
  IOSIntArray *t = [IOSIntArray newArrayWithLength:4];
  switch (((IOSByteArray *) nil_chk(key))->size_) {
    case 16:
    self->_keyIs128_ = true;
    *IOSIntArray_GetRef(k, 0) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 0);
    *IOSIntArray_GetRef(k, 1) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 4);
    *IOSIntArray_GetRef(k, 2) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 8);
    *IOSIntArray_GetRef(k, 3) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 12);
    *IOSIntArray_GetRef(k, 4) = *IOSIntArray_GetRef(k, 5) = *IOSIntArray_GetRef(k, 6) = *IOSIntArray_GetRef(k, 7) = 0;
    break;
    case 24:
    *IOSIntArray_GetRef(k, 0) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 0);
    *IOSIntArray_GetRef(k, 1) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 4);
    *IOSIntArray_GetRef(k, 2) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 8);
    *IOSIntArray_GetRef(k, 3) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 12);
    *IOSIntArray_GetRef(k, 4) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 16);
    *IOSIntArray_GetRef(k, 5) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 20);
    *IOSIntArray_GetRef(k, 6) = ~IOSIntArray_Get(k, 4);
    *IOSIntArray_GetRef(k, 7) = ~IOSIntArray_Get(k, 5);
    self->_keyIs128_ = false;
    break;
    case 32:
    *IOSIntArray_GetRef(k, 0) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 0);
    *IOSIntArray_GetRef(k, 1) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 4);
    *IOSIntArray_GetRef(k, 2) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 8);
    *IOSIntArray_GetRef(k, 3) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 12);
    *IOSIntArray_GetRef(k, 4) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 16);
    *IOSIntArray_GetRef(k, 5) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 20);
    *IOSIntArray_GetRef(k, 6) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 24);
    *IOSIntArray_GetRef(k, 7) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, key, 28);
    self->_keyIs128_ = false;
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"key sizes are only 16/24/32 bytes.");
  }
  for (jint i = 0; i < 4; i++) {
    *IOSIntArray_GetRef(ka, i) = IOSIntArray_Get(k, i) ^ IOSIntArray_Get(k, i + 4);
  }
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, ka, OrgSpongycastleCryptoEnginesCamelliaEngine_SIGMA, 0);
  for (jint i = 0; i < 4; i++) {
    *IOSIntArray_GetRef(ka, i) ^= IOSIntArray_Get(k, i);
  }
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, ka, OrgSpongycastleCryptoEnginesCamelliaEngine_SIGMA, 4);
  if (self->_keyIs128_) {
    if (forEncryption) {
      *IOSIntArray_GetRef(nil_chk(self->kw_), 0) = IOSIntArray_Get(k, 0);
      *IOSIntArray_GetRef(self->kw_, 1) = IOSIntArray_Get(k, 1);
      *IOSIntArray_GetRef(self->kw_, 2) = IOSIntArray_Get(k, 2);
      *IOSIntArray_GetRef(self->kw_, 3) = IOSIntArray_Get(k, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 0, self->subkey_, 4);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, k, 0, self->subkey_, 12);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 0, t, 0);
      *IOSIntArray_GetRef(nil_chk(self->subkey_), 18) = IOSIntArray_Get(t, 2);
      *IOSIntArray_GetRef(self->subkey_, 19) = IOSIntArray_Get(t, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, k, 0, self->ke_, 4);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, k, 0, self->subkey_, 24);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, k, 0, self->subkey_, 32);
      *IOSIntArray_GetRef(nil_chk(self->subkey_), 0) = IOSIntArray_Get(ka, 0);
      *IOSIntArray_GetRef(self->subkey_, 1) = IOSIntArray_Get(ka, 1);
      *IOSIntArray_GetRef(self->subkey_, 2) = IOSIntArray_Get(ka, 2);
      *IOSIntArray_GetRef(self->subkey_, 3) = IOSIntArray_Get(ka, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, self->subkey_, 8);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, self->ke_, 0);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, t, 0);
      *IOSIntArray_GetRef(nil_chk(self->subkey_), 16) = IOSIntArray_Get(t, 0);
      *IOSIntArray_GetRef(self->subkey_, 17) = IOSIntArray_Get(t, 1);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, self->subkey_, 20);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(34, ka, 0, self->subkey_, 28);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, ka, 0, self->kw_, 4);
    }
    else {
      *IOSIntArray_GetRef(nil_chk(self->kw_), 4) = IOSIntArray_Get(k, 0);
      *IOSIntArray_GetRef(self->kw_, 5) = IOSIntArray_Get(k, 1);
      *IOSIntArray_GetRef(self->kw_, 6) = IOSIntArray_Get(k, 2);
      *IOSIntArray_GetRef(self->kw_, 7) = IOSIntArray_Get(k, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 0, self->subkey_, 28);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, k, 0, self->subkey_, 20);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 0, t, 0);
      *IOSIntArray_GetRef(nil_chk(self->subkey_), 16) = IOSIntArray_Get(t, 0);
      *IOSIntArray_GetRef(self->subkey_, 17) = IOSIntArray_Get(t, 1);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, k, 0, self->ke_, 0);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, k, 0, self->subkey_, 8);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, k, 0, self->subkey_, 0);
      *IOSIntArray_GetRef(nil_chk(self->subkey_), 34) = IOSIntArray_Get(ka, 0);
      *IOSIntArray_GetRef(self->subkey_, 35) = IOSIntArray_Get(ka, 1);
      *IOSIntArray_GetRef(self->subkey_, 32) = IOSIntArray_Get(ka, 2);
      *IOSIntArray_GetRef(self->subkey_, 33) = IOSIntArray_Get(ka, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, self->subkey_, 24);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, self->ke_, 4);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, t, 0);
      *IOSIntArray_GetRef(nil_chk(self->subkey_), 18) = IOSIntArray_Get(t, 2);
      *IOSIntArray_GetRef(self->subkey_, 19) = IOSIntArray_Get(t, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, self->subkey_, 12);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(34, ka, 0, self->subkey_, 4);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, ka, 0, self->kw_, 0);
    }
  }
  else {
    for (jint i = 0; i < 4; i++) {
      *IOSIntArray_GetRef(kb, i) = IOSIntArray_Get(ka, i) ^ IOSIntArray_Get(k, i + 4);
    }
    OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, kb, OrgSpongycastleCryptoEnginesCamelliaEngine_SIGMA, 8);
    if (forEncryption) {
      *IOSIntArray_GetRef(nil_chk(self->kw_), 0) = IOSIntArray_Get(k, 0);
      *IOSIntArray_GetRef(self->kw_, 1) = IOSIntArray_Get(k, 1);
      *IOSIntArray_GetRef(self->kw_, 2) = IOSIntArray_Get(k, 2);
      *IOSIntArray_GetRef(self->kw_, 3) = IOSIntArray_Get(k, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(45, k, 0, self->subkey_, 16);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 0, self->ke_, 4);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, k, 0, self->subkey_, 32);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(34, k, 0, self->subkey_, 44);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 4, self->subkey_, 4);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 4, self->ke_, 0);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, k, 4, self->subkey_, 24);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(34, k, 4, self->subkey_, 36);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, self->subkey_, 8);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, ka, 0, self->subkey_, 20);
      *IOSIntArray_GetRef(nil_chk(self->ke_), 8) = IOSIntArray_Get(ka, 1);
      *IOSIntArray_GetRef(self->ke_, 9) = IOSIntArray_Get(ka, 2);
      *IOSIntArray_GetRef(self->ke_, 10) = IOSIntArray_Get(ka, 3);
      *IOSIntArray_GetRef(self->ke_, 11) = IOSIntArray_Get(ka, 0);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(49, ka, 0, self->subkey_, 40);
      *IOSIntArray_GetRef(nil_chk(self->subkey_), 0) = IOSIntArray_Get(kb, 0);
      *IOSIntArray_GetRef(self->subkey_, 1) = IOSIntArray_Get(kb, 1);
      *IOSIntArray_GetRef(self->subkey_, 2) = IOSIntArray_Get(kb, 2);
      *IOSIntArray_GetRef(self->subkey_, 3) = IOSIntArray_Get(kb, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, kb, 0, self->subkey_, 12);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, kb, 0, self->subkey_, 28);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(51, kb, 0, self->kw_, 4);
    }
    else {
      *IOSIntArray_GetRef(nil_chk(self->kw_), 4) = IOSIntArray_Get(k, 0);
      *IOSIntArray_GetRef(self->kw_, 5) = IOSIntArray_Get(k, 1);
      *IOSIntArray_GetRef(self->kw_, 6) = IOSIntArray_Get(k, 2);
      *IOSIntArray_GetRef(self->kw_, 7) = IOSIntArray_Get(k, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(45, k, 0, self->subkey_, 28);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 0, self->ke_, 4);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(17, k, 0, self->subkey_, 12);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(34, k, 0, self->subkey_, 0);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 4, self->subkey_, 40);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, k, 4, self->ke_, 8);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, k, 4, self->subkey_, 20);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(34, k, 4, self->subkey_, 8);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(15, ka, 0, self->subkey_, 36);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, ka, 0, self->subkey_, 24);
      *IOSIntArray_GetRef(nil_chk(self->ke_), 2) = IOSIntArray_Get(ka, 1);
      *IOSIntArray_GetRef(self->ke_, 3) = IOSIntArray_Get(ka, 2);
      *IOSIntArray_GetRef(self->ke_, 0) = IOSIntArray_Get(ka, 3);
      *IOSIntArray_GetRef(self->ke_, 1) = IOSIntArray_Get(ka, 0);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(49, ka, 0, self->subkey_, 4);
      *IOSIntArray_GetRef(nil_chk(self->subkey_), 46) = IOSIntArray_Get(kb, 0);
      *IOSIntArray_GetRef(self->subkey_, 47) = IOSIntArray_Get(kb, 1);
      *IOSIntArray_GetRef(self->subkey_, 44) = IOSIntArray_Get(kb, 2);
      *IOSIntArray_GetRef(self->subkey_, 45) = IOSIntArray_Get(kb, 3);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, kb, 0, self->subkey_, 32);
      OrgSpongycastleCryptoEnginesCamelliaEngine_decroldqWithInt_withIntArray_withInt_withIntArray_withInt_(30, kb, 0, self->subkey_, 16);
      OrgSpongycastleCryptoEnginesCamelliaEngine_roldqo32WithInt_withIntArray_withInt_withIntArray_withInt_(51, kb, 0, self->kw_, 0);
    }
  }
}

jint OrgSpongycastleCryptoEnginesCamelliaEngine_processBlock128WithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff) {
  for (jint i = 0; i < 4; i++) {
    *IOSIntArray_GetRef(nil_chk(self->state_), i) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, inArg, inOff + (i * 4));
    *IOSIntArray_GetRef(nil_chk(self->state_), i) ^= IOSIntArray_Get(nil_chk(self->kw_), i);
  }
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 0);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 4);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 8);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaFLsWithIntArray_withIntArray_withInt_(self, self->state_, self->ke_, 0);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 12);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 16);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 20);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaFLsWithIntArray_withIntArray_withInt_(self, self->state_, self->ke_, 4);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 24);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 28);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 32);
  *IOSIntArray_GetRef(nil_chk(self->state_), 2) ^= IOSIntArray_Get(nil_chk(self->kw_), 4);
  *IOSIntArray_GetRef(self->state_, 3) ^= IOSIntArray_Get(self->kw_, 5);
  *IOSIntArray_GetRef(self->state_, 0) ^= IOSIntArray_Get(self->kw_, 6);
  *IOSIntArray_GetRef(self->state_, 1) ^= IOSIntArray_Get(self->kw_, 7);
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, IOSIntArray_Get(self->state_, 2), outArg, outOff);
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, IOSIntArray_Get(nil_chk(self->state_), 3), outArg, outOff + 4);
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, IOSIntArray_Get(nil_chk(self->state_), 0), outArg, outOff + 8);
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, IOSIntArray_Get(nil_chk(self->state_), 1), outArg, outOff + 12);
  return OrgSpongycastleCryptoEnginesCamelliaEngine_BLOCK_SIZE;
}

jint OrgSpongycastleCryptoEnginesCamelliaEngine_processBlock192or256WithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesCamelliaEngine *self, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff) {
  for (jint i = 0; i < 4; i++) {
    *IOSIntArray_GetRef(nil_chk(self->state_), i) = OrgSpongycastleCryptoEnginesCamelliaEngine_bytes2intWithByteArray_withInt_(self, inArg, inOff + (i * 4));
    *IOSIntArray_GetRef(nil_chk(self->state_), i) ^= IOSIntArray_Get(nil_chk(self->kw_), i);
  }
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 0);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 4);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 8);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaFLsWithIntArray_withIntArray_withInt_(self, self->state_, self->ke_, 0);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 12);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 16);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 20);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaFLsWithIntArray_withIntArray_withInt_(self, self->state_, self->ke_, 4);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 24);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 28);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 32);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaFLsWithIntArray_withIntArray_withInt_(self, self->state_, self->ke_, 8);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 36);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 40);
  OrgSpongycastleCryptoEnginesCamelliaEngine_camelliaF2WithIntArray_withIntArray_withInt_(self, self->state_, self->subkey_, 44);
  *IOSIntArray_GetRef(nil_chk(self->state_), 2) ^= IOSIntArray_Get(nil_chk(self->kw_), 4);
  *IOSIntArray_GetRef(self->state_, 3) ^= IOSIntArray_Get(self->kw_, 5);
  *IOSIntArray_GetRef(self->state_, 0) ^= IOSIntArray_Get(self->kw_, 6);
  *IOSIntArray_GetRef(self->state_, 1) ^= IOSIntArray_Get(self->kw_, 7);
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, IOSIntArray_Get(self->state_, 2), outArg, outOff);
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, IOSIntArray_Get(nil_chk(self->state_), 3), outArg, outOff + 4);
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, IOSIntArray_Get(nil_chk(self->state_), 0), outArg, outOff + 8);
  OrgSpongycastleCryptoEnginesCamelliaEngine_int2bytesWithInt_withByteArray_withInt_(self, IOSIntArray_Get(nil_chk(self->state_), 1), outArg, outOff + 12);
  return OrgSpongycastleCryptoEnginesCamelliaEngine_BLOCK_SIZE;
}

void OrgSpongycastleCryptoEnginesCamelliaEngine_init(OrgSpongycastleCryptoEnginesCamelliaEngine *self) {
  NSObject_init(self);
  self->initialised_ = false;
  self->subkey_ = [IOSIntArray newArrayWithLength:24 * 4];
  self->kw_ = [IOSIntArray newArrayWithLength:4 * 2];
  self->ke_ = [IOSIntArray newArrayWithLength:6 * 2];
  self->state_ = [IOSIntArray newArrayWithLength:4];
}

OrgSpongycastleCryptoEnginesCamelliaEngine *new_OrgSpongycastleCryptoEnginesCamelliaEngine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesCamelliaEngine, init)
}

OrgSpongycastleCryptoEnginesCamelliaEngine *create_OrgSpongycastleCryptoEnginesCamelliaEngine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesCamelliaEngine, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesCamelliaEngine)
