//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/AESLightEngine.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/DataLengthException.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/engines/AESLightEngine.h"
#include "org/spongycastle/crypto/params/KeyParameter.h"
#include "org/spongycastle/util/Pack.h"

@interface OrgSpongycastleCryptoEnginesAESLightEngine () {
 @public
  jint ROUNDS_;
  IOSObjectArray *WorkingKey_;
  jint C0_;
  jint C1_;
  jint C2_;
  jint C3_;
  jboolean forEncryption_;
}

+ (jint)shiftWithInt:(jint)r
             withInt:(jint)shift;

+ (jint)FFmulXWithInt:(jint)x;

+ (jint)FFmulX2WithInt:(jint)x;

+ (jint)mcolWithInt:(jint)x;

+ (jint)inv_mcolWithInt:(jint)x;

+ (jint)subWordWithInt:(jint)x;

- (IOSObjectArray *)generateWorkingKeyWithByteArray:(IOSByteArray *)key
                                        withBoolean:(jboolean)forEncryption;

- (void)unpackBlockWithByteArray:(IOSByteArray *)bytes
                         withInt:(jint)off;

- (void)packBlockWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)off;

- (void)encryptBlockWithIntArray2:(IOSObjectArray *)KW;

- (void)decryptBlockWithIntArray2:(IOSObjectArray *)KW;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesAESLightEngine, WorkingKey_, IOSObjectArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesAESLightEngine_get_S(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesAESLightEngine_S;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesAESLightEngine, S, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesAESLightEngine_get_Si(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesAESLightEngine_Si;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesAESLightEngine, Si, IOSByteArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesAESLightEngine_get_rcon(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesAESLightEngine_rcon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesAESLightEngine, rcon, IOSIntArray *)

inline jint OrgSpongycastleCryptoEnginesAESLightEngine_get_m1(void);
#define OrgSpongycastleCryptoEnginesAESLightEngine_m1 -2139062144
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESLightEngine, m1, jint)

inline jint OrgSpongycastleCryptoEnginesAESLightEngine_get_m2(void);
#define OrgSpongycastleCryptoEnginesAESLightEngine_m2 2139062143
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESLightEngine, m2, jint)

inline jint OrgSpongycastleCryptoEnginesAESLightEngine_get_m3(void);
#define OrgSpongycastleCryptoEnginesAESLightEngine_m3 27
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESLightEngine, m3, jint)

inline jint OrgSpongycastleCryptoEnginesAESLightEngine_get_m4(void);
#define OrgSpongycastleCryptoEnginesAESLightEngine_m4 -1061109568
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESLightEngine, m4, jint)

inline jint OrgSpongycastleCryptoEnginesAESLightEngine_get_m5(void);
#define OrgSpongycastleCryptoEnginesAESLightEngine_m5 1061109567
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESLightEngine, m5, jint)

inline jint OrgSpongycastleCryptoEnginesAESLightEngine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesAESLightEngine_BLOCK_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESLightEngine, BLOCK_SIZE, jint)

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(jint r, jint shift);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESLightEngine_FFmulXWithInt_(jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESLightEngine_FFmulX2WithInt_(jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_(jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_(jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(jint x);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleCryptoEnginesAESLightEngine_generateWorkingKeyWithByteArray_withBoolean_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSByteArray *key, jboolean forEncryption);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesAESLightEngine_unpackBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSByteArray *bytes, jint off);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesAESLightEngine_packBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSByteArray *bytes, jint off);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesAESLightEngine_encryptBlockWithIntArray2_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSObjectArray *KW);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesAESLightEngine_decryptBlockWithIntArray2_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSObjectArray *KW);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoEnginesAESLightEngine)

@implementation OrgSpongycastleCryptoEnginesAESLightEngine

+ (jint)shiftWithInt:(jint)r
             withInt:(jint)shift {
  return OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(r, shift);
}

+ (jint)FFmulXWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESLightEngine_FFmulXWithInt_(x);
}

+ (jint)FFmulX2WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESLightEngine_FFmulX2WithInt_(x);
}

+ (jint)mcolWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_(x);
}

+ (jint)inv_mcolWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_(x);
}

+ (jint)subWordWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(x);
}

- (IOSObjectArray *)generateWorkingKeyWithByteArray:(IOSByteArray *)key
                                        withBoolean:(jboolean)forEncryption {
  return OrgSpongycastleCryptoEnginesAESLightEngine_generateWorkingKeyWithByteArray_withBoolean_(self, key, forEncryption);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEnginesAESLightEngine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if ([params isKindOfClass:[OrgSpongycastleCryptoParamsKeyParameter class]]) {
    WorkingKey_ = OrgSpongycastleCryptoEnginesAESLightEngine_generateWorkingKeyWithByteArray_withBoolean_(self, [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) params))) getKey], forEncryption);
    self->forEncryption_ = forEncryption;
    return;
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid parameter passed to AES init - ", [[((id<OrgSpongycastleCryptoCipherParameters>) nil_chk(params)) java_getClass] getName]));
}

- (NSString *)getAlgorithmName {
  return @"AES";
}

- (jint)getBlockSize {
  return OrgSpongycastleCryptoEnginesAESLightEngine_BLOCK_SIZE;
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  if (WorkingKey_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"AES engine not initialised");
  }
  if ((inOff + (32 / 2)) > ((IOSByteArray *) nil_chk(inArg))->size_) {
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  if ((outOff + (32 / 2)) > ((IOSByteArray *) nil_chk(outArg))->size_) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  if (forEncryption_) {
    OrgSpongycastleCryptoEnginesAESLightEngine_unpackBlockWithByteArray_withInt_(self, inArg, inOff);
    OrgSpongycastleCryptoEnginesAESLightEngine_encryptBlockWithIntArray2_(self, WorkingKey_);
    OrgSpongycastleCryptoEnginesAESLightEngine_packBlockWithByteArray_withInt_(self, outArg, outOff);
  }
  else {
    OrgSpongycastleCryptoEnginesAESLightEngine_unpackBlockWithByteArray_withInt_(self, inArg, inOff);
    OrgSpongycastleCryptoEnginesAESLightEngine_decryptBlockWithIntArray2_(self, WorkingKey_);
    OrgSpongycastleCryptoEnginesAESLightEngine_packBlockWithByteArray_withInt_(self, outArg, outOff);
  }
  return OrgSpongycastleCryptoEnginesAESLightEngine_BLOCK_SIZE;
}

- (void)reset {
}

- (void)unpackBlockWithByteArray:(IOSByteArray *)bytes
                         withInt:(jint)off {
  OrgSpongycastleCryptoEnginesAESLightEngine_unpackBlockWithByteArray_withInt_(self, bytes, off);
}

- (void)packBlockWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)off {
  OrgSpongycastleCryptoEnginesAESLightEngine_packBlockWithByteArray_withInt_(self, bytes, off);
}

- (void)encryptBlockWithIntArray2:(IOSObjectArray *)KW {
  OrgSpongycastleCryptoEnginesAESLightEngine_encryptBlockWithIntArray2_(self, KW);
}

- (void)decryptBlockWithIntArray2:(IOSObjectArray *)KW {
  OrgSpongycastleCryptoEnginesAESLightEngine_decryptBlockWithIntArray2_(self, KW);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 5, 3, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 6, 3, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 7, 3, -1, -1, -1, -1 },
    { NULL, "[[I", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(shiftWithInt:withInt:);
  methods[1].selector = @selector(FFmulXWithInt:);
  methods[2].selector = @selector(FFmulX2WithInt:);
  methods[3].selector = @selector(mcolWithInt:);
  methods[4].selector = @selector(inv_mcolWithInt:);
  methods[5].selector = @selector(subWordWithInt:);
  methods[6].selector = @selector(generateWorkingKeyWithByteArray:withBoolean:);
  methods[7].selector = @selector(init);
  methods[8].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[9].selector = @selector(getAlgorithmName);
  methods[10].selector = @selector(getBlockSize);
  methods[11].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[12].selector = @selector(reset);
  methods[13].selector = @selector(unpackBlockWithByteArray:withInt:);
  methods[14].selector = @selector(packBlockWithByteArray:withInt:);
  methods[15].selector = @selector(encryptBlockWithIntArray2:);
  methods[16].selector = @selector(decryptBlockWithIntArray2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "S", "[B", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "Si", "[B", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "rcon", "[I", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "m1", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESLightEngine_m1, 0x1a, -1, -1, -1, -1 },
    { "m2", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESLightEngine_m2, 0x1a, -1, -1, -1, -1 },
    { "m3", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESLightEngine_m3, 0x1a, -1, -1, -1, -1 },
    { "m4", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESLightEngine_m4, 0x1a, -1, -1, -1, -1 },
    { "m5", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESLightEngine_m5, 0x1a, -1, -1, -1, -1 },
    { "ROUNDS_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "WorkingKey_", "[[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "C0_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "C1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "C2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "C3_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "forEncryption_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESLightEngine_BLOCK_SIZE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "shift", "II", "FFmulX", "I", "FFmulX2", "mcol", "inv_mcol", "subWord", "generateWorkingKey", "[BZ", "init", "ZLOrgSpongycastleCryptoCipherParameters;", "processBlock", "[BI[BI", "unpackBlock", "[BI", "packBlock", "encryptBlock", "[[I", "decryptBlock", &OrgSpongycastleCryptoEnginesAESLightEngine_S, &OrgSpongycastleCryptoEnginesAESLightEngine_Si, &OrgSpongycastleCryptoEnginesAESLightEngine_rcon };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesAESLightEngine = { "AESLightEngine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 17, 16, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesAESLightEngine;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoEnginesAESLightEngine class]) {
    OrgSpongycastleCryptoEnginesAESLightEngine_S = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) 99, (jbyte) 124, (jbyte) 119, (jbyte) 123, (jbyte) 242, (jbyte) 107, (jbyte) 111, (jbyte) 197, (jbyte) 48, (jbyte) 1, (jbyte) 103, (jbyte) 43, (jbyte) 254, (jbyte) 215, (jbyte) 171, (jbyte) 118, (jbyte) 202, (jbyte) 130, (jbyte) 201, (jbyte) 125, (jbyte) 250, (jbyte) 89, (jbyte) 71, (jbyte) 240, (jbyte) 173, (jbyte) 212, (jbyte) 162, (jbyte) 175, (jbyte) 156, (jbyte) 164, (jbyte) 114, (jbyte) 192, (jbyte) 183, (jbyte) 253, (jbyte) 147, (jbyte) 38, (jbyte) 54, (jbyte) 63, (jbyte) 247, (jbyte) 204, (jbyte) 52, (jbyte) 165, (jbyte) 229, (jbyte) 241, (jbyte) 113, (jbyte) 216, (jbyte) 49, (jbyte) 21, (jbyte) 4, (jbyte) 199, (jbyte) 35, (jbyte) 195, (jbyte) 24, (jbyte) 150, (jbyte) 5, (jbyte) 154, (jbyte) 7, (jbyte) 18, (jbyte) 128, (jbyte) 226, (jbyte) 235, (jbyte) 39, (jbyte) 178, (jbyte) 117, (jbyte) 9, (jbyte) 131, (jbyte) 44, (jbyte) 26, (jbyte) 27, (jbyte) 110, (jbyte) 90, (jbyte) 160, (jbyte) 82, (jbyte) 59, (jbyte) 214, (jbyte) 179, (jbyte) 41, (jbyte) 227, (jbyte) 47, (jbyte) 132, (jbyte) 83, (jbyte) 209, (jbyte) 0, (jbyte) 237, (jbyte) 32, (jbyte) 252, (jbyte) 177, (jbyte) 91, (jbyte) 106, (jbyte) 203, (jbyte) 190, (jbyte) 57, (jbyte) 74, (jbyte) 76, (jbyte) 88, (jbyte) 207, (jbyte) 208, (jbyte) 239, (jbyte) 170, (jbyte) 251, (jbyte) 67, (jbyte) 77, (jbyte) 51, (jbyte) 133, (jbyte) 69, (jbyte) 249, (jbyte) 2, (jbyte) 127, (jbyte) 80, (jbyte) 60, (jbyte) 159, (jbyte) 168, (jbyte) 81, (jbyte) 163, (jbyte) 64, (jbyte) 143, (jbyte) 146, (jbyte) 157, (jbyte) 56, (jbyte) 245, (jbyte) 188, (jbyte) 182, (jbyte) 218, (jbyte) 33, (jbyte) 16, (jbyte) 255, (jbyte) 243, (jbyte) 210, (jbyte) 205, (jbyte) 12, (jbyte) 19, (jbyte) 236, (jbyte) 95, (jbyte) 151, (jbyte) 68, (jbyte) 23, (jbyte) 196, (jbyte) 167, (jbyte) 126, (jbyte) 61, (jbyte) 100, (jbyte) 93, (jbyte) 25, (jbyte) 115, (jbyte) 96, (jbyte) 129, (jbyte) 79, (jbyte) 220, (jbyte) 34, (jbyte) 42, (jbyte) 144, (jbyte) 136, (jbyte) 70, (jbyte) 238, (jbyte) 184, (jbyte) 20, (jbyte) 222, (jbyte) 94, (jbyte) 11, (jbyte) 219, (jbyte) 224, (jbyte) 50, (jbyte) 58, (jbyte) 10, (jbyte) 73, (jbyte) 6, (jbyte) 36, (jbyte) 92, (jbyte) 194, (jbyte) 211, (jbyte) 172, (jbyte) 98, (jbyte) 145, (jbyte) 149, (jbyte) 228, (jbyte) 121, (jbyte) 231, (jbyte) 200, (jbyte) 55, (jbyte) 109, (jbyte) 141, (jbyte) 213, (jbyte) 78, (jbyte) 169, (jbyte) 108, (jbyte) 86, (jbyte) 244, (jbyte) 234, (jbyte) 101, (jbyte) 122, (jbyte) 174, (jbyte) 8, (jbyte) 186, (jbyte) 120, (jbyte) 37, (jbyte) 46, (jbyte) 28, (jbyte) 166, (jbyte) 180, (jbyte) 198, (jbyte) 232, (jbyte) 221, (jbyte) 116, (jbyte) 31, (jbyte) 75, (jbyte) 189, (jbyte) 139, (jbyte) 138, (jbyte) 112, (jbyte) 62, (jbyte) 181, (jbyte) 102, (jbyte) 72, (jbyte) 3, (jbyte) 246, (jbyte) 14, (jbyte) 97, (jbyte) 53, (jbyte) 87, (jbyte) 185, (jbyte) 134, (jbyte) 193, (jbyte) 29, (jbyte) 158, (jbyte) 225, (jbyte) 248, (jbyte) 152, (jbyte) 17, (jbyte) 105, (jbyte) 217, (jbyte) 142, (jbyte) 148, (jbyte) 155, (jbyte) 30, (jbyte) 135, (jbyte) 233, (jbyte) 206, (jbyte) 85, (jbyte) 40, (jbyte) 223, (jbyte) 140, (jbyte) 161, (jbyte) 137, (jbyte) 13, (jbyte) 191, (jbyte) 230, (jbyte) 66, (jbyte) 104, (jbyte) 65, (jbyte) 153, (jbyte) 45, (jbyte) 15, (jbyte) 176, (jbyte) 84, (jbyte) 187, (jbyte) 22 } count:256];
    OrgSpongycastleCryptoEnginesAESLightEngine_Si = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) 82, (jbyte) 9, (jbyte) 106, (jbyte) 213, (jbyte) 48, (jbyte) 54, (jbyte) 165, (jbyte) 56, (jbyte) 191, (jbyte) 64, (jbyte) 163, (jbyte) 158, (jbyte) 129, (jbyte) 243, (jbyte) 215, (jbyte) 251, (jbyte) 124, (jbyte) 227, (jbyte) 57, (jbyte) 130, (jbyte) 155, (jbyte) 47, (jbyte) 255, (jbyte) 135, (jbyte) 52, (jbyte) 142, (jbyte) 67, (jbyte) 68, (jbyte) 196, (jbyte) 222, (jbyte) 233, (jbyte) 203, (jbyte) 84, (jbyte) 123, (jbyte) 148, (jbyte) 50, (jbyte) 166, (jbyte) 194, (jbyte) 35, (jbyte) 61, (jbyte) 238, (jbyte) 76, (jbyte) 149, (jbyte) 11, (jbyte) 66, (jbyte) 250, (jbyte) 195, (jbyte) 78, (jbyte) 8, (jbyte) 46, (jbyte) 161, (jbyte) 102, (jbyte) 40, (jbyte) 217, (jbyte) 36, (jbyte) 178, (jbyte) 118, (jbyte) 91, (jbyte) 162, (jbyte) 73, (jbyte) 109, (jbyte) 139, (jbyte) 209, (jbyte) 37, (jbyte) 114, (jbyte) 248, (jbyte) 246, (jbyte) 100, (jbyte) 134, (jbyte) 104, (jbyte) 152, (jbyte) 22, (jbyte) 212, (jbyte) 164, (jbyte) 92, (jbyte) 204, (jbyte) 93, (jbyte) 101, (jbyte) 182, (jbyte) 146, (jbyte) 108, (jbyte) 112, (jbyte) 72, (jbyte) 80, (jbyte) 253, (jbyte) 237, (jbyte) 185, (jbyte) 218, (jbyte) 94, (jbyte) 21, (jbyte) 70, (jbyte) 87, (jbyte) 167, (jbyte) 141, (jbyte) 157, (jbyte) 132, (jbyte) 144, (jbyte) 216, (jbyte) 171, (jbyte) 0, (jbyte) 140, (jbyte) 188, (jbyte) 211, (jbyte) 10, (jbyte) 247, (jbyte) 228, (jbyte) 88, (jbyte) 5, (jbyte) 184, (jbyte) 179, (jbyte) 69, (jbyte) 6, (jbyte) 208, (jbyte) 44, (jbyte) 30, (jbyte) 143, (jbyte) 202, (jbyte) 63, (jbyte) 15, (jbyte) 2, (jbyte) 193, (jbyte) 175, (jbyte) 189, (jbyte) 3, (jbyte) 1, (jbyte) 19, (jbyte) 138, (jbyte) 107, (jbyte) 58, (jbyte) 145, (jbyte) 17, (jbyte) 65, (jbyte) 79, (jbyte) 103, (jbyte) 220, (jbyte) 234, (jbyte) 151, (jbyte) 242, (jbyte) 207, (jbyte) 206, (jbyte) 240, (jbyte) 180, (jbyte) 230, (jbyte) 115, (jbyte) 150, (jbyte) 172, (jbyte) 116, (jbyte) 34, (jbyte) 231, (jbyte) 173, (jbyte) 53, (jbyte) 133, (jbyte) 226, (jbyte) 249, (jbyte) 55, (jbyte) 232, (jbyte) 28, (jbyte) 117, (jbyte) 223, (jbyte) 110, (jbyte) 71, (jbyte) 241, (jbyte) 26, (jbyte) 113, (jbyte) 29, (jbyte) 41, (jbyte) 197, (jbyte) 137, (jbyte) 111, (jbyte) 183, (jbyte) 98, (jbyte) 14, (jbyte) 170, (jbyte) 24, (jbyte) 190, (jbyte) 27, (jbyte) 252, (jbyte) 86, (jbyte) 62, (jbyte) 75, (jbyte) 198, (jbyte) 210, (jbyte) 121, (jbyte) 32, (jbyte) 154, (jbyte) 219, (jbyte) 192, (jbyte) 254, (jbyte) 120, (jbyte) 205, (jbyte) 90, (jbyte) 244, (jbyte) 31, (jbyte) 221, (jbyte) 168, (jbyte) 51, (jbyte) 136, (jbyte) 7, (jbyte) 199, (jbyte) 49, (jbyte) 177, (jbyte) 18, (jbyte) 16, (jbyte) 89, (jbyte) 39, (jbyte) 128, (jbyte) 236, (jbyte) 95, (jbyte) 96, (jbyte) 81, (jbyte) 127, (jbyte) 169, (jbyte) 25, (jbyte) 181, (jbyte) 74, (jbyte) 13, (jbyte) 45, (jbyte) 229, (jbyte) 122, (jbyte) 159, (jbyte) 147, (jbyte) 201, (jbyte) 156, (jbyte) 239, (jbyte) 160, (jbyte) 224, (jbyte) 59, (jbyte) 77, (jbyte) 174, (jbyte) 42, (jbyte) 245, (jbyte) 176, (jbyte) 200, (jbyte) 235, (jbyte) 187, (jbyte) 60, (jbyte) 131, (jbyte) 83, (jbyte) 153, (jbyte) 97, (jbyte) 23, (jbyte) 43, (jbyte) 4, (jbyte) 126, (jbyte) 186, (jbyte) 119, (jbyte) 214, (jbyte) 38, (jbyte) 225, (jbyte) 105, (jbyte) 20, (jbyte) 99, (jbyte) 85, (jbyte) 33, (jbyte) 12, (jbyte) 125 } count:256];
    OrgSpongycastleCryptoEnginesAESLightEngine_rcon = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x01, (jint) 0x02, (jint) 0x04, (jint) 0x08, (jint) 0x10, (jint) 0x20, (jint) 0x40, (jint) 0x80, (jint) 0x1b, (jint) 0x36, (jint) 0x6c, (jint) 0xd8, (jint) 0xab, (jint) 0x4d, (jint) 0x9a, (jint) 0x2f, (jint) 0x5e, (jint) 0xbc, (jint) 0x63, (jint) 0xc6, (jint) 0x97, (jint) 0x35, (jint) 0x6a, (jint) 0xd4, (jint) 0xb3, (jint) 0x7d, (jint) 0xfa, (jint) 0xef, (jint) 0xc5, (jint) 0x91 } count:30];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoEnginesAESLightEngine)
  }
}

@end

jint OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(jint r, jint shift) {
  OrgSpongycastleCryptoEnginesAESLightEngine_initialize();
  return (JreURShift32(r, shift)) | (JreLShift32(r, -shift));
}

jint OrgSpongycastleCryptoEnginesAESLightEngine_FFmulXWithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESLightEngine_initialize();
  return ((JreLShift32((x & OrgSpongycastleCryptoEnginesAESLightEngine_m2), 1)) ^ ((JreURShift32((x & OrgSpongycastleCryptoEnginesAESLightEngine_m1), 7)) * OrgSpongycastleCryptoEnginesAESLightEngine_m3));
}

jint OrgSpongycastleCryptoEnginesAESLightEngine_FFmulX2WithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESLightEngine_initialize();
  jint t0 = JreLShift32((x & OrgSpongycastleCryptoEnginesAESLightEngine_m5), 2);
  jint t1 = (x & OrgSpongycastleCryptoEnginesAESLightEngine_m4);
  t1 ^= (JreURShift32(t1, 1));
  return t0 ^ (JreURShift32(t1, 2)) ^ (JreURShift32(t1, 5));
}

jint OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESLightEngine_initialize();
  jint t0;
  jint t1;
  t0 = OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(x, 8);
  t1 = x ^ t0;
  return OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t1, 16) ^ t0 ^ OrgSpongycastleCryptoEnginesAESLightEngine_FFmulXWithInt_(t1);
}

jint OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESLightEngine_initialize();
  jint t0;
  jint t1;
  t0 = x;
  t1 = t0 ^ OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t0, 8);
  t0 ^= OrgSpongycastleCryptoEnginesAESLightEngine_FFmulXWithInt_(t1);
  t1 ^= OrgSpongycastleCryptoEnginesAESLightEngine_FFmulX2WithInt_(t0);
  t0 ^= t1 ^ OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t1, 16);
  return t0;
}

jint OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESLightEngine_initialize();
  return ((IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESLightEngine_S), x & 255) & 255) | (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(x, 8)) & 255) & 255), 8)) | (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(x, 16)) & 255) & 255), 16)) | (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(x, 24)) & 255), 24)));
}

IOSObjectArray *OrgSpongycastleCryptoEnginesAESLightEngine_generateWorkingKeyWithByteArray_withBoolean_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSByteArray *key, jboolean forEncryption) {
  jint keyLen = ((IOSByteArray *) nil_chk(key))->size_;
  if (keyLen < 16 || keyLen > 32 || (keyLen & 7) != 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Key length not 128/192/256 bits.");
  }
  jint KC = JreRShift32(keyLen, 2);
  self->ROUNDS_ = KC + 6;
  IOSObjectArray *W = [IOSIntArray newArrayWithDimensions:2 lengths:(jint[]){ self->ROUNDS_ + 1, 4 }];
  switch (KC) {
    case 4:
    {
      jint t0 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 0);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 0) = t0;
      jint t1 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 4);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 1) = t1;
      jint t2 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 8);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 2) = t2;
      jint t3 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 12);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 3) = t3;
      for (jint i = 1; i <= 10; ++i) {
        jint u = OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t3, 8)) ^ IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESLightEngine_rcon), i - 1);
        t0 ^= u;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 0) = t0;
        t1 ^= t0;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 1) = t1;
        t2 ^= t1;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 2) = t2;
        t3 ^= t2;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 3) = t3;
      }
      break;
    }
    case 6:
    {
      jint t0 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 0);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 0) = t0;
      jint t1 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 4);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 1) = t1;
      jint t2 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 8);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 2) = t2;
      jint t3 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 12);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 3) = t3;
      jint t4 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 16);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 0) = t4;
      jint t5 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 20);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 1) = t5;
      jint rcon = 1;
      jint u = OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t5, 8)) ^ rcon;
      JreLShiftAssignInt(&rcon, 1);
      t0 ^= u;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 2) = t0;
      t1 ^= t0;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 3) = t1;
      t2 ^= t1;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 2)), 0) = t2;
      t3 ^= t2;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 2)), 1) = t3;
      t4 ^= t3;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 2)), 2) = t4;
      t5 ^= t4;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 2)), 3) = t5;
      for (jint i = 3; i < 12; i += 3) {
        u = OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t5, 8)) ^ rcon;
        JreLShiftAssignInt(&rcon, 1);
        t0 ^= u;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 0) = t0;
        t1 ^= t0;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 1) = t1;
        t2 ^= t1;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 2) = t2;
        t3 ^= t2;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 3) = t3;
        t4 ^= t3;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 0) = t4;
        t5 ^= t4;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 1) = t5;
        u = OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t5, 8)) ^ rcon;
        JreLShiftAssignInt(&rcon, 1);
        t0 ^= u;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 2) = t0;
        t1 ^= t0;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 3) = t1;
        t2 ^= t1;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 2)), 0) = t2;
        t3 ^= t2;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 2)), 1) = t3;
        t4 ^= t3;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 2)), 2) = t4;
        t5 ^= t4;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 2)), 3) = t5;
      }
      u = OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t5, 8)) ^ rcon;
      t0 ^= u;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 12)), 0) = t0;
      t1 ^= t0;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 12)), 1) = t1;
      t2 ^= t1;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 12)), 2) = t2;
      t3 ^= t2;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 12)), 3) = t3;
      break;
    }
    case 8:
    {
      jint t0 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 0);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 0) = t0;
      jint t1 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 4);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 1) = t1;
      jint t2 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 8);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 2) = t2;
      jint t3 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 12);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 3) = t3;
      jint t4 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 16);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 0) = t4;
      jint t5 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 20);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 1) = t5;
      jint t6 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 24);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 2) = t6;
      jint t7 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 28);
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 3) = t7;
      jint u;
      jint rcon = 1;
      for (jint i = 2; i < 14; i += 2) {
        u = OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t7, 8)) ^ rcon;
        JreLShiftAssignInt(&rcon, 1);
        t0 ^= u;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 0) = t0;
        t1 ^= t0;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 1) = t1;
        t2 ^= t1;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 2) = t2;
        t3 ^= t2;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 3) = t3;
        u = OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(t3);
        t4 ^= u;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 0) = t4;
        t5 ^= t4;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 1) = t5;
        t6 ^= t5;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 2) = t6;
        t7 ^= t6;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 3) = t7;
      }
      u = OrgSpongycastleCryptoEnginesAESLightEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESLightEngine_shiftWithInt_withInt_(t7, 8)) ^ rcon;
      t0 ^= u;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 14)), 0) = t0;
      t1 ^= t0;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 14)), 1) = t1;
      t2 ^= t1;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 14)), 2) = t2;
      t3 ^= t2;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 14)), 3) = t3;
      break;
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"Should never get here");
    }
  }
  if (!forEncryption) {
    for (jint j = 1; j < self->ROUNDS_; j++) {
      for (jint i = 0; i < 4; i++) {
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, j)), i) = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(W, j)), i));
      }
    }
  }
  return W;
}

void OrgSpongycastleCryptoEnginesAESLightEngine_init(OrgSpongycastleCryptoEnginesAESLightEngine *self) {
  NSObject_init(self);
  self->WorkingKey_ = nil;
}

OrgSpongycastleCryptoEnginesAESLightEngine *new_OrgSpongycastleCryptoEnginesAESLightEngine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesAESLightEngine, init)
}

OrgSpongycastleCryptoEnginesAESLightEngine *create_OrgSpongycastleCryptoEnginesAESLightEngine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesAESLightEngine, init)
}

void OrgSpongycastleCryptoEnginesAESLightEngine_unpackBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSByteArray *bytes, jint off) {
  jint index = off;
  self->C0_ = (IOSByteArray_Get(nil_chk(bytes), index++) & (jint) 0xff);
  self->C0_ |= JreLShift32((IOSByteArray_Get(bytes, index++) & (jint) 0xff), 8);
  self->C0_ |= JreLShift32((IOSByteArray_Get(bytes, index++) & (jint) 0xff), 16);
  self->C0_ |= JreLShift32(IOSByteArray_Get(bytes, index++), 24);
  self->C1_ = (IOSByteArray_Get(bytes, index++) & (jint) 0xff);
  self->C1_ |= JreLShift32((IOSByteArray_Get(bytes, index++) & (jint) 0xff), 8);
  self->C1_ |= JreLShift32((IOSByteArray_Get(bytes, index++) & (jint) 0xff), 16);
  self->C1_ |= JreLShift32(IOSByteArray_Get(bytes, index++), 24);
  self->C2_ = (IOSByteArray_Get(bytes, index++) & (jint) 0xff);
  self->C2_ |= JreLShift32((IOSByteArray_Get(bytes, index++) & (jint) 0xff), 8);
  self->C2_ |= JreLShift32((IOSByteArray_Get(bytes, index++) & (jint) 0xff), 16);
  self->C2_ |= JreLShift32(IOSByteArray_Get(bytes, index++), 24);
  self->C3_ = (IOSByteArray_Get(bytes, index++) & (jint) 0xff);
  self->C3_ |= JreLShift32((IOSByteArray_Get(bytes, index++) & (jint) 0xff), 8);
  self->C3_ |= JreLShift32((IOSByteArray_Get(bytes, index++) & (jint) 0xff), 16);
  self->C3_ |= JreLShift32(IOSByteArray_Get(bytes, index++), 24);
}

void OrgSpongycastleCryptoEnginesAESLightEngine_packBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSByteArray *bytes, jint off) {
  jint index = off;
  *IOSByteArray_GetRef(nil_chk(bytes), index++) = (jbyte) self->C0_;
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C0_, 8));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C0_, 16));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C0_, 24));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) self->C1_;
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C1_, 8));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C1_, 16));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C1_, 24));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) self->C2_;
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C2_, 8));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C2_, 16));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C2_, 24));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) self->C3_;
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C3_, 8));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C3_, 16));
  *IOSByteArray_GetRef(bytes, index++) = (jbyte) (JreRShift32(self->C3_, 24));
}

void OrgSpongycastleCryptoEnginesAESLightEngine_encryptBlockWithIntArray2_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSObjectArray *KW) {
  jint t0 = self->C0_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(KW), 0)), 0);
  jint t1 = self->C1_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 1);
  jint t2 = self->C2_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 2);
  jint r = 1;
  jint r0;
  jint r1;
  jint r2;
  jint r3 = self->C3_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 3);
  while (r < self->ROUNDS_ - 1) {
    r0 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESLightEngine_S), t0 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t1, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t2, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
    r1 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, t1 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t2, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t0, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
    r2 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, t2 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t0, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t1, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
    r3 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r3 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t0, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t1, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t2, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r++)), 3);
    t0 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r0 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r1, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r2, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
    t1 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r1 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r2, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r0, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
    t2 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r2 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r0, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r1, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
    r3 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r3 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r0, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r1, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r2, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r++)), 3);
  }
  r0 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESLightEngine_S), t0 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t1, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t2, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
  r1 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, t1 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t2, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t0, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
  r2 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, t2 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t0, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t1, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
  r3 = OrgSpongycastleCryptoEnginesAESLightEngine_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r3 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t0, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t1, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(t2, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r++)), 3);
  self->C0_ = (IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r0 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r1, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r2, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 24)) & 255), 24)) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
  self->C1_ = (IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r1 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r2, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r0, 24)) & 255), 24)) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
  self->C2_ = (IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r2 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r3, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r0, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r1, 24)) & 255), 24)) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
  self->C3_ = (IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, r3 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r0, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r1, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_S, (JreRShift32(r2, 24)) & 255), 24)) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 3);
}

void OrgSpongycastleCryptoEnginesAESLightEngine_decryptBlockWithIntArray2_(OrgSpongycastleCryptoEnginesAESLightEngine *self, IOSObjectArray *KW) {
  jint t0 = self->C0_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(KW), self->ROUNDS_)), 0);
  jint t1 = self->C1_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, self->ROUNDS_)), 1);
  jint t2 = self->C2_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, self->ROUNDS_)), 2);
  jint r = self->ROUNDS_ - 1;
  jint r0;
  jint r1;
  jint r2;
  jint r3 = self->C3_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, self->ROUNDS_)), 3);
  while (r > 1) {
    r0 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESLightEngine_Si), t0 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t2, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t1, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
    r1 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, t1 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t0, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t2, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
    r2 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, t2 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t1, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t0, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
    r3 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r3 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t2, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t1, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t0, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r--)), 3);
    t0 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r0 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r2, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r1, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
    t1 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r1 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r0, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r2, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
    t2 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r2 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r1, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r0, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
    r3 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r3 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r2, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r1, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r0, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r--)), 3);
  }
  r0 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESLightEngine_Si), t0 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t2, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t1, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
  r1 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, t1 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t0, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t2, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
  r2 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, t2 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t1, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t0, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
  r3 = OrgSpongycastleCryptoEnginesAESLightEngine_inv_mcolWithInt_((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r3 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t2, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t1, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(t0, 24)) & 255), 24))) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 3);
  self->C0_ = (IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r0 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r2, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r1, 24)) & 255), 24)) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 0);
  self->C1_ = (IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r1 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r0, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r2, 24)) & 255), 24)) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 1);
  self->C2_ = (IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r2 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r1, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r0, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r3, 24)) & 255), 24)) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 2);
  self->C3_ = (IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, r3 & 255) & 255) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r2, 8)) & 255) & 255), 8)) ^ (JreLShift32((IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r1, 16)) & 255) & 255), 16)) ^ (JreLShift32(IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESLightEngine_Si, (JreRShift32(r0, 24)) & 255), 24)) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 3);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesAESLightEngine)
