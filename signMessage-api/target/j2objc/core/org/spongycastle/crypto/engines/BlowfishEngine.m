//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/BlowfishEngine.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/DataLengthException.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/engines/BlowfishEngine.h"
#include "org/spongycastle/crypto/params/KeyParameter.h"

@interface OrgSpongycastleCryptoEnginesBlowfishEngine () {
 @public
  IOSIntArray *S0_;
  IOSIntArray *S1_;
  IOSIntArray *S2_;
  IOSIntArray *S3_;
  IOSIntArray *P_;
  jboolean encrypting_;
  IOSByteArray *workingKey_;
}

- (jint)FWithInt:(jint)x;

- (void)processTableWithInt:(jint)xl
                    withInt:(jint)xr
               withIntArray:(IOSIntArray *)table;

- (void)setKeyWithByteArray:(IOSByteArray *)key;

- (void)encryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex;

- (void)decryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex;

- (jint)BytesTo32bitsWithByteArray:(IOSByteArray *)b
                           withInt:(jint)i;

- (void)Bits32ToBytesWithInt:(jint)inArg
               withByteArray:(IOSByteArray *)b
                     withInt:(jint)offset;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesBlowfishEngine, S0_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesBlowfishEngine, S1_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesBlowfishEngine, S2_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesBlowfishEngine, S3_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesBlowfishEngine, P_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesBlowfishEngine, workingKey_, IOSByteArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_get_KP(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_KP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesBlowfishEngine, KP, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_get_KS0(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_KS0;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesBlowfishEngine, KS0, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_get_KS1(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_KS1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesBlowfishEngine, KS1, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_get_KS2(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_KS2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesBlowfishEngine, KS2, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_get_KS3(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesBlowfishEngine_KS3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesBlowfishEngine, KS3, IOSIntArray *)

inline jint OrgSpongycastleCryptoEnginesBlowfishEngine_get_ROUNDS(void);
#define OrgSpongycastleCryptoEnginesBlowfishEngine_ROUNDS 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesBlowfishEngine, ROUNDS, jint)

inline jint OrgSpongycastleCryptoEnginesBlowfishEngine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesBlowfishEngine_BLOCK_SIZE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesBlowfishEngine, BLOCK_SIZE, jint)

inline jint OrgSpongycastleCryptoEnginesBlowfishEngine_get_SBOX_SK(void);
#define OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK 256
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesBlowfishEngine, SBOX_SK, jint)

inline jint OrgSpongycastleCryptoEnginesBlowfishEngine_get_P_SZ(void);
#define OrgSpongycastleCryptoEnginesBlowfishEngine_P_SZ 18
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesBlowfishEngine, P_SZ, jint)

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, jint x);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesBlowfishEngine_processTableWithInt_withInt_withIntArray_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, jint xl, jint xr, IOSIntArray *table);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesBlowfishEngine_setKeyWithByteArray_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, IOSByteArray *key);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesBlowfishEngine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, IOSByteArray *src, jint srcIndex, IOSByteArray *dst, jint dstIndex);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesBlowfishEngine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, IOSByteArray *src, jint srcIndex, IOSByteArray *dst, jint dstIndex);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesBlowfishEngine_BytesTo32bitsWithByteArray_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, IOSByteArray *b, jint i);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesBlowfishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, jint inArg, IOSByteArray *b, jint offset);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoEnginesBlowfishEngine)

@implementation OrgSpongycastleCryptoEnginesBlowfishEngine

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEnginesBlowfishEngine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithBoolean:(jboolean)encrypting
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if ([params isKindOfClass:[OrgSpongycastleCryptoParamsKeyParameter class]]) {
    self->encrypting_ = encrypting;
    self->workingKey_ = [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) params))) getKey];
    OrgSpongycastleCryptoEnginesBlowfishEngine_setKeyWithByteArray_(self, self->workingKey_);
    return;
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid parameter passed to Blowfish init - ", [[((id<OrgSpongycastleCryptoCipherParameters>) nil_chk(params)) java_getClass] getName]));
}

- (NSString *)getAlgorithmName {
  return @"Blowfish";
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  if (workingKey_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Blowfish not initialised");
  }
  if ((inOff + OrgSpongycastleCryptoEnginesBlowfishEngine_BLOCK_SIZE) > ((IOSByteArray *) nil_chk(inArg))->size_) {
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  if ((outOff + OrgSpongycastleCryptoEnginesBlowfishEngine_BLOCK_SIZE) > ((IOSByteArray *) nil_chk(outArg))->size_) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  if (encrypting_) {
    OrgSpongycastleCryptoEnginesBlowfishEngine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
  }
  else {
    OrgSpongycastleCryptoEnginesBlowfishEngine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
  }
  return OrgSpongycastleCryptoEnginesBlowfishEngine_BLOCK_SIZE;
}

- (void)reset {
}

- (jint)getBlockSize {
  return OrgSpongycastleCryptoEnginesBlowfishEngine_BLOCK_SIZE;
}

- (jint)FWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(self, x);
}

- (void)processTableWithInt:(jint)xl
                    withInt:(jint)xr
               withIntArray:(IOSIntArray *)table {
  OrgSpongycastleCryptoEnginesBlowfishEngine_processTableWithInt_withInt_withIntArray_(self, xl, xr, table);
}

- (void)setKeyWithByteArray:(IOSByteArray *)key {
  OrgSpongycastleCryptoEnginesBlowfishEngine_setKeyWithByteArray_(self, key);
}

- (void)encryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex {
  OrgSpongycastleCryptoEnginesBlowfishEngine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(self, src, srcIndex, dst, dstIndex);
}

- (void)decryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex {
  OrgSpongycastleCryptoEnginesBlowfishEngine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(self, src, srcIndex, dst, dstIndex);
}

- (jint)BytesTo32bitsWithByteArray:(IOSByteArray *)b
                           withInt:(jint)i {
  return OrgSpongycastleCryptoEnginesBlowfishEngine_BytesTo32bitsWithByteArray_withInt_(self, b, i);
}

- (void)Bits32ToBytesWithInt:(jint)inArg
               withByteArray:(IOSByteArray *)b
                     withInt:(jint)offset {
  OrgSpongycastleCryptoEnginesBlowfishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, inArg, b, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(getAlgorithmName);
  methods[3].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[4].selector = @selector(reset);
  methods[5].selector = @selector(getBlockSize);
  methods[6].selector = @selector(FWithInt:);
  methods[7].selector = @selector(processTableWithInt:withInt:withIntArray:);
  methods[8].selector = @selector(setKeyWithByteArray:);
  methods[9].selector = @selector(encryptBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[10].selector = @selector(decryptBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[11].selector = @selector(BytesTo32bitsWithByteArray:withInt:);
  methods[12].selector = @selector(Bits32ToBytesWithInt:withByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "KP", "[I", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "KS0", "[I", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "KS1", "[I", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "KS2", "[I", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "KS3", "[I", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "ROUNDS", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesBlowfishEngine_ROUNDS, 0x1a, -1, -1, -1, -1 },
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesBlowfishEngine_BLOCK_SIZE, 0x1a, -1, -1, -1, -1 },
    { "SBOX_SK", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK, 0x1a, -1, -1, -1, -1 },
    { "P_SZ", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesBlowfishEngine_P_SZ, 0x1a, -1, -1, -1, -1 },
    { "S0_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "S1_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "S2_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "S3_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "P_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "encrypting_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "workingKey_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "ZLOrgSpongycastleCryptoCipherParameters;", "processBlock", "[BI[BI", "F", "I", "processTable", "II[I", "setKey", "[B", "encryptBlock", "decryptBlock", "BytesTo32bits", "[BI", "Bits32ToBytes", "I[BI", &OrgSpongycastleCryptoEnginesBlowfishEngine_KP, &OrgSpongycastleCryptoEnginesBlowfishEngine_KS0, &OrgSpongycastleCryptoEnginesBlowfishEngine_KS1, &OrgSpongycastleCryptoEnginesBlowfishEngine_KS2, &OrgSpongycastleCryptoEnginesBlowfishEngine_KS3 };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesBlowfishEngine = { "BlowfishEngine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x11, 13, 16, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesBlowfishEngine;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoEnginesBlowfishEngine class]) {
    OrgSpongycastleCryptoEnginesBlowfishEngine_KP = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x243F6A88, (jint) 0x85A308D3, (jint) 0x13198A2E, (jint) 0x03707344, (jint) 0xA4093822, (jint) 0x299F31D0, (jint) 0x082EFA98, (jint) 0xEC4E6C89, (jint) 0x452821E6, (jint) 0x38D01377, (jint) 0xBE5466CF, (jint) 0x34E90C6C, (jint) 0xC0AC29B7, (jint) 0xC97C50DD, (jint) 0x3F84D5B5, (jint) 0xB5470917, (jint) 0x9216D5D9, (jint) 0x8979FB1B } count:18];
    OrgSpongycastleCryptoEnginesBlowfishEngine_KS0 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0xD1310BA6, (jint) 0x98DFB5AC, (jint) 0x2FFD72DB, (jint) 0xD01ADFB7, (jint) 0xB8E1AFED, (jint) 0x6A267E96, (jint) 0xBA7C9045, (jint) 0xF12C7F99, (jint) 0x24A19947, (jint) 0xB3916CF7, (jint) 0x0801F2E2, (jint) 0x858EFC16, (jint) 0x636920D8, (jint) 0x71574E69, (jint) 0xA458FEA3, (jint) 0xF4933D7E, (jint) 0x0D95748F, (jint) 0x728EB658, (jint) 0x718BCD58, (jint) 0x82154AEE, (jint) 0x7B54A41D, (jint) 0xC25A59B5, (jint) 0x9C30D539, (jint) 0x2AF26013, (jint) 0xC5D1B023, (jint) 0x286085F0, (jint) 0xCA417918, (jint) 0xB8DB38EF, (jint) 0x8E79DCB0, (jint) 0x603A180E, (jint) 0x6C9E0E8B, (jint) 0xB01E8A3E, (jint) 0xD71577C1, (jint) 0xBD314B27, (jint) 0x78AF2FDA, (jint) 0x55605C60, (jint) 0xE65525F3, (jint) 0xAA55AB94, (jint) 0x57489862, (jint) 0x63E81440, (jint) 0x55CA396A, (jint) 0x2AAB10B6, (jint) 0xB4CC5C34, (jint) 0x1141E8CE, (jint) 0xA15486AF, (jint) 0x7C72E993, (jint) 0xB3EE1411, (jint) 0x636FBC2A, (jint) 0x2BA9C55D, (jint) 0x741831F6, (jint) 0xCE5C3E16, (jint) 0x9B87931E, (jint) 0xAFD6BA33, (jint) 0x6C24CF5C, (jint) 0x7A325381, (jint) 0x28958677, (jint) 0x3B8F4898, (jint) 0x6B4BB9AF, (jint) 0xC4BFE81B, (jint) 0x66282193, (jint) 0x61D809CC, (jint) 0xFB21A991, (jint) 0x487CAC60, (jint) 0x5DEC8032, (jint) 0xEF845D5D, (jint) 0xE98575B1, (jint) 0xDC262302, (jint) 0xEB651B88, (jint) 0x23893E81, (jint) 0xD396ACC5, (jint) 0x0F6D6FF3, (jint) 0x83F44239, (jint) 0x2E0B4482, (jint) 0xA4842004, (jint) 0x69C8F04A, (jint) 0x9E1F9B5E, (jint) 0x21C66842, (jint) 0xF6E96C9A, (jint) 0x670C9C61, (jint) 0xABD388F0, (jint) 0x6A51A0D2, (jint) 0xD8542F68, (jint) 0x960FA728, (jint) 0xAB5133A3, (jint) 0x6EEF0B6C, (jint) 0x137A3BE4, (jint) 0xBA3BF050, (jint) 0x7EFB2A98, (jint) 0xA1F1651D, (jint) 0x39AF0176, (jint) 0x66CA593E, (jint) 0x82430E88, (jint) 0x8CEE8619, (jint) 0x456F9FB4, (jint) 0x7D84A5C3, (jint) 0x3B8B5EBE, (jint) 0xE06F75D8, (jint) 0x85C12073, (jint) 0x401A449F, (jint) 0x56C16AA6, (jint) 0x4ED3AA62, (jint) 0x363F7706, (jint) 0x1BFEDF72, (jint) 0x429B023D, (jint) 0x37D0D724, (jint) 0xD00A1248, (jint) 0xDB0FEAD3, (jint) 0x49F1C09B, (jint) 0x075372C9, (jint) 0x80991B7B, (jint) 0x25D479D8, (jint) 0xF6E8DEF7, (jint) 0xE3FE501A, (jint) 0xB6794C3B, (jint) 0x976CE0BD, (jint) 0x04C006BA, (jint) 0xC1A94FB6, (jint) 0x409F60C4, (jint) 0x5E5C9EC2, (jint) 0x196A2463, (jint) 0x68FB6FAF, (jint) 0x3E6C53B5, (jint) 0x1339B2EB, (jint) 0x3B52EC6F, (jint) 0x6DFC511F, (jint) 0x9B30952C, (jint) 0xCC814544, (jint) 0xAF5EBD09, (jint) 0xBEE3D004, (jint) 0xDE334AFD, (jint) 0x660F2807, (jint) 0x192E4BB3, (jint) 0xC0CBA857, (jint) 0x45C8740F, (jint) 0xD20B5F39, (jint) 0xB9D3FBDB, (jint) 0x5579C0BD, (jint) 0x1A60320A, (jint) 0xD6A100C6, (jint) 0x402C7279, (jint) 0x679F25FE, (jint) 0xFB1FA3CC, (jint) 0x8EA5E9F8, (jint) 0xDB3222F8, (jint) 0x3C7516DF, (jint) 0xFD616B15, (jint) 0x2F501EC8, (jint) 0xAD0552AB, (jint) 0x323DB5FA, (jint) 0xFD238760, (jint) 0x53317B48, (jint) 0x3E00DF82, (jint) 0x9E5C57BB, (jint) 0xCA6F8CA0, (jint) 0x1A87562E, (jint) 0xDF1769DB, (jint) 0xD542A8F6, (jint) 0x287EFFC3, (jint) 0xAC6732C6, (jint) 0x8C4F5573, (jint) 0x695B27B0, (jint) 0xBBCA58C8, (jint) 0xE1FFA35D, (jint) 0xB8F011A0, (jint) 0x10FA3D98, (jint) 0xFD2183B8, (jint) 0x4AFCB56C, (jint) 0x2DD1D35B, (jint) 0x9A53E479, (jint) 0xB6F84565, (jint) 0xD28E49BC, (jint) 0x4BFB9790, (jint) 0xE1DDF2DA, (jint) 0xA4CB7E33, (jint) 0x62FB1341, (jint) 0xCEE4C6E8, (jint) 0xEF20CADA, (jint) 0x36774C01, (jint) 0xD07E9EFE, (jint) 0x2BF11FB4, (jint) 0x95DBDA4D, (jint) 0xAE909198, (jint) 0xEAAD8E71, (jint) 0x6B93D5A0, (jint) 0xD08ED1D0, (jint) 0xAFC725E0, (jint) 0x8E3C5B2F, (jint) 0x8E7594B7, (jint) 0x8FF6E2FB, (jint) 0xF2122B64, (jint) 0x8888B812, (jint) 0x900DF01C, (jint) 0x4FAD5EA0, (jint) 0x688FC31C, (jint) 0xD1CFF191, (jint) 0xB3A8C1AD, (jint) 0x2F2F2218, (jint) 0xBE0E1777, (jint) 0xEA752DFE, (jint) 0x8B021FA1, (jint) 0xE5A0CC0F, (jint) 0xB56F74E8, (jint) 0x18ACF3D6, (jint) 0xCE89E299, (jint) 0xB4A84FE0, (jint) 0xFD13E0B7, (jint) 0x7CC43B81, (jint) 0xD2ADA8D9, (jint) 0x165FA266, (jint) 0x80957705, (jint) 0x93CC7314, (jint) 0x211A1477, (jint) 0xE6AD2065, (jint) 0x77B5FA86, (jint) 0xC75442F5, (jint) 0xFB9D35CF, (jint) 0xEBCDAF0C, (jint) 0x7B3E89A0, (jint) 0xD6411BD3, (jint) 0xAE1E7E49, (jint) 0x00250E2D, (jint) 0x2071B35E, (jint) 0x226800BB, (jint) 0x57B8E0AF, (jint) 0x2464369B, (jint) 0xF009B91E, (jint) 0x5563911D, (jint) 0x59DFA6AA, (jint) 0x78C14389, (jint) 0xD95A537F, (jint) 0x207D5BA2, (jint) 0x02E5B9C5, (jint) 0x83260376, (jint) 0x6295CFA9, (jint) 0x11C81968, (jint) 0x4E734A41, (jint) 0xB3472DCA, (jint) 0x7B14A94A, (jint) 0x1B510052, (jint) 0x9A532915, (jint) 0xD60F573F, (jint) 0xBC9BC6E4, (jint) 0x2B60A476, (jint) 0x81E67400, (jint) 0x08BA6FB5, (jint) 0x571BE91F, (jint) 0xF296EC6B, (jint) 0x2A0DD915, (jint) 0xB6636521, (jint) 0xE7B9F9B6, (jint) 0xFF34052E, (jint) 0xC5855664, (jint) 0x53B02D5D, (jint) 0xA99F8FA1, (jint) 0x08BA4799, (jint) 0x6E85076A } count:256];
    OrgSpongycastleCryptoEnginesBlowfishEngine_KS1 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x4B7A70E9, (jint) 0xB5B32944, (jint) 0xDB75092E, (jint) 0xC4192623, (jint) 0xAD6EA6B0, (jint) 0x49A7DF7D, (jint) 0x9CEE60B8, (jint) 0x8FEDB266, (jint) 0xECAA8C71, (jint) 0x699A17FF, (jint) 0x5664526C, (jint) 0xC2B19EE1, (jint) 0x193602A5, (jint) 0x75094C29, (jint) 0xA0591340, (jint) 0xE4183A3E, (jint) 0x3F54989A, (jint) 0x5B429D65, (jint) 0x6B8FE4D6, (jint) 0x99F73FD6, (jint) 0xA1D29C07, (jint) 0xEFE830F5, (jint) 0x4D2D38E6, (jint) 0xF0255DC1, (jint) 0x4CDD2086, (jint) 0x8470EB26, (jint) 0x6382E9C6, (jint) 0x021ECC5E, (jint) 0x09686B3F, (jint) 0x3EBAEFC9, (jint) 0x3C971814, (jint) 0x6B6A70A1, (jint) 0x687F3584, (jint) 0x52A0E286, (jint) 0xB79C5305, (jint) 0xAA500737, (jint) 0x3E07841C, (jint) 0x7FDEAE5C, (jint) 0x8E7D44EC, (jint) 0x5716F2B8, (jint) 0xB03ADA37, (jint) 0xF0500C0D, (jint) 0xF01C1F04, (jint) 0x0200B3FF, (jint) 0xAE0CF51A, (jint) 0x3CB574B2, (jint) 0x25837A58, (jint) 0xDC0921BD, (jint) 0xD19113F9, (jint) 0x7CA92FF6, (jint) 0x94324773, (jint) 0x22F54701, (jint) 0x3AE5E581, (jint) 0x37C2DADC, (jint) 0xC8B57634, (jint) 0x9AF3DDA7, (jint) 0xA9446146, (jint) 0x0FD0030E, (jint) 0xECC8C73E, (jint) 0xA4751E41, (jint) 0xE238CD99, (jint) 0x3BEA0E2F, (jint) 0x3280BBA1, (jint) 0x183EB331, (jint) 0x4E548B38, (jint) 0x4F6DB908, (jint) 0x6F420D03, (jint) 0xF60A04BF, (jint) 0x2CB81290, (jint) 0x24977C79, (jint) 0x5679B072, (jint) 0xBCAF89AF, (jint) 0xDE9A771F, (jint) 0xD9930810, (jint) 0xB38BAE12, (jint) 0xDCCF3F2E, (jint) 0x5512721F, (jint) 0x2E6B7124, (jint) 0x501ADDE6, (jint) 0x9F84CD87, (jint) 0x7A584718, (jint) 0x7408DA17, (jint) 0xBC9F9ABC, (jint) 0xE94B7D8C, (jint) 0xEC7AEC3A, (jint) 0xDB851DFA, (jint) 0x63094366, (jint) 0xC464C3D2, (jint) 0xEF1C1847, (jint) 0x3215D908, (jint) 0xDD433B37, (jint) 0x24C2BA16, (jint) 0x12A14D43, (jint) 0x2A65C451, (jint) 0x50940002, (jint) 0x133AE4DD, (jint) 0x71DFF89E, (jint) 0x10314E55, (jint) 0x81AC77D6, (jint) 0x5F11199B, (jint) 0x043556F1, (jint) 0xD7A3C76B, (jint) 0x3C11183B, (jint) 0x5924A509, (jint) 0xF28FE6ED, (jint) 0x97F1FBFA, (jint) 0x9EBABF2C, (jint) 0x1E153C6E, (jint) 0x86E34570, (jint) 0xEAE96FB1, (jint) 0x860E5E0A, (jint) 0x5A3E2AB3, (jint) 0x771FE71C, (jint) 0x4E3D06FA, (jint) 0x2965DCB9, (jint) 0x99E71D0F, (jint) 0x803E89D6, (jint) 0x5266C825, (jint) 0x2E4CC978, (jint) 0x9C10B36A, (jint) 0xC6150EBA, (jint) 0x94E2EA78, (jint) 0xA5FC3C53, (jint) 0x1E0A2DF4, (jint) 0xF2F74EA7, (jint) 0x361D2B3D, (jint) 0x1939260F, (jint) 0x19C27960, (jint) 0x5223A708, (jint) 0xF71312B6, (jint) 0xEBADFE6E, (jint) 0xEAC31F66, (jint) 0xE3BC4595, (jint) 0xA67BC883, (jint) 0xB17F37D1, (jint) 0x018CFF28, (jint) 0xC332DDEF, (jint) 0xBE6C5AA5, (jint) 0x65582185, (jint) 0x68AB9802, (jint) 0xEECEA50F, (jint) 0xDB2F953B, (jint) 0x2AEF7DAD, (jint) 0x5B6E2F84, (jint) 0x1521B628, (jint) 0x29076170, (jint) 0xECDD4775, (jint) 0x619F1510, (jint) 0x13CCA830, (jint) 0xEB61BD96, (jint) 0x0334FE1E, (jint) 0xAA0363CF, (jint) 0xB5735C90, (jint) 0x4C70A239, (jint) 0xD59E9E0B, (jint) 0xCBAADE14, (jint) 0xEECC86BC, (jint) 0x60622CA7, (jint) 0x9CAB5CAB, (jint) 0xB2F3846E, (jint) 0x648B1EAF, (jint) 0x19BDF0CA, (jint) 0xA02369B9, (jint) 0x655ABB50, (jint) 0x40685A32, (jint) 0x3C2AB4B3, (jint) 0x319EE9D5, (jint) 0xC021B8F7, (jint) 0x9B540B19, (jint) 0x875FA099, (jint) 0x95F7997E, (jint) 0x623D7DA8, (jint) 0xF837889A, (jint) 0x97E32D77, (jint) 0x11ED935F, (jint) 0x16681281, (jint) 0x0E358829, (jint) 0xC7E61FD6, (jint) 0x96DEDFA1, (jint) 0x7858BA99, (jint) 0x57F584A5, (jint) 0x1B227263, (jint) 0x9B83C3FF, (jint) 0x1AC24696, (jint) 0xCDB30AEB, (jint) 0x532E3054, (jint) 0x8FD948E4, (jint) 0x6DBC3128, (jint) 0x58EBF2EF, (jint) 0x34C6FFEA, (jint) 0xFE28ED61, (jint) 0xEE7C3C73, (jint) 0x5D4A14D9, (jint) 0xE864B7E3, (jint) 0x42105D14, (jint) 0x203E13E0, (jint) 0x45EEE2B6, (jint) 0xA3AAABEA, (jint) 0xDB6C4F15, (jint) 0xFACB4FD0, (jint) 0xC742F442, (jint) 0xEF6ABBB5, (jint) 0x654F3B1D, (jint) 0x41CD2105, (jint) 0xD81E799E, (jint) 0x86854DC7, (jint) 0xE44B476A, (jint) 0x3D816250, (jint) 0xCF62A1F2, (jint) 0x5B8D2646, (jint) 0xFC8883A0, (jint) 0xC1C7B6A3, (jint) 0x7F1524C3, (jint) 0x69CB7492, (jint) 0x47848A0B, (jint) 0x5692B285, (jint) 0x095BBF00, (jint) 0xAD19489D, (jint) 0x1462B174, (jint) 0x23820E00, (jint) 0x58428D2A, (jint) 0x0C55F5EA, (jint) 0x1DADF43E, (jint) 0x233F7061, (jint) 0x3372F092, (jint) 0x8D937E41, (jint) 0xD65FECF1, (jint) 0x6C223BDB, (jint) 0x7CDE3759, (jint) 0xCBEE7460, (jint) 0x4085F2A7, (jint) 0xCE77326E, (jint) 0xA6078084, (jint) 0x19F8509E, (jint) 0xE8EFD855, (jint) 0x61D99735, (jint) 0xA969A7AA, (jint) 0xC50C06C2, (jint) 0x5A04ABFC, (jint) 0x800BCADC, (jint) 0x9E447A2E, (jint) 0xC3453484, (jint) 0xFDD56705, (jint) 0x0E1E9EC9, (jint) 0xDB73DBD3, (jint) 0x105588CD, (jint) 0x675FDA79, (jint) 0xE3674340, (jint) 0xC5C43465, (jint) 0x713E38D8, (jint) 0x3D28F89E, (jint) 0xF16DFF20, (jint) 0x153E21E7, (jint) 0x8FB03D4A, (jint) 0xE6E39F2B, (jint) 0xDB83ADF7 } count:256];
    OrgSpongycastleCryptoEnginesBlowfishEngine_KS2 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0xE93D5A68, (jint) 0x948140F7, (jint) 0xF64C261C, (jint) 0x94692934, (jint) 0x411520F7, (jint) 0x7602D4F7, (jint) 0xBCF46B2E, (jint) 0xD4A20068, (jint) 0xD4082471, (jint) 0x3320F46A, (jint) 0x43B7D4B7, (jint) 0x500061AF, (jint) 0x1E39F62E, (jint) 0x97244546, (jint) 0x14214F74, (jint) 0xBF8B8840, (jint) 0x4D95FC1D, (jint) 0x96B591AF, (jint) 0x70F4DDD3, (jint) 0x66A02F45, (jint) 0xBFBC09EC, (jint) 0x03BD9785, (jint) 0x7FAC6DD0, (jint) 0x31CB8504, (jint) 0x96EB27B3, (jint) 0x55FD3941, (jint) 0xDA2547E6, (jint) 0xABCA0A9A, (jint) 0x28507825, (jint) 0x530429F4, (jint) 0x0A2C86DA, (jint) 0xE9B66DFB, (jint) 0x68DC1462, (jint) 0xD7486900, (jint) 0x680EC0A4, (jint) 0x27A18DEE, (jint) 0x4F3FFEA2, (jint) 0xE887AD8C, (jint) 0xB58CE006, (jint) 0x7AF4D6B6, (jint) 0xAACE1E7C, (jint) 0xD3375FEC, (jint) 0xCE78A399, (jint) 0x406B2A42, (jint) 0x20FE9E35, (jint) 0xD9F385B9, (jint) 0xEE39D7AB, (jint) 0x3B124E8B, (jint) 0x1DC9FAF7, (jint) 0x4B6D1856, (jint) 0x26A36631, (jint) 0xEAE397B2, (jint) 0x3A6EFA74, (jint) 0xDD5B4332, (jint) 0x6841E7F7, (jint) 0xCA7820FB, (jint) 0xFB0AF54E, (jint) 0xD8FEB397, (jint) 0x454056AC, (jint) 0xBA489527, (jint) 0x55533A3A, (jint) 0x20838D87, (jint) 0xFE6BA9B7, (jint) 0xD096954B, (jint) 0x55A867BC, (jint) 0xA1159A58, (jint) 0xCCA92963, (jint) 0x99E1DB33, (jint) 0xA62A4A56, (jint) 0x3F3125F9, (jint) 0x5EF47E1C, (jint) 0x9029317C, (jint) 0xFDF8E802, (jint) 0x04272F70, (jint) 0x80BB155C, (jint) 0x05282CE3, (jint) 0x95C11548, (jint) 0xE4C66D22, (jint) 0x48C1133F, (jint) 0xC70F86DC, (jint) 0x07F9C9EE, (jint) 0x41041F0F, (jint) 0x404779A4, (jint) 0x5D886E17, (jint) 0x325F51EB, (jint) 0xD59BC0D1, (jint) 0xF2BCC18F, (jint) 0x41113564, (jint) 0x257B7834, (jint) 0x602A9C60, (jint) 0xDFF8E8A3, (jint) 0x1F636C1B, (jint) 0x0E12B4C2, (jint) 0x02E1329E, (jint) 0xAF664FD1, (jint) 0xCAD18115, (jint) 0x6B2395E0, (jint) 0x333E92E1, (jint) 0x3B240B62, (jint) 0xEEBEB922, (jint) 0x85B2A20E, (jint) 0xE6BA0D99, (jint) 0xDE720C8C, (jint) 0x2DA2F728, (jint) 0xD0127845, (jint) 0x95B794FD, (jint) 0x647D0862, (jint) 0xE7CCF5F0, (jint) 0x5449A36F, (jint) 0x877D48FA, (jint) 0xC39DFD27, (jint) 0xF33E8D1E, (jint) 0x0A476341, (jint) 0x992EFF74, (jint) 0x3A6F6EAB, (jint) 0xF4F8FD37, (jint) 0xA812DC60, (jint) 0xA1EBDDF8, (jint) 0x991BE14C, (jint) 0xDB6E6B0D, (jint) 0xC67B5510, (jint) 0x6D672C37, (jint) 0x2765D43B, (jint) 0xDCD0E804, (jint) 0xF1290DC7, (jint) 0xCC00FFA3, (jint) 0xB5390F92, (jint) 0x690FED0B, (jint) 0x667B9FFB, (jint) 0xCEDB7D9C, (jint) 0xA091CF0B, (jint) 0xD9155EA3, (jint) 0xBB132F88, (jint) 0x515BAD24, (jint) 0x7B9479BF, (jint) 0x763BD6EB, (jint) 0x37392EB3, (jint) 0xCC115979, (jint) 0x8026E297, (jint) 0xF42E312D, (jint) 0x6842ADA7, (jint) 0xC66A2B3B, (jint) 0x12754CCC, (jint) 0x782EF11C, (jint) 0x6A124237, (jint) 0xB79251E7, (jint) 0x06A1BBE6, (jint) 0x4BFB6350, (jint) 0x1A6B1018, (jint) 0x11CAEDFA, (jint) 0x3D25BDD8, (jint) 0xE2E1C3C9, (jint) 0x44421659, (jint) 0x0A121386, (jint) 0xD90CEC6E, (jint) 0xD5ABEA2A, (jint) 0x64AF674E, (jint) 0xDA86A85F, (jint) 0xBEBFE988, (jint) 0x64E4C3FE, (jint) 0x9DBC8057, (jint) 0xF0F7C086, (jint) 0x60787BF8, (jint) 0x6003604D, (jint) 0xD1FD8346, (jint) 0xF6381FB0, (jint) 0x7745AE04, (jint) 0xD736FCCC, (jint) 0x83426B33, (jint) 0xF01EAB71, (jint) 0xB0804187, (jint) 0x3C005E5F, (jint) 0x77A057BE, (jint) 0xBDE8AE24, (jint) 0x55464299, (jint) 0xBF582E61, (jint) 0x4E58F48F, (jint) 0xF2DDFDA2, (jint) 0xF474EF38, (jint) 0x8789BDC2, (jint) 0x5366F9C3, (jint) 0xC8B38E74, (jint) 0xB475F255, (jint) 0x46FCD9B9, (jint) 0x7AEB2661, (jint) 0x8B1DDF84, (jint) 0x846A0E79, (jint) 0x915F95E2, (jint) 0x466E598E, (jint) 0x20B45770, (jint) 0x8CD55591, (jint) 0xC902DE4C, (jint) 0xB90BACE1, (jint) 0xBB8205D0, (jint) 0x11A86248, (jint) 0x7574A99E, (jint) 0xB77F19B6, (jint) 0xE0A9DC09, (jint) 0x662D09A1, (jint) 0xC4324633, (jint) 0xE85A1F02, (jint) 0x09F0BE8C, (jint) 0x4A99A025, (jint) 0x1D6EFE10, (jint) 0x1AB93D1D, (jint) 0x0BA5A4DF, (jint) 0xA186F20F, (jint) 0x2868F169, (jint) 0xDCB7DA83, (jint) 0x573906FE, (jint) 0xA1E2CE9B, (jint) 0x4FCD7F52, (jint) 0x50115E01, (jint) 0xA70683FA, (jint) 0xA002B5C4, (jint) 0x0DE6D027, (jint) 0x9AF88C27, (jint) 0x773F8641, (jint) 0xC3604C06, (jint) 0x61A806B5, (jint) 0xF0177A28, (jint) 0xC0F586E0, (jint) 0x006058AA, (jint) 0x30DC7D62, (jint) 0x11E69ED7, (jint) 0x2338EA63, (jint) 0x53C2DD94, (jint) 0xC2C21634, (jint) 0xBBCBEE56, (jint) 0x90BCB6DE, (jint) 0xEBFC7DA1, (jint) 0xCE591D76, (jint) 0x6F05E409, (jint) 0x4B7C0188, (jint) 0x39720A3D, (jint) 0x7C927C24, (jint) 0x86E3725F, (jint) 0x724D9DB9, (jint) 0x1AC15BB4, (jint) 0xD39EB8FC, (jint) 0xED545578, (jint) 0x08FCA5B5, (jint) 0xD83D7CD3, (jint) 0x4DAD0FC4, (jint) 0x1E50EF5E, (jint) 0xB161E6F8, (jint) 0xA28514D9, (jint) 0x6C51133C, (jint) 0x6FD5C7E7, (jint) 0x56E14EC4, (jint) 0x362ABFCE, (jint) 0xDDC6C837, (jint) 0xD79A3234, (jint) 0x92638212, (jint) 0x670EFA8E, (jint) 0x406000E0 } count:256];
    OrgSpongycastleCryptoEnginesBlowfishEngine_KS3 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x3A39CE37, (jint) 0xD3FAF5CF, (jint) 0xABC27737, (jint) 0x5AC52D1B, (jint) 0x5CB0679E, (jint) 0x4FA33742, (jint) 0xD3822740, (jint) 0x99BC9BBE, (jint) 0xD5118E9D, (jint) 0xBF0F7315, (jint) 0xD62D1C7E, (jint) 0xC700C47B, (jint) 0xB78C1B6B, (jint) 0x21A19045, (jint) 0xB26EB1BE, (jint) 0x6A366EB4, (jint) 0x5748AB2F, (jint) 0xBC946E79, (jint) 0xC6A376D2, (jint) 0x6549C2C8, (jint) 0x530FF8EE, (jint) 0x468DDE7D, (jint) 0xD5730A1D, (jint) 0x4CD04DC6, (jint) 0x2939BBDB, (jint) 0xA9BA4650, (jint) 0xAC9526E8, (jint) 0xBE5EE304, (jint) 0xA1FAD5F0, (jint) 0x6A2D519A, (jint) 0x63EF8CE2, (jint) 0x9A86EE22, (jint) 0xC089C2B8, (jint) 0x43242EF6, (jint) 0xA51E03AA, (jint) 0x9CF2D0A4, (jint) 0x83C061BA, (jint) 0x9BE96A4D, (jint) 0x8FE51550, (jint) 0xBA645BD6, (jint) 0x2826A2F9, (jint) 0xA73A3AE1, (jint) 0x4BA99586, (jint) 0xEF5562E9, (jint) 0xC72FEFD3, (jint) 0xF752F7DA, (jint) 0x3F046F69, (jint) 0x77FA0A59, (jint) 0x80E4A915, (jint) 0x87B08601, (jint) 0x9B09E6AD, (jint) 0x3B3EE593, (jint) 0xE990FD5A, (jint) 0x9E34D797, (jint) 0x2CF0B7D9, (jint) 0x022B8B51, (jint) 0x96D5AC3A, (jint) 0x017DA67D, (jint) 0xD1CF3ED6, (jint) 0x7C7D2D28, (jint) 0x1F9F25CF, (jint) 0xADF2B89B, (jint) 0x5AD6B472, (jint) 0x5A88F54C, (jint) 0xE029AC71, (jint) 0xE019A5E6, (jint) 0x47B0ACFD, (jint) 0xED93FA9B, (jint) 0xE8D3C48D, (jint) 0x283B57CC, (jint) 0xF8D56629, (jint) 0x79132E28, (jint) 0x785F0191, (jint) 0xED756055, (jint) 0xF7960E44, (jint) 0xE3D35E8C, (jint) 0x15056DD4, (jint) 0x88F46DBA, (jint) 0x03A16125, (jint) 0x0564F0BD, (jint) 0xC3EB9E15, (jint) 0x3C9057A2, (jint) 0x97271AEC, (jint) 0xA93A072A, (jint) 0x1B3F6D9B, (jint) 0x1E6321F5, (jint) 0xF59C66FB, (jint) 0x26DCF319, (jint) 0x7533D928, (jint) 0xB155FDF5, (jint) 0x03563482, (jint) 0x8ABA3CBB, (jint) 0x28517711, (jint) 0xC20AD9F8, (jint) 0xABCC5167, (jint) 0xCCAD925F, (jint) 0x4DE81751, (jint) 0x3830DC8E, (jint) 0x379D5862, (jint) 0x9320F991, (jint) 0xEA7A90C2, (jint) 0xFB3E7BCE, (jint) 0x5121CE64, (jint) 0x774FBE32, (jint) 0xA8B6E37E, (jint) 0xC3293D46, (jint) 0x48DE5369, (jint) 0x6413E680, (jint) 0xA2AE0810, (jint) 0xDD6DB224, (jint) 0x69852DFD, (jint) 0x09072166, (jint) 0xB39A460A, (jint) 0x6445C0DD, (jint) 0x586CDECF, (jint) 0x1C20C8AE, (jint) 0x5BBEF7DD, (jint) 0x1B588D40, (jint) 0xCCD2017F, (jint) 0x6BB4E3BB, (jint) 0xDDA26A7E, (jint) 0x3A59FF45, (jint) 0x3E350A44, (jint) 0xBCB4CDD5, (jint) 0x72EACEA8, (jint) 0xFA6484BB, (jint) 0x8D6612AE, (jint) 0xBF3C6F47, (jint) 0xD29BE463, (jint) 0x542F5D9E, (jint) 0xAEC2771B, (jint) 0xF64E6370, (jint) 0x740E0D8D, (jint) 0xE75B1357, (jint) 0xF8721671, (jint) 0xAF537D5D, (jint) 0x4040CB08, (jint) 0x4EB4E2CC, (jint) 0x34D2466A, (jint) 0x0115AF84, (jint) 0xE1B00428, (jint) 0x95983A1D, (jint) 0x06B89FB4, (jint) 0xCE6EA048, (jint) 0x6F3F3B82, (jint) 0x3520AB82, (jint) 0x011A1D4B, (jint) 0x277227F8, (jint) 0x611560B1, (jint) 0xE7933FDC, (jint) 0xBB3A792B, (jint) 0x344525BD, (jint) 0xA08839E1, (jint) 0x51CE794B, (jint) 0x2F32C9B7, (jint) 0xA01FBAC9, (jint) 0xE01CC87E, (jint) 0xBCC7D1F6, (jint) 0xCF0111C3, (jint) 0xA1E8AAC7, (jint) 0x1A908749, (jint) 0xD44FBD9A, (jint) 0xD0DADECB, (jint) 0xD50ADA38, (jint) 0x0339C32A, (jint) 0xC6913667, (jint) 0x8DF9317C, (jint) 0xE0B12B4F, (jint) 0xF79E59B7, (jint) 0x43F5BB3A, (jint) 0xF2D519FF, (jint) 0x27D9459C, (jint) 0xBF97222C, (jint) 0x15E6FC2A, (jint) 0x0F91FC71, (jint) 0x9B941525, (jint) 0xFAE59361, (jint) 0xCEB69CEB, (jint) 0xC2A86459, (jint) 0x12BAA8D1, (jint) 0xB6C1075E, (jint) 0xE3056A0C, (jint) 0x10D25065, (jint) 0xCB03A442, (jint) 0xE0EC6E0E, (jint) 0x1698DB3B, (jint) 0x4C98A0BE, (jint) 0x3278E964, (jint) 0x9F1F9532, (jint) 0xE0D392DF, (jint) 0xD3A0342B, (jint) 0x8971F21E, (jint) 0x1B0A7441, (jint) 0x4BA3348C, (jint) 0xC5BE7120, (jint) 0xC37632D8, (jint) 0xDF359F8D, (jint) 0x9B992F2E, (jint) 0xE60B6F47, (jint) 0x0FE3F11D, (jint) 0xE54CDA54, (jint) 0x1EDAD891, (jint) 0xCE6279CF, (jint) 0xCD3E7E6F, (jint) 0x1618B166, (jint) 0xFD2C1D05, (jint) 0x848FD2C5, (jint) 0xF6FB2299, (jint) 0xF523F357, (jint) 0xA6327623, (jint) 0x93A83531, (jint) 0x56CCCD02, (jint) 0xACF08162, (jint) 0x5A75EBB5, (jint) 0x6E163697, (jint) 0x88D273CC, (jint) 0xDE966292, (jint) 0x81B949D0, (jint) 0x4C50901B, (jint) 0x71C65614, (jint) 0xE6C6C7BD, (jint) 0x327A140A, (jint) 0x45E1D006, (jint) 0xC3F27B9A, (jint) 0xC9AA53FD, (jint) 0x62A80F00, (jint) 0xBB25BFE2, (jint) 0x35BDD2F6, (jint) 0x71126905, (jint) 0xB2040222, (jint) 0xB6CBCF7C, (jint) 0xCD769C2B, (jint) 0x53113EC0, (jint) 0x1640E3D3, (jint) 0x38ABBD60, (jint) 0x2547ADF0, (jint) 0xBA38209C, (jint) 0xF746CE76, (jint) 0x77AFA1C5, (jint) 0x20756060, (jint) 0x85CBFE4E, (jint) 0x8AE88DD8, (jint) 0x7AAAF9B0, (jint) 0x4CF9AA7E, (jint) 0x1948C25C, (jint) 0x02FB8A8C, (jint) 0x01C36AE4, (jint) 0xD6EBE1F9, (jint) 0x90D4F869, (jint) 0xA65CDEA0, (jint) 0x3F09252D, (jint) 0xC208E69F, (jint) 0xB74E6132, (jint) 0xCE77E25B, (jint) 0x578FDFE3, (jint) 0x3AC372E6 } count:256];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoEnginesBlowfishEngine)
  }
}

@end

void OrgSpongycastleCryptoEnginesBlowfishEngine_init(OrgSpongycastleCryptoEnginesBlowfishEngine *self) {
  NSObject_init(self);
  self->encrypting_ = false;
  self->workingKey_ = nil;
  self->S0_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK];
  self->S1_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK];
  self->S2_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK];
  self->S3_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK];
  self->P_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesBlowfishEngine_P_SZ];
}

OrgSpongycastleCryptoEnginesBlowfishEngine *new_OrgSpongycastleCryptoEnginesBlowfishEngine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesBlowfishEngine, init)
}

OrgSpongycastleCryptoEnginesBlowfishEngine *create_OrgSpongycastleCryptoEnginesBlowfishEngine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesBlowfishEngine, init)
}

jint OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, jint x) {
  return (((IOSIntArray_Get(nil_chk(self->S0_), (JreURShift32(x, 24))) + IOSIntArray_Get(nil_chk(self->S1_), (JreURShift32(x, 16)) & (jint) 0xff)) ^ IOSIntArray_Get(nil_chk(self->S2_), (JreURShift32(x, 8)) & (jint) 0xff)) + IOSIntArray_Get(nil_chk(self->S3_), x & (jint) 0xff));
}

void OrgSpongycastleCryptoEnginesBlowfishEngine_processTableWithInt_withInt_withIntArray_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, jint xl, jint xr, IOSIntArray *table) {
  jint size = ((IOSIntArray *) nil_chk(table))->size_;
  for (jint s = 0; s < size; s += 2) {
    xl ^= IOSIntArray_Get(nil_chk(self->P_), 0);
    for (jint i = 1; i < OrgSpongycastleCryptoEnginesBlowfishEngine_ROUNDS; i += 2) {
      xr ^= OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(self, xl) ^ IOSIntArray_Get(self->P_, i);
      xl ^= OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(self, xr) ^ IOSIntArray_Get(self->P_, i + 1);
    }
    xr ^= IOSIntArray_Get(self->P_, OrgSpongycastleCryptoEnginesBlowfishEngine_ROUNDS + 1);
    *IOSIntArray_GetRef(table, s) = xr;
    *IOSIntArray_GetRef(table, s + 1) = xl;
    xr = xl;
    xl = IOSIntArray_Get(table, s);
  }
}

void OrgSpongycastleCryptoEnginesBlowfishEngine_setKeyWithByteArray_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, IOSByteArray *key) {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine_KS0, 0, self->S0_, 0, OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine_KS1, 0, self->S1_, 0, OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine_KS2, 0, self->S2_, 0, OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine_KS3, 0, self->S3_, 0, OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine_KP, 0, self->P_, 0, OrgSpongycastleCryptoEnginesBlowfishEngine_P_SZ);
  jint keyLength = ((IOSByteArray *) nil_chk(key))->size_;
  jint keyIndex = 0;
  for (jint i = 0; i < OrgSpongycastleCryptoEnginesBlowfishEngine_P_SZ; i++) {
    jint data = (jint) 0x0000000;
    for (jint j = 0; j < 4; j++) {
      data = (JreLShift32(data, 8)) | (IOSByteArray_Get(key, keyIndex++) & (jint) 0xff);
      if (keyIndex >= keyLength) {
        keyIndex = 0;
      }
    }
    *IOSIntArray_GetRef(nil_chk(self->P_), i) ^= data;
  }
  OrgSpongycastleCryptoEnginesBlowfishEngine_processTableWithInt_withInt_withIntArray_(self, 0, 0, self->P_);
  OrgSpongycastleCryptoEnginesBlowfishEngine_processTableWithInt_withInt_withIntArray_(self, IOSIntArray_Get(nil_chk(self->P_), OrgSpongycastleCryptoEnginesBlowfishEngine_P_SZ - 2), IOSIntArray_Get(self->P_, OrgSpongycastleCryptoEnginesBlowfishEngine_P_SZ - 1), self->S0_);
  OrgSpongycastleCryptoEnginesBlowfishEngine_processTableWithInt_withInt_withIntArray_(self, IOSIntArray_Get(nil_chk(self->S0_), OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK - 2), IOSIntArray_Get(self->S0_, OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK - 1), self->S1_);
  OrgSpongycastleCryptoEnginesBlowfishEngine_processTableWithInt_withInt_withIntArray_(self, IOSIntArray_Get(nil_chk(self->S1_), OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK - 2), IOSIntArray_Get(self->S1_, OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK - 1), self->S2_);
  OrgSpongycastleCryptoEnginesBlowfishEngine_processTableWithInt_withInt_withIntArray_(self, IOSIntArray_Get(nil_chk(self->S2_), OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK - 2), IOSIntArray_Get(self->S2_, OrgSpongycastleCryptoEnginesBlowfishEngine_SBOX_SK - 1), self->S3_);
}

void OrgSpongycastleCryptoEnginesBlowfishEngine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, IOSByteArray *src, jint srcIndex, IOSByteArray *dst, jint dstIndex) {
  jint xl = OrgSpongycastleCryptoEnginesBlowfishEngine_BytesTo32bitsWithByteArray_withInt_(self, src, srcIndex);
  jint xr = OrgSpongycastleCryptoEnginesBlowfishEngine_BytesTo32bitsWithByteArray_withInt_(self, src, srcIndex + 4);
  xl ^= IOSIntArray_Get(nil_chk(self->P_), 0);
  for (jint i = 1; i < OrgSpongycastleCryptoEnginesBlowfishEngine_ROUNDS; i += 2) {
    xr ^= OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(self, xl) ^ IOSIntArray_Get(self->P_, i);
    xl ^= OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(self, xr) ^ IOSIntArray_Get(self->P_, i + 1);
  }
  xr ^= IOSIntArray_Get(self->P_, OrgSpongycastleCryptoEnginesBlowfishEngine_ROUNDS + 1);
  OrgSpongycastleCryptoEnginesBlowfishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, xr, dst, dstIndex);
  OrgSpongycastleCryptoEnginesBlowfishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, xl, dst, dstIndex + 4);
}

void OrgSpongycastleCryptoEnginesBlowfishEngine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, IOSByteArray *src, jint srcIndex, IOSByteArray *dst, jint dstIndex) {
  jint xl = OrgSpongycastleCryptoEnginesBlowfishEngine_BytesTo32bitsWithByteArray_withInt_(self, src, srcIndex);
  jint xr = OrgSpongycastleCryptoEnginesBlowfishEngine_BytesTo32bitsWithByteArray_withInt_(self, src, srcIndex + 4);
  xl ^= IOSIntArray_Get(nil_chk(self->P_), OrgSpongycastleCryptoEnginesBlowfishEngine_ROUNDS + 1);
  for (jint i = OrgSpongycastleCryptoEnginesBlowfishEngine_ROUNDS; i > 0; i -= 2) {
    xr ^= OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(self, xl) ^ IOSIntArray_Get(self->P_, i);
    xl ^= OrgSpongycastleCryptoEnginesBlowfishEngine_FWithInt_(self, xr) ^ IOSIntArray_Get(self->P_, i - 1);
  }
  xr ^= IOSIntArray_Get(self->P_, 0);
  OrgSpongycastleCryptoEnginesBlowfishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, xr, dst, dstIndex);
  OrgSpongycastleCryptoEnginesBlowfishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, xl, dst, dstIndex + 4);
}

jint OrgSpongycastleCryptoEnginesBlowfishEngine_BytesTo32bitsWithByteArray_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, IOSByteArray *b, jint i) {
  return (JreLShift32((IOSByteArray_Get(nil_chk(b), i) & (jint) 0xff), 24)) | (JreLShift32((IOSByteArray_Get(b, i + 1) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(b, i + 2) & (jint) 0xff), 8)) | ((IOSByteArray_Get(b, i + 3) & (jint) 0xff));
}

void OrgSpongycastleCryptoEnginesBlowfishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesBlowfishEngine *self, jint inArg, IOSByteArray *b, jint offset) {
  *IOSByteArray_GetRef(nil_chk(b), offset + 3) = (jbyte) inArg;
  *IOSByteArray_GetRef(b, offset + 2) = (jbyte) (JreRShift32(inArg, 8));
  *IOSByteArray_GetRef(b, offset + 1) = (jbyte) (JreRShift32(inArg, 16));
  *IOSByteArray_GetRef(b, offset) = (jbyte) (JreRShift32(inArg, 24));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesBlowfishEngine)
