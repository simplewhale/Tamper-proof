//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/RSAEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesRSAEngine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesRSAEngine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesRSAEngine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesRSAEngine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesRSAEngine

#if !defined (OrgSpongycastleCryptoEnginesRSAEngine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesRSAEngine || defined(INCLUDE_OrgSpongycastleCryptoEnginesRSAEngine))
#define OrgSpongycastleCryptoEnginesRSAEngine_

#define RESTRICT_OrgSpongycastleCryptoAsymmetricBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoAsymmetricBlockCipher 1
#include "org/spongycastle/crypto/AsymmetricBlockCipher.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoEnginesRSAEngine : NSObject < OrgSpongycastleCryptoAsymmetricBlockCipher >

#pragma mark Public

- (instancetype)init;

- (jint)getInputBlockSize;

- (jint)getOutputBlockSize;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)inLen;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEnginesRSAEngine)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesRSAEngine_init(OrgSpongycastleCryptoEnginesRSAEngine *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesRSAEngine *new_OrgSpongycastleCryptoEnginesRSAEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesRSAEngine *create_OrgSpongycastleCryptoEnginesRSAEngine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesRSAEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesRSAEngine")
