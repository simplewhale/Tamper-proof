//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/TwofishEngine.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/DataLengthException.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/engines/TwofishEngine.h"
#include "org/spongycastle/crypto/params/KeyParameter.h"

@interface OrgSpongycastleCryptoEnginesTwofishEngine () {
 @public
  jboolean encrypting_;
  IOSIntArray *gMDS0_;
  IOSIntArray *gMDS1_;
  IOSIntArray *gMDS2_;
  IOSIntArray *gMDS3_;
  IOSIntArray *gSubKeys_;
  IOSIntArray *gSBox_;
  jint k64Cnt_;
  IOSByteArray *workingKey_;
}

- (void)setKeyWithByteArray:(IOSByteArray *)key;

- (void)encryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex;

- (void)decryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex;

- (jint)F32WithInt:(jint)x
      withIntArray:(IOSIntArray *)k32;

- (jint)RS_MDS_EncodeWithInt:(jint)k0
                     withInt:(jint)k1;

- (jint)RS_remWithInt:(jint)x;

- (jint)LFSR1WithInt:(jint)x;

- (jint)LFSR2WithInt:(jint)x;

- (jint)Mx_XWithInt:(jint)x;

- (jint)Mx_YWithInt:(jint)x;

- (jint)b0WithInt:(jint)x;

- (jint)b1WithInt:(jint)x;

- (jint)b2WithInt:(jint)x;

- (jint)b3WithInt:(jint)x;

- (jint)Fe32_0WithInt:(jint)x;

- (jint)Fe32_3WithInt:(jint)x;

- (jint)BytesTo32BitsWithByteArray:(IOSByteArray *)b
                           withInt:(jint)p;

- (void)Bits32ToBytesWithInt:(jint)inArg
               withByteArray:(IOSByteArray *)b
                     withInt:(jint)offset;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesTwofishEngine, gMDS0_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesTwofishEngine, gMDS1_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesTwofishEngine, gMDS2_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesTwofishEngine, gMDS3_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesTwofishEngine, gSubKeys_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesTwofishEngine, gSBox_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesTwofishEngine, workingKey_, IOSByteArray *)

inline IOSObjectArray *OrgSpongycastleCryptoEnginesTwofishEngine_get_P(void);
static IOSObjectArray *OrgSpongycastleCryptoEnginesTwofishEngine_P;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesTwofishEngine, P, IOSObjectArray *)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_00(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_00 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_00, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_01(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_01 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_01, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_02(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_02 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_02, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_03(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_03 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_03, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_04(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_04 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_04, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_10(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_10 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_10, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_11(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_11 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_11, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_12(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_12 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_12, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_13(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_13 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_13, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_14(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_14 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_14, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_20(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_20 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_20, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_21(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_21 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_21, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_22(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_22 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_22, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_23(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_23 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_23, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_24(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_24 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_24, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_30(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_30 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_30, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_31(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_31 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_31, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_32(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_32 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_32, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_33(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_33 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_33, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_P_34(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_P_34 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, P_34, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_GF256_FDBK(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK 361
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, GF256_FDBK, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_GF256_FDBK_2(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK_2 180
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, GF256_FDBK_2, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_GF256_FDBK_4(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK_4 90
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, GF256_FDBK_4, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_RS_GF_FDBK(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_RS_GF_FDBK 333
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, RS_GF_FDBK, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_ROUNDS(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_ROUNDS 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, ROUNDS, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_MAX_ROUNDS(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_MAX_ROUNDS 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, MAX_ROUNDS, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_BLOCK_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, BLOCK_SIZE, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_MAX_KEY_BITS(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS 256
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, MAX_KEY_BITS, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_INPUT_WHITEN(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, INPUT_WHITEN, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_OUTPUT_WHITEN(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, OUTPUT_WHITEN, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_ROUND_SUBKEYS(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_ROUND_SUBKEYS 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, ROUND_SUBKEYS, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_TOTAL_SUBKEYS(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_TOTAL_SUBKEYS 40
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, TOTAL_SUBKEYS, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_SK_STEP(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_SK_STEP 33686018
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, SK_STEP, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_SK_BUMP(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_SK_BUMP 16843009
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, SK_BUMP, jint)

inline jint OrgSpongycastleCryptoEnginesTwofishEngine_get_SK_ROTL(void);
#define OrgSpongycastleCryptoEnginesTwofishEngine_SK_ROTL 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesTwofishEngine, SK_ROTL, jint)

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesTwofishEngine_setKeyWithByteArray_(OrgSpongycastleCryptoEnginesTwofishEngine *self, IOSByteArray *key);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesTwofishEngine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, IOSByteArray *src, jint srcIndex, IOSByteArray *dst, jint dstIndex);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesTwofishEngine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, IOSByteArray *src, jint srcIndex, IOSByteArray *dst, jint dstIndex);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_F32WithInt_withIntArray_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x, IOSIntArray *k32);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_RS_MDS_EncodeWithInt_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint k0, jint k1);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_RS_remWithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_LFSR1WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_LFSR2WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_Mx_XWithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_Mx_YWithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_0WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_3WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, IOSByteArray *b, jint p);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint inArg, IOSByteArray *b, jint offset);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoEnginesTwofishEngine)

@implementation OrgSpongycastleCryptoEnginesTwofishEngine

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEnginesTwofishEngine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithBoolean:(jboolean)encrypting
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  if ([params isKindOfClass:[OrgSpongycastleCryptoParamsKeyParameter class]]) {
    self->encrypting_ = encrypting;
    self->workingKey_ = [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) params))) getKey];
    self->k64Cnt_ = (((IOSByteArray *) nil_chk(self->workingKey_))->size_ / 8);
    OrgSpongycastleCryptoEnginesTwofishEngine_setKeyWithByteArray_(self, self->workingKey_);
    return;
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid parameter passed to Twofish init - ", [[((id<OrgSpongycastleCryptoCipherParameters>) nil_chk(params)) java_getClass] getName]));
}

- (NSString *)getAlgorithmName {
  return @"Twofish";
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  if (workingKey_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Twofish not initialised");
  }
  if ((inOff + OrgSpongycastleCryptoEnginesTwofishEngine_BLOCK_SIZE) > ((IOSByteArray *) nil_chk(inArg))->size_) {
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  if ((outOff + OrgSpongycastleCryptoEnginesTwofishEngine_BLOCK_SIZE) > ((IOSByteArray *) nil_chk(outArg))->size_) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  if (encrypting_) {
    OrgSpongycastleCryptoEnginesTwofishEngine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
  }
  else {
    OrgSpongycastleCryptoEnginesTwofishEngine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(self, inArg, inOff, outArg, outOff);
  }
  return OrgSpongycastleCryptoEnginesTwofishEngine_BLOCK_SIZE;
}

- (void)reset {
  if (self->workingKey_ != nil) {
    OrgSpongycastleCryptoEnginesTwofishEngine_setKeyWithByteArray_(self, self->workingKey_);
  }
}

- (jint)getBlockSize {
  return OrgSpongycastleCryptoEnginesTwofishEngine_BLOCK_SIZE;
}

- (void)setKeyWithByteArray:(IOSByteArray *)key {
  OrgSpongycastleCryptoEnginesTwofishEngine_setKeyWithByteArray_(self, key);
}

- (void)encryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex {
  OrgSpongycastleCryptoEnginesTwofishEngine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(self, src, srcIndex, dst, dstIndex);
}

- (void)decryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex {
  OrgSpongycastleCryptoEnginesTwofishEngine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(self, src, srcIndex, dst, dstIndex);
}

- (jint)F32WithInt:(jint)x
      withIntArray:(IOSIntArray *)k32 {
  return OrgSpongycastleCryptoEnginesTwofishEngine_F32WithInt_withIntArray_(self, x, k32);
}

- (jint)RS_MDS_EncodeWithInt:(jint)k0
                     withInt:(jint)k1 {
  return OrgSpongycastleCryptoEnginesTwofishEngine_RS_MDS_EncodeWithInt_withInt_(self, k0, k1);
}

- (jint)RS_remWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_RS_remWithInt_(self, x);
}

- (jint)LFSR1WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_LFSR1WithInt_(self, x);
}

- (jint)LFSR2WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_LFSR2WithInt_(self, x);
}

- (jint)Mx_XWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_Mx_XWithInt_(self, x);
}

- (jint)Mx_YWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_Mx_YWithInt_(self, x);
}

- (jint)b0WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, x);
}

- (jint)b1WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, x);
}

- (jint)b2WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, x);
}

- (jint)b3WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, x);
}

- (jint)Fe32_0WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_0WithInt_(self, x);
}

- (jint)Fe32_3WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_3WithInt_(self, x);
}

- (jint)BytesTo32BitsWithByteArray:(IOSByteArray *)b
                           withInt:(jint)p {
  return OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, b, p);
}

- (void)Bits32ToBytesWithInt:(jint)inArg
               withByteArray:(IOSByteArray *)b
                     withInt:(jint)offset {
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, inArg, b, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 15, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 16, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 17, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 18, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 19, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 20, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 21, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 22, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 23, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 26, 27, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(getAlgorithmName);
  methods[3].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[4].selector = @selector(reset);
  methods[5].selector = @selector(getBlockSize);
  methods[6].selector = @selector(setKeyWithByteArray:);
  methods[7].selector = @selector(encryptBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[8].selector = @selector(decryptBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[9].selector = @selector(F32WithInt:withIntArray:);
  methods[10].selector = @selector(RS_MDS_EncodeWithInt:withInt:);
  methods[11].selector = @selector(RS_remWithInt:);
  methods[12].selector = @selector(LFSR1WithInt:);
  methods[13].selector = @selector(LFSR2WithInt:);
  methods[14].selector = @selector(Mx_XWithInt:);
  methods[15].selector = @selector(Mx_YWithInt:);
  methods[16].selector = @selector(b0WithInt:);
  methods[17].selector = @selector(b1WithInt:);
  methods[18].selector = @selector(b2WithInt:);
  methods[19].selector = @selector(b3WithInt:);
  methods[20].selector = @selector(Fe32_0WithInt:);
  methods[21].selector = @selector(Fe32_3WithInt:);
  methods[22].selector = @selector(BytesTo32BitsWithByteArray:withInt:);
  methods[23].selector = @selector(Bits32ToBytesWithInt:withByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "P", "[[B", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "P_00", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_00, 0x1a, -1, -1, -1, -1 },
    { "P_01", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_01, 0x1a, -1, -1, -1, -1 },
    { "P_02", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_02, 0x1a, -1, -1, -1, -1 },
    { "P_03", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_03, 0x1a, -1, -1, -1, -1 },
    { "P_04", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_04, 0x1a, -1, -1, -1, -1 },
    { "P_10", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_10, 0x1a, -1, -1, -1, -1 },
    { "P_11", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_11, 0x1a, -1, -1, -1, -1 },
    { "P_12", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_12, 0x1a, -1, -1, -1, -1 },
    { "P_13", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_13, 0x1a, -1, -1, -1, -1 },
    { "P_14", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_14, 0x1a, -1, -1, -1, -1 },
    { "P_20", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_20, 0x1a, -1, -1, -1, -1 },
    { "P_21", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_21, 0x1a, -1, -1, -1, -1 },
    { "P_22", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_22, 0x1a, -1, -1, -1, -1 },
    { "P_23", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_23, 0x1a, -1, -1, -1, -1 },
    { "P_24", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_24, 0x1a, -1, -1, -1, -1 },
    { "P_30", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_30, 0x1a, -1, -1, -1, -1 },
    { "P_31", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_31, 0x1a, -1, -1, -1, -1 },
    { "P_32", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_32, 0x1a, -1, -1, -1, -1 },
    { "P_33", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_33, 0x1a, -1, -1, -1, -1 },
    { "P_34", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_P_34, 0x1a, -1, -1, -1, -1 },
    { "GF256_FDBK", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK, 0x1a, -1, -1, -1, -1 },
    { "GF256_FDBK_2", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK_2, 0x1a, -1, -1, -1, -1 },
    { "GF256_FDBK_4", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK_4, 0x1a, -1, -1, -1, -1 },
    { "RS_GF_FDBK", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_RS_GF_FDBK, 0x1a, -1, -1, -1, -1 },
    { "ROUNDS", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_ROUNDS, 0x1a, -1, -1, -1, -1 },
    { "MAX_ROUNDS", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_MAX_ROUNDS, 0x1a, -1, -1, -1, -1 },
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_BLOCK_SIZE, 0x1a, -1, -1, -1, -1 },
    { "MAX_KEY_BITS", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS, 0x1a, -1, -1, -1, -1 },
    { "INPUT_WHITEN", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN, 0x1a, -1, -1, -1, -1 },
    { "OUTPUT_WHITEN", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN, 0x1a, -1, -1, -1, -1 },
    { "ROUND_SUBKEYS", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_ROUND_SUBKEYS, 0x1a, -1, -1, -1, -1 },
    { "TOTAL_SUBKEYS", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_TOTAL_SUBKEYS, 0x1a, -1, -1, -1, -1 },
    { "SK_STEP", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_SK_STEP, 0x1a, -1, -1, -1, -1 },
    { "SK_BUMP", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_SK_BUMP, 0x1a, -1, -1, -1, -1 },
    { "SK_ROTL", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesTwofishEngine_SK_ROTL, 0x1a, -1, -1, -1, -1 },
    { "encrypting_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gMDS0_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gMDS1_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gMDS2_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gMDS3_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gSubKeys_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gSBox_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "k64Cnt_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "workingKey_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "ZLOrgSpongycastleCryptoCipherParameters;", "processBlock", "[BI[BI", "setKey", "[B", "encryptBlock", "decryptBlock", "F32", "I[I", "RS_MDS_Encode", "II", "RS_rem", "I", "LFSR1", "LFSR2", "Mx_X", "Mx_Y", "b0", "b1", "b2", "b3", "Fe32_0", "Fe32_3", "BytesTo32Bits", "[BI", "Bits32ToBytes", "I[BI", &OrgSpongycastleCryptoEnginesTwofishEngine_P };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesTwofishEngine = { "TwofishEngine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x11, 24, 45, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesTwofishEngine;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoEnginesTwofishEngine class]) {
    OrgSpongycastleCryptoEnginesTwofishEngine_P = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xA9, (jbyte) (jint) 0x67, (jbyte) (jint) 0xB3, (jbyte) (jint) 0xE8, (jbyte) (jint) 0x04, (jbyte) (jint) 0xFD, (jbyte) (jint) 0xA3, (jbyte) (jint) 0x76, (jbyte) (jint) 0x9A, (jbyte) (jint) 0x92, (jbyte) (jint) 0x80, (jbyte) (jint) 0x78, (jbyte) (jint) 0xE4, (jbyte) (jint) 0xDD, (jbyte) (jint) 0xD1, (jbyte) (jint) 0x38, (jbyte) (jint) 0x0D, (jbyte) (jint) 0xC6, (jbyte) (jint) 0x35, (jbyte) (jint) 0x98, (jbyte) (jint) 0x18, (jbyte) (jint) 0xF7, (jbyte) (jint) 0xEC, (jbyte) (jint) 0x6C, (jbyte) (jint) 0x43, (jbyte) (jint) 0x75, (jbyte) (jint) 0x37, (jbyte) (jint) 0x26, (jbyte) (jint) 0xFA, (jbyte) (jint) 0x13, (jbyte) (jint) 0x94, (jbyte) (jint) 0x48, (jbyte) (jint) 0xF2, (jbyte) (jint) 0xD0, (jbyte) (jint) 0x8B, (jbyte) (jint) 0x30, (jbyte) (jint) 0x84, (jbyte) (jint) 0x54, (jbyte) (jint) 0xDF, (jbyte) (jint) 0x23, (jbyte) (jint) 0x19, (jbyte) (jint) 0x5B, (jbyte) (jint) 0x3D, (jbyte) (jint) 0x59, (jbyte) (jint) 0xF3, (jbyte) (jint) 0xAE, (jbyte) (jint) 0xA2, (jbyte) (jint) 0x82, (jbyte) (jint) 0x63, (jbyte) (jint) 0x01, (jbyte) (jint) 0x83, (jbyte) (jint) 0x2E, (jbyte) (jint) 0xD9, (jbyte) (jint) 0x51, (jbyte) (jint) 0x9B, (jbyte) (jint) 0x7C, (jbyte) (jint) 0xA6, (jbyte) (jint) 0xEB, (jbyte) (jint) 0xA5, (jbyte) (jint) 0xBE, (jbyte) (jint) 0x16, (jbyte) (jint) 0x0C, (jbyte) (jint) 0xE3, (jbyte) (jint) 0x61, (jbyte) (jint) 0xC0, (jbyte) (jint) 0x8C, (jbyte) (jint) 0x3A, (jbyte) (jint) 0xF5, (jbyte) (jint) 0x73, (jbyte) (jint) 0x2C, (jbyte) (jint) 0x25, (jbyte) (jint) 0x0B, (jbyte) (jint) 0xBB, (jbyte) (jint) 0x4E, (jbyte) (jint) 0x89, (jbyte) (jint) 0x6B, (jbyte) (jint) 0x53, (jbyte) (jint) 0x6A, (jbyte) (jint) 0xB4, (jbyte) (jint) 0xF1, (jbyte) (jint) 0xE1, (jbyte) (jint) 0xE6, (jbyte) (jint) 0xBD, (jbyte) (jint) 0x45, (jbyte) (jint) 0xE2, (jbyte) (jint) 0xF4, (jbyte) (jint) 0xB6, (jbyte) (jint) 0x66, (jbyte) (jint) 0xCC, (jbyte) (jint) 0x95, (jbyte) (jint) 0x03, (jbyte) (jint) 0x56, (jbyte) (jint) 0xD4, (jbyte) (jint) 0x1C, (jbyte) (jint) 0x1E, (jbyte) (jint) 0xD7, (jbyte) (jint) 0xFB, (jbyte) (jint) 0xC3, (jbyte) (jint) 0x8E, (jbyte) (jint) 0xB5, (jbyte) (jint) 0xE9, (jbyte) (jint) 0xCF, (jbyte) (jint) 0xBF, (jbyte) (jint) 0xBA, (jbyte) (jint) 0xEA, (jbyte) (jint) 0x77, (jbyte) (jint) 0x39, (jbyte) (jint) 0xAF, (jbyte) (jint) 0x33, (jbyte) (jint) 0xC9, (jbyte) (jint) 0x62, (jbyte) (jint) 0x71, (jbyte) (jint) 0x81, (jbyte) (jint) 0x79, (jbyte) (jint) 0x09, (jbyte) (jint) 0xAD, (jbyte) (jint) 0x24, (jbyte) (jint) 0xCD, (jbyte) (jint) 0xF9, (jbyte) (jint) 0xD8, (jbyte) (jint) 0xE5, (jbyte) (jint) 0xC5, (jbyte) (jint) 0xB9, (jbyte) (jint) 0x4D, (jbyte) (jint) 0x44, (jbyte) (jint) 0x08, (jbyte) (jint) 0x86, (jbyte) (jint) 0xE7, (jbyte) (jint) 0xA1, (jbyte) (jint) 0x1D, (jbyte) (jint) 0xAA, (jbyte) (jint) 0xED, (jbyte) (jint) 0x06, (jbyte) (jint) 0x70, (jbyte) (jint) 0xB2, (jbyte) (jint) 0xD2, (jbyte) (jint) 0x41, (jbyte) (jint) 0x7B, (jbyte) (jint) 0xA0, (jbyte) (jint) 0x11, (jbyte) (jint) 0x31, (jbyte) (jint) 0xC2, (jbyte) (jint) 0x27, (jbyte) (jint) 0x90, (jbyte) (jint) 0x20, (jbyte) (jint) 0xF6, (jbyte) (jint) 0x60, (jbyte) (jint) 0xFF, (jbyte) (jint) 0x96, (jbyte) (jint) 0x5C, (jbyte) (jint) 0xB1, (jbyte) (jint) 0xAB, (jbyte) (jint) 0x9E, (jbyte) (jint) 0x9C, (jbyte) (jint) 0x52, (jbyte) (jint) 0x1B, (jbyte) (jint) 0x5F, (jbyte) (jint) 0x93, (jbyte) (jint) 0x0A, (jbyte) (jint) 0xEF, (jbyte) (jint) 0x91, (jbyte) (jint) 0x85, (jbyte) (jint) 0x49, (jbyte) (jint) 0xEE, (jbyte) (jint) 0x2D, (jbyte) (jint) 0x4F, (jbyte) (jint) 0x8F, (jbyte) (jint) 0x3B, (jbyte) (jint) 0x47, (jbyte) (jint) 0x87, (jbyte) (jint) 0x6D, (jbyte) (jint) 0x46, (jbyte) (jint) 0xD6, (jbyte) (jint) 0x3E, (jbyte) (jint) 0x69, (jbyte) (jint) 0x64, (jbyte) (jint) 0x2A, (jbyte) (jint) 0xCE, (jbyte) (jint) 0xCB, (jbyte) (jint) 0x2F, (jbyte) (jint) 0xFC, (jbyte) (jint) 0x97, (jbyte) (jint) 0x05, (jbyte) (jint) 0x7A, (jbyte) (jint) 0xAC, (jbyte) (jint) 0x7F, (jbyte) (jint) 0xD5, (jbyte) (jint) 0x1A, (jbyte) (jint) 0x4B, (jbyte) (jint) 0x0E, (jbyte) (jint) 0xA7, (jbyte) (jint) 0x5A, (jbyte) (jint) 0x28, (jbyte) (jint) 0x14, (jbyte) (jint) 0x3F, (jbyte) (jint) 0x29, (jbyte) (jint) 0x88, (jbyte) (jint) 0x3C, (jbyte) (jint) 0x4C, (jbyte) (jint) 0x02, (jbyte) (jint) 0xB8, (jbyte) (jint) 0xDA, (jbyte) (jint) 0xB0, (jbyte) (jint) 0x17, (jbyte) (jint) 0x55, (jbyte) (jint) 0x1F, (jbyte) (jint) 0x8A, (jbyte) (jint) 0x7D, (jbyte) (jint) 0x57, (jbyte) (jint) 0xC7, (jbyte) (jint) 0x8D, (jbyte) (jint) 0x74, (jbyte) (jint) 0xB7, (jbyte) (jint) 0xC4, (jbyte) (jint) 0x9F, (jbyte) (jint) 0x72, (jbyte) (jint) 0x7E, (jbyte) (jint) 0x15, (jbyte) (jint) 0x22, (jbyte) (jint) 0x12, (jbyte) (jint) 0x58, (jbyte) (jint) 0x07, (jbyte) (jint) 0x99, (jbyte) (jint) 0x34, (jbyte) (jint) 0x6E, (jbyte) (jint) 0x50, (jbyte) (jint) 0xDE, (jbyte) (jint) 0x68, (jbyte) (jint) 0x65, (jbyte) (jint) 0xBC, (jbyte) (jint) 0xDB, (jbyte) (jint) 0xF8, (jbyte) (jint) 0xC8, (jbyte) (jint) 0xA8, (jbyte) (jint) 0x2B, (jbyte) (jint) 0x40, (jbyte) (jint) 0xDC, (jbyte) (jint) 0xFE, (jbyte) (jint) 0x32, (jbyte) (jint) 0xA4, (jbyte) (jint) 0xCA, (jbyte) (jint) 0x10, (jbyte) (jint) 0x21, (jbyte) (jint) 0xF0, (jbyte) (jint) 0xD3, (jbyte) (jint) 0x5D, (jbyte) (jint) 0x0F, (jbyte) (jint) 0x00, (jbyte) (jint) 0x6F, (jbyte) (jint) 0x9D, (jbyte) (jint) 0x36, (jbyte) (jint) 0x42, (jbyte) (jint) 0x4A, (jbyte) (jint) 0x5E, (jbyte) (jint) 0xC1, (jbyte) (jint) 0xE0 } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x75, (jbyte) (jint) 0xF3, (jbyte) (jint) 0xC6, (jbyte) (jint) 0xF4, (jbyte) (jint) 0xDB, (jbyte) (jint) 0x7B, (jbyte) (jint) 0xFB, (jbyte) (jint) 0xC8, (jbyte) (jint) 0x4A, (jbyte) (jint) 0xD3, (jbyte) (jint) 0xE6, (jbyte) (jint) 0x6B, (jbyte) (jint) 0x45, (jbyte) (jint) 0x7D, (jbyte) (jint) 0xE8, (jbyte) (jint) 0x4B, (jbyte) (jint) 0xD6, (jbyte) (jint) 0x32, (jbyte) (jint) 0xD8, (jbyte) (jint) 0xFD, (jbyte) (jint) 0x37, (jbyte) (jint) 0x71, (jbyte) (jint) 0xF1, (jbyte) (jint) 0xE1, (jbyte) (jint) 0x30, (jbyte) (jint) 0x0F, (jbyte) (jint) 0xF8, (jbyte) (jint) 0x1B, (jbyte) (jint) 0x87, (jbyte) (jint) 0xFA, (jbyte) (jint) 0x06, (jbyte) (jint) 0x3F, (jbyte) (jint) 0x5E, (jbyte) (jint) 0xBA, (jbyte) (jint) 0xAE, (jbyte) (jint) 0x5B, (jbyte) (jint) 0x8A, (jbyte) (jint) 0x00, (jbyte) (jint) 0xBC, (jbyte) (jint) 0x9D, (jbyte) (jint) 0x6D, (jbyte) (jint) 0xC1, (jbyte) (jint) 0xB1, (jbyte) (jint) 0x0E, (jbyte) (jint) 0x80, (jbyte) (jint) 0x5D, (jbyte) (jint) 0xD2, (jbyte) (jint) 0xD5, (jbyte) (jint) 0xA0, (jbyte) (jint) 0x84, (jbyte) (jint) 0x07, (jbyte) (jint) 0x14, (jbyte) (jint) 0xB5, (jbyte) (jint) 0x90, (jbyte) (jint) 0x2C, (jbyte) (jint) 0xA3, (jbyte) (jint) 0xB2, (jbyte) (jint) 0x73, (jbyte) (jint) 0x4C, (jbyte) (jint) 0x54, (jbyte) (jint) 0x92, (jbyte) (jint) 0x74, (jbyte) (jint) 0x36, (jbyte) (jint) 0x51, (jbyte) (jint) 0x38, (jbyte) (jint) 0xB0, (jbyte) (jint) 0xBD, (jbyte) (jint) 0x5A, (jbyte) (jint) 0xFC, (jbyte) (jint) 0x60, (jbyte) (jint) 0x62, (jbyte) (jint) 0x96, (jbyte) (jint) 0x6C, (jbyte) (jint) 0x42, (jbyte) (jint) 0xF7, (jbyte) (jint) 0x10, (jbyte) (jint) 0x7C, (jbyte) (jint) 0x28, (jbyte) (jint) 0x27, (jbyte) (jint) 0x8C, (jbyte) (jint) 0x13, (jbyte) (jint) 0x95, (jbyte) (jint) 0x9C, (jbyte) (jint) 0xC7, (jbyte) (jint) 0x24, (jbyte) (jint) 0x46, (jbyte) (jint) 0x3B, (jbyte) (jint) 0x70, (jbyte) (jint) 0xCA, (jbyte) (jint) 0xE3, (jbyte) (jint) 0x85, (jbyte) (jint) 0xCB, (jbyte) (jint) 0x11, (jbyte) (jint) 0xD0, (jbyte) (jint) 0x93, (jbyte) (jint) 0xB8, (jbyte) (jint) 0xA6, (jbyte) (jint) 0x83, (jbyte) (jint) 0x20, (jbyte) (jint) 0xFF, (jbyte) (jint) 0x9F, (jbyte) (jint) 0x77, (jbyte) (jint) 0xC3, (jbyte) (jint) 0xCC, (jbyte) (jint) 0x03, (jbyte) (jint) 0x6F, (jbyte) (jint) 0x08, (jbyte) (jint) 0xBF, (jbyte) (jint) 0x40, (jbyte) (jint) 0xE7, (jbyte) (jint) 0x2B, (jbyte) (jint) 0xE2, (jbyte) (jint) 0x79, (jbyte) (jint) 0x0C, (jbyte) (jint) 0xAA, (jbyte) (jint) 0x82, (jbyte) (jint) 0x41, (jbyte) (jint) 0x3A, (jbyte) (jint) 0xEA, (jbyte) (jint) 0xB9, (jbyte) (jint) 0xE4, (jbyte) (jint) 0x9A, (jbyte) (jint) 0xA4, (jbyte) (jint) 0x97, (jbyte) (jint) 0x7E, (jbyte) (jint) 0xDA, (jbyte) (jint) 0x7A, (jbyte) (jint) 0x17, (jbyte) (jint) 0x66, (jbyte) (jint) 0x94, (jbyte) (jint) 0xA1, (jbyte) (jint) 0x1D, (jbyte) (jint) 0x3D, (jbyte) (jint) 0xF0, (jbyte) (jint) 0xDE, (jbyte) (jint) 0xB3, (jbyte) (jint) 0x0B, (jbyte) (jint) 0x72, (jbyte) (jint) 0xA7, (jbyte) (jint) 0x1C, (jbyte) (jint) 0xEF, (jbyte) (jint) 0xD1, (jbyte) (jint) 0x53, (jbyte) (jint) 0x3E, (jbyte) (jint) 0x8F, (jbyte) (jint) 0x33, (jbyte) (jint) 0x26, (jbyte) (jint) 0x5F, (jbyte) (jint) 0xEC, (jbyte) (jint) 0x76, (jbyte) (jint) 0x2A, (jbyte) (jint) 0x49, (jbyte) (jint) 0x81, (jbyte) (jint) 0x88, (jbyte) (jint) 0xEE, (jbyte) (jint) 0x21, (jbyte) (jint) 0xC4, (jbyte) (jint) 0x1A, (jbyte) (jint) 0xEB, (jbyte) (jint) 0xD9, (jbyte) (jint) 0xC5, (jbyte) (jint) 0x39, (jbyte) (jint) 0x99, (jbyte) (jint) 0xCD, (jbyte) (jint) 0xAD, (jbyte) (jint) 0x31, (jbyte) (jint) 0x8B, (jbyte) (jint) 0x01, (jbyte) (jint) 0x18, (jbyte) (jint) 0x23, (jbyte) (jint) 0xDD, (jbyte) (jint) 0x1F, (jbyte) (jint) 0x4E, (jbyte) (jint) 0x2D, (jbyte) (jint) 0xF9, (jbyte) (jint) 0x48, (jbyte) (jint) 0x4F, (jbyte) (jint) 0xF2, (jbyte) (jint) 0x65, (jbyte) (jint) 0x8E, (jbyte) (jint) 0x78, (jbyte) (jint) 0x5C, (jbyte) (jint) 0x58, (jbyte) (jint) 0x19, (jbyte) (jint) 0x8D, (jbyte) (jint) 0xE5, (jbyte) (jint) 0x98, (jbyte) (jint) 0x57, (jbyte) (jint) 0x67, (jbyte) (jint) 0x7F, (jbyte) (jint) 0x05, (jbyte) (jint) 0x64, (jbyte) (jint) 0xAF, (jbyte) (jint) 0x63, (jbyte) (jint) 0xB6, (jbyte) (jint) 0xFE, (jbyte) (jint) 0xF5, (jbyte) (jint) 0xB7, (jbyte) (jint) 0x3C, (jbyte) (jint) 0xA5, (jbyte) (jint) 0xCE, (jbyte) (jint) 0xE9, (jbyte) (jint) 0x68, (jbyte) (jint) 0x44, (jbyte) (jint) 0xE0, (jbyte) (jint) 0x4D, (jbyte) (jint) 0x43, (jbyte) (jint) 0x69, (jbyte) (jint) 0x29, (jbyte) (jint) 0x2E, (jbyte) (jint) 0xAC, (jbyte) (jint) 0x15, (jbyte) (jint) 0x59, (jbyte) (jint) 0xA8, (jbyte) (jint) 0x0A, (jbyte) (jint) 0x9E, (jbyte) (jint) 0x6E, (jbyte) (jint) 0x47, (jbyte) (jint) 0xDF, (jbyte) (jint) 0x34, (jbyte) (jint) 0x35, (jbyte) (jint) 0x6A, (jbyte) (jint) 0xCF, (jbyte) (jint) 0xDC, (jbyte) (jint) 0x22, (jbyte) (jint) 0xC9, (jbyte) (jint) 0xC0, (jbyte) (jint) 0x9B, (jbyte) (jint) 0x89, (jbyte) (jint) 0xD4, (jbyte) (jint) 0xED, (jbyte) (jint) 0xAB, (jbyte) (jint) 0x12, (jbyte) (jint) 0xA2, (jbyte) (jint) 0x0D, (jbyte) (jint) 0x52, (jbyte) (jint) 0xBB, (jbyte) (jint) 0x02, (jbyte) (jint) 0x2F, (jbyte) (jint) 0xA9, (jbyte) (jint) 0xD7, (jbyte) (jint) 0x61, (jbyte) (jint) 0x1E, (jbyte) (jint) 0xB4, (jbyte) (jint) 0x50, (jbyte) (jint) 0x04, (jbyte) (jint) 0xF6, (jbyte) (jint) 0xC2, (jbyte) (jint) 0x16, (jbyte) (jint) 0x25, (jbyte) (jint) 0x86, (jbyte) (jint) 0x56, (jbyte) (jint) 0x55, (jbyte) (jint) 0x09, (jbyte) (jint) 0xBE, (jbyte) (jint) 0x91 } count:256] } count:2 type:IOSClass_byteArray(1)];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoEnginesTwofishEngine)
  }
}

@end

void OrgSpongycastleCryptoEnginesTwofishEngine_init(OrgSpongycastleCryptoEnginesTwofishEngine *self) {
  NSObject_init(self);
  self->encrypting_ = false;
  self->gMDS0_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS];
  self->gMDS1_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS];
  self->gMDS2_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS];
  self->gMDS3_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS];
  self->k64Cnt_ = 0;
  self->workingKey_ = nil;
  IOSIntArray *m1 = [IOSIntArray newArrayWithLength:2];
  IOSIntArray *mX = [IOSIntArray newArrayWithLength:2];
  IOSIntArray *mY = [IOSIntArray newArrayWithLength:2];
  jint j;
  for (jint i = 0; i < OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS; i++) {
    j = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), 0)), i) & (jint) 0xff;
    *IOSIntArray_GetRef(m1, 0) = j;
    *IOSIntArray_GetRef(mX, 0) = OrgSpongycastleCryptoEnginesTwofishEngine_Mx_XWithInt_(self, j) & (jint) 0xff;
    *IOSIntArray_GetRef(mY, 0) = OrgSpongycastleCryptoEnginesTwofishEngine_Mx_YWithInt_(self, j) & (jint) 0xff;
    j = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, 1)), i) & (jint) 0xff;
    *IOSIntArray_GetRef(m1, 1) = j;
    *IOSIntArray_GetRef(mX, 1) = OrgSpongycastleCryptoEnginesTwofishEngine_Mx_XWithInt_(self, j) & (jint) 0xff;
    *IOSIntArray_GetRef(mY, 1) = OrgSpongycastleCryptoEnginesTwofishEngine_Mx_YWithInt_(self, j) & (jint) 0xff;
    *IOSIntArray_GetRef(nil_chk(self->gMDS0_), i) = IOSIntArray_Get(m1, OrgSpongycastleCryptoEnginesTwofishEngine_P_00) | (JreLShift32(IOSIntArray_Get(mX, OrgSpongycastleCryptoEnginesTwofishEngine_P_00), 8)) | (JreLShift32(IOSIntArray_Get(mY, OrgSpongycastleCryptoEnginesTwofishEngine_P_00), 16)) | (JreLShift32(IOSIntArray_Get(mY, OrgSpongycastleCryptoEnginesTwofishEngine_P_00), 24));
    *IOSIntArray_GetRef(nil_chk(self->gMDS1_), i) = IOSIntArray_Get(mY, OrgSpongycastleCryptoEnginesTwofishEngine_P_10) | (JreLShift32(IOSIntArray_Get(mY, OrgSpongycastleCryptoEnginesTwofishEngine_P_10), 8)) | (JreLShift32(IOSIntArray_Get(mX, OrgSpongycastleCryptoEnginesTwofishEngine_P_10), 16)) | (JreLShift32(IOSIntArray_Get(m1, OrgSpongycastleCryptoEnginesTwofishEngine_P_10), 24));
    *IOSIntArray_GetRef(nil_chk(self->gMDS2_), i) = IOSIntArray_Get(mX, OrgSpongycastleCryptoEnginesTwofishEngine_P_20) | (JreLShift32(IOSIntArray_Get(mY, OrgSpongycastleCryptoEnginesTwofishEngine_P_20), 8)) | (JreLShift32(IOSIntArray_Get(m1, OrgSpongycastleCryptoEnginesTwofishEngine_P_20), 16)) | (JreLShift32(IOSIntArray_Get(mY, OrgSpongycastleCryptoEnginesTwofishEngine_P_20), 24));
    *IOSIntArray_GetRef(nil_chk(self->gMDS3_), i) = IOSIntArray_Get(mX, OrgSpongycastleCryptoEnginesTwofishEngine_P_30) | (JreLShift32(IOSIntArray_Get(m1, OrgSpongycastleCryptoEnginesTwofishEngine_P_30), 8)) | (JreLShift32(IOSIntArray_Get(mY, OrgSpongycastleCryptoEnginesTwofishEngine_P_30), 16)) | (JreLShift32(IOSIntArray_Get(mX, OrgSpongycastleCryptoEnginesTwofishEngine_P_30), 24));
  }
}

OrgSpongycastleCryptoEnginesTwofishEngine *new_OrgSpongycastleCryptoEnginesTwofishEngine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesTwofishEngine, init)
}

OrgSpongycastleCryptoEnginesTwofishEngine *create_OrgSpongycastleCryptoEnginesTwofishEngine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesTwofishEngine, init)
}

void OrgSpongycastleCryptoEnginesTwofishEngine_setKeyWithByteArray_(OrgSpongycastleCryptoEnginesTwofishEngine *self, IOSByteArray *key) {
  IOSIntArray *k32e = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS / 64];
  IOSIntArray *k32o = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS / 64];
  IOSIntArray *sBoxKeys = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS / 64];
  self->gSubKeys_ = [IOSIntArray newArrayWithLength:OrgSpongycastleCryptoEnginesTwofishEngine_TOTAL_SUBKEYS];
  if (self->k64Cnt_ < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Key size less than 64 bits");
  }
  if (self->k64Cnt_ > 4) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Key size larger than 256 bits");
  }
  for (jint i = 0; i < self->k64Cnt_; i++) {
    jint p = i * 8;
    *IOSIntArray_GetRef(k32e, i) = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, key, p);
    *IOSIntArray_GetRef(k32o, i) = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, key, p + 4);
    *IOSIntArray_GetRef(sBoxKeys, self->k64Cnt_ - 1 - i) = OrgSpongycastleCryptoEnginesTwofishEngine_RS_MDS_EncodeWithInt_withInt_(self, IOSIntArray_Get(k32e, i), IOSIntArray_Get(k32o, i));
  }
  jint q;
  jint A;
  jint B;
  for (jint i = 0; i < OrgSpongycastleCryptoEnginesTwofishEngine_TOTAL_SUBKEYS / 2; i++) {
    q = i * OrgSpongycastleCryptoEnginesTwofishEngine_SK_STEP;
    A = OrgSpongycastleCryptoEnginesTwofishEngine_F32WithInt_withIntArray_(self, q, k32e);
    B = OrgSpongycastleCryptoEnginesTwofishEngine_F32WithInt_withIntArray_(self, q + OrgSpongycastleCryptoEnginesTwofishEngine_SK_BUMP, k32o);
    B = (JreLShift32(B, 8)) | (JreURShift32(B, 24));
    A += B;
    *IOSIntArray_GetRef(nil_chk(self->gSubKeys_), i * 2) = A;
    A += B;
    *IOSIntArray_GetRef(self->gSubKeys_, i * 2 + 1) = (JreLShift32(A, OrgSpongycastleCryptoEnginesTwofishEngine_SK_ROTL)) | (JreURShift32(A, (32 - OrgSpongycastleCryptoEnginesTwofishEngine_SK_ROTL)));
  }
  jint k0 = IOSIntArray_Get(sBoxKeys, 0);
  jint k1 = IOSIntArray_Get(sBoxKeys, 1);
  jint k2 = IOSIntArray_Get(sBoxKeys, 2);
  jint k3 = IOSIntArray_Get(sBoxKeys, 3);
  jint b0;
  jint b1;
  jint b2;
  jint b3;
  self->gSBox_ = [IOSIntArray newArrayWithLength:4 * OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS];
  for (jint i = 0; i < OrgSpongycastleCryptoEnginesTwofishEngine_MAX_KEY_BITS; i++) {
    b0 = b1 = b2 = b3 = i;
    switch (self->k64Cnt_ & 3) {
      case 1:
      *IOSIntArray_GetRef(nil_chk(self->gSBox_), i * 2) = IOSIntArray_Get(nil_chk(self->gMDS0_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), OrgSpongycastleCryptoEnginesTwofishEngine_P_01)), b0) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k0));
      *IOSIntArray_GetRef(nil_chk(self->gSBox_), i * 2 + 1) = IOSIntArray_Get(nil_chk(self->gMDS1_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_11)), b1) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k0));
      *IOSIntArray_GetRef(nil_chk(self->gSBox_), i * 2 + (jint) 0x200) = IOSIntArray_Get(nil_chk(self->gMDS2_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_21)), b2) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k0));
      *IOSIntArray_GetRef(nil_chk(self->gSBox_), i * 2 + (jint) 0x201) = IOSIntArray_Get(nil_chk(self->gMDS3_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_31)), b3) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k0));
      break;
      case 0:
      b0 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), OrgSpongycastleCryptoEnginesTwofishEngine_P_04)), b0) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k3);
      b1 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_14)), b1) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k3);
      b2 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_24)), b2) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k3);
      b3 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_34)), b3) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k3);
      case 3:
      b0 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), OrgSpongycastleCryptoEnginesTwofishEngine_P_03)), b0) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k2);
      b1 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_13)), b1) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k2);
      b2 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_23)), b2) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k2);
      b3 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_33)), b3) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k2);
      case 2:
      *IOSIntArray_GetRef(nil_chk(self->gSBox_), i * 2) = IOSIntArray_Get(nil_chk(self->gMDS0_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), OrgSpongycastleCryptoEnginesTwofishEngine_P_01)), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_02)), b0) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k1)) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k0));
      *IOSIntArray_GetRef(nil_chk(self->gSBox_), i * 2 + 1) = IOSIntArray_Get(nil_chk(self->gMDS1_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_11)), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_12)), b1) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k1)) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k0));
      *IOSIntArray_GetRef(nil_chk(self->gSBox_), i * 2 + (jint) 0x200) = IOSIntArray_Get(nil_chk(self->gMDS2_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_21)), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_22)), b2) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k1)) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k0));
      *IOSIntArray_GetRef(nil_chk(self->gSBox_), i * 2 + (jint) 0x201) = IOSIntArray_Get(nil_chk(self->gMDS3_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_31)), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_32)), b3) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k1)) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k0));
      break;
    }
  }
}

void OrgSpongycastleCryptoEnginesTwofishEngine_encryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, IOSByteArray *src, jint srcIndex, IOSByteArray *dst, jint dstIndex) {
  jint x0 = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, src, srcIndex) ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN);
  jint x1 = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, src, srcIndex + 4) ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN + 1);
  jint x2 = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, src, srcIndex + 8) ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN + 2);
  jint x3 = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, src, srcIndex + 12) ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN + 3);
  jint k = OrgSpongycastleCryptoEnginesTwofishEngine_ROUND_SUBKEYS;
  jint t0;
  jint t1;
  for (jint r = 0; r < OrgSpongycastleCryptoEnginesTwofishEngine_ROUNDS; r += 2) {
    t0 = OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_0WithInt_(self, x0);
    t1 = OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_3WithInt_(self, x1);
    x2 ^= t0 + t1 + IOSIntArray_Get(nil_chk(self->gSubKeys_), k++);
    x2 = (JreURShift32(x2, 1)) | (JreLShift32(x2, 31));
    x3 = ((JreLShift32(x3, 1)) | (JreURShift32(x3, 31))) ^ (t0 + 2 * t1 + IOSIntArray_Get(self->gSubKeys_, k++));
    t0 = OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_0WithInt_(self, x2);
    t1 = OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_3WithInt_(self, x3);
    x0 ^= t0 + t1 + IOSIntArray_Get(nil_chk(self->gSubKeys_), k++);
    x0 = (JreURShift32(x0, 1)) | (JreLShift32(x0, 31));
    x1 = ((JreLShift32(x1, 1)) | (JreURShift32(x1, 31))) ^ (t0 + 2 * t1 + IOSIntArray_Get(self->gSubKeys_, k++));
  }
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, x2 ^ IOSIntArray_Get(self->gSubKeys_, OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN), dst, dstIndex);
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, x3 ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN + 1), dst, dstIndex + 4);
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, x0 ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN + 2), dst, dstIndex + 8);
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, x1 ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN + 3), dst, dstIndex + 12);
}

void OrgSpongycastleCryptoEnginesTwofishEngine_decryptBlockWithByteArray_withInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, IOSByteArray *src, jint srcIndex, IOSByteArray *dst, jint dstIndex) {
  jint x2 = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, src, srcIndex) ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN);
  jint x3 = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, src, srcIndex + 4) ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN + 1);
  jint x0 = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, src, srcIndex + 8) ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN + 2);
  jint x1 = OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(self, src, srcIndex + 12) ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_OUTPUT_WHITEN + 3);
  jint k = OrgSpongycastleCryptoEnginesTwofishEngine_ROUND_SUBKEYS + 2 * OrgSpongycastleCryptoEnginesTwofishEngine_ROUNDS - 1;
  jint t0;
  jint t1;
  for (jint r = 0; r < OrgSpongycastleCryptoEnginesTwofishEngine_ROUNDS; r += 2) {
    t0 = OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_0WithInt_(self, x2);
    t1 = OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_3WithInt_(self, x3);
    x1 ^= t0 + 2 * t1 + IOSIntArray_Get(nil_chk(self->gSubKeys_), k--);
    x0 = ((JreLShift32(x0, 1)) | (JreURShift32(x0, 31))) ^ (t0 + t1 + IOSIntArray_Get(self->gSubKeys_, k--));
    x1 = (JreURShift32(x1, 1)) | (JreLShift32(x1, 31));
    t0 = OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_0WithInt_(self, x0);
    t1 = OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_3WithInt_(self, x1);
    x3 ^= t0 + 2 * t1 + IOSIntArray_Get(nil_chk(self->gSubKeys_), k--);
    x2 = ((JreLShift32(x2, 1)) | (JreURShift32(x2, 31))) ^ (t0 + t1 + IOSIntArray_Get(self->gSubKeys_, k--));
    x3 = (JreURShift32(x3, 1)) | (JreLShift32(x3, 31));
  }
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, x0 ^ IOSIntArray_Get(self->gSubKeys_, OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN), dst, dstIndex);
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, x1 ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN + 1), dst, dstIndex + 4);
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, x2 ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN + 2), dst, dstIndex + 8);
  OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(self, x3 ^ IOSIntArray_Get(nil_chk(self->gSubKeys_), OrgSpongycastleCryptoEnginesTwofishEngine_INPUT_WHITEN + 3), dst, dstIndex + 12);
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_F32WithInt_withIntArray_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x, IOSIntArray *k32) {
  jint b0 = OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, x);
  jint b1 = OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, x);
  jint b2 = OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, x);
  jint b3 = OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, x);
  jint k0 = IOSIntArray_Get(nil_chk(k32), 0);
  jint k1 = IOSIntArray_Get(k32, 1);
  jint k2 = IOSIntArray_Get(k32, 2);
  jint k3 = IOSIntArray_Get(k32, 3);
  jint result = 0;
  switch (self->k64Cnt_ & 3) {
    case 1:
    result = IOSIntArray_Get(nil_chk(self->gMDS0_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), OrgSpongycastleCryptoEnginesTwofishEngine_P_01)), b0) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k0)) ^ IOSIntArray_Get(nil_chk(self->gMDS1_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_11)), b1) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k0)) ^ IOSIntArray_Get(nil_chk(self->gMDS2_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_21)), b2) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k0)) ^ IOSIntArray_Get(nil_chk(self->gMDS3_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_31)), b3) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k0));
    break;
    case 0:
    b0 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), OrgSpongycastleCryptoEnginesTwofishEngine_P_04)), b0) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k3);
    b1 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_14)), b1) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k3);
    b2 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_24)), b2) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k3);
    b3 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_34)), b3) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k3);
    case 3:
    b0 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), OrgSpongycastleCryptoEnginesTwofishEngine_P_03)), b0) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k2);
    b1 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_13)), b1) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k2);
    b2 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_23)), b2) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k2);
    b3 = (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_33)), b3) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k2);
    case 2:
    result = IOSIntArray_Get(nil_chk(self->gMDS0_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoEnginesTwofishEngine_P), OrgSpongycastleCryptoEnginesTwofishEngine_P_01)), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_02)), b0) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k1)) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(self, k0)) ^ IOSIntArray_Get(nil_chk(self->gMDS1_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_11)), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_12)), b1) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k1)) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(self, k0)) ^ IOSIntArray_Get(nil_chk(self->gMDS2_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_21)), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_22)), b2) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k1)) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(self, k0)) ^ IOSIntArray_Get(nil_chk(self->gMDS3_), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_31)), (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(OrgSpongycastleCryptoEnginesTwofishEngine_P, OrgSpongycastleCryptoEnginesTwofishEngine_P_32)), b3) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k1)) & (jint) 0xff) ^ OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(self, k0));
    break;
  }
  return result;
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_RS_MDS_EncodeWithInt_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint k0, jint k1) {
  jint r = k1;
  for (jint i = 0; i < 4; i++) {
    r = OrgSpongycastleCryptoEnginesTwofishEngine_RS_remWithInt_(self, r);
  }
  r ^= k0;
  for (jint i = 0; i < 4; i++) {
    r = OrgSpongycastleCryptoEnginesTwofishEngine_RS_remWithInt_(self, r);
  }
  return r;
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_RS_remWithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  jint b = (JreURShift32(x, 24)) & (jint) 0xff;
  jint g2 = ((JreLShift32(b, 1)) ^ ((b & (jint) 0x80) != 0 ? OrgSpongycastleCryptoEnginesTwofishEngine_RS_GF_FDBK : 0)) & (jint) 0xff;
  jint g3 = ((JreURShift32(b, 1)) ^ ((b & (jint) 0x01) != 0 ? (JreURShift32(OrgSpongycastleCryptoEnginesTwofishEngine_RS_GF_FDBK, 1)) : 0)) ^ g2;
  return ((JreLShift32(x, 8)) ^ (JreLShift32(g3, 24)) ^ (JreLShift32(g2, 16)) ^ (JreLShift32(g3, 8)) ^ b);
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_LFSR1WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return (JreRShift32(x, 1)) ^ (((x & (jint) 0x01) != 0) ? OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK_2 : 0);
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_LFSR2WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return (JreRShift32(x, 2)) ^ (((x & (jint) 0x02) != 0) ? OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK_2 : 0) ^ (((x & (jint) 0x01) != 0) ? OrgSpongycastleCryptoEnginesTwofishEngine_GF256_FDBK_4 : 0);
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_Mx_XWithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return x ^ OrgSpongycastleCryptoEnginesTwofishEngine_LFSR2WithInt_(self, x);
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_Mx_YWithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return x ^ OrgSpongycastleCryptoEnginesTwofishEngine_LFSR1WithInt_(self, x) ^ OrgSpongycastleCryptoEnginesTwofishEngine_LFSR2WithInt_(self, x);
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_b0WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return x & (jint) 0xff;
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_b1WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return (JreURShift32(x, 8)) & (jint) 0xff;
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_b2WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return (JreURShift32(x, 16)) & (jint) 0xff;
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_b3WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return (JreURShift32(x, 24)) & (jint) 0xff;
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_0WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return IOSIntArray_Get(nil_chk(self->gSBox_), (jint) 0x000 + 2 * (x & (jint) 0xff)) ^ IOSIntArray_Get(self->gSBox_, (jint) 0x001 + 2 * ((JreURShift32(x, 8)) & (jint) 0xff)) ^ IOSIntArray_Get(self->gSBox_, (jint) 0x200 + 2 * ((JreURShift32(x, 16)) & (jint) 0xff)) ^ IOSIntArray_Get(self->gSBox_, (jint) 0x201 + 2 * ((JreURShift32(x, 24)) & (jint) 0xff));
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_Fe32_3WithInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint x) {
  return IOSIntArray_Get(nil_chk(self->gSBox_), (jint) 0x000 + 2 * ((JreURShift32(x, 24)) & (jint) 0xff)) ^ IOSIntArray_Get(self->gSBox_, (jint) 0x001 + 2 * (x & (jint) 0xff)) ^ IOSIntArray_Get(self->gSBox_, (jint) 0x200 + 2 * ((JreURShift32(x, 8)) & (jint) 0xff)) ^ IOSIntArray_Get(self->gSBox_, (jint) 0x201 + 2 * ((JreURShift32(x, 16)) & (jint) 0xff));
}

jint OrgSpongycastleCryptoEnginesTwofishEngine_BytesTo32BitsWithByteArray_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, IOSByteArray *b, jint p) {
  return ((IOSByteArray_Get(nil_chk(b), p) & (jint) 0xff)) | (JreLShift32((IOSByteArray_Get(b, p + 1) & (jint) 0xff), 8)) | (JreLShift32((IOSByteArray_Get(b, p + 2) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(b, p + 3) & (jint) 0xff), 24));
}

void OrgSpongycastleCryptoEnginesTwofishEngine_Bits32ToBytesWithInt_withByteArray_withInt_(OrgSpongycastleCryptoEnginesTwofishEngine *self, jint inArg, IOSByteArray *b, jint offset) {
  *IOSByteArray_GetRef(nil_chk(b), offset) = (jbyte) inArg;
  *IOSByteArray_GetRef(b, offset + 1) = (jbyte) (JreRShift32(inArg, 8));
  *IOSByteArray_GetRef(b, offset + 2) = (jbyte) (JreRShift32(inArg, 16));
  *IOSByteArray_GetRef(b, offset + 3) = (jbyte) (JreRShift32(inArg, 24));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesTwofishEngine)
