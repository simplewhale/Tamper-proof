//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/RijndaelEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesRijndaelEngine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesRijndaelEngine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesRijndaelEngine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesRijndaelEngine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesRijndaelEngine

#if !defined (OrgSpongycastleCryptoEnginesRijndaelEngine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesRijndaelEngine || defined(INCLUDE_OrgSpongycastleCryptoEnginesRijndaelEngine))
#define OrgSpongycastleCryptoEnginesRijndaelEngine_

#define RESTRICT_OrgSpongycastleCryptoBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoBlockCipher 1
#include "org/spongycastle/crypto/BlockCipher.h"

@class IOSByteArray;
@class IOSObjectArray;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoEnginesRijndaelEngine : NSObject < OrgSpongycastleCryptoBlockCipher >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)blockBits;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoEnginesRijndaelEngine)

inline IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_get_shifts0(void);
inline IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_set_shifts0(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_shifts0;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCryptoEnginesRijndaelEngine, shifts0, IOSObjectArray *)

inline IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_get_shifts1(void);
inline IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_set_shifts1(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgSpongycastleCryptoEnginesRijndaelEngine_shifts1;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCryptoEnginesRijndaelEngine, shifts1, IOSObjectArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesRijndaelEngine_init(OrgSpongycastleCryptoEnginesRijndaelEngine *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesRijndaelEngine *new_OrgSpongycastleCryptoEnginesRijndaelEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesRijndaelEngine *create_OrgSpongycastleCryptoEnginesRijndaelEngine_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesRijndaelEngine_initWithInt_(OrgSpongycastleCryptoEnginesRijndaelEngine *self, jint blockBits);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesRijndaelEngine *new_OrgSpongycastleCryptoEnginesRijndaelEngine_initWithInt_(jint blockBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesRijndaelEngine *create_OrgSpongycastleCryptoEnginesRijndaelEngine_initWithInt_(jint blockBits);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesRijndaelEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesRijndaelEngine")
