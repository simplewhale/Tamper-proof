//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/CAST6Engine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST6Engine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesCAST6Engine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST6Engine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST6Engine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesCAST6Engine

#if !defined (OrgSpongycastleCryptoEnginesCAST6Engine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST6Engine || defined(INCLUDE_OrgSpongycastleCryptoEnginesCAST6Engine))
#define OrgSpongycastleCryptoEnginesCAST6Engine_

#define RESTRICT_OrgSpongycastleCryptoEnginesCAST5Engine 1
#define INCLUDE_OrgSpongycastleCryptoEnginesCAST5Engine 1
#include "org/spongycastle/crypto/engines/CAST5Engine.h"

@class IOSByteArray;
@class IOSIntArray;

@interface OrgSpongycastleCryptoEnginesCAST6Engine : OrgSpongycastleCryptoEnginesCAST5Engine {
 @public
  IOSIntArray *_Kr_CAST6Engine_;
  IOSIntArray *_Km_CAST6Engine_;
  IOSIntArray *_Tr_;
  IOSIntArray *_Tm_;
}

#pragma mark Public

- (instancetype)init;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (void)reset;

#pragma mark Protected

- (void)CAST_DecipherWithInt:(jint)A
                     withInt:(jint)B
                     withInt:(jint)C
                     withInt:(jint)D
                withIntArray:(IOSIntArray *)result;

- (void)CAST_EncipherWithInt:(jint)A
                     withInt:(jint)B
                     withInt:(jint)C
                     withInt:(jint)D
                withIntArray:(IOSIntArray *)result;

- (jint)decryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex;

- (jint)encryptBlockWithByteArray:(IOSByteArray *)src
                          withInt:(jint)srcIndex
                    withByteArray:(IOSByteArray *)dst
                          withInt:(jint)dstIndex;

- (void)setKeyWithByteArray:(IOSByteArray *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEnginesCAST6Engine)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCAST6Engine, _Kr_CAST6Engine_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCAST6Engine, _Km_CAST6Engine_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCAST6Engine, _Tr_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesCAST6Engine, _Tm_, IOSIntArray *)

inline jint OrgSpongycastleCryptoEnginesCAST6Engine_get_ROUNDS(void);
#define OrgSpongycastleCryptoEnginesCAST6Engine_ROUNDS 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesCAST6Engine, ROUNDS, jint)

inline jint OrgSpongycastleCryptoEnginesCAST6Engine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesCAST6Engine_BLOCK_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesCAST6Engine, BLOCK_SIZE, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesCAST6Engine_init(OrgSpongycastleCryptoEnginesCAST6Engine *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesCAST6Engine *new_OrgSpongycastleCryptoEnginesCAST6Engine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesCAST6Engine *create_OrgSpongycastleCryptoEnginesCAST6Engine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesCAST6Engine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesCAST6Engine")
