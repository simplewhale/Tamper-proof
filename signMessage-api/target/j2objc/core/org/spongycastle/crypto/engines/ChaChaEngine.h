//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/engines/ChaChaEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesChaChaEngine")
#ifdef RESTRICT_OrgSpongycastleCryptoEnginesChaChaEngine
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesChaChaEngine 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEnginesChaChaEngine 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEnginesChaChaEngine

#if !defined (OrgSpongycastleCryptoEnginesChaChaEngine_) && (INCLUDE_ALL_OrgSpongycastleCryptoEnginesChaChaEngine || defined(INCLUDE_OrgSpongycastleCryptoEnginesChaChaEngine))
#define OrgSpongycastleCryptoEnginesChaChaEngine_

#define RESTRICT_OrgSpongycastleCryptoEnginesSalsa20Engine 1
#define INCLUDE_OrgSpongycastleCryptoEnginesSalsa20Engine 1
#include "org/spongycastle/crypto/engines/Salsa20Engine.h"

@class IOSByteArray;
@class IOSIntArray;

@interface OrgSpongycastleCryptoEnginesChaChaEngine : OrgSpongycastleCryptoEnginesSalsa20Engine

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)rounds;

+ (void)chachaCoreWithInt:(jint)rounds
             withIntArray:(IOSIntArray *)input
             withIntArray:(IOSIntArray *)x;

- (NSString *)getAlgorithmName;

#pragma mark Protected

- (void)advanceCounter;

- (void)advanceCounterWithLong:(jlong)diff;

- (void)generateKeyStreamWithByteArray:(IOSByteArray *)output;

- (jlong)getCounter;

- (void)resetCounter;

- (void)retreatCounter;

- (void)retreatCounterWithLong:(jlong)diff;

- (void)setKeyWithByteArray:(IOSByteArray *)keyBytes
              withByteArray:(IOSByteArray *)ivBytes;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEnginesChaChaEngine)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesChaChaEngine_init(OrgSpongycastleCryptoEnginesChaChaEngine *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesChaChaEngine *new_OrgSpongycastleCryptoEnginesChaChaEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesChaChaEngine *create_OrgSpongycastleCryptoEnginesChaChaEngine_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesChaChaEngine_initWithInt_(OrgSpongycastleCryptoEnginesChaChaEngine *self, jint rounds);

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesChaChaEngine *new_OrgSpongycastleCryptoEnginesChaChaEngine_initWithInt_(jint rounds) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEnginesChaChaEngine *create_OrgSpongycastleCryptoEnginesChaChaEngine_initWithInt_(jint rounds);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEnginesChaChaEngine_chachaCoreWithInt_withIntArray_withIntArray_(jint rounds, IOSIntArray *input, IOSIntArray *x);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEnginesChaChaEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEnginesChaChaEngine")
