//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/AsymmetricCipherKeyPair.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoAsymmetricCipherKeyPair")
#ifdef RESTRICT_OrgSpongycastleCryptoAsymmetricCipherKeyPair
#define INCLUDE_ALL_OrgSpongycastleCryptoAsymmetricCipherKeyPair 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoAsymmetricCipherKeyPair 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoAsymmetricCipherKeyPair

#if !defined (OrgSpongycastleCryptoAsymmetricCipherKeyPair_) && (INCLUDE_ALL_OrgSpongycastleCryptoAsymmetricCipherKeyPair || defined(INCLUDE_OrgSpongycastleCryptoAsymmetricCipherKeyPair))
#define OrgSpongycastleCryptoAsymmetricCipherKeyPair_

@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoAsymmetricCipherKeyPair : NSObject

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicParam
                    withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateParam;

- (instancetype)initWithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)publicParam
                    withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)privateParam;

- (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)getPrivate;

- (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)getPublic;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoAsymmetricCipherKeyPair)

FOUNDATION_EXPORT void OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(OrgSpongycastleCryptoAsymmetricCipherKeyPair *self, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateParam);

FOUNDATION_EXPORT OrgSpongycastleCryptoAsymmetricCipherKeyPair *new_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateParam) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAsymmetricCipherKeyPair *create_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateParam);

FOUNDATION_EXPORT void OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoCipherParameters_withOrgSpongycastleCryptoCipherParameters_(OrgSpongycastleCryptoAsymmetricCipherKeyPair *self, id<OrgSpongycastleCryptoCipherParameters> publicParam, id<OrgSpongycastleCryptoCipherParameters> privateParam);

FOUNDATION_EXPORT OrgSpongycastleCryptoAsymmetricCipherKeyPair *new_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoCipherParameters_withOrgSpongycastleCryptoCipherParameters_(id<OrgSpongycastleCryptoCipherParameters> publicParam, id<OrgSpongycastleCryptoCipherParameters> privateParam) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAsymmetricCipherKeyPair *create_OrgSpongycastleCryptoAsymmetricCipherKeyPair_initWithOrgSpongycastleCryptoCipherParameters_withOrgSpongycastleCryptoCipherParameters_(id<OrgSpongycastleCryptoCipherParameters> publicParam, id<OrgSpongycastleCryptoCipherParameters> privateParam);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoAsymmetricCipherKeyPair)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoAsymmetricCipherKeyPair")
