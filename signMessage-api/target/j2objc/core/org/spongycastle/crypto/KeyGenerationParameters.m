//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/KeyGenerationParameters.java
//

#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"

@interface OrgSpongycastleCryptoKeyGenerationParameters () {
 @public
  JavaSecuritySecureRandom *random_;
  jint strength_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoKeyGenerationParameters, random_, JavaSecuritySecureRandom *)

@implementation OrgSpongycastleCryptoKeyGenerationParameters

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                         withInt:(jint)strength {
  OrgSpongycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(self, random, strength);
  return self;
}

- (JavaSecuritySecureRandom *)getRandom {
  return random_;
}

- (jint)getStrength {
  return strength_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:withInt:);
  methods[1].selector = @selector(getRandom);
  methods[2].selector = @selector(getStrength);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "strength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;I" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoKeyGenerationParameters = { "KeyGenerationParameters", "org.spongycastle.crypto", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoKeyGenerationParameters;
}

@end

void OrgSpongycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(OrgSpongycastleCryptoKeyGenerationParameters *self, JavaSecuritySecureRandom *random, jint strength) {
  NSObject_init(self);
  self->random_ = random;
  self->strength_ = strength;
}

OrgSpongycastleCryptoKeyGenerationParameters *new_OrgSpongycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(JavaSecuritySecureRandom *random, jint strength) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoKeyGenerationParameters, initWithJavaSecuritySecureRandom_withInt_, random, strength)
}

OrgSpongycastleCryptoKeyGenerationParameters *create_OrgSpongycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(JavaSecuritySecureRandom *random, jint strength) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoKeyGenerationParameters, initWithJavaSecuritySecureRandom_withInt_, random, strength)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoKeyGenerationParameters)
