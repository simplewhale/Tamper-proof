//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/encodings/PKCS1Encoding.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEncodingsPKCS1Encoding")
#ifdef RESTRICT_OrgSpongycastleCryptoEncodingsPKCS1Encoding
#define INCLUDE_ALL_OrgSpongycastleCryptoEncodingsPKCS1Encoding 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEncodingsPKCS1Encoding 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEncodingsPKCS1Encoding

#if !defined (OrgSpongycastleCryptoEncodingsPKCS1Encoding_) && (INCLUDE_ALL_OrgSpongycastleCryptoEncodingsPKCS1Encoding || defined(INCLUDE_OrgSpongycastleCryptoEncodingsPKCS1Encoding))
#define OrgSpongycastleCryptoEncodingsPKCS1Encoding_

#define RESTRICT_OrgSpongycastleCryptoAsymmetricBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoAsymmetricBlockCipher 1
#include "org/spongycastle/crypto/AsymmetricBlockCipher.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoEncodingsPKCS1Encoding : NSObject < OrgSpongycastleCryptoAsymmetricBlockCipher >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                                     withByteArray:(IOSByteArray *)fallback;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                                           withInt:(jint)pLen;

- (jint)getInputBlockSize;

- (jint)getOutputBlockSize;

- (id<OrgSpongycastleCryptoAsymmetricBlockCipher>)getUnderlyingCipher;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)inLen;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEncodingsPKCS1Encoding)

inline NSString *OrgSpongycastleCryptoEncodingsPKCS1Encoding_get_STRICT_LENGTH_ENABLED_PROPERTY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoEncodingsPKCS1Encoding_STRICT_LENGTH_ENABLED_PROPERTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEncodingsPKCS1Encoding, STRICT_LENGTH_ENABLED_PROPERTY, NSString *)

inline NSString *OrgSpongycastleCryptoEncodingsPKCS1Encoding_get_NOT_STRICT_LENGTH_ENABLED_PROPERTY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoEncodingsPKCS1Encoding_NOT_STRICT_LENGTH_ENABLED_PROPERTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEncodingsPKCS1Encoding, NOT_STRICT_LENGTH_ENABLED_PROPERTY, NSString *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_(OrgSpongycastleCryptoEncodingsPKCS1Encoding *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsPKCS1Encoding *new_OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsPKCS1Encoding *create_OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withInt_(OrgSpongycastleCryptoEncodingsPKCS1Encoding *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, jint pLen);

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsPKCS1Encoding *new_OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withInt_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, jint pLen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsPKCS1Encoding *create_OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withInt_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, jint pLen);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withByteArray_(OrgSpongycastleCryptoEncodingsPKCS1Encoding *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, IOSByteArray *fallback);

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsPKCS1Encoding *new_OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, IOSByteArray *fallback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsPKCS1Encoding *create_OrgSpongycastleCryptoEncodingsPKCS1Encoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, IOSByteArray *fallback);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEncodingsPKCS1Encoding)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEncodingsPKCS1Encoding")
