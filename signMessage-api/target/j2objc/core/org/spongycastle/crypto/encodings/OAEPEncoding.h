//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/encodings/OAEPEncoding.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEncodingsOAEPEncoding")
#ifdef RESTRICT_OrgSpongycastleCryptoEncodingsOAEPEncoding
#define INCLUDE_ALL_OrgSpongycastleCryptoEncodingsOAEPEncoding 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEncodingsOAEPEncoding 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEncodingsOAEPEncoding

#if !defined (OrgSpongycastleCryptoEncodingsOAEPEncoding_) && (INCLUDE_ALL_OrgSpongycastleCryptoEncodingsOAEPEncoding || defined(INCLUDE_OrgSpongycastleCryptoEncodingsOAEPEncoding))
#define OrgSpongycastleCryptoEncodingsOAEPEncoding_

#define RESTRICT_OrgSpongycastleCryptoAsymmetricBlockCipher 1
#define INCLUDE_OrgSpongycastleCryptoAsymmetricBlockCipher 1
#include "org/spongycastle/crypto/AsymmetricBlockCipher.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastleCryptoEncodingsOAEPEncoding : NSObject < OrgSpongycastleCryptoAsymmetricBlockCipher >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)hash_;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)hash_
                                                     withByteArray:(IOSByteArray *)encodingParams;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)hash_
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)mgf1Hash
                                                     withByteArray:(IOSByteArray *)encodingParams;

- (IOSByteArray *)decodeBlockWithByteArray:(IOSByteArray *)inArg
                                   withInt:(jint)inOff
                                   withInt:(jint)inLen;

- (IOSByteArray *)encodeBlockWithByteArray:(IOSByteArray *)inArg
                                   withInt:(jint)inOff
                                   withInt:(jint)inLen;

- (jint)getInputBlockSize;

- (jint)getOutputBlockSize;

- (id<OrgSpongycastleCryptoAsymmetricBlockCipher>)getUnderlyingCipher;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)inLen;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEncodingsOAEPEncoding)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_(OrgSpongycastleCryptoEncodingsOAEPEncoding *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsOAEPEncoding *new_OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsOAEPEncoding *create_OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_(OrgSpongycastleCryptoEncodingsOAEPEncoding *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_);

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsOAEPEncoding *new_OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsOAEPEncoding *create_OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withByteArray_(OrgSpongycastleCryptoEncodingsOAEPEncoding *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_, IOSByteArray *encodingParams);

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsOAEPEncoding *new_OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_, IOSByteArray *encodingParams) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsOAEPEncoding *create_OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_, IOSByteArray *encodingParams);

FOUNDATION_EXPORT void OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_(OrgSpongycastleCryptoEncodingsOAEPEncoding *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_, id<OrgSpongycastleCryptoDigest> mgf1Hash, IOSByteArray *encodingParams);

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsOAEPEncoding *new_OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_, id<OrgSpongycastleCryptoDigest> mgf1Hash, IOSByteArray *encodingParams) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEncodingsOAEPEncoding *create_OrgSpongycastleCryptoEncodingsOAEPEncoding_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> hash_, id<OrgSpongycastleCryptoDigest> mgf1Hash, IOSByteArray *encodingParams);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEncodingsOAEPEncoding)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEncodingsOAEPEncoding")
