//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/commitments/HashCommitter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoCommitmentsHashCommitter")
#ifdef RESTRICT_OrgSpongycastleCryptoCommitmentsHashCommitter
#define INCLUDE_ALL_OrgSpongycastleCryptoCommitmentsHashCommitter 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoCommitmentsHashCommitter 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoCommitmentsHashCommitter

#if !defined (OrgSpongycastleCryptoCommitmentsHashCommitter_) && (INCLUDE_ALL_OrgSpongycastleCryptoCommitmentsHashCommitter || defined(INCLUDE_OrgSpongycastleCryptoCommitmentsHashCommitter))
#define OrgSpongycastleCryptoCommitmentsHashCommitter_

#define RESTRICT_OrgSpongycastleCryptoCommitter 1
#define INCLUDE_OrgSpongycastleCryptoCommitter 1
#include "org/spongycastle/crypto/Committer.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class OrgSpongycastleCryptoCommitment;
@protocol OrgSpongycastleCryptoExtendedDigest;

@interface OrgSpongycastleCryptoCommitmentsHashCommitter : NSObject < OrgSpongycastleCryptoCommitter >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoExtendedDigest:(id<OrgSpongycastleCryptoExtendedDigest>)digest
                               withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (OrgSpongycastleCryptoCommitment *)commitWithByteArray:(IOSByteArray *)message;

- (jboolean)isRevealedWithOrgSpongycastleCryptoCommitment:(OrgSpongycastleCryptoCommitment *)commitment
                                            withByteArray:(IOSByteArray *)message;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoCommitmentsHashCommitter)

FOUNDATION_EXPORT void OrgSpongycastleCryptoCommitmentsHashCommitter_initWithOrgSpongycastleCryptoExtendedDigest_withJavaSecuritySecureRandom_(OrgSpongycastleCryptoCommitmentsHashCommitter *self, id<OrgSpongycastleCryptoExtendedDigest> digest, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT OrgSpongycastleCryptoCommitmentsHashCommitter *new_OrgSpongycastleCryptoCommitmentsHashCommitter_initWithOrgSpongycastleCryptoExtendedDigest_withJavaSecuritySecureRandom_(id<OrgSpongycastleCryptoExtendedDigest> digest, JavaSecuritySecureRandom *random) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoCommitmentsHashCommitter *create_OrgSpongycastleCryptoCommitmentsHashCommitter_initWithOrgSpongycastleCryptoExtendedDigest_withJavaSecuritySecureRandom_(id<OrgSpongycastleCryptoExtendedDigest> digest, JavaSecuritySecureRandom *random);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoCommitmentsHashCommitter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoCommitmentsHashCommitter")
