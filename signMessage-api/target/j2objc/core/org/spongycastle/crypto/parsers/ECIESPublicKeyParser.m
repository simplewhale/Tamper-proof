//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/parsers/ECIESPublicKeyParser.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Integer.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/crypto/params/ECDomainParameters.h"
#include "org/spongycastle/crypto/params/ECPublicKeyParameters.h"
#include "org/spongycastle/crypto/parsers/ECIESPublicKeyParser.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/util/io/Streams.h"

@interface OrgSpongycastleCryptoParsersECIESPublicKeyParser () {
 @public
  OrgSpongycastleCryptoParamsECDomainParameters *ecParams_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParsersECIESPublicKeyParser, ecParams_, OrgSpongycastleCryptoParamsECDomainParameters *)

@implementation OrgSpongycastleCryptoParsersECIESPublicKeyParser

- (instancetype)initWithOrgSpongycastleCryptoParamsECDomainParameters:(OrgSpongycastleCryptoParamsECDomainParameters *)ecParams {
  OrgSpongycastleCryptoParsersECIESPublicKeyParser_initWithOrgSpongycastleCryptoParamsECDomainParameters_(self, ecParams);
  return self;
}

- (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)readKeyWithJavaIoInputStream:(JavaIoInputStream *)stream {
  IOSByteArray *V;
  jint first = [((JavaIoInputStream *) nil_chk(stream)) read];
  switch (first) {
    case (jint) 0x00:
    @throw new_JavaIoIOException_initWithNSString_(@"Sender's public key invalid.");
    case (jint) 0x02:
    case (jint) 0x03:
    V = [IOSByteArray newArrayWithLength:1 + ([((OrgSpongycastleMathEcECCurve *) nil_chk([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(ecParams_)) getCurve])) getFieldSize] + 7) / 8];
    break;
    case (jint) 0x04:
    case (jint) 0x06:
    case (jint) 0x07:
    V = [IOSByteArray newArrayWithLength:1 + 2 * (([((OrgSpongycastleMathEcECCurve *) nil_chk([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(ecParams_)) getCurve])) getFieldSize] + 7) / 8)];
    break;
    default:
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$", @"Sender's public key has invalid point encoding 0x", JavaLangInteger_toStringWithInt_withInt_(first, 16)));
  }
  *IOSByteArray_GetRef(nil_chk(V), 0) = (jbyte) first;
  OrgSpongycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(stream, V, 1, V->size_ - 1);
  return new_OrgSpongycastleCryptoParamsECPublicKeyParameters_initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleCryptoParamsECDomainParameters_([((OrgSpongycastleMathEcECCurve *) nil_chk([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(ecParams_)) getCurve])) decodePointWithByteArray:V], ecParams_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsAsymmetricKeyParameter;", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoParamsECDomainParameters:);
  methods[1].selector = @selector(readKeyWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ecParams_", "LOrgSpongycastleCryptoParamsECDomainParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoParamsECDomainParameters;", "readKey", "LJavaIoInputStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParsersECIESPublicKeyParser = { "ECIESPublicKeyParser", "org.spongycastle.crypto.parsers", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParsersECIESPublicKeyParser;
}

@end

void OrgSpongycastleCryptoParsersECIESPublicKeyParser_initWithOrgSpongycastleCryptoParamsECDomainParameters_(OrgSpongycastleCryptoParsersECIESPublicKeyParser *self, OrgSpongycastleCryptoParamsECDomainParameters *ecParams) {
  NSObject_init(self);
  self->ecParams_ = ecParams;
}

OrgSpongycastleCryptoParsersECIESPublicKeyParser *new_OrgSpongycastleCryptoParsersECIESPublicKeyParser_initWithOrgSpongycastleCryptoParamsECDomainParameters_(OrgSpongycastleCryptoParamsECDomainParameters *ecParams) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParsersECIESPublicKeyParser, initWithOrgSpongycastleCryptoParamsECDomainParameters_, ecParams)
}

OrgSpongycastleCryptoParsersECIESPublicKeyParser *create_OrgSpongycastleCryptoParsersECIESPublicKeyParser_initWithOrgSpongycastleCryptoParamsECDomainParameters_(OrgSpongycastleCryptoParamsECDomainParameters *ecParams) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParsersECIESPublicKeyParser, initWithOrgSpongycastleCryptoParamsECDomainParameters_, ecParams)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParsersECIESPublicKeyParser)
