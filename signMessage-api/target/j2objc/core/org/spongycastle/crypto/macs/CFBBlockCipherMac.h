//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/macs/CFBBlockCipherMac.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsCFBBlockCipherMac")
#ifdef RESTRICT_OrgSpongycastleCryptoMacsCFBBlockCipherMac
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsCFBBlockCipherMac 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsCFBBlockCipherMac 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoMacsCFBBlockCipherMac

#if !defined (OrgSpongycastleCryptoMacsMacCFBBlockCipher_) && (INCLUDE_ALL_OrgSpongycastleCryptoMacsCFBBlockCipherMac || defined(INCLUDE_OrgSpongycastleCryptoMacsMacCFBBlockCipher))
#define OrgSpongycastleCryptoMacsMacCFBBlockCipher_

@class IOSByteArray;
@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoMacsMacCFBBlockCipher : NSObject

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher
                                                 withInt:(jint)bitBlockSize;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

#pragma mark Package-Private

- (void)getMacBlockWithByteArray:(IOSByteArray *)mac;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoMacsMacCFBBlockCipher)

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsMacCFBBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withInt_(OrgSpongycastleCryptoMacsMacCFBBlockCipher *self, id<OrgSpongycastleCryptoBlockCipher> cipher, jint bitBlockSize);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsMacCFBBlockCipher *new_OrgSpongycastleCryptoMacsMacCFBBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint bitBlockSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsMacCFBBlockCipher *create_OrgSpongycastleCryptoMacsMacCFBBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint bitBlockSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoMacsMacCFBBlockCipher)

#endif

#if !defined (OrgSpongycastleCryptoMacsCFBBlockCipherMac_) && (INCLUDE_ALL_OrgSpongycastleCryptoMacsCFBBlockCipherMac || defined(INCLUDE_OrgSpongycastleCryptoMacsCFBBlockCipherMac))
#define OrgSpongycastleCryptoMacsCFBBlockCipherMac_

#define RESTRICT_OrgSpongycastleCryptoMac 1
#define INCLUDE_OrgSpongycastleCryptoMac 1
#include "org/spongycastle/crypto/Mac.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoPaddingsBlockCipherPadding;

@interface OrgSpongycastleCryptoMacsCFBBlockCipherMac : NSObject < OrgSpongycastleCryptoMac >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher;

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher
     withOrgSpongycastleCryptoPaddingsBlockCipherPadding:(id<OrgSpongycastleCryptoPaddingsBlockCipherPadding>)padding;

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher
                                                 withInt:(jint)cfbBitSize
                                                 withInt:(jint)macSizeInBits;

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher
                                                 withInt:(jint)cfbBitSize
                                                 withInt:(jint)macSizeInBits
     withOrgSpongycastleCryptoPaddingsBlockCipherPadding:(id<OrgSpongycastleCryptoPaddingsBlockCipherPadding>)padding;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getMacSize;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (void)reset;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoMacsCFBBlockCipherMac)

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoMacsCFBBlockCipherMac *self, id<OrgSpongycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCFBBlockCipherMac *new_OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCFBBlockCipherMac *create_OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoPaddingsBlockCipherPadding_(OrgSpongycastleCryptoMacsCFBBlockCipherMac *self, id<OrgSpongycastleCryptoBlockCipher> cipher, id<OrgSpongycastleCryptoPaddingsBlockCipherPadding> padding);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCFBBlockCipherMac *new_OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoPaddingsBlockCipherPadding_(id<OrgSpongycastleCryptoBlockCipher> cipher, id<OrgSpongycastleCryptoPaddingsBlockCipherPadding> padding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCFBBlockCipherMac *create_OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoPaddingsBlockCipherPadding_(id<OrgSpongycastleCryptoBlockCipher> cipher, id<OrgSpongycastleCryptoPaddingsBlockCipherPadding> padding);

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_withInt_(OrgSpongycastleCryptoMacsCFBBlockCipherMac *self, id<OrgSpongycastleCryptoBlockCipher> cipher, jint cfbBitSize, jint macSizeInBits);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCFBBlockCipherMac *new_OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint cfbBitSize, jint macSizeInBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCFBBlockCipherMac *create_OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint cfbBitSize, jint macSizeInBits);

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_withInt_withOrgSpongycastleCryptoPaddingsBlockCipherPadding_(OrgSpongycastleCryptoMacsCFBBlockCipherMac *self, id<OrgSpongycastleCryptoBlockCipher> cipher, jint cfbBitSize, jint macSizeInBits, id<OrgSpongycastleCryptoPaddingsBlockCipherPadding> padding);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCFBBlockCipherMac *new_OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_withInt_withOrgSpongycastleCryptoPaddingsBlockCipherPadding_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint cfbBitSize, jint macSizeInBits, id<OrgSpongycastleCryptoPaddingsBlockCipherPadding> padding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCFBBlockCipherMac *create_OrgSpongycastleCryptoMacsCFBBlockCipherMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_withInt_withOrgSpongycastleCryptoPaddingsBlockCipherPadding_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint cfbBitSize, jint macSizeInBits, id<OrgSpongycastleCryptoPaddingsBlockCipherPadding> padding);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoMacsCFBBlockCipherMac)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsCFBBlockCipherMac")
