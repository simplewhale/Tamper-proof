//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/macs/CMac.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsCMac")
#ifdef RESTRICT_OrgSpongycastleCryptoMacsCMac
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsCMac 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsCMac 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoMacsCMac

#if !defined (OrgSpongycastleCryptoMacsCMac_) && (INCLUDE_ALL_OrgSpongycastleCryptoMacsCMac || defined(INCLUDE_OrgSpongycastleCryptoMacsCMac))
#define OrgSpongycastleCryptoMacsCMac_

#define RESTRICT_OrgSpongycastleCryptoMac 1
#define INCLUDE_OrgSpongycastleCryptoMac 1
#include "org/spongycastle/crypto/Mac.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoMacsCMac : NSObject < OrgSpongycastleCryptoMac >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher;

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher
                                                 withInt:(jint)macSizeInBits;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getMacSize;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (void)reset;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

#pragma mark Package-Private

- (void)validateWithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoMacsCMac)

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsCMac_initWithOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoMacsCMac *self, id<OrgSpongycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCMac *new_OrgSpongycastleCryptoMacsCMac_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCMac *create_OrgSpongycastleCryptoMacsCMac_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsCMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_(OrgSpongycastleCryptoMacsCMac *self, id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCMac *new_OrgSpongycastleCryptoMacsCMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCMac *create_OrgSpongycastleCryptoMacsCMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoMacsCMac)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsCMac")
