//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/macs/SkeinMac.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsSkeinMac")
#ifdef RESTRICT_OrgSpongycastleCryptoMacsSkeinMac
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsSkeinMac 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsSkeinMac 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoMacsSkeinMac

#if !defined (OrgSpongycastleCryptoMacsSkeinMac_) && (INCLUDE_ALL_OrgSpongycastleCryptoMacsSkeinMac || defined(INCLUDE_OrgSpongycastleCryptoMacsSkeinMac))
#define OrgSpongycastleCryptoMacsSkeinMac_

#define RESTRICT_OrgSpongycastleCryptoMac 1
#define INCLUDE_OrgSpongycastleCryptoMac 1
#include "org/spongycastle/crypto/Mac.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoMacsSkeinMac : NSObject < OrgSpongycastleCryptoMac >

#pragma mark Public

- (instancetype)initWithInt:(jint)stateSizeBits
                    withInt:(jint)digestSizeBits;

- (instancetype)initWithOrgSpongycastleCryptoMacsSkeinMac:(OrgSpongycastleCryptoMacsSkeinMac *)mac;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getMacSize;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (void)reset;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoMacsSkeinMac)

inline jint OrgSpongycastleCryptoMacsSkeinMac_get_SKEIN_256(void);
#define OrgSpongycastleCryptoMacsSkeinMac_SKEIN_256 256
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoMacsSkeinMac, SKEIN_256, jint)

inline jint OrgSpongycastleCryptoMacsSkeinMac_get_SKEIN_512(void);
#define OrgSpongycastleCryptoMacsSkeinMac_SKEIN_512 512
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoMacsSkeinMac, SKEIN_512, jint)

inline jint OrgSpongycastleCryptoMacsSkeinMac_get_SKEIN_1024(void);
#define OrgSpongycastleCryptoMacsSkeinMac_SKEIN_1024 1024
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoMacsSkeinMac, SKEIN_1024, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(OrgSpongycastleCryptoMacsSkeinMac *self, jint stateSizeBits, jint digestSizeBits);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsSkeinMac *new_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(jint stateSizeBits, jint digestSizeBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsSkeinMac *create_OrgSpongycastleCryptoMacsSkeinMac_initWithInt_withInt_(jint stateSizeBits, jint digestSizeBits);

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsSkeinMac_initWithOrgSpongycastleCryptoMacsSkeinMac_(OrgSpongycastleCryptoMacsSkeinMac *self, OrgSpongycastleCryptoMacsSkeinMac *mac);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsSkeinMac *new_OrgSpongycastleCryptoMacsSkeinMac_initWithOrgSpongycastleCryptoMacsSkeinMac_(OrgSpongycastleCryptoMacsSkeinMac *mac) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsSkeinMac *create_OrgSpongycastleCryptoMacsSkeinMac_initWithOrgSpongycastleCryptoMacsSkeinMac_(OrgSpongycastleCryptoMacsSkeinMac *mac);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoMacsSkeinMac)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsSkeinMac")
