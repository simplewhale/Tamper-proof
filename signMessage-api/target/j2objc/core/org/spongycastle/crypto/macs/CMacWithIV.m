//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/macs/CMacWithIV.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/BlockCipher.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/macs/CMac.h"
#include "org/spongycastle/crypto/macs/CMacWithIV.h"

@implementation OrgSpongycastleCryptoMacsCMacWithIV

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher {
  OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_(self, cipher);
  return self;
}

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher
                                                 withInt:(jint)macSizeInBits {
  OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_withInt_(self, cipher, macSizeInBits);
  return self;
}

- (void)validateWithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoBlockCipher:);
  methods[1].selector = @selector(initWithOrgSpongycastleCryptoBlockCipher:withInt:);
  methods[2].selector = @selector(validateWithOrgSpongycastleCryptoCipherParameters:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoBlockCipher;", "LOrgSpongycastleCryptoBlockCipher;I", "validate", "LOrgSpongycastleCryptoCipherParameters;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoMacsCMacWithIV = { "CMacWithIV", "org.spongycastle.crypto.macs", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoMacsCMacWithIV;
}

@end

void OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoMacsCMacWithIV *self, id<OrgSpongycastleCryptoBlockCipher> cipher) {
  OrgSpongycastleCryptoMacsCMac_initWithOrgSpongycastleCryptoBlockCipher_(self, cipher);
}

OrgSpongycastleCryptoMacsCMacWithIV *new_OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoMacsCMacWithIV, initWithOrgSpongycastleCryptoBlockCipher_, cipher)
}

OrgSpongycastleCryptoMacsCMacWithIV *create_OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoMacsCMacWithIV, initWithOrgSpongycastleCryptoBlockCipher_, cipher)
}

void OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_withInt_(OrgSpongycastleCryptoMacsCMacWithIV *self, id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits) {
  OrgSpongycastleCryptoMacsCMac_initWithOrgSpongycastleCryptoBlockCipher_withInt_(self, cipher, macSizeInBits);
}

OrgSpongycastleCryptoMacsCMacWithIV *new_OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoMacsCMacWithIV, initWithOrgSpongycastleCryptoBlockCipher_withInt_, cipher, macSizeInBits)
}

OrgSpongycastleCryptoMacsCMacWithIV *create_OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoMacsCMacWithIV, initWithOrgSpongycastleCryptoBlockCipher_withInt_, cipher, macSizeInBits)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoMacsCMacWithIV)
