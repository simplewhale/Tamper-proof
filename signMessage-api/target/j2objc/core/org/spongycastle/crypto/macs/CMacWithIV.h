//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/macs/CMacWithIV.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsCMacWithIV")
#ifdef RESTRICT_OrgSpongycastleCryptoMacsCMacWithIV
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsCMacWithIV 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsCMacWithIV 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoMacsCMacWithIV

#if !defined (OrgSpongycastleCryptoMacsCMacWithIV_) && (INCLUDE_ALL_OrgSpongycastleCryptoMacsCMacWithIV || defined(INCLUDE_OrgSpongycastleCryptoMacsCMacWithIV))
#define OrgSpongycastleCryptoMacsCMacWithIV_

#define RESTRICT_OrgSpongycastleCryptoMacsCMac 1
#define INCLUDE_OrgSpongycastleCryptoMacsCMac 1
#include "org/spongycastle/crypto/macs/CMac.h"

@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoMacsCMacWithIV : OrgSpongycastleCryptoMacsCMac

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher;

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher
                                                 withInt:(jint)macSizeInBits;

#pragma mark Package-Private

- (void)validateWithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoMacsCMacWithIV)

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoMacsCMacWithIV *self, id<OrgSpongycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCMacWithIV *new_OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCMacWithIV *create_OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_withInt_(OrgSpongycastleCryptoMacsCMacWithIV *self, id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCMacWithIV *new_OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsCMacWithIV *create_OrgSpongycastleCryptoMacsCMacWithIV_initWithOrgSpongycastleCryptoBlockCipher_withInt_(id<OrgSpongycastleCryptoBlockCipher> cipher, jint macSizeInBits);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoMacsCMacWithIV)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsCMacWithIV")
