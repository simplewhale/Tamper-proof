//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/macs/Poly1305.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsPoly1305")
#ifdef RESTRICT_OrgSpongycastleCryptoMacsPoly1305
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsPoly1305 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoMacsPoly1305 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoMacsPoly1305

#if !defined (OrgSpongycastleCryptoMacsPoly1305_) && (INCLUDE_ALL_OrgSpongycastleCryptoMacsPoly1305 || defined(INCLUDE_OrgSpongycastleCryptoMacsPoly1305))
#define OrgSpongycastleCryptoMacsPoly1305_

#define RESTRICT_OrgSpongycastleCryptoMac 1
#define INCLUDE_OrgSpongycastleCryptoMac 1
#include "org/spongycastle/crypto/Mac.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoMacsPoly1305 : NSObject < OrgSpongycastleCryptoMac >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getMacSize;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (void)reset;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoMacsPoly1305)

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsPoly1305_init(OrgSpongycastleCryptoMacsPoly1305 *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsPoly1305 *new_OrgSpongycastleCryptoMacsPoly1305_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsPoly1305 *create_OrgSpongycastleCryptoMacsPoly1305_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoMacsPoly1305_initWithOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoMacsPoly1305 *self, id<OrgSpongycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsPoly1305 *new_OrgSpongycastleCryptoMacsPoly1305_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoMacsPoly1305 *create_OrgSpongycastleCryptoMacsPoly1305_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoMacsPoly1305)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoMacsPoly1305")
