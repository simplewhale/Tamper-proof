//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/prng/drbg/Utils.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/Hashtable.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/Mac.h"
#include "org/spongycastle/crypto/prng/drbg/Utils.h"
#include "org/spongycastle/util/Integers.h"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoPrngDrbgUtils)

JavaUtilHashtable *OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths;

@implementation OrgSpongycastleCryptoPrngDrbgUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoPrngDrbgUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)getMaxSecurityStrengthWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)d {
  return OrgSpongycastleCryptoPrngDrbgUtils_getMaxSecurityStrengthWithOrgSpongycastleCryptoDigest_(d);
}

+ (jint)getMaxSecurityStrengthWithOrgSpongycastleCryptoMac:(id<OrgSpongycastleCryptoMac>)m {
  return OrgSpongycastleCryptoPrngDrbgUtils_getMaxSecurityStrengthWithOrgSpongycastleCryptoMac_(m);
}

+ (IOSByteArray *)hash_dfWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                           withByteArray:(IOSByteArray *)seedMaterial
                                                 withInt:(jint)seedLength {
  return OrgSpongycastleCryptoPrngDrbgUtils_hash_dfWithOrgSpongycastleCryptoDigest_withByteArray_withInt_(digest, seedMaterial, seedLength);
}

+ (jboolean)isTooLargeWithByteArray:(IOSByteArray *)bytes
                            withInt:(jint)maxBytes {
  return OrgSpongycastleCryptoPrngDrbgUtils_isTooLargeWithByteArray_withInt_(bytes, maxBytes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 0, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMaxSecurityStrengthWithOrgSpongycastleCryptoDigest:);
  methods[2].selector = @selector(getMaxSecurityStrengthWithOrgSpongycastleCryptoMac:);
  methods[3].selector = @selector(hash_dfWithOrgSpongycastleCryptoDigest:withByteArray:withInt:);
  methods[4].selector = @selector(isTooLargeWithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "maxSecurityStrengths", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x18, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "getMaxSecurityStrength", "LOrgSpongycastleCryptoDigest;", "LOrgSpongycastleCryptoMac;", "hash_df", "LOrgSpongycastleCryptoDigest;[BI", "isTooLarge", "[BI", &OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoPrngDrbgUtils = { "Utils", "org.spongycastle.crypto.prng.drbg", ptrTable, methods, fields, 7, 0x0, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoPrngDrbgUtils;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoPrngDrbgUtils class]) {
    OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths = new_JavaUtilHashtable_init();
    {
      (void) [OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths putWithId:@"SHA-1" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(128)];
      (void) [OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths putWithId:@"SHA-224" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(192)];
      (void) [OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths putWithId:@"SHA-256" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(256)];
      (void) [OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths putWithId:@"SHA-384" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(256)];
      (void) [OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths putWithId:@"SHA-512" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(256)];
      (void) [OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths putWithId:@"SHA-512/224" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(192)];
      (void) [OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths putWithId:@"SHA-512/256" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(256)];
    }
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoPrngDrbgUtils)
  }
}

@end

void OrgSpongycastleCryptoPrngDrbgUtils_init(OrgSpongycastleCryptoPrngDrbgUtils *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoPrngDrbgUtils *new_OrgSpongycastleCryptoPrngDrbgUtils_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoPrngDrbgUtils, init)
}

OrgSpongycastleCryptoPrngDrbgUtils *create_OrgSpongycastleCryptoPrngDrbgUtils_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoPrngDrbgUtils, init)
}

jint OrgSpongycastleCryptoPrngDrbgUtils_getMaxSecurityStrengthWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> d) {
  OrgSpongycastleCryptoPrngDrbgUtils_initialize();
  return [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([((JavaUtilHashtable *) nil_chk(OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths)) getWithId:[((id<OrgSpongycastleCryptoDigest>) nil_chk(d)) getAlgorithmName]], [JavaLangInteger class])))) intValue];
}

jint OrgSpongycastleCryptoPrngDrbgUtils_getMaxSecurityStrengthWithOrgSpongycastleCryptoMac_(id<OrgSpongycastleCryptoMac> m) {
  OrgSpongycastleCryptoPrngDrbgUtils_initialize();
  NSString *name = [((id<OrgSpongycastleCryptoMac>) nil_chk(m)) getAlgorithmName];
  return [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([((JavaUtilHashtable *) nil_chk(OrgSpongycastleCryptoPrngDrbgUtils_maxSecurityStrengths)) getWithId:[((NSString *) nil_chk(name)) java_substring:0 endIndex:[name java_indexOfString:@"/"]]], [JavaLangInteger class])))) intValue];
}

IOSByteArray *OrgSpongycastleCryptoPrngDrbgUtils_hash_dfWithOrgSpongycastleCryptoDigest_withByteArray_withInt_(id<OrgSpongycastleCryptoDigest> digest, IOSByteArray *seedMaterial, jint seedLength) {
  OrgSpongycastleCryptoPrngDrbgUtils_initialize();
  IOSByteArray *temp = [IOSByteArray newArrayWithLength:(seedLength + 7) / 8];
  jint len = temp->size_ / [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest)) getDigestSize];
  jint counter = 1;
  IOSByteArray *dig = [IOSByteArray newArrayWithLength:[digest getDigestSize]];
  for (jint i = 0; i <= len; i++) {
    [digest updateWithByte:(jbyte) counter];
    [digest updateWithByte:(jbyte) (JreRShift32(seedLength, 24))];
    [digest updateWithByte:(jbyte) (JreRShift32(seedLength, 16))];
    [digest updateWithByte:(jbyte) (JreRShift32(seedLength, 8))];
    [digest updateWithByte:(jbyte) seedLength];
    [digest updateWithByteArray:seedMaterial withInt:0 withInt:((IOSByteArray *) nil_chk(seedMaterial))->size_];
    [digest doFinalWithByteArray:dig withInt:0];
    jint bytesToCopy = ((temp->size_ - i * dig->size_) > dig->size_) ? dig->size_ : (temp->size_ - i * dig->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(dig, 0, temp, i * dig->size_, bytesToCopy);
    counter++;
  }
  if (seedLength % 8 != 0) {
    jint shift = 8 - (seedLength % 8);
    jint carry = 0;
    for (jint i = 0; i != temp->size_; i++) {
      jint b = IOSByteArray_Get(temp, i) & (jint) 0xff;
      *IOSByteArray_GetRef(temp, i) = (jbyte) ((JreURShift32(b, shift)) | (JreLShift32(carry, (8 - shift))));
      carry = b;
    }
  }
  return temp;
}

jboolean OrgSpongycastleCryptoPrngDrbgUtils_isTooLargeWithByteArray_withInt_(IOSByteArray *bytes, jint maxBytes) {
  OrgSpongycastleCryptoPrngDrbgUtils_initialize();
  return bytes != nil && bytes->size_ > maxBytes;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoPrngDrbgUtils)
