//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/prng/ReversedWindowGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoPrngReversedWindowGenerator")
#ifdef RESTRICT_OrgSpongycastleCryptoPrngReversedWindowGenerator
#define INCLUDE_ALL_OrgSpongycastleCryptoPrngReversedWindowGenerator 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoPrngReversedWindowGenerator 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoPrngReversedWindowGenerator

#if !defined (OrgSpongycastleCryptoPrngReversedWindowGenerator_) && (INCLUDE_ALL_OrgSpongycastleCryptoPrngReversedWindowGenerator || defined(INCLUDE_OrgSpongycastleCryptoPrngReversedWindowGenerator))
#define OrgSpongycastleCryptoPrngReversedWindowGenerator_

#define RESTRICT_OrgSpongycastleCryptoPrngRandomGenerator 1
#define INCLUDE_OrgSpongycastleCryptoPrngRandomGenerator 1
#include "org/spongycastle/crypto/prng/RandomGenerator.h"

@class IOSByteArray;

@interface OrgSpongycastleCryptoPrngReversedWindowGenerator : NSObject < OrgSpongycastleCryptoPrngRandomGenerator >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoPrngRandomGenerator:(id<OrgSpongycastleCryptoPrngRandomGenerator>)generator
                                                         withInt:(jint)windowSize;

- (void)addSeedMaterialWithByteArray:(IOSByteArray *)seed;

- (void)addSeedMaterialWithLong:(jlong)seed;

- (void)nextBytesWithByteArray:(IOSByteArray *)bytes;

- (void)nextBytesWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)start
                       withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoPrngReversedWindowGenerator)

FOUNDATION_EXPORT void OrgSpongycastleCryptoPrngReversedWindowGenerator_initWithOrgSpongycastleCryptoPrngRandomGenerator_withInt_(OrgSpongycastleCryptoPrngReversedWindowGenerator *self, id<OrgSpongycastleCryptoPrngRandomGenerator> generator, jint windowSize);

FOUNDATION_EXPORT OrgSpongycastleCryptoPrngReversedWindowGenerator *new_OrgSpongycastleCryptoPrngReversedWindowGenerator_initWithOrgSpongycastleCryptoPrngRandomGenerator_withInt_(id<OrgSpongycastleCryptoPrngRandomGenerator> generator, jint windowSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoPrngReversedWindowGenerator *create_OrgSpongycastleCryptoPrngReversedWindowGenerator_initWithOrgSpongycastleCryptoPrngRandomGenerator_withInt_(id<OrgSpongycastleCryptoPrngRandomGenerator> generator, jint windowSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoPrngReversedWindowGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoPrngReversedWindowGenerator")
