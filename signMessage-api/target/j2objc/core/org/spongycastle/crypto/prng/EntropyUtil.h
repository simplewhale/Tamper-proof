//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/prng/EntropyUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoPrngEntropyUtil")
#ifdef RESTRICT_OrgSpongycastleCryptoPrngEntropyUtil
#define INCLUDE_ALL_OrgSpongycastleCryptoPrngEntropyUtil 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoPrngEntropyUtil 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoPrngEntropyUtil

#if !defined (OrgSpongycastleCryptoPrngEntropyUtil_) && (INCLUDE_ALL_OrgSpongycastleCryptoPrngEntropyUtil || defined(INCLUDE_OrgSpongycastleCryptoPrngEntropyUtil))
#define OrgSpongycastleCryptoPrngEntropyUtil_

@class IOSByteArray;
@protocol OrgSpongycastleCryptoPrngEntropySource;

@interface OrgSpongycastleCryptoPrngEntropyUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSByteArray *)generateSeedWithOrgSpongycastleCryptoPrngEntropySource:(id<OrgSpongycastleCryptoPrngEntropySource>)entropySource
                                                                 withInt:(jint)numBytes;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoPrngEntropyUtil)

FOUNDATION_EXPORT void OrgSpongycastleCryptoPrngEntropyUtil_init(OrgSpongycastleCryptoPrngEntropyUtil *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoPrngEntropyUtil *new_OrgSpongycastleCryptoPrngEntropyUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoPrngEntropyUtil *create_OrgSpongycastleCryptoPrngEntropyUtil_init(void);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoPrngEntropyUtil_generateSeedWithOrgSpongycastleCryptoPrngEntropySource_withInt_(id<OrgSpongycastleCryptoPrngEntropySource> entropySource, jint numBytes);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoPrngEntropyUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoPrngEntropyUtil")
