//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/prng/BasicEntropySourceProvider.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/prng/BasicEntropySourceProvider.h"
#include "org/spongycastle/crypto/prng/EntropySource.h"
#include "org/spongycastle/crypto/prng/SP800SecureRandom.h"
#include "org/spongycastle/crypto/prng/X931SecureRandom.h"

@interface OrgSpongycastleCryptoPrngBasicEntropySourceProvider () {
 @public
  JavaSecuritySecureRandom *_sr_;
  jboolean _predictionResistant_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoPrngBasicEntropySourceProvider, _sr_, JavaSecuritySecureRandom *)

@interface OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1 : NSObject < OrgSpongycastleCryptoPrngEntropySource > {
 @public
  OrgSpongycastleCryptoPrngBasicEntropySourceProvider *this$0_;
  jint val$bitsRequired_;
}

- (instancetype)initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider:(OrgSpongycastleCryptoPrngBasicEntropySourceProvider *)outer$
                                                                    withInt:(jint)capture$0;

- (jboolean)isPredictionResistant;

- (IOSByteArray *)getEntropy;

- (jint)entropySize;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1)

__attribute__((unused)) static void OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1_initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_(OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1 *self, OrgSpongycastleCryptoPrngBasicEntropySourceProvider *outer$, jint capture$0);

__attribute__((unused)) static OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1 *new_OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1_initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_(OrgSpongycastleCryptoPrngBasicEntropySourceProvider *outer$, jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1 *create_OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1_initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_(OrgSpongycastleCryptoPrngBasicEntropySourceProvider *outer$, jint capture$0);

@implementation OrgSpongycastleCryptoPrngBasicEntropySourceProvider

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                     withBoolean:(jboolean)isPredictionResistant {
  OrgSpongycastleCryptoPrngBasicEntropySourceProvider_initWithJavaSecuritySecureRandom_withBoolean_(self, random, isPredictionResistant);
  return self;
}

- (id<OrgSpongycastleCryptoPrngEntropySource>)getWithInt:(jint)bitsRequired {
  return new_OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1_initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_(self, bitsRequired);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoPrngEntropySource;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:withBoolean:);
  methods[1].selector = @selector(getWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_sr_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_predictionResistant_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;Z", "get", "I" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoPrngBasicEntropySourceProvider = { "BasicEntropySourceProvider", "org.spongycastle.crypto.prng", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoPrngBasicEntropySourceProvider;
}

@end

void OrgSpongycastleCryptoPrngBasicEntropySourceProvider_initWithJavaSecuritySecureRandom_withBoolean_(OrgSpongycastleCryptoPrngBasicEntropySourceProvider *self, JavaSecuritySecureRandom *random, jboolean isPredictionResistant) {
  NSObject_init(self);
  self->_sr_ = random;
  self->_predictionResistant_ = isPredictionResistant;
}

OrgSpongycastleCryptoPrngBasicEntropySourceProvider *new_OrgSpongycastleCryptoPrngBasicEntropySourceProvider_initWithJavaSecuritySecureRandom_withBoolean_(JavaSecuritySecureRandom *random, jboolean isPredictionResistant) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoPrngBasicEntropySourceProvider, initWithJavaSecuritySecureRandom_withBoolean_, random, isPredictionResistant)
}

OrgSpongycastleCryptoPrngBasicEntropySourceProvider *create_OrgSpongycastleCryptoPrngBasicEntropySourceProvider_initWithJavaSecuritySecureRandom_withBoolean_(JavaSecuritySecureRandom *random, jboolean isPredictionResistant) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoPrngBasicEntropySourceProvider, initWithJavaSecuritySecureRandom_withBoolean_, random, isPredictionResistant)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoPrngBasicEntropySourceProvider)

@implementation OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1

- (instancetype)initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider:(OrgSpongycastleCryptoPrngBasicEntropySourceProvider *)outer$
                                                                    withInt:(jint)capture$0 {
  OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1_initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_(self, outer$, capture$0);
  return self;
}

- (jboolean)isPredictionResistant {
  return this$0_->_predictionResistant_;
}

- (IOSByteArray *)getEntropy {
  if ([this$0_->_sr_ isKindOfClass:[OrgSpongycastleCryptoPrngSP800SecureRandom class]] || [this$0_->_sr_ isKindOfClass:[OrgSpongycastleCryptoPrngX931SecureRandom class]]) {
    IOSByteArray *rv = [IOSByteArray newArrayWithLength:(val$bitsRequired_ + 7) / 8];
    [((JavaSecuritySecureRandom *) nil_chk(this$0_->_sr_)) nextBytesWithByteArray:rv];
    return rv;
  }
  return [((JavaSecuritySecureRandom *) nil_chk(this$0_->_sr_)) generateSeedWithInt:(val$bitsRequired_ + 7) / 8];
}

- (jint)entropySize {
  return val$bitsRequired_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider:withInt:);
  methods[1].selector = @selector(isPredictionResistant);
  methods[2].selector = @selector(getEntropy);
  methods[3].selector = @selector(entropySize);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgSpongycastleCryptoPrngBasicEntropySourceProvider;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$bitsRequired_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoPrngBasicEntropySourceProvider;", "getWithInt:" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1 = { "", "org.spongycastle.crypto.prng", ptrTable, methods, fields, 7, 0x8010, 4, 2, 0, -1, 1, -1, -1 };
  return &_OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1;
}

@end

void OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1_initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_(OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1 *self, OrgSpongycastleCryptoPrngBasicEntropySourceProvider *outer$, jint capture$0) {
  self->this$0_ = outer$;
  self->val$bitsRequired_ = capture$0;
  NSObject_init(self);
}

OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1 *new_OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1_initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_(OrgSpongycastleCryptoPrngBasicEntropySourceProvider *outer$, jint capture$0) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1, initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_, outer$, capture$0)
}

OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1 *create_OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1_initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_(OrgSpongycastleCryptoPrngBasicEntropySourceProvider *outer$, jint capture$0) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoPrngBasicEntropySourceProvider_1, initWithOrgSpongycastleCryptoPrngBasicEntropySourceProvider_withInt_, outer$, capture$0)
}
