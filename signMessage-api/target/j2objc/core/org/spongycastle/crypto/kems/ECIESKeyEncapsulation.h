//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/kems/ECIESKeyEncapsulation.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoKemsECIESKeyEncapsulation")
#ifdef RESTRICT_OrgSpongycastleCryptoKemsECIESKeyEncapsulation
#define INCLUDE_ALL_OrgSpongycastleCryptoKemsECIESKeyEncapsulation 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoKemsECIESKeyEncapsulation 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoKemsECIESKeyEncapsulation

#if !defined (OrgSpongycastleCryptoKemsECIESKeyEncapsulation_) && (INCLUDE_ALL_OrgSpongycastleCryptoKemsECIESKeyEncapsulation || defined(INCLUDE_OrgSpongycastleCryptoKemsECIESKeyEncapsulation))
#define OrgSpongycastleCryptoKemsECIESKeyEncapsulation_

#define RESTRICT_OrgSpongycastleCryptoKeyEncapsulation 1
#define INCLUDE_OrgSpongycastleCryptoKeyEncapsulation 1
#include "org/spongycastle/crypto/KeyEncapsulation.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class OrgSpongycastleCryptoParamsKeyParameter;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoDerivationFunction;
@protocol OrgSpongycastleMathEcECMultiplier;

@interface OrgSpongycastleCryptoKemsECIESKeyEncapsulation : NSObject < OrgSpongycastleCryptoKeyEncapsulation >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoDerivationFunction:(id<OrgSpongycastleCryptoDerivationFunction>)kdf
                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)rnd;

- (instancetype)initWithOrgSpongycastleCryptoDerivationFunction:(id<OrgSpongycastleCryptoDerivationFunction>)kdf
                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)rnd
                                                    withBoolean:(jboolean)cofactorMode
                                                    withBoolean:(jboolean)oldCofactorMode
                                                    withBoolean:(jboolean)singleHashMode;

- (id<OrgSpongycastleCryptoCipherParameters>)decryptWithByteArray:(IOSByteArray *)inArg
                                                          withInt:(jint)keyLen;

- (id<OrgSpongycastleCryptoCipherParameters>)decryptWithByteArray:(IOSByteArray *)inArg
                                                          withInt:(jint)inOff
                                                          withInt:(jint)inLen
                                                          withInt:(jint)keyLen;

- (id<OrgSpongycastleCryptoCipherParameters>)encryptWithByteArray:(IOSByteArray *)outArg
                                                          withInt:(jint)keyLen;

- (id<OrgSpongycastleCryptoCipherParameters>)encryptWithByteArray:(IOSByteArray *)outArg
                                                          withInt:(jint)outOff
                                                          withInt:(jint)keyLen;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)key OBJC_METHOD_FAMILY_NONE;

#pragma mark Protected

- (id<OrgSpongycastleMathEcECMultiplier>)createBasePointMultiplier;

- (OrgSpongycastleCryptoParamsKeyParameter *)deriveKeyWithInt:(jint)keyLen
                                                withByteArray:(IOSByteArray *)C
                                                withByteArray:(IOSByteArray *)PEH;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoKemsECIESKeyEncapsulation)

FOUNDATION_EXPORT void OrgSpongycastleCryptoKemsECIESKeyEncapsulation_initWithOrgSpongycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_(OrgSpongycastleCryptoKemsECIESKeyEncapsulation *self, id<OrgSpongycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd);

FOUNDATION_EXPORT OrgSpongycastleCryptoKemsECIESKeyEncapsulation *new_OrgSpongycastleCryptoKemsECIESKeyEncapsulation_initWithOrgSpongycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_(id<OrgSpongycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoKemsECIESKeyEncapsulation *create_OrgSpongycastleCryptoKemsECIESKeyEncapsulation_initWithOrgSpongycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_(id<OrgSpongycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd);

FOUNDATION_EXPORT void OrgSpongycastleCryptoKemsECIESKeyEncapsulation_initWithOrgSpongycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_withBoolean_withBoolean_withBoolean_(OrgSpongycastleCryptoKemsECIESKeyEncapsulation *self, id<OrgSpongycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd, jboolean cofactorMode, jboolean oldCofactorMode, jboolean singleHashMode);

FOUNDATION_EXPORT OrgSpongycastleCryptoKemsECIESKeyEncapsulation *new_OrgSpongycastleCryptoKemsECIESKeyEncapsulation_initWithOrgSpongycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_withBoolean_withBoolean_withBoolean_(id<OrgSpongycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd, jboolean cofactorMode, jboolean oldCofactorMode, jboolean singleHashMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoKemsECIESKeyEncapsulation *create_OrgSpongycastleCryptoKemsECIESKeyEncapsulation_initWithOrgSpongycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_withBoolean_withBoolean_withBoolean_(id<OrgSpongycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd, jboolean cofactorMode, jboolean oldCofactorMode, jboolean singleHashMode);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoKemsECIESKeyEncapsulation)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoKemsECIESKeyEncapsulation")
