//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/BufferedBlockCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoBufferedBlockCipher")
#ifdef RESTRICT_OrgSpongycastleCryptoBufferedBlockCipher
#define INCLUDE_ALL_OrgSpongycastleCryptoBufferedBlockCipher 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoBufferedBlockCipher 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoBufferedBlockCipher

#if !defined (OrgSpongycastleCryptoBufferedBlockCipher_) && (INCLUDE_ALL_OrgSpongycastleCryptoBufferedBlockCipher || defined(INCLUDE_OrgSpongycastleCryptoBufferedBlockCipher))
#define OrgSpongycastleCryptoBufferedBlockCipher_

@class IOSByteArray;
@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;

@interface OrgSpongycastleCryptoBufferedBlockCipher : NSObject {
 @public
  IOSByteArray *buf_;
  jint bufOff_;
  jboolean forEncryption_;
  id<OrgSpongycastleCryptoBlockCipher> cipher_;
  jboolean partialBlockOkay_;
  jboolean pgpCFB_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)cipher;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (jint)getBlockSize;

- (jint)getOutputSizeWithInt:(jint)length;

- (id<OrgSpongycastleCryptoBlockCipher>)getUnderlyingCipher;

- (jint)getUpdateOutputSizeWithInt:(jint)len;

- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processByteWithByte:(jbyte)inArg
              withByteArray:(IOSByteArray *)outArg
                    withInt:(jint)outOff;

- (jint)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoBufferedBlockCipher)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoBufferedBlockCipher, buf_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoBufferedBlockCipher, cipher_, id<OrgSpongycastleCryptoBlockCipher>)

FOUNDATION_EXPORT void OrgSpongycastleCryptoBufferedBlockCipher_init(OrgSpongycastleCryptoBufferedBlockCipher *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoBufferedBlockCipher *new_OrgSpongycastleCryptoBufferedBlockCipher_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoBufferedBlockCipher *create_OrgSpongycastleCryptoBufferedBlockCipher_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoBufferedBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(OrgSpongycastleCryptoBufferedBlockCipher *self, id<OrgSpongycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoBufferedBlockCipher *new_OrgSpongycastleCryptoBufferedBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoBufferedBlockCipher *create_OrgSpongycastleCryptoBufferedBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(id<OrgSpongycastleCryptoBlockCipher> cipher);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoBufferedBlockCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoBufferedBlockCipher")
