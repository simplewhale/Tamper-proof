//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/ElGamalParameters.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/crypto/params/ElGamalParameters.h"

@interface OrgSpongycastleCryptoParamsElGamalParameters () {
 @public
  JavaMathBigInteger *g_;
  JavaMathBigInteger *p_;
  jint l_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsElGamalParameters, g_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsElGamalParameters, p_, JavaMathBigInteger *)

@implementation OrgSpongycastleCryptoParamsElGamalParameters

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g {
  OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(self, p, g);
  return self;
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                                   withInt:(jint)l {
  OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(self, p, g, l);
  return self;
}

- (JavaMathBigInteger *)getP {
  return p_;
}

- (JavaMathBigInteger *)getG {
  return g_;
}

- (jint)getL {
  return l_;
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[OrgSpongycastleCryptoParamsElGamalParameters class]])) {
    return false;
  }
  OrgSpongycastleCryptoParamsElGamalParameters *pm = (OrgSpongycastleCryptoParamsElGamalParameters *) cast_chk(obj, [OrgSpongycastleCryptoParamsElGamalParameters class]);
  return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleCryptoParamsElGamalParameters *) nil_chk(pm)) getP])) isEqual:p_] && [((JavaMathBigInteger *) nil_chk([pm getG])) isEqual:g_] && [pm getL] == l_;
}

- (NSUInteger)hash {
  return (((jint) [((JavaMathBigInteger *) nil_chk([self getP])) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk([self getG])) hash])) + l_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:withJavaMathBigInteger:);
  methods[1].selector = @selector(initWithJavaMathBigInteger:withJavaMathBigInteger:withInt:);
  methods[2].selector = @selector(getP);
  methods[3].selector = @selector(getG);
  methods[4].selector = @selector(getL);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "g_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "p_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "l_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LJavaMathBigInteger;", "LJavaMathBigInteger;LJavaMathBigInteger;I", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsElGamalParameters = { "ElGamalParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsElGamalParameters;
}

@end

void OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsElGamalParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g) {
  OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(self, p, g, 0);
}

OrgSpongycastleCryptoParamsElGamalParameters *new_OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsElGamalParameters, initWithJavaMathBigInteger_withJavaMathBigInteger_, p, g)
}

OrgSpongycastleCryptoParamsElGamalParameters *create_OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsElGamalParameters, initWithJavaMathBigInteger_withJavaMathBigInteger_, p, g)
}

void OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(OrgSpongycastleCryptoParamsElGamalParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g, jint l) {
  NSObject_init(self);
  self->g_ = g;
  self->p_ = p;
  self->l_ = l;
}

OrgSpongycastleCryptoParamsElGamalParameters *new_OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, jint l) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsElGamalParameters, initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_, p, g, l)
}

OrgSpongycastleCryptoParamsElGamalParameters *create_OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, jint l) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsElGamalParameters, initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_, p, g, l)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsElGamalParameters)
