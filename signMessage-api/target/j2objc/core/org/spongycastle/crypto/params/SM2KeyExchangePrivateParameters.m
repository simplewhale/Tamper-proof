//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/SM2KeyExchangePrivateParameters.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/crypto/params/ECDomainParameters.h"
#include "org/spongycastle/crypto/params/ECPrivateKeyParameters.h"
#include "org/spongycastle/crypto/params/SM2KeyExchangePrivateParameters.h"
#include "org/spongycastle/math/ec/ECPoint.h"

@interface OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters () {
 @public
  jboolean initiator_;
  OrgSpongycastleCryptoParamsECPrivateKeyParameters *staticPrivateKey_;
  OrgSpongycastleMathEcECPoint *staticPublicPoint_;
  OrgSpongycastleCryptoParamsECPrivateKeyParameters *ephemeralPrivateKey_;
  OrgSpongycastleMathEcECPoint *ephemeralPublicPoint_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters, staticPrivateKey_, OrgSpongycastleCryptoParamsECPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters, staticPublicPoint_, OrgSpongycastleMathEcECPoint *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters, ephemeralPrivateKey_, OrgSpongycastleCryptoParamsECPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters, ephemeralPublicPoint_, OrgSpongycastleMathEcECPoint *)

@implementation OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters

- (instancetype)initWithBoolean:(jboolean)initiator
withOrgSpongycastleCryptoParamsECPrivateKeyParameters:(OrgSpongycastleCryptoParamsECPrivateKeyParameters *)staticPrivateKey
withOrgSpongycastleCryptoParamsECPrivateKeyParameters:(OrgSpongycastleCryptoParamsECPrivateKeyParameters *)ephemeralPrivateKey {
  OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters_initWithBoolean_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_(self, initiator, staticPrivateKey, ephemeralPrivateKey);
  return self;
}

- (jboolean)isInitiator {
  return initiator_;
}

- (OrgSpongycastleCryptoParamsECPrivateKeyParameters *)getStaticPrivateKey {
  return staticPrivateKey_;
}

- (OrgSpongycastleMathEcECPoint *)getStaticPublicPoint {
  return staticPublicPoint_;
}

- (OrgSpongycastleCryptoParamsECPrivateKeyParameters *)getEphemeralPrivateKey {
  return ephemeralPrivateKey_;
}

- (OrgSpongycastleMathEcECPoint *)getEphemeralPublicPoint {
  return ephemeralPublicPoint_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsECPrivateKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsECPrivateKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withOrgSpongycastleCryptoParamsECPrivateKeyParameters:withOrgSpongycastleCryptoParamsECPrivateKeyParameters:);
  methods[1].selector = @selector(isInitiator);
  methods[2].selector = @selector(getStaticPrivateKey);
  methods[3].selector = @selector(getStaticPublicPoint);
  methods[4].selector = @selector(getEphemeralPrivateKey);
  methods[5].selector = @selector(getEphemeralPublicPoint);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "initiator_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "staticPrivateKey_", "LOrgSpongycastleCryptoParamsECPrivateKeyParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "staticPublicPoint_", "LOrgSpongycastleMathEcECPoint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "ephemeralPrivateKey_", "LOrgSpongycastleCryptoParamsECPrivateKeyParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "ephemeralPublicPoint_", "LOrgSpongycastleMathEcECPoint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLOrgSpongycastleCryptoParamsECPrivateKeyParameters;LOrgSpongycastleCryptoParamsECPrivateKeyParameters;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters = { "SM2KeyExchangePrivateParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 6, 5, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters;
}

@end

void OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters_initWithBoolean_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_(OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters *self, jboolean initiator, OrgSpongycastleCryptoParamsECPrivateKeyParameters *staticPrivateKey, OrgSpongycastleCryptoParamsECPrivateKeyParameters *ephemeralPrivateKey) {
  NSObject_init(self);
  if (staticPrivateKey == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"staticPrivateKey cannot be null");
  }
  if (ephemeralPrivateKey == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"ephemeralPrivateKey cannot be null");
  }
  OrgSpongycastleCryptoParamsECDomainParameters *parameters = [staticPrivateKey getParameters];
  if (![((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(parameters)) isEqual:[ephemeralPrivateKey getParameters]]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Static and ephemeral private keys have different domain parameters");
  }
  self->initiator_ = initiator;
  self->staticPrivateKey_ = staticPrivateKey;
  self->staticPublicPoint_ = [((OrgSpongycastleMathEcECPoint *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([parameters getG])) multiplyWithJavaMathBigInteger:[staticPrivateKey getD]])) normalize];
  self->ephemeralPrivateKey_ = ephemeralPrivateKey;
  self->ephemeralPublicPoint_ = [((OrgSpongycastleMathEcECPoint *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([parameters getG])) multiplyWithJavaMathBigInteger:[ephemeralPrivateKey getD]])) normalize];
}

OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters *new_OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters_initWithBoolean_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_(jboolean initiator, OrgSpongycastleCryptoParamsECPrivateKeyParameters *staticPrivateKey, OrgSpongycastleCryptoParamsECPrivateKeyParameters *ephemeralPrivateKey) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters, initWithBoolean_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_, initiator, staticPrivateKey, ephemeralPrivateKey)
}

OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters *create_OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters_initWithBoolean_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_(jboolean initiator, OrgSpongycastleCryptoParamsECPrivateKeyParameters *staticPrivateKey, OrgSpongycastleCryptoParamsECPrivateKeyParameters *ephemeralPrivateKey) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters, initWithBoolean_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_withOrgSpongycastleCryptoParamsECPrivateKeyParameters_, initiator, staticPrivateKey, ephemeralPrivateKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsSM2KeyExchangePrivateParameters)
