//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/RSABlindingParameters.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/crypto/params/RSABlindingParameters.h"
#include "org/spongycastle/crypto/params/RSAKeyParameters.h"
#include "org/spongycastle/crypto/params/RSAPrivateCrtKeyParameters.h"

@interface OrgSpongycastleCryptoParamsRSABlindingParameters () {
 @public
  OrgSpongycastleCryptoParamsRSAKeyParameters *publicKey_;
  JavaMathBigInteger *blindingFactor_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsRSABlindingParameters, publicKey_, OrgSpongycastleCryptoParamsRSAKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsRSABlindingParameters, blindingFactor_, JavaMathBigInteger *)

@implementation OrgSpongycastleCryptoParamsRSABlindingParameters

- (instancetype)initWithOrgSpongycastleCryptoParamsRSAKeyParameters:(OrgSpongycastleCryptoParamsRSAKeyParameters *)publicKey
                                             withJavaMathBigInteger:(JavaMathBigInteger *)blindingFactor {
  OrgSpongycastleCryptoParamsRSABlindingParameters_initWithOrgSpongycastleCryptoParamsRSAKeyParameters_withJavaMathBigInteger_(self, publicKey, blindingFactor);
  return self;
}

- (OrgSpongycastleCryptoParamsRSAKeyParameters *)getPublicKey {
  return publicKey_;
}

- (JavaMathBigInteger *)getBlindingFactor {
  return blindingFactor_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsRSAKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoParamsRSAKeyParameters:withJavaMathBigInteger:);
  methods[1].selector = @selector(getPublicKey);
  methods[2].selector = @selector(getBlindingFactor);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "publicKey_", "LOrgSpongycastleCryptoParamsRSAKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "blindingFactor_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoParamsRSAKeyParameters;LJavaMathBigInteger;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsRSABlindingParameters = { "RSABlindingParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsRSABlindingParameters;
}

@end

void OrgSpongycastleCryptoParamsRSABlindingParameters_initWithOrgSpongycastleCryptoParamsRSAKeyParameters_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsRSABlindingParameters *self, OrgSpongycastleCryptoParamsRSAKeyParameters *publicKey, JavaMathBigInteger *blindingFactor) {
  NSObject_init(self);
  if ([publicKey isKindOfClass:[OrgSpongycastleCryptoParamsRSAPrivateCrtKeyParameters class]]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"RSA parameters should be for a public key");
  }
  self->publicKey_ = publicKey;
  self->blindingFactor_ = blindingFactor;
}

OrgSpongycastleCryptoParamsRSABlindingParameters *new_OrgSpongycastleCryptoParamsRSABlindingParameters_initWithOrgSpongycastleCryptoParamsRSAKeyParameters_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsRSAKeyParameters *publicKey, JavaMathBigInteger *blindingFactor) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsRSABlindingParameters, initWithOrgSpongycastleCryptoParamsRSAKeyParameters_withJavaMathBigInteger_, publicKey, blindingFactor)
}

OrgSpongycastleCryptoParamsRSABlindingParameters *create_OrgSpongycastleCryptoParamsRSABlindingParameters_initWithOrgSpongycastleCryptoParamsRSAKeyParameters_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsRSAKeyParameters *publicKey, JavaMathBigInteger *blindingFactor) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsRSABlindingParameters, initWithOrgSpongycastleCryptoParamsRSAKeyParameters_withJavaMathBigInteger_, publicKey, blindingFactor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsRSABlindingParameters)
