//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/SkeinParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStreamWriter.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/text/DateFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/Locale.h"
#include "org/spongycastle/crypto/params/SkeinParameters.h"
#include "org/spongycastle/util/Integers.h"

@interface OrgSpongycastleCryptoParamsSkeinParameters () {
 @public
  JavaUtilHashtable *parameters_;
}

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)parameters;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsSkeinParameters, parameters_, JavaUtilHashtable *)

__attribute__((unused)) static void OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(OrgSpongycastleCryptoParamsSkeinParameters *self, JavaUtilHashtable *parameters);

__attribute__((unused)) static OrgSpongycastleCryptoParamsSkeinParameters *new_OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(JavaUtilHashtable *parameters) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleCryptoParamsSkeinParameters *create_OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(JavaUtilHashtable *parameters);

@interface OrgSpongycastleCryptoParamsSkeinParameters_Builder () {
 @public
  JavaUtilHashtable *parameters_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsSkeinParameters_Builder, parameters_, JavaUtilHashtable *)

@implementation OrgSpongycastleCryptoParamsSkeinParameters

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoParamsSkeinParameters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)parameters {
  OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(self, parameters);
  return self;
}

- (JavaUtilHashtable *)getParameters {
  return parameters_;
}

- (IOSByteArray *)getKey {
  return (IOSByteArray *) cast_chk([((JavaUtilHashtable *) nil_chk(parameters_)) getWithId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY)], [IOSByteArray class]);
}

- (IOSByteArray *)getPersonalisation {
  return (IOSByteArray *) cast_chk([((JavaUtilHashtable *) nil_chk(parameters_)) getWithId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PERSONALISATION)], [IOSByteArray class]);
}

- (IOSByteArray *)getPublicKey {
  return (IOSByteArray *) cast_chk([((JavaUtilHashtable *) nil_chk(parameters_)) getWithId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PUBLIC_KEY)], [IOSByteArray class]);
}

- (IOSByteArray *)getKeyIdentifier {
  return (IOSByteArray *) cast_chk([((JavaUtilHashtable *) nil_chk(parameters_)) getWithId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY_IDENTIFIER)], [IOSByteArray class]);
}

- (IOSByteArray *)getNonce {
  return (IOSByteArray *) cast_chk([((JavaUtilHashtable *) nil_chk(parameters_)) getWithId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_NONCE)], [IOSByteArray class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashtable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilHashtable:);
  methods[2].selector = @selector(getParameters);
  methods[3].selector = @selector(getKey);
  methods[4].selector = @selector(getPersonalisation);
  methods[5].selector = @selector(getPublicKey);
  methods[6].selector = @selector(getKeyIdentifier);
  methods[7].selector = @selector(getNonce);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PARAM_TYPE_KEY", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY, 0x19, -1, -1, -1, -1 },
    { "PARAM_TYPE_CONFIG", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_CONFIG, 0x19, -1, -1, -1, -1 },
    { "PARAM_TYPE_PERSONALISATION", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PERSONALISATION, 0x19, -1, -1, -1, -1 },
    { "PARAM_TYPE_PUBLIC_KEY", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PUBLIC_KEY, 0x19, -1, -1, -1, -1 },
    { "PARAM_TYPE_KEY_IDENTIFIER", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY_IDENTIFIER, 0x19, -1, -1, -1, -1 },
    { "PARAM_TYPE_NONCE", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_NONCE, 0x19, -1, -1, -1, -1 },
    { "PARAM_TYPE_MESSAGE", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_MESSAGE, 0x19, -1, -1, -1, -1 },
    { "PARAM_TYPE_OUTPUT", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_OUTPUT, 0x19, -1, -1, -1, -1 },
    { "parameters_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilHashtable;", "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsSkeinParameters = { "SkeinParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 8, 9, -1, 1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsSkeinParameters;
}

@end

void OrgSpongycastleCryptoParamsSkeinParameters_init(OrgSpongycastleCryptoParamsSkeinParameters *self) {
  OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(self, new_JavaUtilHashtable_init());
}

OrgSpongycastleCryptoParamsSkeinParameters *new_OrgSpongycastleCryptoParamsSkeinParameters_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsSkeinParameters, init)
}

OrgSpongycastleCryptoParamsSkeinParameters *create_OrgSpongycastleCryptoParamsSkeinParameters_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsSkeinParameters, init)
}

void OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(OrgSpongycastleCryptoParamsSkeinParameters *self, JavaUtilHashtable *parameters) {
  NSObject_init(self);
  self->parameters_ = parameters;
}

OrgSpongycastleCryptoParamsSkeinParameters *new_OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(JavaUtilHashtable *parameters) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsSkeinParameters, initWithJavaUtilHashtable_, parameters)
}

OrgSpongycastleCryptoParamsSkeinParameters *create_OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(JavaUtilHashtable *parameters) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsSkeinParameters, initWithJavaUtilHashtable_, parameters)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsSkeinParameters)

@implementation OrgSpongycastleCryptoParamsSkeinParameters_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoParamsSkeinParameters_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)paramsMap {
  OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithJavaUtilHashtable_(self, paramsMap);
  return self;
}

- (instancetype)initWithOrgSpongycastleCryptoParamsSkeinParameters:(OrgSpongycastleCryptoParamsSkeinParameters *)params {
  OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithOrgSpongycastleCryptoParamsSkeinParameters_(self, params);
  return self;
}

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setWithInt:(jint)type
                                                     withByteArray:(IOSByteArray *)value {
  if (value == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Parameter value must not be null.");
  }
  if ((type != OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY) && (type <= OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_CONFIG || type >= OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_OUTPUT || type == OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_MESSAGE)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Parameter types must be in the range 0,5..47,49..62.");
  }
  if (type == OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_CONFIG) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"Parameter type ", OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_CONFIG, @" is reserved for internal use."));
  }
  (void) [((JavaUtilHashtable *) nil_chk(self->parameters_)) putWithId:OrgSpongycastleUtilIntegers_valueOfWithInt_(type) withId:value];
  return self;
}

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setKeyWithByteArray:(IOSByteArray *)key {
  return [self setWithInt:OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY withByteArray:key];
}

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setPersonalisationWithByteArray:(IOSByteArray *)personalisation {
  return [self setWithInt:OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PERSONALISATION withByteArray:personalisation];
}

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setPersonalisationWithJavaUtilDate:(JavaUtilDate *)date
                                                                              withNSString:(NSString *)emailAddress
                                                                              withNSString:(NSString *)distinguisher {
  @try {
    JavaIoByteArrayOutputStream *bout = new_JavaIoByteArrayOutputStream_init();
    JavaIoOutputStreamWriter *out = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(bout, @"UTF-8");
    JavaTextDateFormat *format = new_JavaTextSimpleDateFormat_initWithNSString_(@"YYYYMMDD");
    [out writeWithNSString:[format formatWithJavaUtilDate:date]];
    [out writeWithNSString:@" "];
    [out writeWithNSString:emailAddress];
    [out writeWithNSString:@" "];
    [out writeWithNSString:distinguisher];
    [out close];
    return [self setWithInt:OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PERSONALISATION withByteArray:[bout toByteArray]];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Byte I/O failed: ", e));
  }
}

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setPersonalisationWithJavaUtilDate:(JavaUtilDate *)date
                                                                        withJavaUtilLocale:(JavaUtilLocale *)dateLocale
                                                                              withNSString:(NSString *)emailAddress
                                                                              withNSString:(NSString *)distinguisher {
  @try {
    JavaIoByteArrayOutputStream *bout = new_JavaIoByteArrayOutputStream_init();
    JavaIoOutputStreamWriter *out = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(bout, @"UTF-8");
    JavaTextDateFormat *format = new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(@"YYYYMMDD", dateLocale);
    [out writeWithNSString:[format formatWithJavaUtilDate:date]];
    [out writeWithNSString:@" "];
    [out writeWithNSString:emailAddress];
    [out writeWithNSString:@" "];
    [out writeWithNSString:distinguisher];
    [out close];
    return [self setWithInt:OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PERSONALISATION withByteArray:[bout toByteArray]];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Byte I/O failed: ", e));
  }
}

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setPublicKeyWithByteArray:(IOSByteArray *)publicKey {
  return [self setWithInt:OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PUBLIC_KEY withByteArray:publicKey];
}

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setKeyIdentifierWithByteArray:(IOSByteArray *)keyIdentifier {
  return [self setWithInt:OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY_IDENTIFIER withByteArray:keyIdentifier];
}

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setNonceWithByteArray:(IOSByteArray *)nonce {
  return [self setWithInt:OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_NONCE withByteArray:nonce];
}

- (OrgSpongycastleCryptoParamsSkeinParameters *)build {
  return new_OrgSpongycastleCryptoParamsSkeinParameters_initWithJavaUtilHashtable_(parameters_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;", 0x1, 6, 8, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;", 0x1, 9, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;", 0x1, 10, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters_Builder;", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsSkeinParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilHashtable:);
  methods[2].selector = @selector(initWithOrgSpongycastleCryptoParamsSkeinParameters:);
  methods[3].selector = @selector(setWithInt:withByteArray:);
  methods[4].selector = @selector(setKeyWithByteArray:);
  methods[5].selector = @selector(setPersonalisationWithByteArray:);
  methods[6].selector = @selector(setPersonalisationWithJavaUtilDate:withNSString:withNSString:);
  methods[7].selector = @selector(setPersonalisationWithJavaUtilDate:withJavaUtilLocale:withNSString:withNSString:);
  methods[8].selector = @selector(setPublicKeyWithByteArray:);
  methods[9].selector = @selector(setKeyIdentifierWithByteArray:);
  methods[10].selector = @selector(setNonceWithByteArray:);
  methods[11].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parameters_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilHashtable;", "LOrgSpongycastleCryptoParamsSkeinParameters;", "set", "I[B", "setKey", "[B", "setPersonalisation", "LJavaUtilDate;LNSString;LNSString;", "LJavaUtilDate;LJavaUtilLocale;LNSString;LNSString;", "setPublicKey", "setKeyIdentifier", "setNonce" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsSkeinParameters_Builder = { "Builder", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x9, 12, 1, 1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsSkeinParameters_Builder;
}

@end

void OrgSpongycastleCryptoParamsSkeinParameters_Builder_init(OrgSpongycastleCryptoParamsSkeinParameters_Builder *self) {
  NSObject_init(self);
  self->parameters_ = new_JavaUtilHashtable_init();
}

OrgSpongycastleCryptoParamsSkeinParameters_Builder *new_OrgSpongycastleCryptoParamsSkeinParameters_Builder_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsSkeinParameters_Builder, init)
}

OrgSpongycastleCryptoParamsSkeinParameters_Builder *create_OrgSpongycastleCryptoParamsSkeinParameters_Builder_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsSkeinParameters_Builder, init)
}

void OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithJavaUtilHashtable_(OrgSpongycastleCryptoParamsSkeinParameters_Builder *self, JavaUtilHashtable *paramsMap) {
  NSObject_init(self);
  self->parameters_ = new_JavaUtilHashtable_init();
  id<JavaUtilEnumeration> keys = [((JavaUtilHashtable *) nil_chk(paramsMap)) keys];
  while ([((id<JavaUtilEnumeration>) nil_chk(keys)) hasMoreElements]) {
    JavaLangInteger *key = (JavaLangInteger *) cast_chk([keys nextElement], [JavaLangInteger class]);
    (void) [((JavaUtilHashtable *) nil_chk(self->parameters_)) putWithId:key withId:[paramsMap getWithId:key]];
  }
}

OrgSpongycastleCryptoParamsSkeinParameters_Builder *new_OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithJavaUtilHashtable_(JavaUtilHashtable *paramsMap) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsSkeinParameters_Builder, initWithJavaUtilHashtable_, paramsMap)
}

OrgSpongycastleCryptoParamsSkeinParameters_Builder *create_OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithJavaUtilHashtable_(JavaUtilHashtable *paramsMap) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsSkeinParameters_Builder, initWithJavaUtilHashtable_, paramsMap)
}

void OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithOrgSpongycastleCryptoParamsSkeinParameters_(OrgSpongycastleCryptoParamsSkeinParameters_Builder *self, OrgSpongycastleCryptoParamsSkeinParameters *params) {
  NSObject_init(self);
  self->parameters_ = new_JavaUtilHashtable_init();
  id<JavaUtilEnumeration> keys = [((JavaUtilHashtable *) nil_chk(((OrgSpongycastleCryptoParamsSkeinParameters *) nil_chk(params))->parameters_)) keys];
  while ([((id<JavaUtilEnumeration>) nil_chk(keys)) hasMoreElements]) {
    JavaLangInteger *key = (JavaLangInteger *) cast_chk([keys nextElement], [JavaLangInteger class]);
    (void) [((JavaUtilHashtable *) nil_chk(self->parameters_)) putWithId:key withId:[((JavaUtilHashtable *) nil_chk(params->parameters_)) getWithId:key]];
  }
}

OrgSpongycastleCryptoParamsSkeinParameters_Builder *new_OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithOrgSpongycastleCryptoParamsSkeinParameters_(OrgSpongycastleCryptoParamsSkeinParameters *params) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsSkeinParameters_Builder, initWithOrgSpongycastleCryptoParamsSkeinParameters_, params)
}

OrgSpongycastleCryptoParamsSkeinParameters_Builder *create_OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithOrgSpongycastleCryptoParamsSkeinParameters_(OrgSpongycastleCryptoParamsSkeinParameters *params) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsSkeinParameters_Builder, initWithOrgSpongycastleCryptoParamsSkeinParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsSkeinParameters_Builder)
