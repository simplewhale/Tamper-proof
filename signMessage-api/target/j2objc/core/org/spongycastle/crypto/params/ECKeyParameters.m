//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/ECKeyParameters.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/crypto/params/ECDomainParameters.h"
#include "org/spongycastle/crypto/params/ECKeyParameters.h"

@implementation OrgSpongycastleCryptoParamsECKeyParameters

- (instancetype)initWithBoolean:(jboolean)isPrivate
withOrgSpongycastleCryptoParamsECDomainParameters:(OrgSpongycastleCryptoParamsECDomainParameters *)params {
  OrgSpongycastleCryptoParamsECKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsECDomainParameters_(self, isPrivate, params);
  return self;
}

- (OrgSpongycastleCryptoParamsECDomainParameters *)getParameters {
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsECDomainParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withOrgSpongycastleCryptoParamsECDomainParameters:);
  methods[1].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgSpongycastleCryptoParamsECDomainParameters;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLOrgSpongycastleCryptoParamsECDomainParameters;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsECKeyParameters = { "ECKeyParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsECKeyParameters;
}

@end

void OrgSpongycastleCryptoParamsECKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsECDomainParameters_(OrgSpongycastleCryptoParamsECKeyParameters *self, jboolean isPrivate, OrgSpongycastleCryptoParamsECDomainParameters *params) {
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, isPrivate);
  self->params_ = params;
}

OrgSpongycastleCryptoParamsECKeyParameters *new_OrgSpongycastleCryptoParamsECKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsECDomainParameters_(jboolean isPrivate, OrgSpongycastleCryptoParamsECDomainParameters *params) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsECKeyParameters, initWithBoolean_withOrgSpongycastleCryptoParamsECDomainParameters_, isPrivate, params)
}

OrgSpongycastleCryptoParamsECKeyParameters *create_OrgSpongycastleCryptoParamsECKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsECDomainParameters_(jboolean isPrivate, OrgSpongycastleCryptoParamsECDomainParameters *params) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsECKeyParameters, initWithBoolean_withOrgSpongycastleCryptoParamsECDomainParameters_, isPrivate, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsECKeyParameters)
