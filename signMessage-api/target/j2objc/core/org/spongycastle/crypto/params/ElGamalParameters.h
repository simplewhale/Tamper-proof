//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/ElGamalParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsElGamalParameters")
#ifdef RESTRICT_OrgSpongycastleCryptoParamsElGamalParameters
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsElGamalParameters 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsElGamalParameters 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoParamsElGamalParameters

#if !defined (OrgSpongycastleCryptoParamsElGamalParameters_) && (INCLUDE_ALL_OrgSpongycastleCryptoParamsElGamalParameters || defined(INCLUDE_OrgSpongycastleCryptoParamsElGamalParameters))
#define OrgSpongycastleCryptoParamsElGamalParameters_

#define RESTRICT_OrgSpongycastleCryptoCipherParameters 1
#define INCLUDE_OrgSpongycastleCryptoCipherParameters 1
#include "org/spongycastle/crypto/CipherParameters.h"

@class JavaMathBigInteger;

@interface OrgSpongycastleCryptoParamsElGamalParameters : NSObject < OrgSpongycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g;

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                                   withInt:(jint)l;

- (jboolean)isEqual:(id)obj;

- (JavaMathBigInteger *)getG;

- (jint)getL;

- (JavaMathBigInteger *)getP;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoParamsElGamalParameters)

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsElGamalParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsElGamalParameters *new_OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsElGamalParameters *create_OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g);

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(OrgSpongycastleCryptoParamsElGamalParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g, jint l);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsElGamalParameters *new_OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, jint l) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsElGamalParameters *create_OrgSpongycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, jint l);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoParamsElGamalParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsElGamalParameters")
