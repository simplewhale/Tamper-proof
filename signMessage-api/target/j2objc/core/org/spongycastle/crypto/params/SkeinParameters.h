//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/SkeinParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsSkeinParameters")
#ifdef RESTRICT_OrgSpongycastleCryptoParamsSkeinParameters
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsSkeinParameters 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsSkeinParameters 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoParamsSkeinParameters

#if !defined (OrgSpongycastleCryptoParamsSkeinParameters_) && (INCLUDE_ALL_OrgSpongycastleCryptoParamsSkeinParameters || defined(INCLUDE_OrgSpongycastleCryptoParamsSkeinParameters))
#define OrgSpongycastleCryptoParamsSkeinParameters_

#define RESTRICT_OrgSpongycastleCryptoCipherParameters 1
#define INCLUDE_OrgSpongycastleCryptoCipherParameters 1
#include "org/spongycastle/crypto/CipherParameters.h"

@class IOSByteArray;
@class JavaUtilHashtable;

@interface OrgSpongycastleCryptoParamsSkeinParameters : NSObject < OrgSpongycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype)init;

- (IOSByteArray *)getKey;

- (IOSByteArray *)getKeyIdentifier;

- (IOSByteArray *)getNonce;

- (JavaUtilHashtable *)getParameters;

- (IOSByteArray *)getPersonalisation;

- (IOSByteArray *)getPublicKey;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoParamsSkeinParameters)

inline jint OrgSpongycastleCryptoParamsSkeinParameters_get_PARAM_TYPE_KEY(void);
#define OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsSkeinParameters, PARAM_TYPE_KEY, jint)

inline jint OrgSpongycastleCryptoParamsSkeinParameters_get_PARAM_TYPE_CONFIG(void);
#define OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_CONFIG 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsSkeinParameters, PARAM_TYPE_CONFIG, jint)

inline jint OrgSpongycastleCryptoParamsSkeinParameters_get_PARAM_TYPE_PERSONALISATION(void);
#define OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PERSONALISATION 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsSkeinParameters, PARAM_TYPE_PERSONALISATION, jint)

inline jint OrgSpongycastleCryptoParamsSkeinParameters_get_PARAM_TYPE_PUBLIC_KEY(void);
#define OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_PUBLIC_KEY 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsSkeinParameters, PARAM_TYPE_PUBLIC_KEY, jint)

inline jint OrgSpongycastleCryptoParamsSkeinParameters_get_PARAM_TYPE_KEY_IDENTIFIER(void);
#define OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_KEY_IDENTIFIER 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsSkeinParameters, PARAM_TYPE_KEY_IDENTIFIER, jint)

inline jint OrgSpongycastleCryptoParamsSkeinParameters_get_PARAM_TYPE_NONCE(void);
#define OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_NONCE 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsSkeinParameters, PARAM_TYPE_NONCE, jint)

inline jint OrgSpongycastleCryptoParamsSkeinParameters_get_PARAM_TYPE_MESSAGE(void);
#define OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_MESSAGE 48
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsSkeinParameters, PARAM_TYPE_MESSAGE, jint)

inline jint OrgSpongycastleCryptoParamsSkeinParameters_get_PARAM_TYPE_OUTPUT(void);
#define OrgSpongycastleCryptoParamsSkeinParameters_PARAM_TYPE_OUTPUT 63
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsSkeinParameters, PARAM_TYPE_OUTPUT, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsSkeinParameters_init(OrgSpongycastleCryptoParamsSkeinParameters *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsSkeinParameters *new_OrgSpongycastleCryptoParamsSkeinParameters_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsSkeinParameters *create_OrgSpongycastleCryptoParamsSkeinParameters_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoParamsSkeinParameters)

#endif

#if !defined (OrgSpongycastleCryptoParamsSkeinParameters_Builder_) && (INCLUDE_ALL_OrgSpongycastleCryptoParamsSkeinParameters || defined(INCLUDE_OrgSpongycastleCryptoParamsSkeinParameters_Builder))
#define OrgSpongycastleCryptoParamsSkeinParameters_Builder_

@class IOSByteArray;
@class JavaUtilDate;
@class JavaUtilHashtable;
@class JavaUtilLocale;
@class OrgSpongycastleCryptoParamsSkeinParameters;

@interface OrgSpongycastleCryptoParamsSkeinParameters_Builder : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)paramsMap;

- (instancetype)initWithOrgSpongycastleCryptoParamsSkeinParameters:(OrgSpongycastleCryptoParamsSkeinParameters *)params;

- (OrgSpongycastleCryptoParamsSkeinParameters *)build;

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setWithInt:(jint)type
                                                     withByteArray:(IOSByteArray *)value;

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setKeyWithByteArray:(IOSByteArray *)key;

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setKeyIdentifierWithByteArray:(IOSByteArray *)keyIdentifier;

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setNonceWithByteArray:(IOSByteArray *)nonce;

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setPersonalisationWithByteArray:(IOSByteArray *)personalisation;

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setPersonalisationWithJavaUtilDate:(JavaUtilDate *)date
                                                                        withJavaUtilLocale:(JavaUtilLocale *)dateLocale
                                                                              withNSString:(NSString *)emailAddress
                                                                              withNSString:(NSString *)distinguisher;

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setPersonalisationWithJavaUtilDate:(JavaUtilDate *)date
                                                                              withNSString:(NSString *)emailAddress
                                                                              withNSString:(NSString *)distinguisher;

- (OrgSpongycastleCryptoParamsSkeinParameters_Builder *)setPublicKeyWithByteArray:(IOSByteArray *)publicKey;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoParamsSkeinParameters_Builder)

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsSkeinParameters_Builder_init(OrgSpongycastleCryptoParamsSkeinParameters_Builder *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsSkeinParameters_Builder *new_OrgSpongycastleCryptoParamsSkeinParameters_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsSkeinParameters_Builder *create_OrgSpongycastleCryptoParamsSkeinParameters_Builder_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithJavaUtilHashtable_(OrgSpongycastleCryptoParamsSkeinParameters_Builder *self, JavaUtilHashtable *paramsMap);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsSkeinParameters_Builder *new_OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithJavaUtilHashtable_(JavaUtilHashtable *paramsMap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsSkeinParameters_Builder *create_OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithJavaUtilHashtable_(JavaUtilHashtable *paramsMap);

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithOrgSpongycastleCryptoParamsSkeinParameters_(OrgSpongycastleCryptoParamsSkeinParameters_Builder *self, OrgSpongycastleCryptoParamsSkeinParameters *params);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsSkeinParameters_Builder *new_OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithOrgSpongycastleCryptoParamsSkeinParameters_(OrgSpongycastleCryptoParamsSkeinParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsSkeinParameters_Builder *create_OrgSpongycastleCryptoParamsSkeinParameters_Builder_initWithOrgSpongycastleCryptoParamsSkeinParameters_(OrgSpongycastleCryptoParamsSkeinParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoParamsSkeinParameters_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsSkeinParameters")
