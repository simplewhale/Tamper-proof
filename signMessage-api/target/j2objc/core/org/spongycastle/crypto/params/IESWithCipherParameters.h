//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/IESWithCipherParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsIESWithCipherParameters")
#ifdef RESTRICT_OrgSpongycastleCryptoParamsIESWithCipherParameters
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsIESWithCipherParameters 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsIESWithCipherParameters 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoParamsIESWithCipherParameters

#if !defined (OrgSpongycastleCryptoParamsIESWithCipherParameters_) && (INCLUDE_ALL_OrgSpongycastleCryptoParamsIESWithCipherParameters || defined(INCLUDE_OrgSpongycastleCryptoParamsIESWithCipherParameters))
#define OrgSpongycastleCryptoParamsIESWithCipherParameters_

#define RESTRICT_OrgSpongycastleCryptoParamsIESParameters 1
#define INCLUDE_OrgSpongycastleCryptoParamsIESParameters 1
#include "org/spongycastle/crypto/params/IESParameters.h"

@class IOSByteArray;

@interface OrgSpongycastleCryptoParamsIESWithCipherParameters : OrgSpongycastleCryptoParamsIESParameters

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)derivation
                    withByteArray:(IOSByteArray *)encoding
                          withInt:(jint)macKeySize
                          withInt:(jint)cipherKeySize;

- (jint)getCipherKeySize;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithByteArray:(IOSByteArray *)arg0
                    withByteArray:(IOSByteArray *)arg1
                          withInt:(jint)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoParamsIESWithCipherParameters)

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsIESWithCipherParameters_initWithByteArray_withByteArray_withInt_withInt_(OrgSpongycastleCryptoParamsIESWithCipherParameters *self, IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize, jint cipherKeySize);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsIESWithCipherParameters *new_OrgSpongycastleCryptoParamsIESWithCipherParameters_initWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize, jint cipherKeySize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsIESWithCipherParameters *create_OrgSpongycastleCryptoParamsIESWithCipherParameters_initWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize, jint cipherKeySize);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoParamsIESWithCipherParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsIESWithCipherParameters")
