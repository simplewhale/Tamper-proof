//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/MGFParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/spongycastle/crypto/params/MGFParameters.h"

@implementation OrgSpongycastleCryptoParamsMGFParameters

- (instancetype)initWithByteArray:(IOSByteArray *)seed {
  OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_(self, seed);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)seed
                          withInt:(jint)off
                          withInt:(jint)len {
  OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(self, seed, off, len);
  return self;
}

- (IOSByteArray *)getSeed {
  return seed_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(getSeed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seed_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "[BII" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsMGFParameters = { "MGFParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsMGFParameters;
}

@end

void OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_(OrgSpongycastleCryptoParamsMGFParameters *self, IOSByteArray *seed) {
  OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(self, seed, 0, ((IOSByteArray *) nil_chk(seed))->size_);
}

OrgSpongycastleCryptoParamsMGFParameters *new_OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_(IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsMGFParameters, initWithByteArray_, seed)
}

OrgSpongycastleCryptoParamsMGFParameters *create_OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_(IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsMGFParameters, initWithByteArray_, seed)
}

void OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(OrgSpongycastleCryptoParamsMGFParameters *self, IOSByteArray *seed, jint off, jint len) {
  NSObject_init(self);
  self->seed_ = [IOSByteArray newArrayWithLength:len];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(seed, off, self->seed_, 0, len);
}

OrgSpongycastleCryptoParamsMGFParameters *new_OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(IOSByteArray *seed, jint off, jint len) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsMGFParameters, initWithByteArray_withInt_withInt_, seed, off, len)
}

OrgSpongycastleCryptoParamsMGFParameters *create_OrgSpongycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(IOSByteArray *seed, jint off, jint len) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsMGFParameters, initWithByteArray_withInt_withInt_, seed, off, len)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsMGFParameters)
