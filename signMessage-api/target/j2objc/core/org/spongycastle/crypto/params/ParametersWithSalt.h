//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/ParametersWithSalt.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsParametersWithSalt")
#ifdef RESTRICT_OrgSpongycastleCryptoParamsParametersWithSalt
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsParametersWithSalt 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsParametersWithSalt 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoParamsParametersWithSalt

#if !defined (OrgSpongycastleCryptoParamsParametersWithSalt_) && (INCLUDE_ALL_OrgSpongycastleCryptoParamsParametersWithSalt || defined(INCLUDE_OrgSpongycastleCryptoParamsParametersWithSalt))
#define OrgSpongycastleCryptoParamsParametersWithSalt_

#define RESTRICT_OrgSpongycastleCryptoCipherParameters 1
#define INCLUDE_OrgSpongycastleCryptoCipherParameters 1
#include "org/spongycastle/crypto/CipherParameters.h"

@class IOSByteArray;

@interface OrgSpongycastleCryptoParamsParametersWithSalt : NSObject < OrgSpongycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)parameters
                                                withByteArray:(IOSByteArray *)salt;

- (instancetype)initWithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)parameters
                                                withByteArray:(IOSByteArray *)salt
                                                      withInt:(jint)saltOff
                                                      withInt:(jint)saltLen;

- (id<OrgSpongycastleCryptoCipherParameters>)getParameters;

- (IOSByteArray *)getSalt;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoParamsParametersWithSalt)

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsParametersWithSalt_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_(OrgSpongycastleCryptoParamsParametersWithSalt *self, id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *salt);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsParametersWithSalt *new_OrgSpongycastleCryptoParamsParametersWithSalt_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_(id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *salt) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsParametersWithSalt *create_OrgSpongycastleCryptoParamsParametersWithSalt_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_(id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *salt);

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsParametersWithSalt_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_withInt_withInt_(OrgSpongycastleCryptoParamsParametersWithSalt *self, id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *salt, jint saltOff, jint saltLen);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsParametersWithSalt *new_OrgSpongycastleCryptoParamsParametersWithSalt_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_withInt_withInt_(id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *salt, jint saltOff, jint saltLen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsParametersWithSalt *create_OrgSpongycastleCryptoParamsParametersWithSalt_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_withInt_withInt_(id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *salt, jint saltOff, jint saltLen);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoParamsParametersWithSalt)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsParametersWithSalt")
