//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/ElGamalPrivateKeyParameters.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/crypto/params/ElGamalKeyParameters.h"
#include "org/spongycastle/crypto/params/ElGamalParameters.h"
#include "org/spongycastle/crypto/params/ElGamalPrivateKeyParameters.h"

@interface OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters () {
 @public
  JavaMathBigInteger *x_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters, x_, JavaMathBigInteger *)

@implementation OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)x
withOrgSpongycastleCryptoParamsElGamalParameters:(OrgSpongycastleCryptoParamsElGamalParameters *)params {
  OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsElGamalParameters_(self, x, params);
  return self;
}

- (JavaMathBigInteger *)getX {
  return x_;
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters class]])) {
    return false;
  }
  OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters *pKey = (OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters *) cast_chk(obj, [OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters class]);
  if (![((JavaMathBigInteger *) nil_chk([((OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters *) nil_chk(pKey)) getX])) isEqual:x_]) {
    return false;
  }
  return [super isEqual:obj];
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk([self getX])) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:withOrgSpongycastleCryptoParamsElGamalParameters:);
  methods[1].selector = @selector(getX);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LOrgSpongycastleCryptoParamsElGamalParameters;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters = { "ElGamalPrivateKeyParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters;
}

@end

void OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsElGamalParameters_(OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters *self, JavaMathBigInteger *x, OrgSpongycastleCryptoParamsElGamalParameters *params) {
  OrgSpongycastleCryptoParamsElGamalKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsElGamalParameters_(self, true, params);
  self->x_ = x;
}

OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters *new_OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsElGamalParameters_(JavaMathBigInteger *x, OrgSpongycastleCryptoParamsElGamalParameters *params) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters, initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsElGamalParameters_, x, params)
}

OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters *create_OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsElGamalParameters_(JavaMathBigInteger *x, OrgSpongycastleCryptoParamsElGamalParameters *params) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters, initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsElGamalParameters_, x, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsElGamalPrivateKeyParameters)
