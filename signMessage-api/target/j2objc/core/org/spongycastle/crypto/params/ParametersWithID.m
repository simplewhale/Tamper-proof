//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/ParametersWithID.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/params/ParametersWithID.h"

@interface OrgSpongycastleCryptoParamsParametersWithID () {
 @public
  id<OrgSpongycastleCryptoCipherParameters> parameters_;
  IOSByteArray *id__;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsParametersWithID, parameters_, id<OrgSpongycastleCryptoCipherParameters>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsParametersWithID, id__, IOSByteArray *)

@implementation OrgSpongycastleCryptoParamsParametersWithID

- (instancetype)initWithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)parameters
                                                withByteArray:(IOSByteArray *)id_ {
  OrgSpongycastleCryptoParamsParametersWithID_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_(self, parameters, id_);
  return self;
}

- (IOSByteArray *)getID {
  return id__;
}

- (id<OrgSpongycastleCryptoCipherParameters>)getParameters {
  return parameters_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoCipherParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoCipherParameters:withByteArray:);
  methods[1].selector = @selector(getID);
  methods[2].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parameters_", "LOrgSpongycastleCryptoCipherParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "id__", "[B", .constantValue.asLong = 0, 0x2, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoCipherParameters;[B", "id" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsParametersWithID = { "ParametersWithID", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsParametersWithID;
}

@end

void OrgSpongycastleCryptoParamsParametersWithID_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_(OrgSpongycastleCryptoParamsParametersWithID *self, id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *id_) {
  NSObject_init(self);
  self->parameters_ = parameters;
  self->id__ = id_;
}

OrgSpongycastleCryptoParamsParametersWithID *new_OrgSpongycastleCryptoParamsParametersWithID_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_(id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *id_) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsParametersWithID, initWithOrgSpongycastleCryptoCipherParameters_withByteArray_, parameters, id_)
}

OrgSpongycastleCryptoParamsParametersWithID *create_OrgSpongycastleCryptoParamsParametersWithID_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_(id<OrgSpongycastleCryptoCipherParameters> parameters, IOSByteArray *id_) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsParametersWithID, initWithOrgSpongycastleCryptoCipherParameters_withByteArray_, parameters, id_)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsParametersWithID)
