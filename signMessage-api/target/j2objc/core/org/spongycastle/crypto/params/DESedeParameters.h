//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/DESedeParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsDESedeParameters")
#ifdef RESTRICT_OrgSpongycastleCryptoParamsDESedeParameters
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsDESedeParameters 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsDESedeParameters 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoParamsDESedeParameters

#if !defined (OrgSpongycastleCryptoParamsDESedeParameters_) && (INCLUDE_ALL_OrgSpongycastleCryptoParamsDESedeParameters || defined(INCLUDE_OrgSpongycastleCryptoParamsDESedeParameters))
#define OrgSpongycastleCryptoParamsDESedeParameters_

#define RESTRICT_OrgSpongycastleCryptoParamsDESParameters 1
#define INCLUDE_OrgSpongycastleCryptoParamsDESParameters 1
#include "org/spongycastle/crypto/params/DESParameters.h"

@class IOSByteArray;

@interface OrgSpongycastleCryptoParamsDESedeParameters : OrgSpongycastleCryptoParamsDESParameters

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)key;

+ (jboolean)isReal2KeyWithByteArray:(IOSByteArray *)key
                            withInt:(jint)offset;

+ (jboolean)isReal3KeyWithByteArray:(IOSByteArray *)key
                            withInt:(jint)offset;

+ (jboolean)isRealEDEKeyWithByteArray:(IOSByteArray *)key
                              withInt:(jint)offset;

+ (jboolean)isWeakKeyWithByteArray:(IOSByteArray *)key
                           withInt:(jint)offset;

+ (jboolean)isWeakKeyWithByteArray:(IOSByteArray *)key
                           withInt:(jint)offset
                           withInt:(jint)length;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoParamsDESedeParameters)

inline jint OrgSpongycastleCryptoParamsDESedeParameters_get_DES_EDE_KEY_LENGTH(void);
#define OrgSpongycastleCryptoParamsDESedeParameters_DES_EDE_KEY_LENGTH 24
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoParamsDESedeParameters, DES_EDE_KEY_LENGTH, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsDESedeParameters_initWithByteArray_(OrgSpongycastleCryptoParamsDESedeParameters *self, IOSByteArray *key);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDESedeParameters *new_OrgSpongycastleCryptoParamsDESedeParameters_initWithByteArray_(IOSByteArray *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDESedeParameters *create_OrgSpongycastleCryptoParamsDESedeParameters_initWithByteArray_(IOSByteArray *key);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoParamsDESedeParameters_isWeakKeyWithByteArray_withInt_withInt_(IOSByteArray *key, jint offset, jint length);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoParamsDESedeParameters_isWeakKeyWithByteArray_withInt_(IOSByteArray *key, jint offset);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoParamsDESedeParameters_isRealEDEKeyWithByteArray_withInt_(IOSByteArray *key, jint offset);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoParamsDESedeParameters_isReal2KeyWithByteArray_withInt_(IOSByteArray *key, jint offset);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoParamsDESedeParameters_isReal3KeyWithByteArray_withInt_(IOSByteArray *key, jint offset);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoParamsDESedeParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsDESedeParameters")
