//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/DSAParameterGenerationParameters.java
//

#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/params/DSAParameterGenerationParameters.h"

@interface OrgSpongycastleCryptoParamsDSAParameterGenerationParameters () {
 @public
  jint l_;
  jint n_;
  jint usageIndex_;
  jint certainty_;
  JavaSecuritySecureRandom *random_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters, random_, JavaSecuritySecureRandom *)

@implementation OrgSpongycastleCryptoParamsDSAParameterGenerationParameters

- (instancetype)initWithInt:(jint)L
                    withInt:(jint)N
                    withInt:(jint)certainty
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(self, L, N, certainty, random);
  return self;
}

- (instancetype)initWithInt:(jint)L
                    withInt:(jint)N
                    withInt:(jint)certainty
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                    withInt:(jint)usageIndex {
  OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_(self, L, N, certainty, random, usageIndex);
  return self;
}

- (jint)getL {
  return l_;
}

- (jint)getN {
  return n_;
}

- (jint)getCertainty {
  return certainty_;
}

- (JavaSecuritySecureRandom *)getRandom {
  return random_;
}

- (jint)getUsageIndex {
  return usageIndex_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withInt:withJavaSecuritySecureRandom:);
  methods[1].selector = @selector(initWithInt:withInt:withInt:withJavaSecuritySecureRandom:withInt:);
  methods[2].selector = @selector(getL);
  methods[3].selector = @selector(getN);
  methods[4].selector = @selector(getCertainty);
  methods[5].selector = @selector(getRandom);
  methods[6].selector = @selector(getUsageIndex);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DIGITAL_SIGNATURE_USAGE", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_DIGITAL_SIGNATURE_USAGE, 0x19, -1, -1, -1, -1 },
    { "KEY_ESTABLISHMENT_USAGE", "I", .constantValue.asInt = OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_KEY_ESTABLISHMENT_USAGE, 0x19, -1, -1, -1, -1 },
    { "l_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "n_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "usageIndex_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "certainty_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IIILJavaSecuritySecureRandom;", "IIILJavaSecuritySecureRandom;I" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsDSAParameterGenerationParameters = { "DSAParameterGenerationParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 7, 7, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsDSAParameterGenerationParameters;
}

@end

void OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters *self, jint L, jint N, jint certainty, JavaSecuritySecureRandom *random) {
  OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_(self, L, N, certainty, random, -1);
}

OrgSpongycastleCryptoParamsDSAParameterGenerationParameters *new_OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(jint L, jint N, jint certainty, JavaSecuritySecureRandom *random) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters, initWithInt_withInt_withInt_withJavaSecuritySecureRandom_, L, N, certainty, random)
}

OrgSpongycastleCryptoParamsDSAParameterGenerationParameters *create_OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(jint L, jint N, jint certainty, JavaSecuritySecureRandom *random) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters, initWithInt_withInt_withInt_withJavaSecuritySecureRandom_, L, N, certainty, random)
}

void OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters *self, jint L, jint N, jint certainty, JavaSecuritySecureRandom *random, jint usageIndex) {
  NSObject_init(self);
  self->l_ = L;
  self->n_ = N;
  self->certainty_ = certainty;
  self->usageIndex_ = usageIndex;
  self->random_ = random;
}

OrgSpongycastleCryptoParamsDSAParameterGenerationParameters *new_OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_(jint L, jint N, jint certainty, JavaSecuritySecureRandom *random, jint usageIndex) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters, initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_, L, N, certainty, random, usageIndex)
}

OrgSpongycastleCryptoParamsDSAParameterGenerationParameters *create_OrgSpongycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_(jint L, jint N, jint certainty, JavaSecuritySecureRandom *random, jint usageIndex) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters, initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_, L, N, certainty, random, usageIndex)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsDSAParameterGenerationParameters)
