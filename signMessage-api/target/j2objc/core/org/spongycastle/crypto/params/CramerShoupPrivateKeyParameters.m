//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/CramerShoupPrivateKeyParameters.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/crypto/params/CramerShoupKeyParameters.h"
#include "org/spongycastle/crypto/params/CramerShoupParameters.h"
#include "org/spongycastle/crypto/params/CramerShoupPrivateKeyParameters.h"
#include "org/spongycastle/crypto/params/CramerShoupPublicKeyParameters.h"

@interface OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters () {
 @public
  JavaMathBigInteger *x1_;
  JavaMathBigInteger *x2_;
  JavaMathBigInteger *y1_;
  JavaMathBigInteger *y2_;
  JavaMathBigInteger *z_;
  OrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters *pk_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters, x1_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters, x2_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters, y1_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters, y2_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters, z_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters, pk_, OrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters *)

@implementation OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters

- (instancetype)initWithOrgSpongycastleCryptoParamsCramerShoupParameters:(OrgSpongycastleCryptoParamsCramerShoupParameters *)params
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)x1
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)x2
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)y1
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)y2
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)z {
  OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters_initWithOrgSpongycastleCryptoParamsCramerShoupParameters_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(self, params, x1, x2, y1, y2, z);
  return self;
}

- (JavaMathBigInteger *)getX1 {
  return x1_;
}

- (JavaMathBigInteger *)getX2 {
  return x2_;
}

- (JavaMathBigInteger *)getY1 {
  return y1_;
}

- (JavaMathBigInteger *)getY2 {
  return y2_;
}

- (JavaMathBigInteger *)getZ {
  return z_;
}

- (void)setPkWithOrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters:(OrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters *)pk {
  self->pk_ = pk;
}

- (OrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters *)getPk {
  return pk_;
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk(x1_)) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk(x2_)) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk(y1_)) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk(y2_)) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk(z_)) hash]) ^ ((jint) [super hash]);
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters class]])) {
    return false;
  }
  OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters *other = (OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters *) cast_chk(obj, [OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters class]);
  return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters *) nil_chk(other)) getX1])) isEqual:self->x1_] && [((JavaMathBigInteger *) nil_chk([other getX2])) isEqual:self->x2_] && [((JavaMathBigInteger *) nil_chk([other getY1])) isEqual:self->y1_] && [((JavaMathBigInteger *) nil_chk([other getY2])) isEqual:self->y2_] && [((JavaMathBigInteger *) nil_chk([other getZ])) isEqual:self->z_] && [super isEqual:obj];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoParamsCramerShoupParameters:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[1].selector = @selector(getX1);
  methods[2].selector = @selector(getX2);
  methods[3].selector = @selector(getY1);
  methods[4].selector = @selector(getY2);
  methods[5].selector = @selector(getZ);
  methods[6].selector = @selector(setPkWithOrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters:);
  methods[7].selector = @selector(getPk);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "x2_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "y1_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "y2_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "z_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pk_", "LOrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoParamsCramerShoupParameters;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;", "setPk", "LOrgSpongycastleCryptoParamsCramerShoupPublicKeyParameters;", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters = { "CramerShoupPrivateKeyParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 10, 6, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters;
}

@end

void OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters_initWithOrgSpongycastleCryptoParamsCramerShoupParameters_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters *self, OrgSpongycastleCryptoParamsCramerShoupParameters *params, JavaMathBigInteger *x1, JavaMathBigInteger *x2, JavaMathBigInteger *y1, JavaMathBigInteger *y2, JavaMathBigInteger *z) {
  OrgSpongycastleCryptoParamsCramerShoupKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsCramerShoupParameters_(self, true, params);
  self->x1_ = x1;
  self->x2_ = x2;
  self->y1_ = y1;
  self->y2_ = y2;
  self->z_ = z;
}

OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters *new_OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters_initWithOrgSpongycastleCryptoParamsCramerShoupParameters_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsCramerShoupParameters *params, JavaMathBigInteger *x1, JavaMathBigInteger *x2, JavaMathBigInteger *y1, JavaMathBigInteger *y2, JavaMathBigInteger *z) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters, initWithOrgSpongycastleCryptoParamsCramerShoupParameters_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, params, x1, x2, y1, y2, z)
}

OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters *create_OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters_initWithOrgSpongycastleCryptoParamsCramerShoupParameters_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsCramerShoupParameters *params, JavaMathBigInteger *x1, JavaMathBigInteger *x2, JavaMathBigInteger *y1, JavaMathBigInteger *y2, JavaMathBigInteger *z) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters, initWithOrgSpongycastleCryptoParamsCramerShoupParameters_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, params, x1, x2, y1, y2, z)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsCramerShoupPrivateKeyParameters)
