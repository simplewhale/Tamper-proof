//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/ECKeyGenerationParameters.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/KeyGenerationParameters.h"
#include "org/spongycastle/crypto/params/ECDomainParameters.h"
#include "org/spongycastle/crypto/params/ECKeyGenerationParameters.h"

@interface OrgSpongycastleCryptoParamsECKeyGenerationParameters () {
 @public
  OrgSpongycastleCryptoParamsECDomainParameters *domainParams_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsECKeyGenerationParameters, domainParams_, OrgSpongycastleCryptoParamsECDomainParameters *)

@implementation OrgSpongycastleCryptoParamsECKeyGenerationParameters

- (instancetype)initWithOrgSpongycastleCryptoParamsECDomainParameters:(OrgSpongycastleCryptoParamsECDomainParameters *)domainParams
                                         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  OrgSpongycastleCryptoParamsECKeyGenerationParameters_initWithOrgSpongycastleCryptoParamsECDomainParameters_withJavaSecuritySecureRandom_(self, domainParams, random);
  return self;
}

- (OrgSpongycastleCryptoParamsECDomainParameters *)getDomainParameters {
  return domainParams_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsECDomainParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoParamsECDomainParameters:withJavaSecuritySecureRandom:);
  methods[1].selector = @selector(getDomainParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "domainParams_", "LOrgSpongycastleCryptoParamsECDomainParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoParamsECDomainParameters;LJavaSecuritySecureRandom;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsECKeyGenerationParameters = { "ECKeyGenerationParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsECKeyGenerationParameters;
}

@end

void OrgSpongycastleCryptoParamsECKeyGenerationParameters_initWithOrgSpongycastleCryptoParamsECDomainParameters_withJavaSecuritySecureRandom_(OrgSpongycastleCryptoParamsECKeyGenerationParameters *self, OrgSpongycastleCryptoParamsECDomainParameters *domainParams, JavaSecuritySecureRandom *random) {
  OrgSpongycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(self, random, [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(domainParams)) getN])) bitLength]);
  self->domainParams_ = domainParams;
}

OrgSpongycastleCryptoParamsECKeyGenerationParameters *new_OrgSpongycastleCryptoParamsECKeyGenerationParameters_initWithOrgSpongycastleCryptoParamsECDomainParameters_withJavaSecuritySecureRandom_(OrgSpongycastleCryptoParamsECDomainParameters *domainParams, JavaSecuritySecureRandom *random) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsECKeyGenerationParameters, initWithOrgSpongycastleCryptoParamsECDomainParameters_withJavaSecuritySecureRandom_, domainParams, random)
}

OrgSpongycastleCryptoParamsECKeyGenerationParameters *create_OrgSpongycastleCryptoParamsECKeyGenerationParameters_initWithOrgSpongycastleCryptoParamsECDomainParameters_withJavaSecuritySecureRandom_(OrgSpongycastleCryptoParamsECDomainParameters *domainParams, JavaSecuritySecureRandom *random) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsECKeyGenerationParameters, initWithOrgSpongycastleCryptoParamsECDomainParameters_withJavaSecuritySecureRandom_, domainParams, random)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsECKeyGenerationParameters)
