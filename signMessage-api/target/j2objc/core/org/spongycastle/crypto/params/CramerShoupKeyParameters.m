//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/CramerShoupKeyParameters.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/crypto/params/CramerShoupKeyParameters.h"
#include "org/spongycastle/crypto/params/CramerShoupParameters.h"

@interface OrgSpongycastleCryptoParamsCramerShoupKeyParameters () {
 @public
  OrgSpongycastleCryptoParamsCramerShoupParameters *params_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsCramerShoupKeyParameters, params_, OrgSpongycastleCryptoParamsCramerShoupParameters *)

@implementation OrgSpongycastleCryptoParamsCramerShoupKeyParameters

- (instancetype)initWithBoolean:(jboolean)isPrivate
withOrgSpongycastleCryptoParamsCramerShoupParameters:(OrgSpongycastleCryptoParamsCramerShoupParameters *)params {
  OrgSpongycastleCryptoParamsCramerShoupKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsCramerShoupParameters_(self, isPrivate, params);
  return self;
}

- (OrgSpongycastleCryptoParamsCramerShoupParameters *)getParameters {
  return params_;
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[OrgSpongycastleCryptoParamsCramerShoupKeyParameters class]])) {
    return false;
  }
  OrgSpongycastleCryptoParamsCramerShoupKeyParameters *csKey = (OrgSpongycastleCryptoParamsCramerShoupKeyParameters *) cast_chk(obj, [OrgSpongycastleCryptoParamsCramerShoupKeyParameters class]);
  if (params_ == nil) {
    return [((OrgSpongycastleCryptoParamsCramerShoupKeyParameters *) nil_chk(csKey)) getParameters] == nil;
  }
  else {
    return [params_ isEqual:[((OrgSpongycastleCryptoParamsCramerShoupKeyParameters *) nil_chk(csKey)) getParameters]];
  }
}

- (NSUInteger)hash {
  jint code = [self isPrivate] ? 0 : 1;
  if (params_ != nil) {
    code ^= ((jint) [params_ hash]);
  }
  return code;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsCramerShoupParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withOrgSpongycastleCryptoParamsCramerShoupParameters:);
  methods[1].selector = @selector(getParameters);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgSpongycastleCryptoParamsCramerShoupParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLOrgSpongycastleCryptoParamsCramerShoupParameters;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsCramerShoupKeyParameters = { "CramerShoupKeyParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsCramerShoupKeyParameters;
}

@end

void OrgSpongycastleCryptoParamsCramerShoupKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsCramerShoupParameters_(OrgSpongycastleCryptoParamsCramerShoupKeyParameters *self, jboolean isPrivate, OrgSpongycastleCryptoParamsCramerShoupParameters *params) {
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, isPrivate);
  self->params_ = params;
}

OrgSpongycastleCryptoParamsCramerShoupKeyParameters *new_OrgSpongycastleCryptoParamsCramerShoupKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsCramerShoupParameters_(jboolean isPrivate, OrgSpongycastleCryptoParamsCramerShoupParameters *params) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsCramerShoupKeyParameters, initWithBoolean_withOrgSpongycastleCryptoParamsCramerShoupParameters_, isPrivate, params)
}

OrgSpongycastleCryptoParamsCramerShoupKeyParameters *create_OrgSpongycastleCryptoParamsCramerShoupKeyParameters_initWithBoolean_withOrgSpongycastleCryptoParamsCramerShoupParameters_(jboolean isPrivate, OrgSpongycastleCryptoParamsCramerShoupParameters *params) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsCramerShoupKeyParameters, initWithBoolean_withOrgSpongycastleCryptoParamsCramerShoupParameters_, isPrivate, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsCramerShoupKeyParameters)
