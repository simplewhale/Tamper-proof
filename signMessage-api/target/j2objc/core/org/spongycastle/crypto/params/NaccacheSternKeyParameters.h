//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/params/NaccacheSternKeyParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters")
#ifdef RESTRICT_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters

#if !defined (OrgSpongycastleCryptoParamsNaccacheSternKeyParameters_) && (INCLUDE_ALL_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters || defined(INCLUDE_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters))
#define OrgSpongycastleCryptoParamsNaccacheSternKeyParameters_

#define RESTRICT_OrgSpongycastleCryptoParamsAsymmetricKeyParameter 1
#define INCLUDE_OrgSpongycastleCryptoParamsAsymmetricKeyParameter 1
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"

@class JavaMathBigInteger;

@interface OrgSpongycastleCryptoParamsNaccacheSternKeyParameters : OrgSpongycastleCryptoParamsAsymmetricKeyParameter {
 @public
  jint lowerSigmaBound_;
}

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)privateKey
         withJavaMathBigInteger:(JavaMathBigInteger *)g
         withJavaMathBigInteger:(JavaMathBigInteger *)n
                        withInt:(jint)lowerSigmaBound;

- (JavaMathBigInteger *)getG;

- (jint)getLowerSigmaBound;

- (JavaMathBigInteger *)getModulus;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoParamsNaccacheSternKeyParameters)

FOUNDATION_EXPORT void OrgSpongycastleCryptoParamsNaccacheSternKeyParameters_initWithBoolean_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(OrgSpongycastleCryptoParamsNaccacheSternKeyParameters *self, jboolean privateKey, JavaMathBigInteger *g, JavaMathBigInteger *n, jint lowerSigmaBound);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsNaccacheSternKeyParameters *new_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters_initWithBoolean_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(jboolean privateKey, JavaMathBigInteger *g, JavaMathBigInteger *n, jint lowerSigmaBound) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsNaccacheSternKeyParameters *create_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters_initWithBoolean_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(jboolean privateKey, JavaMathBigInteger *g, JavaMathBigInteger *n, jint lowerSigmaBound);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoParamsNaccacheSternKeyParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoParamsNaccacheSternKeyParameters")
