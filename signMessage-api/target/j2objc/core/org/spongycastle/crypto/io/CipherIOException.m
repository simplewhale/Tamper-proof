//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/io/CipherIOException.java
//

#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Throwable.h"
#include "org/spongycastle/crypto/io/CipherIOException.h"

@interface OrgSpongycastleCryptoIoCipherIOException () {
 @public
  JavaLangThrowable *cause_CipherIOException_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoIoCipherIOException, cause_CipherIOException_, JavaLangThrowable *)

inline jlong OrgSpongycastleCryptoIoCipherIOException_get_serialVersionUID(void);
#define OrgSpongycastleCryptoIoCipherIOException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoIoCipherIOException, serialVersionUID, jlong)

@implementation OrgSpongycastleCryptoIoCipherIOException

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgSpongycastleCryptoIoCipherIOException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

- (JavaLangThrowable *)getCause {
  return cause_CipherIOException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgSpongycastleCryptoIoCipherIOException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "cause_CipherIOException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x12, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "cause" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoIoCipherIOException = { "CipherIOException", "org.spongycastle.crypto.io", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoIoCipherIOException;
}

@end

void OrgSpongycastleCryptoIoCipherIOException_initWithNSString_withJavaLangThrowable_(OrgSpongycastleCryptoIoCipherIOException *self, NSString *message, JavaLangThrowable *cause) {
  JavaIoIOException_initWithNSString_(self, message);
  self->cause_CipherIOException_ = cause;
}

OrgSpongycastleCryptoIoCipherIOException *new_OrgSpongycastleCryptoIoCipherIOException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoIoCipherIOException, initWithNSString_withJavaLangThrowable_, message, cause)
}

OrgSpongycastleCryptoIoCipherIOException *create_OrgSpongycastleCryptoIoCipherIOException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoIoCipherIOException, initWithNSString_withJavaLangThrowable_, message, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoIoCipherIOException)
