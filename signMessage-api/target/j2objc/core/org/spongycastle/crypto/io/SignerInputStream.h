//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/io/SignerInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoIoSignerInputStream")
#ifdef RESTRICT_OrgSpongycastleCryptoIoSignerInputStream
#define INCLUDE_ALL_OrgSpongycastleCryptoIoSignerInputStream 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoIoSignerInputStream 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoIoSignerInputStream

#if !defined (OrgSpongycastleCryptoIoSignerInputStream_) && (INCLUDE_ALL_OrgSpongycastleCryptoIoSignerInputStream || defined(INCLUDE_OrgSpongycastleCryptoIoSignerInputStream))
#define OrgSpongycastleCryptoIoSignerInputStream_

#define RESTRICT_JavaIoFilterInputStream 1
#define INCLUDE_JavaIoFilterInputStream 1
#include "java/io/FilterInputStream.h"

@class IOSByteArray;
@class JavaIoInputStream;
@protocol OrgSpongycastleCryptoSigner;

@interface OrgSpongycastleCryptoIoSignerInputStream : JavaIoFilterInputStream {
 @public
  id<OrgSpongycastleCryptoSigner> signer_;
}

#pragma mark Public

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream
          withOrgSpongycastleCryptoSigner:(id<OrgSpongycastleCryptoSigner>)signer;

- (id<OrgSpongycastleCryptoSigner>)getSigner;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoIoSignerInputStream)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoIoSignerInputStream, signer_, id<OrgSpongycastleCryptoSigner>)

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoSignerInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoSigner_(OrgSpongycastleCryptoIoSignerInputStream *self, JavaIoInputStream *stream, id<OrgSpongycastleCryptoSigner> signer);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoSignerInputStream *new_OrgSpongycastleCryptoIoSignerInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoSigner_(JavaIoInputStream *stream, id<OrgSpongycastleCryptoSigner> signer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoSignerInputStream *create_OrgSpongycastleCryptoIoSignerInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoSigner_(JavaIoInputStream *stream, id<OrgSpongycastleCryptoSigner> signer);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoIoSignerInputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoIoSignerInputStream")
