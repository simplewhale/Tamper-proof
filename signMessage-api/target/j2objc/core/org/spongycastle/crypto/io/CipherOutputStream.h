//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/io/CipherOutputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoIoCipherOutputStream")
#ifdef RESTRICT_OrgSpongycastleCryptoIoCipherOutputStream
#define INCLUDE_ALL_OrgSpongycastleCryptoIoCipherOutputStream 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoIoCipherOutputStream 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoIoCipherOutputStream

#if !defined (OrgSpongycastleCryptoIoCipherOutputStream_) && (INCLUDE_ALL_OrgSpongycastleCryptoIoCipherOutputStream || defined(INCLUDE_OrgSpongycastleCryptoIoCipherOutputStream))
#define OrgSpongycastleCryptoIoCipherOutputStream_

#define RESTRICT_JavaIoFilterOutputStream 1
#define INCLUDE_JavaIoFilterOutputStream 1
#include "java/io/FilterOutputStream.h"

@class IOSByteArray;
@class JavaIoOutputStream;
@class OrgSpongycastleCryptoBufferedBlockCipher;
@protocol OrgSpongycastleCryptoModesAEADBlockCipher;
@protocol OrgSpongycastleCryptoStreamCipher;

@interface OrgSpongycastleCryptoIoCipherOutputStream : JavaIoFilterOutputStream

#pragma mark Public

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)os
withOrgSpongycastleCryptoModesAEADBlockCipher:(id<OrgSpongycastleCryptoModesAEADBlockCipher>)cipher;

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)os
withOrgSpongycastleCryptoBufferedBlockCipher:(OrgSpongycastleCryptoBufferedBlockCipher *)cipher;

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)os
     withOrgSpongycastleCryptoStreamCipher:(id<OrgSpongycastleCryptoStreamCipher>)cipher;

- (void)close;

- (void)flush;

- (void)writeWithByteArray:(IOSByteArray *)b;

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeWithInt:(jint)b;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoIoCipherOutputStream)

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoBufferedBlockCipher_(OrgSpongycastleCryptoIoCipherOutputStream *self, JavaIoOutputStream *os, OrgSpongycastleCryptoBufferedBlockCipher *cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherOutputStream *new_OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoBufferedBlockCipher_(JavaIoOutputStream *os, OrgSpongycastleCryptoBufferedBlockCipher *cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherOutputStream *create_OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoBufferedBlockCipher_(JavaIoOutputStream *os, OrgSpongycastleCryptoBufferedBlockCipher *cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoStreamCipher_(OrgSpongycastleCryptoIoCipherOutputStream *self, JavaIoOutputStream *os, id<OrgSpongycastleCryptoStreamCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherOutputStream *new_OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoStreamCipher_(JavaIoOutputStream *os, id<OrgSpongycastleCryptoStreamCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherOutputStream *create_OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoStreamCipher_(JavaIoOutputStream *os, id<OrgSpongycastleCryptoStreamCipher> cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_(OrgSpongycastleCryptoIoCipherOutputStream *self, JavaIoOutputStream *os, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherOutputStream *new_OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_(JavaIoOutputStream *os, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherOutputStream *create_OrgSpongycastleCryptoIoCipherOutputStream_initWithJavaIoOutputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_(JavaIoOutputStream *os, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoIoCipherOutputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoIoCipherOutputStream")
