//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/io/CipherInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoIoCipherInputStream")
#ifdef RESTRICT_OrgSpongycastleCryptoIoCipherInputStream
#define INCLUDE_ALL_OrgSpongycastleCryptoIoCipherInputStream 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoIoCipherInputStream 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoIoCipherInputStream

#if !defined (OrgSpongycastleCryptoIoCipherInputStream_) && (INCLUDE_ALL_OrgSpongycastleCryptoIoCipherInputStream || defined(INCLUDE_OrgSpongycastleCryptoIoCipherInputStream))
#define OrgSpongycastleCryptoIoCipherInputStream_

#define RESTRICT_JavaIoFilterInputStream 1
#define INCLUDE_JavaIoFilterInputStream 1
#include "java/io/FilterInputStream.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class OrgSpongycastleCryptoBufferedBlockCipher;
@protocol OrgSpongycastleCryptoModesAEADBlockCipher;
@protocol OrgSpongycastleCryptoStreamCipher;

@interface OrgSpongycastleCryptoIoCipherInputStream : JavaIoFilterInputStream

#pragma mark Public

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
withOrgSpongycastleCryptoModesAEADBlockCipher:(id<OrgSpongycastleCryptoModesAEADBlockCipher>)cipher;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
withOrgSpongycastleCryptoModesAEADBlockCipher:(id<OrgSpongycastleCryptoModesAEADBlockCipher>)cipher
                                  withInt:(jint)bufSize;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
withOrgSpongycastleCryptoBufferedBlockCipher:(OrgSpongycastleCryptoBufferedBlockCipher *)cipher;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
withOrgSpongycastleCryptoBufferedBlockCipher:(OrgSpongycastleCryptoBufferedBlockCipher *)cipher
                                  withInt:(jint)bufSize;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
    withOrgSpongycastleCryptoStreamCipher:(id<OrgSpongycastleCryptoStreamCipher>)cipher;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
    withOrgSpongycastleCryptoStreamCipher:(id<OrgSpongycastleCryptoStreamCipher>)cipher
                                  withInt:(jint)bufSize;

- (jint)available;

- (void)close;

- (void)markWithInt:(jint)readlimit;

- (jboolean)markSupported;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

- (void)reset;

- (jlong)skipWithLong:(jlong)n;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoIoCipherInputStream)

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoBufferedBlockCipher_(OrgSpongycastleCryptoIoCipherInputStream *self, JavaIoInputStream *is, OrgSpongycastleCryptoBufferedBlockCipher *cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *new_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoBufferedBlockCipher_(JavaIoInputStream *is, OrgSpongycastleCryptoBufferedBlockCipher *cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *create_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoBufferedBlockCipher_(JavaIoInputStream *is, OrgSpongycastleCryptoBufferedBlockCipher *cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoStreamCipher_(OrgSpongycastleCryptoIoCipherInputStream *self, JavaIoInputStream *is, id<OrgSpongycastleCryptoStreamCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *new_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoStreamCipher_(JavaIoInputStream *is, id<OrgSpongycastleCryptoStreamCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *create_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoStreamCipher_(JavaIoInputStream *is, id<OrgSpongycastleCryptoStreamCipher> cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_(OrgSpongycastleCryptoIoCipherInputStream *self, JavaIoInputStream *is, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *new_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_(JavaIoInputStream *is, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *create_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_(JavaIoInputStream *is, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher);

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoBufferedBlockCipher_withInt_(OrgSpongycastleCryptoIoCipherInputStream *self, JavaIoInputStream *is, OrgSpongycastleCryptoBufferedBlockCipher *cipher, jint bufSize);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *new_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoBufferedBlockCipher_withInt_(JavaIoInputStream *is, OrgSpongycastleCryptoBufferedBlockCipher *cipher, jint bufSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *create_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoBufferedBlockCipher_withInt_(JavaIoInputStream *is, OrgSpongycastleCryptoBufferedBlockCipher *cipher, jint bufSize);

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoStreamCipher_withInt_(OrgSpongycastleCryptoIoCipherInputStream *self, JavaIoInputStream *is, id<OrgSpongycastleCryptoStreamCipher> cipher, jint bufSize);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *new_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoStreamCipher_withInt_(JavaIoInputStream *is, id<OrgSpongycastleCryptoStreamCipher> cipher, jint bufSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *create_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoStreamCipher_withInt_(JavaIoInputStream *is, id<OrgSpongycastleCryptoStreamCipher> cipher, jint bufSize);

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_withInt_(OrgSpongycastleCryptoIoCipherInputStream *self, JavaIoInputStream *is, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher, jint bufSize);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *new_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_withInt_(JavaIoInputStream *is, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher, jint bufSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherInputStream *create_OrgSpongycastleCryptoIoCipherInputStream_initWithJavaIoInputStream_withOrgSpongycastleCryptoModesAEADBlockCipher_withInt_(JavaIoInputStream *is, id<OrgSpongycastleCryptoModesAEADBlockCipher> cipher, jint bufSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoIoCipherInputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoIoCipherInputStream")
