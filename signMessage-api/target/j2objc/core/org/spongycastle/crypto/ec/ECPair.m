//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/ec/ECPair.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/ec/ECPair.h"
#include "org/spongycastle/math/ec/ECPoint.h"

@interface OrgSpongycastleCryptoEcECPair () {
 @public
  OrgSpongycastleMathEcECPoint *x_;
  OrgSpongycastleMathEcECPoint *y_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEcECPair, x_, OrgSpongycastleMathEcECPoint *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEcECPair, y_, OrgSpongycastleMathEcECPoint *)

@implementation OrgSpongycastleCryptoEcECPair

- (instancetype)initWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)x
                    withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)y {
  OrgSpongycastleCryptoEcECPair_initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleMathEcECPoint_(self, x, y);
  return self;
}

- (OrgSpongycastleMathEcECPoint *)getX {
  return x_;
}

- (OrgSpongycastleMathEcECPoint *)getY {
  return y_;
}

- (jboolean)equalsWithOrgSpongycastleCryptoEcECPair:(OrgSpongycastleCryptoEcECPair *)other {
  return [((OrgSpongycastleMathEcECPoint *) nil_chk([((OrgSpongycastleCryptoEcECPair *) nil_chk(other)) getX])) equalsWithOrgSpongycastleMathEcECPoint:[self getX]] && [((OrgSpongycastleMathEcECPoint *) nil_chk([other getY])) equalsWithOrgSpongycastleMathEcECPoint:[self getY]];
}

- (jboolean)isEqual:(id)other {
  return [other isKindOfClass:[OrgSpongycastleCryptoEcECPair class]] ? [self equalsWithOrgSpongycastleCryptoEcECPair:(OrgSpongycastleCryptoEcECPair *) cast_chk(other, [OrgSpongycastleCryptoEcECPair class])] : false;
}

- (NSUInteger)hash {
  return ((jint) [((OrgSpongycastleMathEcECPoint *) nil_chk(x_)) hash]) + 37 * ((jint) [((OrgSpongycastleMathEcECPoint *) nil_chk(y_)) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleMathEcECPoint:withOrgSpongycastleMathEcECPoint:);
  methods[1].selector = @selector(getX);
  methods[2].selector = @selector(getY);
  methods[3].selector = @selector(equalsWithOrgSpongycastleCryptoEcECPair:);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "LOrgSpongycastleMathEcECPoint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "y_", "LOrgSpongycastleMathEcECPoint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleMathEcECPoint;LOrgSpongycastleMathEcECPoint;", "equals", "LOrgSpongycastleCryptoEcECPair;", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEcECPair = { "ECPair", "org.spongycastle.crypto.ec", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEcECPair;
}

@end

void OrgSpongycastleCryptoEcECPair_initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleMathEcECPoint_(OrgSpongycastleCryptoEcECPair *self, OrgSpongycastleMathEcECPoint *x, OrgSpongycastleMathEcECPoint *y) {
  NSObject_init(self);
  self->x_ = x;
  self->y_ = y;
}

OrgSpongycastleCryptoEcECPair *new_OrgSpongycastleCryptoEcECPair_initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleMathEcECPoint_(OrgSpongycastleMathEcECPoint *x, OrgSpongycastleMathEcECPoint *y) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEcECPair, initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleMathEcECPoint_, x, y)
}

OrgSpongycastleCryptoEcECPair *create_OrgSpongycastleCryptoEcECPair_initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleMathEcECPoint_(OrgSpongycastleMathEcECPoint *x, OrgSpongycastleMathEcECPoint *y) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEcECPair, initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleMathEcECPoint_, x, y)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEcECPair)
