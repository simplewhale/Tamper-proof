//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/ec/ECUtil.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/ec/ECUtil.h"
#include "org/spongycastle/math/ec/ECConstants.h"

@implementation OrgSpongycastleCryptoEcECUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoEcECUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaMathBigInteger *)generateKWithJavaMathBigInteger:(JavaMathBigInteger *)n
                           withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  return OrgSpongycastleCryptoEcECUtil_generateKWithJavaMathBigInteger_withJavaSecuritySecureRandom_(n, random);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x8, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(generateKWithJavaMathBigInteger:withJavaSecuritySecureRandom:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "generateK", "LJavaMathBigInteger;LJavaSecuritySecureRandom;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEcECUtil = { "ECUtil", "org.spongycastle.crypto.ec", ptrTable, methods, NULL, 7, 0x0, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEcECUtil;
}

@end

void OrgSpongycastleCryptoEcECUtil_init(OrgSpongycastleCryptoEcECUtil *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoEcECUtil *new_OrgSpongycastleCryptoEcECUtil_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEcECUtil, init)
}

OrgSpongycastleCryptoEcECUtil *create_OrgSpongycastleCryptoEcECUtil_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEcECUtil, init)
}

JavaMathBigInteger *OrgSpongycastleCryptoEcECUtil_generateKWithJavaMathBigInteger_withJavaSecuritySecureRandom_(JavaMathBigInteger *n, JavaSecuritySecureRandom *random) {
  OrgSpongycastleCryptoEcECUtil_initialize();
  jint nBitLength = [((JavaMathBigInteger *) nil_chk(n)) bitLength];
  JavaMathBigInteger *k;
  do {
    k = new_JavaMathBigInteger_initWithInt_withJavaUtilRandom_(nBitLength, random);
  }
  while ([k isEqual:JreLoadStatic(OrgSpongycastleMathEcECConstants, ZERO)] || ([k compareToWithId:n] >= 0));
  return k;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEcECUtil)
