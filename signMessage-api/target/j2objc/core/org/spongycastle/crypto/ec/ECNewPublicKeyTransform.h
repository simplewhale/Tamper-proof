//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/ec/ECNewPublicKeyTransform.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEcECNewPublicKeyTransform")
#ifdef RESTRICT_OrgSpongycastleCryptoEcECNewPublicKeyTransform
#define INCLUDE_ALL_OrgSpongycastleCryptoEcECNewPublicKeyTransform 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEcECNewPublicKeyTransform 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEcECNewPublicKeyTransform

#if !defined (OrgSpongycastleCryptoEcECNewPublicKeyTransform_) && (INCLUDE_ALL_OrgSpongycastleCryptoEcECNewPublicKeyTransform || defined(INCLUDE_OrgSpongycastleCryptoEcECNewPublicKeyTransform))
#define OrgSpongycastleCryptoEcECNewPublicKeyTransform_

#define RESTRICT_OrgSpongycastleCryptoEcECPairTransform 1
#define INCLUDE_OrgSpongycastleCryptoEcECPairTransform 1
#include "org/spongycastle/crypto/ec/ECPairTransform.h"

@class OrgSpongycastleCryptoEcECPair;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleMathEcECMultiplier;

@interface OrgSpongycastleCryptoEcECNewPublicKeyTransform : NSObject < OrgSpongycastleCryptoEcECPairTransform >

#pragma mark Public

- (instancetype)init;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (OrgSpongycastleCryptoEcECPair *)transformWithOrgSpongycastleCryptoEcECPair:(OrgSpongycastleCryptoEcECPair *)cipherText;

#pragma mark Protected

- (id<OrgSpongycastleMathEcECMultiplier>)createBasePointMultiplier;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEcECNewPublicKeyTransform)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEcECNewPublicKeyTransform_init(OrgSpongycastleCryptoEcECNewPublicKeyTransform *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoEcECNewPublicKeyTransform *new_OrgSpongycastleCryptoEcECNewPublicKeyTransform_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEcECNewPublicKeyTransform *create_OrgSpongycastleCryptoEcECNewPublicKeyTransform_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEcECNewPublicKeyTransform)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEcECNewPublicKeyTransform")
