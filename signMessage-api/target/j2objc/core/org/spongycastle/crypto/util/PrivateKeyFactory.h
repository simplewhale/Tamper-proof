//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/util/PrivateKeyFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoUtilPrivateKeyFactory")
#ifdef RESTRICT_OrgSpongycastleCryptoUtilPrivateKeyFactory
#define INCLUDE_ALL_OrgSpongycastleCryptoUtilPrivateKeyFactory 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoUtilPrivateKeyFactory 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoUtilPrivateKeyFactory

#if !defined (OrgSpongycastleCryptoUtilPrivateKeyFactory_) && (INCLUDE_ALL_OrgSpongycastleCryptoUtilPrivateKeyFactory || defined(INCLUDE_OrgSpongycastleCryptoUtilPrivateKeyFactory))
#define OrgSpongycastleCryptoUtilPrivateKeyFactory_

@class IOSByteArray;
@class JavaIoInputStream;
@class OrgSpongycastleAsn1PkcsPrivateKeyInfo;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;

@interface OrgSpongycastleCryptoUtilPrivateKeyFactory : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithByteArray:(IOSByteArray *)privateKeyInfoData;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithJavaIoInputStream:(JavaIoInputStream *)inStr;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithOrgSpongycastleAsn1PkcsPrivateKeyInfo:(OrgSpongycastleAsn1PkcsPrivateKeyInfo *)keyInfo;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoUtilPrivateKeyFactory)

FOUNDATION_EXPORT void OrgSpongycastleCryptoUtilPrivateKeyFactory_init(OrgSpongycastleCryptoUtilPrivateKeyFactory *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoUtilPrivateKeyFactory *new_OrgSpongycastleCryptoUtilPrivateKeyFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoUtilPrivateKeyFactory *create_OrgSpongycastleCryptoUtilPrivateKeyFactory_init(void);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleCryptoUtilPrivateKeyFactory_createKeyWithByteArray_(IOSByteArray *privateKeyInfoData);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleCryptoUtilPrivateKeyFactory_createKeyWithJavaIoInputStream_(JavaIoInputStream *inStr);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleCryptoUtilPrivateKeyFactory_createKeyWithOrgSpongycastleAsn1PkcsPrivateKeyInfo_(OrgSpongycastleAsn1PkcsPrivateKeyInfo *keyInfo);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoUtilPrivateKeyFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoUtilPrivateKeyFactory")
