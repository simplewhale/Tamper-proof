//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/util/DerUtil.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Throwable.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/crypto/util/DerUtil.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastleCryptoUtilDerUtil_1 : JavaLangIllegalStateException {
 @public
  JavaIoIOException *val$e_;
}

- (instancetype)initWithJavaIoIOException:(JavaIoIOException *)capture$0
                             withNSString:(NSString *)x0;

- (JavaLangThrowable *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoUtilDerUtil_1)

__attribute__((unused)) static void OrgSpongycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(OrgSpongycastleCryptoUtilDerUtil_1 *self, JavaIoIOException *capture$0, NSString *x0);

__attribute__((unused)) static OrgSpongycastleCryptoUtilDerUtil_1 *new_OrgSpongycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(JavaIoIOException *capture$0, NSString *x0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleCryptoUtilDerUtil_1 *create_OrgSpongycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(JavaIoIOException *capture$0, NSString *x0);

@implementation OrgSpongycastleCryptoUtilDerUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoUtilDerUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgSpongycastleAsn1ASN1OctetString *)getOctetStringWithByteArray:(IOSByteArray *)data {
  return OrgSpongycastleCryptoUtilDerUtil_getOctetStringWithByteArray_(data);
}

+ (IOSByteArray *)toByteArrayWithOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)primitive {
  return OrgSpongycastleCryptoUtilDerUtil_toByteArrayWithOrgSpongycastleAsn1ASN1Primitive_(primitive);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1OctetString;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getOctetStringWithByteArray:);
  methods[2].selector = @selector(toByteArrayWithOrgSpongycastleAsn1ASN1Primitive:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getOctetString", "[B", "toByteArray", "LOrgSpongycastleAsn1ASN1Primitive;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoUtilDerUtil = { "DerUtil", "org.spongycastle.crypto.util", ptrTable, methods, NULL, 7, 0x0, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoUtilDerUtil;
}

@end

void OrgSpongycastleCryptoUtilDerUtil_init(OrgSpongycastleCryptoUtilDerUtil *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoUtilDerUtil *new_OrgSpongycastleCryptoUtilDerUtil_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoUtilDerUtil, init)
}

OrgSpongycastleCryptoUtilDerUtil *create_OrgSpongycastleCryptoUtilDerUtil_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoUtilDerUtil, init)
}

OrgSpongycastleAsn1ASN1OctetString *OrgSpongycastleCryptoUtilDerUtil_getOctetStringWithByteArray_(IOSByteArray *data) {
  OrgSpongycastleCryptoUtilDerUtil_initialize();
  if (data == nil) {
    return new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_([IOSByteArray newArrayWithLength:0]);
  }
  return new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(OrgSpongycastleUtilArrays_cloneWithByteArray_(data));
}

IOSByteArray *OrgSpongycastleCryptoUtilDerUtil_toByteArrayWithOrgSpongycastleAsn1ASN1Primitive_(OrgSpongycastleAsn1ASN1Primitive *primitive) {
  OrgSpongycastleCryptoUtilDerUtil_initialize();
  @try {
    return [((OrgSpongycastleAsn1ASN1Primitive *) nil_chk(primitive)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    @throw new_OrgSpongycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(e, JreStrcat("$$", @"Cannot get encoding: ", [e getMessage]));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoUtilDerUtil)

@implementation OrgSpongycastleCryptoUtilDerUtil_1

- (instancetype)initWithJavaIoIOException:(JavaIoIOException *)capture$0
                             withNSString:(NSString *)x0 {
  OrgSpongycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(self, capture$0, x0);
  return self;
}

- (JavaLangThrowable *)getCause {
  return val$e_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoIOException:withNSString:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaIoIOException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LOrgSpongycastleCryptoUtilDerUtil;", "toByteArrayWithOrgSpongycastleAsn1ASN1Primitive:" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoUtilDerUtil_1 = { "", "org.spongycastle.crypto.util", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_OrgSpongycastleCryptoUtilDerUtil_1;
}

@end

void OrgSpongycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(OrgSpongycastleCryptoUtilDerUtil_1 *self, JavaIoIOException *capture$0, NSString *x0) {
  self->val$e_ = capture$0;
  JavaLangIllegalStateException_initWithNSString_(self, x0);
}

OrgSpongycastleCryptoUtilDerUtil_1 *new_OrgSpongycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(JavaIoIOException *capture$0, NSString *x0) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoUtilDerUtil_1, initWithJavaIoIOException_withNSString_, capture$0, x0)
}

OrgSpongycastleCryptoUtilDerUtil_1 *create_OrgSpongycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(JavaIoIOException *capture$0, NSString *x0) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoUtilDerUtil_1, initWithJavaIoIOException_withNSString_, capture$0, x0)
}
