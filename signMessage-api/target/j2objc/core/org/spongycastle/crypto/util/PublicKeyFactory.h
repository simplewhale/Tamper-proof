//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/util/PublicKeyFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoUtilPublicKeyFactory")
#ifdef RESTRICT_OrgSpongycastleCryptoUtilPublicKeyFactory
#define INCLUDE_ALL_OrgSpongycastleCryptoUtilPublicKeyFactory 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoUtilPublicKeyFactory 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoUtilPublicKeyFactory

#if !defined (OrgSpongycastleCryptoUtilPublicKeyFactory_) && (INCLUDE_ALL_OrgSpongycastleCryptoUtilPublicKeyFactory || defined(INCLUDE_OrgSpongycastleCryptoUtilPublicKeyFactory))
#define OrgSpongycastleCryptoUtilPublicKeyFactory_

@class IOSByteArray;
@class JavaIoInputStream;
@class OrgSpongycastleAsn1X509SubjectPublicKeyInfo;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;

@interface OrgSpongycastleCryptoUtilPublicKeyFactory : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithByteArray:(IOSByteArray *)keyInfoData;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithJavaIoInputStream:(JavaIoInputStream *)inStr;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)keyInfo;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoUtilPublicKeyFactory)

FOUNDATION_EXPORT void OrgSpongycastleCryptoUtilPublicKeyFactory_init(OrgSpongycastleCryptoUtilPublicKeyFactory *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoUtilPublicKeyFactory *new_OrgSpongycastleCryptoUtilPublicKeyFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoUtilPublicKeyFactory *create_OrgSpongycastleCryptoUtilPublicKeyFactory_init(void);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleCryptoUtilPublicKeyFactory_createKeyWithByteArray_(IOSByteArray *keyInfoData);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleCryptoUtilPublicKeyFactory_createKeyWithJavaIoInputStream_(JavaIoInputStream *inStr);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleCryptoUtilPublicKeyFactory_createKeyWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoUtilPublicKeyFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoUtilPublicKeyFactory")
