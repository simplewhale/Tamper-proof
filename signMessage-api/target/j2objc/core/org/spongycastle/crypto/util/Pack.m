//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/util/Pack.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/util/Pack.h"

@implementation OrgSpongycastleCryptoUtilPack

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoUtilPack_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off {
  return OrgSpongycastleCryptoUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
}

+ (void)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off
                       withIntArray:(IOSIntArray *)ns {
  OrgSpongycastleCryptoUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}

+ (IOSByteArray *)intToBigEndianWithInt:(jint)n {
  return OrgSpongycastleCryptoUtilPack_intToBigEndianWithInt_(n);
}

+ (void)intToBigEndianWithInt:(jint)n
                withByteArray:(IOSByteArray *)bs
                      withInt:(jint)off {
  OrgSpongycastleCryptoUtilPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)intToBigEndianWithIntArray:(IOSIntArray *)ns {
  return OrgSpongycastleCryptoUtilPack_intToBigEndianWithIntArray_(ns);
}

+ (void)intToBigEndianWithIntArray:(IOSIntArray *)ns
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  OrgSpongycastleCryptoUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}

+ (jlong)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  return OrgSpongycastleCryptoUtilPack_bigEndianToLongWithByteArray_withInt_(bs, off);
}

+ (void)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                             withInt:(jint)off
                       withLongArray:(IOSLongArray *)ns {
  OrgSpongycastleCryptoUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}

+ (IOSByteArray *)longToBigEndianWithLong:(jlong)n {
  return OrgSpongycastleCryptoUtilPack_longToBigEndianWithLong_(n);
}

+ (void)longToBigEndianWithLong:(jlong)n
                  withByteArray:(IOSByteArray *)bs
                        withInt:(jint)off {
  OrgSpongycastleCryptoUtilPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)longToBigEndianWithLongArray:(IOSLongArray *)ns {
  return OrgSpongycastleCryptoUtilPack_longToBigEndianWithLongArray_(ns);
}

+ (void)longToBigEndianWithLongArray:(IOSLongArray *)ns
                       withByteArray:(IOSByteArray *)bs
                             withInt:(jint)off {
  OrgSpongycastleCryptoUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}

+ (jint)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off {
  return OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
}

+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off
                          withIntArray:(IOSIntArray *)ns {
  OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}

+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)bOff
                          withIntArray:(IOSIntArray *)ns
                               withInt:(jint)nOff
                               withInt:(jint)count {
  OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(bs, bOff, ns, nOff, count);
}

+ (IOSByteArray *)intToLittleEndianWithInt:(jint)n {
  return OrgSpongycastleCryptoUtilPack_intToLittleEndianWithInt_(n);
}

+ (void)intToLittleEndianWithInt:(jint)n
                   withByteArray:(IOSByteArray *)bs
                         withInt:(jint)off {
  OrgSpongycastleCryptoUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)intToLittleEndianWithIntArray:(IOSIntArray *)ns {
  return OrgSpongycastleCryptoUtilPack_intToLittleEndianWithIntArray_(ns);
}

+ (void)intToLittleEndianWithIntArray:(IOSIntArray *)ns
                        withByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  OrgSpongycastleCryptoUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}

+ (jlong)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                 withInt:(jint)off {
  return OrgSpongycastleCryptoUtilPack_littleEndianToLongWithByteArray_withInt_(bs, off);
}

+ (void)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)off
                          withLongArray:(IOSLongArray *)ns {
  OrgSpongycastleCryptoUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}

+ (IOSByteArray *)longToLittleEndianWithLong:(jlong)n {
  return OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLong_(n);
}

+ (void)longToLittleEndianWithLong:(jlong)n
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)longToLittleEndianWithLongArray:(IOSLongArray *)ns {
  return OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLongArray_(ns);
}

+ (void)longToLittleEndianWithLongArray:(IOSLongArray *)ns
                          withByteArray:(IOSByteArray *)bs
                                withInt:(jint)off {
  OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 3, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 7, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 8, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 10, 12, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 10, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 10, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 15, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 15, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 15, 16, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 17, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 17, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 7, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 18, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 18, 9, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 19, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 19, 12, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 19, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 19, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(bigEndianToIntWithByteArray:withInt:);
  methods[2].selector = @selector(bigEndianToIntWithByteArray:withInt:withIntArray:);
  methods[3].selector = @selector(intToBigEndianWithInt:);
  methods[4].selector = @selector(intToBigEndianWithInt:withByteArray:withInt:);
  methods[5].selector = @selector(intToBigEndianWithIntArray:);
  methods[6].selector = @selector(intToBigEndianWithIntArray:withByteArray:withInt:);
  methods[7].selector = @selector(bigEndianToLongWithByteArray:withInt:);
  methods[8].selector = @selector(bigEndianToLongWithByteArray:withInt:withLongArray:);
  methods[9].selector = @selector(longToBigEndianWithLong:);
  methods[10].selector = @selector(longToBigEndianWithLong:withByteArray:withInt:);
  methods[11].selector = @selector(longToBigEndianWithLongArray:);
  methods[12].selector = @selector(longToBigEndianWithLongArray:withByteArray:withInt:);
  methods[13].selector = @selector(littleEndianToIntWithByteArray:withInt:);
  methods[14].selector = @selector(littleEndianToIntWithByteArray:withInt:withIntArray:);
  methods[15].selector = @selector(littleEndianToIntWithByteArray:withInt:withIntArray:withInt:withInt:);
  methods[16].selector = @selector(intToLittleEndianWithInt:);
  methods[17].selector = @selector(intToLittleEndianWithInt:withByteArray:withInt:);
  methods[18].selector = @selector(intToLittleEndianWithIntArray:);
  methods[19].selector = @selector(intToLittleEndianWithIntArray:withByteArray:withInt:);
  methods[20].selector = @selector(littleEndianToLongWithByteArray:withInt:);
  methods[21].selector = @selector(littleEndianToLongWithByteArray:withInt:withLongArray:);
  methods[22].selector = @selector(longToLittleEndianWithLong:);
  methods[23].selector = @selector(longToLittleEndianWithLong:withByteArray:withInt:);
  methods[24].selector = @selector(longToLittleEndianWithLongArray:);
  methods[25].selector = @selector(longToLittleEndianWithLongArray:withByteArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "bigEndianToInt", "[BI", "[BI[I", "intToBigEndian", "I", "I[BI", "[I", "[I[BI", "bigEndianToLong", "[BI[J", "longToBigEndian", "J", "J[BI", "[J", "[J[BI", "littleEndianToInt", "[BI[III", "intToLittleEndian", "littleEndianToLong", "longToLittleEndian" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoUtilPack = { "Pack", "org.spongycastle.crypto.util", ptrTable, methods, NULL, 7, 0x401, 26, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoUtilPack;
}

@end

void OrgSpongycastleCryptoUtilPack_init(OrgSpongycastleCryptoUtilPack *self) {
  NSObject_init(self);
}

jint OrgSpongycastleCryptoUtilPack_bigEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  jint n = JreLShift32(IOSByteArray_Get(nil_chk(bs), off), 24);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= (IOSByteArray_Get(bs, ++off) & (jint) 0xff);
  return n;
}

void OrgSpongycastleCryptoUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    *IOSIntArray_GetRef(ns, i) = OrgSpongycastleCryptoUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}

IOSByteArray *OrgSpongycastleCryptoUtilPack_intToBigEndianWithInt_(jint n) {
  OrgSpongycastleCryptoUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  OrgSpongycastleCryptoUtilPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleCryptoUtilPack_intToBigEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (JreURShift32(n, 24));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (n);
}

IOSByteArray *OrgSpongycastleCryptoUtilPack_intToBigEndianWithIntArray_(IOSIntArray *ns) {
  OrgSpongycastleCryptoUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  OrgSpongycastleCryptoUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgSpongycastleCryptoUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    OrgSpongycastleCryptoUtilPack_intToBigEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(ns, i), bs, off);
    off += 4;
  }
}

jlong OrgSpongycastleCryptoUtilPack_bigEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  jint hi = OrgSpongycastleCryptoUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
  jint lo = OrgSpongycastleCryptoUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (JreLShift64((jlong) (hi & (jlong) 0xffffffffLL), 32)) | (jlong) (lo & (jlong) 0xffffffffLL);
}

void OrgSpongycastleCryptoUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    *IOSLongArray_GetRef(ns, i) = OrgSpongycastleCryptoUtilPack_bigEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}

IOSByteArray *OrgSpongycastleCryptoUtilPack_longToBigEndianWithLong_(jlong n) {
  OrgSpongycastleCryptoUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  OrgSpongycastleCryptoUtilPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleCryptoUtilPack_longToBigEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  OrgSpongycastleCryptoUtilPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (JreURShift64(n, 32)), bs, off);
  OrgSpongycastleCryptoUtilPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off + 4);
}

IOSByteArray *OrgSpongycastleCryptoUtilPack_longToBigEndianWithLongArray_(IOSLongArray *ns) {
  OrgSpongycastleCryptoUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  OrgSpongycastleCryptoUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgSpongycastleCryptoUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    OrgSpongycastleCryptoUtilPack_longToBigEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(ns, i), bs, off);
    off += 8;
  }
}

jint OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  jint n = IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff;
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= JreLShift32(IOSByteArray_Get(bs, ++off), 24);
  return n;
}

void OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    *IOSIntArray_GetRef(ns, i) = OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}

void OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(IOSByteArray *bs, jint bOff, IOSIntArray *ns, jint nOff, jint count) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < count; ++i) {
    *IOSIntArray_GetRef(nil_chk(ns), nOff + i) = OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_(bs, bOff);
    bOff += 4;
  }
}

IOSByteArray *OrgSpongycastleCryptoUtilPack_intToLittleEndianWithInt_(jint n) {
  OrgSpongycastleCryptoUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  OrgSpongycastleCryptoUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleCryptoUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (n);
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 24));
}

IOSByteArray *OrgSpongycastleCryptoUtilPack_intToLittleEndianWithIntArray_(IOSIntArray *ns) {
  OrgSpongycastleCryptoUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  OrgSpongycastleCryptoUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgSpongycastleCryptoUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    OrgSpongycastleCryptoUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(ns, i), bs, off);
    off += 4;
  }
}

jlong OrgSpongycastleCryptoUtilPack_littleEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  jint lo = OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
  jint hi = OrgSpongycastleCryptoUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (JreLShift64((jlong) (hi & (jlong) 0xffffffffLL), 32)) | (jlong) (lo & (jlong) 0xffffffffLL);
}

void OrgSpongycastleCryptoUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    *IOSLongArray_GetRef(ns, i) = OrgSpongycastleCryptoUtilPack_littleEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}

IOSByteArray *OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLong_(jlong n) {
  OrgSpongycastleCryptoUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  OrgSpongycastleCryptoUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off);
  OrgSpongycastleCryptoUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (JreURShift64(n, 32)), bs, off + 4);
}

IOSByteArray *OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLongArray_(IOSLongArray *ns) {
  OrgSpongycastleCryptoUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  OrgSpongycastleCryptoUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    OrgSpongycastleCryptoUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(ns, i), bs, off);
    off += 8;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoUtilPack)
