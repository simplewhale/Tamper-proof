//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/digests/NonMemoableDigest.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/crypto/ExtendedDigest.h"
#include "org/spongycastle/crypto/digests/NonMemoableDigest.h"

@interface OrgSpongycastleCryptoDigestsNonMemoableDigest () {
 @public
  id<OrgSpongycastleCryptoExtendedDigest> baseDigest_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsNonMemoableDigest, baseDigest_, id<OrgSpongycastleCryptoExtendedDigest>)

@implementation OrgSpongycastleCryptoDigestsNonMemoableDigest

- (instancetype)initWithOrgSpongycastleCryptoExtendedDigest:(id<OrgSpongycastleCryptoExtendedDigest>)baseDigest {
  OrgSpongycastleCryptoDigestsNonMemoableDigest_initWithOrgSpongycastleCryptoExtendedDigest_(self, baseDigest);
  return self;
}

- (NSString *)getAlgorithmName {
  return [((id<OrgSpongycastleCryptoExtendedDigest>) nil_chk(baseDigest_)) getAlgorithmName];
}

- (jint)getDigestSize {
  return [((id<OrgSpongycastleCryptoExtendedDigest>) nil_chk(baseDigest_)) getDigestSize];
}

- (void)updateWithByte:(jbyte)inArg {
  [((id<OrgSpongycastleCryptoExtendedDigest>) nil_chk(baseDigest_)) updateWithByte:inArg];
}

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  [((id<OrgSpongycastleCryptoExtendedDigest>) nil_chk(baseDigest_)) updateWithByteArray:inArg withInt:inOff withInt:len];
}

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  return [((id<OrgSpongycastleCryptoExtendedDigest>) nil_chk(baseDigest_)) doFinalWithByteArray:outArg withInt:outOff];
}

- (void)reset {
  [((id<OrgSpongycastleCryptoExtendedDigest>) nil_chk(baseDigest_)) reset];
}

- (jint)getByteLength {
  return [((id<OrgSpongycastleCryptoExtendedDigest>) nil_chk(baseDigest_)) getByteLength];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoExtendedDigest:);
  methods[1].selector = @selector(getAlgorithmName);
  methods[2].selector = @selector(getDigestSize);
  methods[3].selector = @selector(updateWithByte:);
  methods[4].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(doFinalWithByteArray:withInt:);
  methods[6].selector = @selector(reset);
  methods[7].selector = @selector(getByteLength);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseDigest_", "LOrgSpongycastleCryptoExtendedDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoExtendedDigest;", "update", "B", "[BII", "doFinal", "[BI" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoDigestsNonMemoableDigest = { "NonMemoableDigest", "org.spongycastle.crypto.digests", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoDigestsNonMemoableDigest;
}

@end

void OrgSpongycastleCryptoDigestsNonMemoableDigest_initWithOrgSpongycastleCryptoExtendedDigest_(OrgSpongycastleCryptoDigestsNonMemoableDigest *self, id<OrgSpongycastleCryptoExtendedDigest> baseDigest) {
  NSObject_init(self);
  if (baseDigest == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"baseDigest must not be null");
  }
  self->baseDigest_ = baseDigest;
}

OrgSpongycastleCryptoDigestsNonMemoableDigest *new_OrgSpongycastleCryptoDigestsNonMemoableDigest_initWithOrgSpongycastleCryptoExtendedDigest_(id<OrgSpongycastleCryptoExtendedDigest> baseDigest) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoDigestsNonMemoableDigest, initWithOrgSpongycastleCryptoExtendedDigest_, baseDigest)
}

OrgSpongycastleCryptoDigestsNonMemoableDigest *create_OrgSpongycastleCryptoDigestsNonMemoableDigest_initWithOrgSpongycastleCryptoExtendedDigest_(id<OrgSpongycastleCryptoExtendedDigest> baseDigest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoDigestsNonMemoableDigest, initWithOrgSpongycastleCryptoExtendedDigest_, baseDigest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoDigestsNonMemoableDigest)
