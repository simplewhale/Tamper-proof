//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/digests/WhirlpoolDigest.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/spongycastle/crypto/digests/WhirlpoolDigest.h"
#include "org/spongycastle/util/Arrays.h"
#include "org/spongycastle/util/Memoable.h"

@interface OrgSpongycastleCryptoDigestsWhirlpoolDigest () {
 @public
  IOSLongArray *_rc_;
  IOSByteArray *_buffer_;
  jint _bufferPos_;
  IOSShortArray *_bitCount_;
  IOSLongArray *_hash_;
  IOSLongArray *_K_;
  IOSLongArray *_L_;
  IOSLongArray *_block_;
  IOSLongArray *_state_;
}

- (jlong)packIntoLongWithInt:(jint)b7
                     withInt:(jint)b6
                     withInt:(jint)b5
                     withInt:(jint)b4
                     withInt:(jint)b3
                     withInt:(jint)b2
                     withInt:(jint)b1
                     withInt:(jint)b0;

- (jint)maskWithReductionPolynomialWithInt:(jint)input;

- (void)processFilledBufferWithByteArray:(IOSByteArray *)inArg
                                 withInt:(jint)inOff;

- (jlong)bytesToLongFromBufferWithByteArray:(IOSByteArray *)buffer
                                    withInt:(jint)startPos;

- (void)convertLongToByteArrayWithLong:(jlong)inputLong
                         withByteArray:(IOSByteArray *)outputArray
                               withInt:(jint)offSet;

- (void)increment;

- (void)finish;

- (IOSByteArray *)copyBitLength OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsWhirlpoolDigest, _rc_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsWhirlpoolDigest, _buffer_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsWhirlpoolDigest, _bitCount_, IOSShortArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsWhirlpoolDigest, _hash_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsWhirlpoolDigest, _K_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsWhirlpoolDigest, _L_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsWhirlpoolDigest, _block_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsWhirlpoolDigest, _state_, IOSLongArray *)

inline jint OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_BYTE_LENGTH(void);
#define OrgSpongycastleCryptoDigestsWhirlpoolDigest_BYTE_LENGTH 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsWhirlpoolDigest, BYTE_LENGTH, jint)

inline jint OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_DIGEST_LENGTH_BYTES(void);
#define OrgSpongycastleCryptoDigestsWhirlpoolDigest_DIGEST_LENGTH_BYTES 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsWhirlpoolDigest, DIGEST_LENGTH_BYTES, jint)

inline jint OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_ROUNDS(void);
#define OrgSpongycastleCryptoDigestsWhirlpoolDigest_ROUNDS 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsWhirlpoolDigest, ROUNDS, jint)

inline jint OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_REDUCTION_POLYNOMIAL(void);
#define OrgSpongycastleCryptoDigestsWhirlpoolDigest_REDUCTION_POLYNOMIAL 285
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsWhirlpoolDigest, REDUCTION_POLYNOMIAL, jint)

inline IOSIntArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_SBOX(void);
static IOSIntArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_SBOX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, SBOX, IOSIntArray *)

inline IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_C0(void);
static IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_C0;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, C0, IOSLongArray *)

inline IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_C1(void);
static IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_C1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, C1, IOSLongArray *)

inline IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_C2(void);
static IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_C2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, C2, IOSLongArray *)

inline IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_C3(void);
static IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_C3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, C3, IOSLongArray *)

inline IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_C4(void);
static IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_C4;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, C4, IOSLongArray *)

inline IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_C5(void);
static IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_C5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, C5, IOSLongArray *)

inline IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_C6(void);
static IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_C6;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, C6, IOSLongArray *)

inline IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_C7(void);
static IOSLongArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_C7;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, C7, IOSLongArray *)

inline jint OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_BITCOUNT_ARRAY_SIZE(void);
#define OrgSpongycastleCryptoDigestsWhirlpoolDigest_BITCOUNT_ARRAY_SIZE 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsWhirlpoolDigest, BITCOUNT_ARRAY_SIZE, jint)

inline IOSShortArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_get_EIGHT(void);
static IOSShortArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_EIGHT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, EIGHT, IOSShortArray *)

__attribute__((unused)) static jlong OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, jint b7, jint b6, jint b5, jint b4, jint b3, jint b2, jint b1, jint b0);

__attribute__((unused)) static jint OrgSpongycastleCryptoDigestsWhirlpoolDigest_maskWithReductionPolynomialWithInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, jint input);

__attribute__((unused)) static void OrgSpongycastleCryptoDigestsWhirlpoolDigest_processFilledBufferWithByteArray_withInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, IOSByteArray *inArg, jint inOff);

__attribute__((unused)) static jlong OrgSpongycastleCryptoDigestsWhirlpoolDigest_bytesToLongFromBufferWithByteArray_withInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, IOSByteArray *buffer, jint startPos);

__attribute__((unused)) static void OrgSpongycastleCryptoDigestsWhirlpoolDigest_convertLongToByteArrayWithLong_withByteArray_withInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, jlong inputLong, IOSByteArray *outputArray, jint offSet);

__attribute__((unused)) static void OrgSpongycastleCryptoDigestsWhirlpoolDigest_increment(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self);

__attribute__((unused)) static void OrgSpongycastleCryptoDigestsWhirlpoolDigest_finish(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self);

__attribute__((unused)) static IOSByteArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_copyBitLength(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoDigestsWhirlpoolDigest)

@implementation OrgSpongycastleCryptoDigestsWhirlpoolDigest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jlong)packIntoLongWithInt:(jint)b7
                     withInt:(jint)b6
                     withInt:(jint)b5
                     withInt:(jint)b4
                     withInt:(jint)b3
                     withInt:(jint)b2
                     withInt:(jint)b1
                     withInt:(jint)b0 {
  return OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, b7, b6, b5, b4, b3, b2, b1, b0);
}

- (jint)maskWithReductionPolynomialWithInt:(jint)input {
  return OrgSpongycastleCryptoDigestsWhirlpoolDigest_maskWithReductionPolynomialWithInt_(self, input);
}

- (instancetype)initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest:(OrgSpongycastleCryptoDigestsWhirlpoolDigest *)originalDigest {
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest_(self, originalDigest);
  return self;
}

- (NSString *)getAlgorithmName {
  return @"Whirlpool";
}

- (jint)getDigestSize {
  return OrgSpongycastleCryptoDigestsWhirlpoolDigest_DIGEST_LENGTH_BYTES;
}

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_finish(self);
  for (jint i = 0; i < 8; i++) {
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_convertLongToByteArrayWithLong_withByteArray_withInt_(self, IOSLongArray_Get(nil_chk(_hash_), i), outArg, outOff + (i * 8));
  }
  [self reset];
  return [self getDigestSize];
}

- (void)reset {
  _bufferPos_ = 0;
  OrgSpongycastleUtilArrays_fillWithShortArray_withShort_(_bitCount_, (jshort) 0);
  OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(_buffer_, (jbyte) 0);
  OrgSpongycastleUtilArrays_fillWithLongArray_withLong_(_hash_, 0);
  OrgSpongycastleUtilArrays_fillWithLongArray_withLong_(_K_, 0);
  OrgSpongycastleUtilArrays_fillWithLongArray_withLong_(_L_, 0);
  OrgSpongycastleUtilArrays_fillWithLongArray_withLong_(_block_, 0);
  OrgSpongycastleUtilArrays_fillWithLongArray_withLong_(_state_, 0);
}

- (void)processFilledBufferWithByteArray:(IOSByteArray *)inArg
                                 withInt:(jint)inOff {
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_processFilledBufferWithByteArray_withInt_(self, inArg, inOff);
}

- (jlong)bytesToLongFromBufferWithByteArray:(IOSByteArray *)buffer
                                    withInt:(jint)startPos {
  return OrgSpongycastleCryptoDigestsWhirlpoolDigest_bytesToLongFromBufferWithByteArray_withInt_(self, buffer, startPos);
}

- (void)convertLongToByteArrayWithLong:(jlong)inputLong
                         withByteArray:(IOSByteArray *)outputArray
                               withInt:(jint)offSet {
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_convertLongToByteArrayWithLong_withByteArray_withInt_(self, inputLong, outputArray, offSet);
}

- (void)processBlock {
  for (jint i = 0; i < 8; i++) {
    *IOSLongArray_GetRef(nil_chk(_state_), i) = IOSLongArray_Get(nil_chk(_block_), i) ^ (*IOSLongArray_GetRef(nil_chk(_K_), i) = IOSLongArray_Get(nil_chk(_hash_), i));
  }
  for (jint round = 1; round <= OrgSpongycastleCryptoDigestsWhirlpoolDigest_ROUNDS; round++) {
    for (jint i = 0; i < 8; i++) {
      *IOSLongArray_GetRef(nil_chk(_L_), i) = 0;
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C0), (jint) (JreURShift64(IOSLongArray_Get(nil_chk(_K_), (i - 0) & 7), 56)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C1), (jint) (JreURShift64(IOSLongArray_Get(_K_, (i - 1) & 7), 48)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C2), (jint) (JreURShift64(IOSLongArray_Get(_K_, (i - 2) & 7), 40)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C3), (jint) (JreURShift64(IOSLongArray_Get(_K_, (i - 3) & 7), 32)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C4), (jint) (JreURShift64(IOSLongArray_Get(_K_, (i - 4) & 7), 24)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C5), (jint) (JreURShift64(IOSLongArray_Get(_K_, (i - 5) & 7), 16)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C6), (jint) (JreURShift64(IOSLongArray_Get(_K_, (i - 6) & 7), 8)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C7), (jint) (IOSLongArray_Get(_K_, (i - 7) & 7)) & (jint) 0xff);
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(_L_, 0, _K_, 0, ((IOSLongArray *) nil_chk(_K_))->size_);
    *IOSLongArray_GetRef(nil_chk(_K_), 0) ^= IOSLongArray_Get(nil_chk(_rc_), round);
    for (jint i = 0; i < 8; i++) {
      *IOSLongArray_GetRef(nil_chk(_L_), i) = IOSLongArray_Get(_K_, i);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C0), (jint) (JreURShift64(IOSLongArray_Get(nil_chk(_state_), (i - 0) & 7), 56)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C1), (jint) (JreURShift64(IOSLongArray_Get(_state_, (i - 1) & 7), 48)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C2), (jint) (JreURShift64(IOSLongArray_Get(_state_, (i - 2) & 7), 40)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C3), (jint) (JreURShift64(IOSLongArray_Get(_state_, (i - 3) & 7), 32)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C4), (jint) (JreURShift64(IOSLongArray_Get(_state_, (i - 4) & 7), 24)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C5), (jint) (JreURShift64(IOSLongArray_Get(_state_, (i - 5) & 7), 16)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C6), (jint) (JreURShift64(IOSLongArray_Get(_state_, (i - 6) & 7), 8)) & (jint) 0xff);
      *IOSLongArray_GetRef(_L_, i) ^= IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C7), (jint) (IOSLongArray_Get(_state_, (i - 7) & 7)) & (jint) 0xff);
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(_L_, 0, _state_, 0, ((IOSLongArray *) nil_chk(_state_))->size_);
  }
  for (jint i = 0; i < 8; i++) {
    *IOSLongArray_GetRef(nil_chk(_hash_), i) ^= IOSLongArray_Get(nil_chk(_state_), i) ^ IOSLongArray_Get(nil_chk(_block_), i);
  }
}

- (void)updateWithByte:(jbyte)inArg {
  *IOSByteArray_GetRef(nil_chk(_buffer_), _bufferPos_) = inArg;
  ++_bufferPos_;
  if (_bufferPos_ == _buffer_->size_) {
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_processFilledBufferWithByteArray_withInt_(self, _buffer_, 0);
  }
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_increment(self);
}

- (void)increment {
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_increment(self);
}

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  while (len > 0) {
    [self updateWithByte:IOSByteArray_Get(nil_chk(inArg), inOff)];
    ++inOff;
    --len;
  }
}

- (void)finish {
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_finish(self);
}

- (IOSByteArray *)copyBitLength {
  return OrgSpongycastleCryptoDigestsWhirlpoolDigest_copyBitLength(self);
}

- (jint)getByteLength {
  return OrgSpongycastleCryptoDigestsWhirlpoolDigest_BYTE_LENGTH;
}

- (id<OrgSpongycastleUtilMemoable>)copy__ {
  return new_OrgSpongycastleCryptoDigestsWhirlpoolDigest_initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest_(self);
}

- (void)resetWithOrgSpongycastleUtilMemoable:(id<OrgSpongycastleUtilMemoable>)other {
  OrgSpongycastleCryptoDigestsWhirlpoolDigest *originalDigest = (OrgSpongycastleCryptoDigestsWhirlpoolDigest *) cast_chk(other, [OrgSpongycastleCryptoDigestsWhirlpoolDigest class]);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(((OrgSpongycastleCryptoDigestsWhirlpoolDigest *) nil_chk(originalDigest))->_rc_, 0, _rc_, 0, ((IOSLongArray *) nil_chk(_rc_))->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(originalDigest->_buffer_, 0, _buffer_, 0, ((IOSByteArray *) nil_chk(_buffer_))->size_);
  self->_bufferPos_ = originalDigest->_bufferPos_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(originalDigest->_bitCount_, 0, _bitCount_, 0, ((IOSShortArray *) nil_chk(_bitCount_))->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(originalDigest->_hash_, 0, _hash_, 0, ((IOSLongArray *) nil_chk(_hash_))->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(originalDigest->_K_, 0, _K_, 0, ((IOSLongArray *) nil_chk(_K_))->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(originalDigest->_L_, 0, _L_, 0, ((IOSLongArray *) nil_chk(_L_))->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(originalDigest->_block_, 0, _block_, 0, ((IOSLongArray *) nil_chk(_block_))->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(originalDigest->_state_, 0, _state_, 0, ((IOSLongArray *) nil_chk(_state_))->size_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 8, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleUtilMemoable;", 0x1, 14, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(packIntoLongWithInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:);
  methods[2].selector = @selector(maskWithReductionPolynomialWithInt:);
  methods[3].selector = @selector(initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest:);
  methods[4].selector = @selector(getAlgorithmName);
  methods[5].selector = @selector(getDigestSize);
  methods[6].selector = @selector(doFinalWithByteArray:withInt:);
  methods[7].selector = @selector(reset);
  methods[8].selector = @selector(processFilledBufferWithByteArray:withInt:);
  methods[9].selector = @selector(bytesToLongFromBufferWithByteArray:withInt:);
  methods[10].selector = @selector(convertLongToByteArrayWithLong:withByteArray:withInt:);
  methods[11].selector = @selector(processBlock);
  methods[12].selector = @selector(updateWithByte:);
  methods[13].selector = @selector(increment);
  methods[14].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[15].selector = @selector(finish);
  methods[16].selector = @selector(copyBitLength);
  methods[17].selector = @selector(getByteLength);
  methods[18].selector = @selector(copy__);
  methods[19].selector = @selector(resetWithOrgSpongycastleUtilMemoable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BYTE_LENGTH", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsWhirlpoolDigest_BYTE_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "DIGEST_LENGTH_BYTES", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsWhirlpoolDigest_DIGEST_LENGTH_BYTES, 0x1a, -1, -1, -1, -1 },
    { "ROUNDS", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsWhirlpoolDigest_ROUNDS, 0x1a, -1, -1, -1, -1 },
    { "REDUCTION_POLYNOMIAL", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsWhirlpoolDigest_REDUCTION_POLYNOMIAL, 0x1a, -1, -1, -1, -1 },
    { "SBOX", "[I", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "C0", "[J", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "C1", "[J", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "C2", "[J", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "C3", "[J", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "C4", "[J", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "C5", "[J", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "C6", "[J", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "C7", "[J", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "_rc_", "[J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "BITCOUNT_ARRAY_SIZE", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsWhirlpoolDigest_BITCOUNT_ARRAY_SIZE, 0x1a, -1, -1, -1, -1 },
    { "_buffer_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_bufferPos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_bitCount_", "[S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_hash_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_K_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_L_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_block_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_state_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "EIGHT", "[S", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
  };
  static const void *ptrTable[] = { "packIntoLong", "IIIIIIII", "maskWithReductionPolynomial", "I", "LOrgSpongycastleCryptoDigestsWhirlpoolDigest;", "doFinal", "[BI", "processFilledBuffer", "bytesToLongFromBuffer", "convertLongToByteArray", "J[BI", "update", "B", "[BII", "copy", "reset", "LOrgSpongycastleUtilMemoable;", &OrgSpongycastleCryptoDigestsWhirlpoolDigest_SBOX, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_C0, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_C1, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_C2, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_C3, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_C4, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_C5, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_C6, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_C7, &OrgSpongycastleCryptoDigestsWhirlpoolDigest_EIGHT };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoDigestsWhirlpoolDigest = { "WhirlpoolDigest", "org.spongycastle.crypto.digests", ptrTable, methods, fields, 7, 0x11, 20, 24, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoDigestsWhirlpoolDigest;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoDigestsWhirlpoolDigest class]) {
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_SBOX = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x18, (jint) 0x23, (jint) 0xc6, (jint) 0xe8, (jint) 0x87, (jint) 0xb8, (jint) 0x01, (jint) 0x4f, (jint) 0x36, (jint) 0xa6, (jint) 0xd2, (jint) 0xf5, (jint) 0x79, (jint) 0x6f, (jint) 0x91, (jint) 0x52, (jint) 0x60, (jint) 0xbc, (jint) 0x9b, (jint) 0x8e, (jint) 0xa3, (jint) 0x0c, (jint) 0x7b, (jint) 0x35, (jint) 0x1d, (jint) 0xe0, (jint) 0xd7, (jint) 0xc2, (jint) 0x2e, (jint) 0x4b, (jint) 0xfe, (jint) 0x57, (jint) 0x15, (jint) 0x77, (jint) 0x37, (jint) 0xe5, (jint) 0x9f, (jint) 0xf0, (jint) 0x4a, (jint) 0xda, (jint) 0x58, (jint) 0xc9, (jint) 0x29, (jint) 0x0a, (jint) 0xb1, (jint) 0xa0, (jint) 0x6b, (jint) 0x85, (jint) 0xbd, (jint) 0x5d, (jint) 0x10, (jint) 0xf4, (jint) 0xcb, (jint) 0x3e, (jint) 0x05, (jint) 0x67, (jint) 0xe4, (jint) 0x27, (jint) 0x41, (jint) 0x8b, (jint) 0xa7, (jint) 0x7d, (jint) 0x95, (jint) 0xd8, (jint) 0xfb, (jint) 0xee, (jint) 0x7c, (jint) 0x66, (jint) 0xdd, (jint) 0x17, (jint) 0x47, (jint) 0x9e, (jint) 0xca, (jint) 0x2d, (jint) 0xbf, (jint) 0x07, (jint) 0xad, (jint) 0x5a, (jint) 0x83, (jint) 0x33, (jint) 0x63, (jint) 0x02, (jint) 0xaa, (jint) 0x71, (jint) 0xc8, (jint) 0x19, (jint) 0x49, (jint) 0xd9, (jint) 0xf2, (jint) 0xe3, (jint) 0x5b, (jint) 0x88, (jint) 0x9a, (jint) 0x26, (jint) 0x32, (jint) 0xb0, (jint) 0xe9, (jint) 0x0f, (jint) 0xd5, (jint) 0x80, (jint) 0xbe, (jint) 0xcd, (jint) 0x34, (jint) 0x48, (jint) 0xff, (jint) 0x7a, (jint) 0x90, (jint) 0x5f, (jint) 0x20, (jint) 0x68, (jint) 0x1a, (jint) 0xae, (jint) 0xb4, (jint) 0x54, (jint) 0x93, (jint) 0x22, (jint) 0x64, (jint) 0xf1, (jint) 0x73, (jint) 0x12, (jint) 0x40, (jint) 0x08, (jint) 0xc3, (jint) 0xec, (jint) 0xdb, (jint) 0xa1, (jint) 0x8d, (jint) 0x3d, (jint) 0x97, (jint) 0x00, (jint) 0xcf, (jint) 0x2b, (jint) 0x76, (jint) 0x82, (jint) 0xd6, (jint) 0x1b, (jint) 0xb5, (jint) 0xaf, (jint) 0x6a, (jint) 0x50, (jint) 0x45, (jint) 0xf3, (jint) 0x30, (jint) 0xef, (jint) 0x3f, (jint) 0x55, (jint) 0xa2, (jint) 0xea, (jint) 0x65, (jint) 0xba, (jint) 0x2f, (jint) 0xc0, (jint) 0xde, (jint) 0x1c, (jint) 0xfd, (jint) 0x4d, (jint) 0x92, (jint) 0x75, (jint) 0x06, (jint) 0x8a, (jint) 0xb2, (jint) 0xe6, (jint) 0x0e, (jint) 0x1f, (jint) 0x62, (jint) 0xd4, (jint) 0xa8, (jint) 0x96, (jint) 0xf9, (jint) 0xc5, (jint) 0x25, (jint) 0x59, (jint) 0x84, (jint) 0x72, (jint) 0x39, (jint) 0x4c, (jint) 0x5e, (jint) 0x78, (jint) 0x38, (jint) 0x8c, (jint) 0xd1, (jint) 0xa5, (jint) 0xe2, (jint) 0x61, (jint) 0xb3, (jint) 0x21, (jint) 0x9c, (jint) 0x1e, (jint) 0x43, (jint) 0xc7, (jint) 0xfc, (jint) 0x04, (jint) 0x51, (jint) 0x99, (jint) 0x6d, (jint) 0x0d, (jint) 0xfa, (jint) 0xdf, (jint) 0x7e, (jint) 0x24, (jint) 0x3b, (jint) 0xab, (jint) 0xce, (jint) 0x11, (jint) 0x8f, (jint) 0x4e, (jint) 0xb7, (jint) 0xeb, (jint) 0x3c, (jint) 0x81, (jint) 0x94, (jint) 0xf7, (jint) 0xb9, (jint) 0x13, (jint) 0x2c, (jint) 0xd3, (jint) 0xe7, (jint) 0x6e, (jint) 0xc4, (jint) 0x03, (jint) 0x56, (jint) 0x44, (jint) 0x7f, (jint) 0xa9, (jint) 0x2a, (jint) 0xbb, (jint) 0xc1, (jint) 0x53, (jint) 0xdc, (jint) 0x0b, (jint) 0x9d, (jint) 0x6c, (jint) 0x31, (jint) 0x74, (jint) 0xf6, (jint) 0x46, (jint) 0xac, (jint) 0x89, (jint) 0x14, (jint) 0xe1, (jint) 0x16, (jint) 0x3a, (jint) 0x69, (jint) 0x09, (jint) 0x70, (jint) 0xb6, (jint) 0xd0, (jint) 0xed, (jint) 0xcc, (jint) 0x42, (jint) 0x98, (jint) 0xa4, (jint) 0x28, (jint) 0x5c, (jint) 0xf8, (jint) 0x86 } count:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_C0 = [IOSLongArray newArrayWithLength:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_C1 = [IOSLongArray newArrayWithLength:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_C2 = [IOSLongArray newArrayWithLength:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_C3 = [IOSLongArray newArrayWithLength:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_C4 = [IOSLongArray newArrayWithLength:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_C5 = [IOSLongArray newArrayWithLength:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_C6 = [IOSLongArray newArrayWithLength:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_C7 = [IOSLongArray newArrayWithLength:256];
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_EIGHT = [IOSShortArray newArrayWithLength:OrgSpongycastleCryptoDigestsWhirlpoolDigest_BITCOUNT_ARRAY_SIZE];
    {
      *IOSShortArray_GetRef(OrgSpongycastleCryptoDigestsWhirlpoolDigest_EIGHT, OrgSpongycastleCryptoDigestsWhirlpoolDigest_BITCOUNT_ARRAY_SIZE - 1) = 8;
    }
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoDigestsWhirlpoolDigest)
  }
}

@end

void OrgSpongycastleCryptoDigestsWhirlpoolDigest_init(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self) {
  NSObject_init(self);
  self->_rc_ = [IOSLongArray newArrayWithLength:OrgSpongycastleCryptoDigestsWhirlpoolDigest_ROUNDS + 1];
  self->_buffer_ = [IOSByteArray newArrayWithLength:64];
  self->_bufferPos_ = 0;
  self->_bitCount_ = [IOSShortArray newArrayWithLength:OrgSpongycastleCryptoDigestsWhirlpoolDigest_BITCOUNT_ARRAY_SIZE];
  self->_hash_ = [IOSLongArray newArrayWithLength:8];
  self->_K_ = [IOSLongArray newArrayWithLength:8];
  self->_L_ = [IOSLongArray newArrayWithLength:8];
  self->_block_ = [IOSLongArray newArrayWithLength:8];
  self->_state_ = [IOSLongArray newArrayWithLength:8];
  for (jint i = 0; i < 256; i++) {
    jint v1 = IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_SBOX), i);
    jint v2 = OrgSpongycastleCryptoDigestsWhirlpoolDigest_maskWithReductionPolynomialWithInt_(self, JreLShift32(v1, 1));
    jint v4 = OrgSpongycastleCryptoDigestsWhirlpoolDigest_maskWithReductionPolynomialWithInt_(self, JreLShift32(v2, 1));
    jint v5 = v4 ^ v1;
    jint v8 = OrgSpongycastleCryptoDigestsWhirlpoolDigest_maskWithReductionPolynomialWithInt_(self, JreLShift32(v4, 1));
    jint v9 = v8 ^ v1;
    *IOSLongArray_GetRef(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C0), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, v1, v1, v4, v1, v8, v5, v2, v9);
    *IOSLongArray_GetRef(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C1), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, v9, v1, v1, v4, v1, v8, v5, v2);
    *IOSLongArray_GetRef(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C2), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, v2, v9, v1, v1, v4, v1, v8, v5);
    *IOSLongArray_GetRef(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C3), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, v5, v2, v9, v1, v1, v4, v1, v8);
    *IOSLongArray_GetRef(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C4), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, v8, v5, v2, v9, v1, v1, v4, v1);
    *IOSLongArray_GetRef(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C5), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, v1, v8, v5, v2, v9, v1, v1, v4);
    *IOSLongArray_GetRef(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C6), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, v4, v1, v8, v5, v2, v9, v1, v1);
    *IOSLongArray_GetRef(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C7), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(self, v1, v4, v1, v8, v5, v2, v9, v1);
  }
  *IOSLongArray_GetRef(self->_rc_, 0) = 0LL;
  for (jint r = 1; r <= OrgSpongycastleCryptoDigestsWhirlpoolDigest_ROUNDS; r++) {
    jint i = 8 * (r - 1);
    *IOSLongArray_GetRef(self->_rc_, r) = (IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C0), i) & (jlong) 0xff00000000000000LL) ^ (IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C1), i + 1) & (jlong) 0x00ff000000000000LL) ^ (IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C2), i + 2) & (jlong) 0x0000ff0000000000LL) ^ (IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C3), i + 3) & (jlong) 0x000000ff00000000LL) ^ (IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C4), i + 4) & (jlong) 0x00000000ff000000LL) ^ (IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C5), i + 5) & (jlong) 0x0000000000ff0000LL) ^ (IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C6), i + 6) & (jlong) 0x000000000000ff00LL) ^ (IOSLongArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_C7), i + 7) & (jlong) 0x00000000000000ffLL);
  }
}

OrgSpongycastleCryptoDigestsWhirlpoolDigest *new_OrgSpongycastleCryptoDigestsWhirlpoolDigest_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, init)
}

OrgSpongycastleCryptoDigestsWhirlpoolDigest *create_OrgSpongycastleCryptoDigestsWhirlpoolDigest_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, init)
}

jlong OrgSpongycastleCryptoDigestsWhirlpoolDigest_packIntoLongWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, jint b7, jint b6, jint b5, jint b4, jint b3, jint b2, jint b1, jint b0) {
  return (JreLShift64((jlong) b7, 56)) ^ (JreLShift64((jlong) b6, 48)) ^ (JreLShift64((jlong) b5, 40)) ^ (JreLShift64((jlong) b4, 32)) ^ (JreLShift64((jlong) b3, 24)) ^ (JreLShift64((jlong) b2, 16)) ^ (JreLShift64((jlong) b1, 8)) ^ b0;
}

jint OrgSpongycastleCryptoDigestsWhirlpoolDigest_maskWithReductionPolynomialWithInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, jint input) {
  jint rv = input;
  if (rv >= (jlong) 0x100LL) {
    rv ^= OrgSpongycastleCryptoDigestsWhirlpoolDigest_REDUCTION_POLYNOMIAL;
  }
  return rv;
}

void OrgSpongycastleCryptoDigestsWhirlpoolDigest_initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, OrgSpongycastleCryptoDigestsWhirlpoolDigest *originalDigest) {
  NSObject_init(self);
  self->_rc_ = [IOSLongArray newArrayWithLength:OrgSpongycastleCryptoDigestsWhirlpoolDigest_ROUNDS + 1];
  self->_buffer_ = [IOSByteArray newArrayWithLength:64];
  self->_bufferPos_ = 0;
  self->_bitCount_ = [IOSShortArray newArrayWithLength:OrgSpongycastleCryptoDigestsWhirlpoolDigest_BITCOUNT_ARRAY_SIZE];
  self->_hash_ = [IOSLongArray newArrayWithLength:8];
  self->_K_ = [IOSLongArray newArrayWithLength:8];
  self->_L_ = [IOSLongArray newArrayWithLength:8];
  self->_block_ = [IOSLongArray newArrayWithLength:8];
  self->_state_ = [IOSLongArray newArrayWithLength:8];
  [self resetWithOrgSpongycastleUtilMemoable:originalDigest];
}

OrgSpongycastleCryptoDigestsWhirlpoolDigest *new_OrgSpongycastleCryptoDigestsWhirlpoolDigest_initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *originalDigest) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest_, originalDigest)
}

OrgSpongycastleCryptoDigestsWhirlpoolDigest *create_OrgSpongycastleCryptoDigestsWhirlpoolDigest_initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *originalDigest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoDigestsWhirlpoolDigest, initWithOrgSpongycastleCryptoDigestsWhirlpoolDigest_, originalDigest)
}

void OrgSpongycastleCryptoDigestsWhirlpoolDigest_processFilledBufferWithByteArray_withInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, IOSByteArray *inArg, jint inOff) {
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(self->_state_))->size_; i++) {
    *IOSLongArray_GetRef(nil_chk(self->_block_), i) = OrgSpongycastleCryptoDigestsWhirlpoolDigest_bytesToLongFromBufferWithByteArray_withInt_(self, self->_buffer_, i * 8);
  }
  [self processBlock];
  self->_bufferPos_ = 0;
  OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(self->_buffer_, (jbyte) 0);
}

jlong OrgSpongycastleCryptoDigestsWhirlpoolDigest_bytesToLongFromBufferWithByteArray_withInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, IOSByteArray *buffer, jint startPos) {
  jlong rv = ((JreLShift64((IOSByteArray_Get(nil_chk(buffer), startPos + 0) & (jlong) 0xffLL), 56)) | (JreLShift64((IOSByteArray_Get(buffer, startPos + 1) & (jlong) 0xffLL), 48)) | (JreLShift64((IOSByteArray_Get(buffer, startPos + 2) & (jlong) 0xffLL), 40)) | (JreLShift64((IOSByteArray_Get(buffer, startPos + 3) & (jlong) 0xffLL), 32)) | (JreLShift64((IOSByteArray_Get(buffer, startPos + 4) & (jlong) 0xffLL), 24)) | (JreLShift64((IOSByteArray_Get(buffer, startPos + 5) & (jlong) 0xffLL), 16)) | (JreLShift64((IOSByteArray_Get(buffer, startPos + 6) & (jlong) 0xffLL), 8)) | ((IOSByteArray_Get(buffer, startPos + 7)) & (jlong) 0xffLL));
  return rv;
}

void OrgSpongycastleCryptoDigestsWhirlpoolDigest_convertLongToByteArrayWithLong_withByteArray_withInt_(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self, jlong inputLong, IOSByteArray *outputArray, jint offSet) {
  for (jint i = 0; i < 8; i++) {
    *IOSByteArray_GetRef(nil_chk(outputArray), offSet + i) = (jbyte) ((JreRShift64(inputLong, (56 - (i * 8)))) & (jint) 0xff);
  }
}

void OrgSpongycastleCryptoDigestsWhirlpoolDigest_increment(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self) {
  jint carry = 0;
  for (jint i = ((IOSShortArray *) nil_chk(self->_bitCount_))->size_ - 1; i >= 0; i--) {
    jint sum = (IOSShortArray_Get(self->_bitCount_, i) & (jint) 0xff) + IOSShortArray_Get(nil_chk(OrgSpongycastleCryptoDigestsWhirlpoolDigest_EIGHT), i) + carry;
    carry = JreURShift32(sum, 8);
    *IOSShortArray_GetRef(self->_bitCount_, i) = (jshort) (sum & (jint) 0xff);
  }
}

void OrgSpongycastleCryptoDigestsWhirlpoolDigest_finish(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self) {
  IOSByteArray *bitLength = OrgSpongycastleCryptoDigestsWhirlpoolDigest_copyBitLength(self);
  *IOSByteArray_GetRef(nil_chk(self->_buffer_), self->_bufferPos_++) |= (jint) 0x80;
  if (self->_bufferPos_ == self->_buffer_->size_) {
    OrgSpongycastleCryptoDigestsWhirlpoolDigest_processFilledBufferWithByteArray_withInt_(self, self->_buffer_, 0);
  }
  if (self->_bufferPos_ > 32) {
    while (self->_bufferPos_ != 0) {
      [self updateWithByte:(jbyte) 0];
    }
  }
  while (self->_bufferPos_ <= 32) {
    [self updateWithByte:(jbyte) 0];
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bitLength, 0, self->_buffer_, 32, ((IOSByteArray *) nil_chk(bitLength))->size_);
  OrgSpongycastleCryptoDigestsWhirlpoolDigest_processFilledBufferWithByteArray_withInt_(self, self->_buffer_, 0);
}

IOSByteArray *OrgSpongycastleCryptoDigestsWhirlpoolDigest_copyBitLength(OrgSpongycastleCryptoDigestsWhirlpoolDigest *self) {
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoDigestsWhirlpoolDigest_BITCOUNT_ARRAY_SIZE];
  for (jint i = 0; i < rv->size_; i++) {
    *IOSByteArray_GetRef(rv, i) = (jbyte) (IOSShortArray_Get(nil_chk(self->_bitCount_), i) & (jint) 0xff);
  }
  return rv;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoDigestsWhirlpoolDigest)
