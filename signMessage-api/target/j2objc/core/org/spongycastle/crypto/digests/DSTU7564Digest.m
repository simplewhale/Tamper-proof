//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/digests/DSTU7564Digest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "org/spongycastle/crypto/digests/DSTU7564Digest.h"
#include "org/spongycastle/util/Arrays.h"
#include "org/spongycastle/util/Memoable.h"
#include "org/spongycastle/util/Pack.h"

@interface OrgSpongycastleCryptoDigestsDSTU7564Digest () {
 @public
  jint hashSize_;
  jint blockSize_;
  jint columns_;
  jint rounds_;
  IOSByteArray *padded_;
  IOSObjectArray *state_;
  IOSObjectArray *tempState1_;
  IOSObjectArray *tempState2_;
  IOSByteArray *tempBuffer_;
  IOSByteArray *mixColumnsResult_;
  IOSLongArray *tempLongBuffer_;
  jlong inputLength_;
  jint bufOff_;
  IOSByteArray *buf_;
}

- (void)copyInWithOrgSpongycastleCryptoDigestsDSTU7564Digest:(OrgSpongycastleCryptoDigestsDSTU7564Digest *)digest OBJC_METHOD_FAMILY_NONE;

- (void)processBlockWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inOff;

- (void)Q;

- (void)P;

- (jbyte)multiplyGFWithByte:(jbyte)x
                   withByte:(jbyte)y;

- (IOSByteArray *)padWithByteArray:(IOSByteArray *)inArg
                           withInt:(jint)inOff
                           withInt:(jint)len;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsDSTU7564Digest, padded_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsDSTU7564Digest, state_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsDSTU7564Digest, tempState1_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsDSTU7564Digest, tempState2_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsDSTU7564Digest, tempBuffer_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsDSTU7564Digest, mixColumnsResult_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsDSTU7564Digest, tempLongBuffer_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoDigestsDSTU7564Digest, buf_, IOSByteArray *)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_ROWS(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, ROWS, jint)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_REDUCTIONAL_POLYNOMIAL(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_REDUCTIONAL_POLYNOMIAL 285
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, REDUCTIONAL_POLYNOMIAL, jint)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_BITS_IN_BYTE(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_BITS_IN_BYTE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, BITS_IN_BYTE, jint)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_NB_512(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_512 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, NB_512, jint)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_NB_1024(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_1024 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, NB_1024, jint)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_NR_512(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_NR_512 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, NR_512, jint)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_NR_1024(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_NR_1024 14
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, NR_1024, jint)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_STATE_BYTES_SIZE_512(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_512 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, STATE_BYTES_SIZE_512, jint)

inline jint OrgSpongycastleCryptoDigestsDSTU7564Digest_get_STATE_BYTES_SIZE_1024(void);
#define OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_1024 128
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoDigestsDSTU7564Digest, STATE_BYTES_SIZE_1024, jint)

inline IOSObjectArray *OrgSpongycastleCryptoDigestsDSTU7564Digest_get_mds_matrix(void);
static IOSObjectArray *OrgSpongycastleCryptoDigestsDSTU7564Digest_mds_matrix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsDSTU7564Digest, mds_matrix, IOSObjectArray *)

inline IOSObjectArray *OrgSpongycastleCryptoDigestsDSTU7564Digest_get_sBoxes(void);
static IOSObjectArray *OrgSpongycastleCryptoDigestsDSTU7564Digest_sBoxes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoDigestsDSTU7564Digest, sBoxes, IOSObjectArray *)

__attribute__((unused)) static void OrgSpongycastleCryptoDigestsDSTU7564Digest_copyInWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, OrgSpongycastleCryptoDigestsDSTU7564Digest *digest);

__attribute__((unused)) static void OrgSpongycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, IOSByteArray *input, jint inOff);

__attribute__((unused)) static void OrgSpongycastleCryptoDigestsDSTU7564Digest_Q(OrgSpongycastleCryptoDigestsDSTU7564Digest *self);

__attribute__((unused)) static void OrgSpongycastleCryptoDigestsDSTU7564Digest_P(OrgSpongycastleCryptoDigestsDSTU7564Digest *self);

__attribute__((unused)) static jbyte OrgSpongycastleCryptoDigestsDSTU7564Digest_multiplyGFWithByte_withByte_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, jbyte x, jbyte y);

__attribute__((unused)) static IOSByteArray *OrgSpongycastleCryptoDigestsDSTU7564Digest_padWithByteArray_withInt_withInt_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, IOSByteArray *inArg, jint inOff, jint len);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoDigestsDSTU7564Digest)

@implementation OrgSpongycastleCryptoDigestsDSTU7564Digest

- (instancetype)initWithOrgSpongycastleCryptoDigestsDSTU7564Digest:(OrgSpongycastleCryptoDigestsDSTU7564Digest *)digest {
  OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(self, digest);
  return self;
}

- (void)copyInWithOrgSpongycastleCryptoDigestsDSTU7564Digest:(OrgSpongycastleCryptoDigestsDSTU7564Digest *)digest {
  OrgSpongycastleCryptoDigestsDSTU7564Digest_copyInWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(self, digest);
}

- (instancetype)initWithInt:(jint)hashSizeBits {
  OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithInt_(self, hashSizeBits);
  return self;
}

- (NSString *)getAlgorithmName {
  return @"DSTU7564";
}

- (jint)getDigestSize {
  return hashSize_;
}

- (jint)getByteLength {
  return blockSize_;
}

- (void)updateWithByte:(jbyte)inArg {
  *IOSByteArray_GetRef(nil_chk(buf_), bufOff_++) = inArg;
  if (bufOff_ == blockSize_) {
    OrgSpongycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, buf_, 0);
    bufOff_ = 0;
  }
  inputLength_++;
}

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  while (bufOff_ != 0 && len > 0) {
    [self updateWithByte:IOSByteArray_Get(nil_chk(inArg), inOff++)];
    len--;
  }
  if (len > 0) {
    while (len > blockSize_) {
      OrgSpongycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, inArg, inOff);
      inOff += blockSize_;
      inputLength_ += blockSize_;
      len -= blockSize_;
    }
    while (len > 0) {
      [self updateWithByte:IOSByteArray_Get(nil_chk(inArg), inOff++)];
      len--;
    }
  }
}

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  padded_ = OrgSpongycastleCryptoDigestsDSTU7564Digest_padWithByteArray_withInt_withInt_(self, buf_, 0, bufOff_);
  jint paddedLen = ((IOSByteArray *) nil_chk(padded_))->size_;
  jint paddedOff = 0;
  while (paddedLen != 0) {
    OrgSpongycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, padded_, paddedOff);
    paddedOff += blockSize_;
    paddedLen -= blockSize_;
  }
  IOSObjectArray *temp = [IOSObjectArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_1024 type:IOSClass_byteArray(1)];
  for (jint bufferIndex = 0; bufferIndex < ((IOSObjectArray *) nil_chk(state_))->size_; bufferIndex++) {
    (void) IOSObjectArray_SetAndConsume(temp, bufferIndex, [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS]);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(state_, bufferIndex), 0, IOSObjectArray_Get(temp, bufferIndex), 0, OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS);
  }
  for (jint roundIndex = 0; roundIndex < rounds_; roundIndex++) {
    for (jint columnIndex = 0; columnIndex < columns_; columnIndex++) {
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(temp, columnIndex)), 0) ^= (jbyte) ((columnIndex * (jint) 0x10) ^ roundIndex);
    }
    for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
      for (jint columnIndex = 0; columnIndex < columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(temp, columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoDigestsDSTU7564Digest_sBoxes), rowIndex % 4)), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(temp, columnIndex)), rowIndex) & (jint) 0xFF);
      }
    }
    jint shift = -1;
    for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
      if ((rowIndex == OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1) && (columns_ == OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_1024)) {
        shift = 11;
      }
      else {
        shift++;
      }
      for (jint columnIndex = 0; columnIndex < columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(tempBuffer_), (columnIndex + shift) % columns_) = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(temp, columnIndex)), rowIndex);
      }
      for (jint columnIndex = 0; columnIndex < columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(temp, columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(tempBuffer_), columnIndex);
      }
    }
    jbyte multiplicationResult;
    for (jint columnIndex = 0; columnIndex < columns_; columnIndex++) {
      OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(mixColumnsResult_, (jbyte) 0);
      for (jint rowIndex = OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1; rowIndex >= 0; rowIndex--) {
        multiplicationResult = 0;
        for (jint rowInternalIndex = OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1; rowInternalIndex >= 0; rowInternalIndex--) {
          multiplicationResult ^= OrgSpongycastleCryptoDigestsDSTU7564Digest_multiplyGFWithByte_withByte_(self, IOSByteArray_Get(nil_chk(IOSObjectArray_Get(temp, columnIndex)), rowInternalIndex), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoDigestsDSTU7564Digest_mds_matrix), rowIndex)), rowInternalIndex));
        }
        *IOSByteArray_GetRef(nil_chk(mixColumnsResult_), rowIndex) = multiplicationResult;
      }
      for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(temp, columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(mixColumnsResult_), rowIndex);
      }
    }
  }
  for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
    for (jint columnIndex = 0; columnIndex < columns_; columnIndex++) {
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(state_), columnIndex)), rowIndex) ^= IOSByteArray_Get(nil_chk(IOSObjectArray_Get(temp, columnIndex)), rowIndex);
    }
  }
  IOSByteArray *stateBuffer = [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS * columns_];
  jint stateLineIndex = 0;
  for (jint columnIndex = 0; columnIndex < columns_; columnIndex++) {
    for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
      *IOSByteArray_GetRef(stateBuffer, stateLineIndex) = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(state_), columnIndex)), rowIndex);
      stateLineIndex++;
    }
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(stateBuffer, stateBuffer->size_ - hashSize_, outArg, outOff, hashSize_);
  [self reset];
  return hashSize_;
}

- (void)reset {
  for (jint bufferIndex = 0; bufferIndex < ((IOSObjectArray *) nil_chk(state_))->size_; bufferIndex++) {
    (void) IOSObjectArray_SetAndConsume(state_, bufferIndex, [IOSByteArray newArrayWithLength:columns_]);
  }
  *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(state_, 0)), 0) = (jbyte) state_->size_;
  inputLength_ = 0;
  bufOff_ = 0;
  OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(buf_, (jbyte) 0);
  if (padded_ != nil) {
    OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(padded_, (jbyte) 0);
  }
}

- (void)processBlockWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inOff {
  OrgSpongycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, input, inOff);
}

- (void)Q {
  OrgSpongycastleCryptoDigestsDSTU7564Digest_Q(self);
}

- (void)P {
  OrgSpongycastleCryptoDigestsDSTU7564Digest_P(self);
}

- (jbyte)multiplyGFWithByte:(jbyte)x
                   withByte:(jbyte)y {
  return OrgSpongycastleCryptoDigestsDSTU7564Digest_multiplyGFWithByte_withByte_(self, x, y);
}

- (IOSByteArray *)padWithByteArray:(IOSByteArray *)inArg
                           withInt:(jint)inOff
                           withInt:(jint)len {
  return OrgSpongycastleCryptoDigestsDSTU7564Digest_padWithByteArray_withInt_withInt_(self, inArg, inOff, len);
}

- (id<OrgSpongycastleUtilMemoable>)copy__ {
  return new_OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(self);
}

- (void)resetWithOrgSpongycastleUtilMemoable:(id<OrgSpongycastleUtilMemoable>)other {
  OrgSpongycastleCryptoDigestsDSTU7564Digest *d = (OrgSpongycastleCryptoDigestsDSTU7564Digest *) cast_chk(other, [OrgSpongycastleCryptoDigestsDSTU7564Digest class]);
  OrgSpongycastleCryptoDigestsDSTU7564Digest_copyInWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(self, d);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 11, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleUtilMemoable;", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoDigestsDSTU7564Digest:);
  methods[1].selector = @selector(copyInWithOrgSpongycastleCryptoDigestsDSTU7564Digest:);
  methods[2].selector = @selector(initWithInt:);
  methods[3].selector = @selector(getAlgorithmName);
  methods[4].selector = @selector(getDigestSize);
  methods[5].selector = @selector(getByteLength);
  methods[6].selector = @selector(updateWithByte:);
  methods[7].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[8].selector = @selector(doFinalWithByteArray:withInt:);
  methods[9].selector = @selector(reset);
  methods[10].selector = @selector(processBlockWithByteArray:withInt:);
  methods[11].selector = @selector(Q);
  methods[12].selector = @selector(P);
  methods[13].selector = @selector(multiplyGFWithByte:withByte:);
  methods[14].selector = @selector(padWithByteArray:withInt:withInt:);
  methods[15].selector = @selector(copy__);
  methods[16].selector = @selector(resetWithOrgSpongycastleUtilMemoable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ROWS", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS, 0x1a, -1, -1, -1, -1 },
    { "REDUCTIONAL_POLYNOMIAL", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_REDUCTIONAL_POLYNOMIAL, 0x1a, -1, -1, -1, -1 },
    { "BITS_IN_BYTE", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_BITS_IN_BYTE, 0x1a, -1, -1, -1, -1 },
    { "NB_512", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_512, 0x1a, -1, -1, -1, -1 },
    { "NB_1024", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_1024, 0x1a, -1, -1, -1, -1 },
    { "NR_512", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_NR_512, 0x1a, -1, -1, -1, -1 },
    { "NR_1024", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_NR_1024, 0x1a, -1, -1, -1, -1 },
    { "STATE_BYTES_SIZE_512", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_512, 0x1a, -1, -1, -1, -1 },
    { "STATE_BYTES_SIZE_1024", "I", .constantValue.asInt = OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_1024, 0x1a, -1, -1, -1, -1 },
    { "hashSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "blockSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "columns_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rounds_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "padded_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "state_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempState1_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempState2_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempBuffer_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mixColumnsResult_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempLongBuffer_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "inputLength_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bufOff_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "buf_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mds_matrix", "[[B", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "sBoxes", "[[B", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoDigestsDSTU7564Digest;", "copyIn", "I", "update", "B", "[BII", "doFinal", "[BI", "processBlock", "multiplyGF", "BB", "pad", "copy", "reset", "LOrgSpongycastleUtilMemoable;", &OrgSpongycastleCryptoDigestsDSTU7564Digest_mds_matrix, &OrgSpongycastleCryptoDigestsDSTU7564Digest_sBoxes };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoDigestsDSTU7564Digest = { "DSTU7564Digest", "org.spongycastle.crypto.digests", ptrTable, methods, fields, 7, 0x1, 17, 25, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoDigestsDSTU7564Digest;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoDigestsDSTU7564Digest class]) {
    OrgSpongycastleCryptoDigestsDSTU7564Digest_mds_matrix = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x01, (jint) 0x01, (jint) 0x05, (jint) 0x01, (jint) 0x08, (jint) 0x06, (jint) 0x07, (jint) 0x04 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x04, (jint) 0x01, (jint) 0x01, (jint) 0x05, (jint) 0x01, (jint) 0x08, (jint) 0x06, (jint) 0x07 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x07, (jint) 0x04, (jint) 0x01, (jint) 0x01, (jint) 0x05, (jint) 0x01, (jint) 0x08, (jint) 0x06 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x06, (jint) 0x07, (jint) 0x04, (jint) 0x01, (jint) 0x01, (jint) 0x05, (jint) 0x01, (jint) 0x08 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x08, (jint) 0x06, (jint) 0x07, (jint) 0x04, (jint) 0x01, (jint) 0x01, (jint) 0x05, (jint) 0x01 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x01, (jint) 0x08, (jint) 0x06, (jint) 0x07, (jint) 0x04, (jint) 0x01, (jint) 0x01, (jint) 0x05 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x05, (jint) 0x01, (jint) 0x08, (jint) 0x06, (jint) 0x07, (jint) 0x04, (jint) 0x01, (jint) 0x01 } count:8], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x01, (jint) 0x05, (jint) 0x01, (jint) 0x08, (jint) 0x06, (jint) 0x07, (jint) 0x04, (jint) 0x01 } count:8] } count:8 type:IOSClass_byteArray(1)];
    OrgSpongycastleCryptoDigestsDSTU7564Digest_sBoxes = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xa8, (jbyte) (jint) 0x43, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x06, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x75, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x59, (jbyte) (jint) 0x71, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x87, (jbyte) (jint) 0x95, (jbyte) (jint) 0x17, (jbyte) (jint) 0xf0, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x09, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x79, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x97, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x45, (jbyte) (jint) 0x39, (jbyte) (jint) 0x3e, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x4f, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x15, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x49, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x93, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x92, (jbyte) (jint) 0x72, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x61, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x63, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xee, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x19, (jbyte) (jint) 0xd5, (jbyte) (jint) 0xad, (jbyte) (jint) 0x58, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xa1, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x83, (jbyte) (jint) 0x37, (jbyte) (jint) 0x42, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x32, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xcc, (jbyte) (jint) 0xab, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x04, (jbyte) (jint) 0x27, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x96, (jbyte) (jint) 0x16, (jbyte) (jint) 0x23, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x65, (jbyte) (jint) 0x66, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x47, (jbyte) (jint) 0x41, (jbyte) (jint) 0x34, (jbyte) (jint) 0x48, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x88, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x53, (jbyte) (jint) 0x86, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x5b, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x38, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x22, (jbyte) (jint) 0x33, (jbyte) (jint) 0x24, (jbyte) (jint) 0x28, (jbyte) (jint) 0x36, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x77, (jbyte) (jint) 0xba, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x14, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x08, (jbyte) (jint) 0x55, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x4c, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x60, (jbyte) (jint) 0x5c, (jbyte) (jint) 0xda, (jbyte) (jint) 0x18, (jbyte) (jint) 0x46, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x21, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x89, (jbyte) (jint) 0xff, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x84, (jbyte) (jint) 0x69, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x9d, (jbyte) (jint) 0xd7, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x70, (jbyte) (jint) 0x67, (jbyte) (jint) 0x40, (jbyte) (jint) 0xb5, (jbyte) (jint) 0xde, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x30, (jbyte) (jint) 0x91, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x78, (jbyte) (jint) 0x11, (jbyte) (jint) 0x01, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x00, (jbyte) (jint) 0x68, (jbyte) (jint) 0x98, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x02, (jbyte) (jint) 0xa6, (jbyte) (jint) 0x74, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x0b, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x76, (jbyte) (jint) 0xb3, (jbyte) (jint) 0xbe, (jbyte) (jint) 0xce, (jbyte) (jint) 0xbd, (jbyte) (jint) 0xae, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x31, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xec, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x99, (jbyte) (jint) 0x94, (jbyte) (jint) 0xaa, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x26, (jbyte) (jint) 0x2f, (jbyte) (jint) 0xef, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x35, (jbyte) (jint) 0x03, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x05, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x90, (jbyte) (jint) 0x20, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x82, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xea, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x50, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x07, (jbyte) (jint) 0x57, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x62, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xac, (jbyte) (jint) 0x52, (jbyte) (jint) 0x64, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd0, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x13, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x12, (jbyte) (jint) 0x29, (jbyte) (jint) 0x51, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xcf, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x73, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x81, (jbyte) (jint) 0x54, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xed, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x44, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x85, (jbyte) (jint) 0x25, (jbyte) (jint) 0xe6, (jbyte) (jint) 0xca, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x56, (jbyte) (jint) 0x80 } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xce, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x92, (jbyte) (jint) 0xea, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x13, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x3a, (jbyte) (jint) 0xd6, (jbyte) (jint) 0xb2, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x90, (jbyte) (jint) 0x17, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x42, (jbyte) (jint) 0x15, (jbyte) (jint) 0x56, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x65, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x88, (jbyte) (jint) 0x43, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x36, (jbyte) (jint) 0xba, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x57, (jbyte) (jint) 0x67, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x31, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x64, (jbyte) (jint) 0x58, (jbyte) (jint) 0x9e, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x22, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x75, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x02, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x73, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x26, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x08, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x44, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x14, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xae, (jbyte) (jint) 0x54, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x69, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x33, (jbyte) (jint) 0xab, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x68, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x16, (jbyte) (jint) 0x95, (jbyte) (jint) 0x91, (jbyte) (jint) 0xee, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x63, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x5b, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x19, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x81, (jbyte) (jint) 0x49, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x37, (jbyte) (jint) 0x60, (jbyte) (jint) 0xca, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x48, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x96, (jbyte) (jint) 0x45, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x41, (jbyte) (jint) 0x12, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x79, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x89, (jbyte) (jint) 0x8c, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x20, (jbyte) (jint) 0x30, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x4a, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x97, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x62, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x06, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x83, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x2a, (jbyte) (jint) 0xda, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x00, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x55, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x11, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x51, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x93, (jbyte) (jint) 0x1b, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x47, (jbyte) (jint) 0x09, (jbyte) (jint) 0x86, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x07, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x98, (jbyte) (jint) 0x18, (jbyte) (jint) 0x32, (jbyte) (jint) 0x71, (jbyte) (jint) 0x4b, (jbyte) (jint) 0xef, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x70, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x40, (jbyte) (jint) 0xff, (jbyte) (jint) 0xc3, (jbyte) (jint) 0xa9, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x78, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x46, (jbyte) (jint) 0x80, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x38, (jbyte) (jint) 0xe1, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xa8, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x23, (jbyte) (jint) 0x76, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x25, (jbyte) (jint) 0x24, (jbyte) (jint) 0x05, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x94, (jbyte) (jint) 0x28, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x84, (jbyte) (jint) 0xe8, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x77, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x85, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x52, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x82, (jbyte) (jint) 0x50, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x74, (jbyte) (jint) 0x53, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x61, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x39, (jbyte) (jint) 0x35, (jbyte) (jint) 0xde, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x99, (jbyte) (jint) 0xac, (jbyte) (jint) 0xad, (jbyte) (jint) 0x72, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x87, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xec, (jbyte) (jint) 0x04, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x03, (jbyte) (jint) 0x34, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x59, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x01, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x5a, (jbyte) (jint) 0xed, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x66, (jbyte) (jint) 0x21, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x27, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xc0, (jbyte) (jint) 0x29, (jbyte) (jint) 0xd7 } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x93, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x9a, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x98, (jbyte) (jint) 0x22, (jbyte) (jint) 0x45, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xba, (jbyte) (jint) 0x6a, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x02, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xdc, (jbyte) (jint) 0x51, (jbyte) (jint) 0x59, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x17, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x94, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x62, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x71, (jbyte) (jint) 0xd4, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x70, (jbyte) (jint) 0x16, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x49, (jbyte) (jint) 0x3c, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x9b, (jbyte) (jint) 0xad, (jbyte) (jint) 0x85, (jbyte) (jint) 0x53, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x2d, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x72, (jbyte) (jint) 0xa6, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xc4, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x76, (jbyte) (jint) 0x78, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x09, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x41, (jbyte) (jint) 0x4c, (jbyte) (jint) 0xde, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x90, (jbyte) (jint) 0x25, (jbyte) (jint) 0xa5, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x03, (jbyte) (jint) 0x11, (jbyte) (jint) 0x00, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x2e, (jbyte) (jint) 0x92, (jbyte) (jint) 0xef, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x12, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x35, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x4d, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x55, (jbyte) (jint) 0xc6, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x18, (jbyte) (jint) 0x97, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x36, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x48, (jbyte) (jint) 0x56, (jbyte) (jint) 0x81, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x77, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xe2, (jbyte) (jint) 0xac, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x15, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x7c, (jbyte) (jint) 0xda, (jbyte) (jint) 0x38, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x05, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x14, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x66, (jbyte) (jint) 0xfd, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x60, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x33, (jbyte) (jint) 0x87, (jbyte) (jint) 0xc9, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x88, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xec, (jbyte) (jint) 0xed, (jbyte) (jint) 0x80, (jbyte) (jint) 0x29, (jbyte) (jint) 0x27, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x99, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x50, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x37, (jbyte) (jint) 0x24, (jbyte) (jint) 0x28, (jbyte) (jint) 0x30, (jbyte) (jint) 0x95, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x40, (jbyte) (jint) 0x83, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x69, (jbyte) (jint) 0x57, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x07, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x8a, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x20, (jbyte) (jint) 0xeb, (jbyte) (jint) 0xce, (jbyte) (jint) 0x8e, (jbyte) (jint) 0xab, (jbyte) (jint) 0xee, (jbyte) (jint) 0x31, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x73, (jbyte) (jint) 0xf9, (jbyte) (jint) 0xca, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x0d, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x96, (jbyte) (jint) 0xdd, (jbyte) (jint) 0x43, (jbyte) (jint) 0x52, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x08, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xae, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x19, (jbyte) (jint) 0x89, (jbyte) (jint) 0x32, (jbyte) (jint) 0x26, (jbyte) (jint) 0xb0, (jbyte) (jint) 0xea, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x64, (jbyte) (jint) 0x84, (jbyte) (jint) 0x82, (jbyte) (jint) 0x6b, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x79, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x01, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x75, (jbyte) (jint) 0x63, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x23, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x68, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x65, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x91, (jbyte) (jint) 0xf6, (jbyte) (jint) 0xff, (jbyte) (jint) 0x13, (jbyte) (jint) 0x58, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x47, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x61, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x06, (jbyte) (jint) 0x46, (jbyte) (jint) 0x44, (jbyte) (jint) 0x42, (jbyte) (jint) 0x04, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x39, (jbyte) (jint) 0x86, (jbyte) (jint) 0x54, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x34, (jbyte) (jint) 0x21, (jbyte) (jint) 0x8b, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x74, (jbyte) (jint) 0x67 } count:256], [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x68, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xca, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x73, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x2a, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x52, (jbyte) (jint) 0x26, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x54, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x19, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x22, (jbyte) (jint) 0x03, (jbyte) (jint) 0x46, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x53, (jbyte) (jint) 0x83, (jbyte) (jint) 0x13, (jbyte) (jint) 0x8a, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x25, (jbyte) (jint) 0x79, (jbyte) (jint) 0xf5, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x58, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x02, (jbyte) (jint) 0xed, (jbyte) (jint) 0x51, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x11, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x55, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x16, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x66, (jbyte) (jint) 0x70, (jbyte) (jint) 0x5d, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x45, (jbyte) (jint) 0x40, (jbyte) (jint) 0xcc, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x94, (jbyte) (jint) 0x56, (jbyte) (jint) 0x08, (jbyte) (jint) 0xce, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x3a, (jbyte) (jint) 0xd2, (jbyte) (jint) 0xe1, (jbyte) (jint) 0xdf, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x38, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xe5, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x86, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x4f, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x85, (jbyte) (jint) 0x23, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x32, (jbyte) (jint) 0x99, (jbyte) (jint) 0x31, (jbyte) (jint) 0x14, (jbyte) (jint) 0xae, (jbyte) (jint) 0xee, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x48, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x30, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x92, (jbyte) (jint) 0x41, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x18, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x71, (jbyte) (jint) 0x72, (jbyte) (jint) 0x44, (jbyte) (jint) 0x15, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x37, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x5f, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x88, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xab, (jbyte) (jint) 0x89, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xfa, (jbyte) (jint) 0x60, (jbyte) (jint) 0xea, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x62, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x24, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xa8, (jbyte) (jint) 0xec, (jbyte) (jint) 0x67, (jbyte) (jint) 0x20, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x28, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xac, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x34, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x10, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x63, (jbyte) (jint) 0xa0, (jbyte) (jint) 0x05, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x43, (jbyte) (jint) 0x77, (jbyte) (jint) 0x21, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x27, (jbyte) (jint) 0x09, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x29, (jbyte) (jint) 0xc2, (jbyte) (jint) 0xeb, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xff, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x97, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x65, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x75, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x49, (jbyte) (jint) 0x33, (jbyte) (jint) 0xe4, (jbyte) (jint) 0xd9, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x42, (jbyte) (jint) 0xc7, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x90, (jbyte) (jint) 0x00, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x50, (jbyte) (jint) 0x01, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xda, (jbyte) (jint) 0x47, (jbyte) (jint) 0x3f, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x69, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x93, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x06, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x96, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x12, (jbyte) (jint) 0x84, (jbyte) (jint) 0x39, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x82, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x87, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x81, (jbyte) (jint) 0x35, (jbyte) (jint) 0xde, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xa5, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x80, (jbyte) (jint) 0xef, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x76, (jbyte) (jint) 0xba, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x78, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x95, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xad, (jbyte) (jint) 0x74, (jbyte) (jint) 0x98, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x36, (jbyte) (jint) 0x64, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x59, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x17, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x91, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x57, (jbyte) (jint) 0x1b, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x61 } count:256] } count:4 type:IOSClass_byteArray(1)];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoDigestsDSTU7564Digest)
  }
}

@end

void OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, OrgSpongycastleCryptoDigestsDSTU7564Digest *digest) {
  NSObject_init(self);
  OrgSpongycastleCryptoDigestsDSTU7564Digest_copyInWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(self, digest);
}

OrgSpongycastleCryptoDigestsDSTU7564Digest *new_OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(OrgSpongycastleCryptoDigestsDSTU7564Digest *digest) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoDigestsDSTU7564Digest, initWithOrgSpongycastleCryptoDigestsDSTU7564Digest_, digest)
}

OrgSpongycastleCryptoDigestsDSTU7564Digest *create_OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(OrgSpongycastleCryptoDigestsDSTU7564Digest *digest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoDigestsDSTU7564Digest, initWithOrgSpongycastleCryptoDigestsDSTU7564Digest_, digest)
}

void OrgSpongycastleCryptoDigestsDSTU7564Digest_copyInWithOrgSpongycastleCryptoDigestsDSTU7564Digest_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, OrgSpongycastleCryptoDigestsDSTU7564Digest *digest) {
  self->hashSize_ = ((OrgSpongycastleCryptoDigestsDSTU7564Digest *) nil_chk(digest))->hashSize_;
  self->blockSize_ = digest->blockSize_;
  self->columns_ = digest->columns_;
  self->rounds_ = digest->rounds_;
  self->padded_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(digest->padded_);
  self->state_ = OrgSpongycastleUtilArrays_cloneWithByteArray2_(digest->state_);
  self->tempState1_ = OrgSpongycastleUtilArrays_cloneWithByteArray2_(digest->tempState1_);
  self->tempState2_ = OrgSpongycastleUtilArrays_cloneWithByteArray2_(digest->tempState2_);
  self->tempBuffer_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(digest->tempBuffer_);
  self->mixColumnsResult_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(digest->mixColumnsResult_);
  self->tempLongBuffer_ = OrgSpongycastleUtilArrays_cloneWithLongArray_(digest->tempLongBuffer_);
  self->inputLength_ = digest->inputLength_;
  self->bufOff_ = digest->bufOff_;
  self->buf_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(digest->buf_);
}

void OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithInt_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, jint hashSizeBits) {
  NSObject_init(self);
  if (hashSizeBits == 256 || hashSizeBits == 384 || hashSizeBits == 512) {
    self->hashSize_ = hashSizeBits / OrgSpongycastleCryptoDigestsDSTU7564Digest_BITS_IN_BYTE;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Hash size is not recommended. Use 256/384/512 instead");
  }
  if (hashSizeBits > 256) {
    self->blockSize_ = 1024 / OrgSpongycastleCryptoDigestsDSTU7564Digest_BITS_IN_BYTE;
    self->columns_ = OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_1024;
    self->rounds_ = OrgSpongycastleCryptoDigestsDSTU7564Digest_NR_1024;
    self->state_ = [IOSObjectArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_1024 type:IOSClass_byteArray(1)];
  }
  else {
    self->blockSize_ = 512 / OrgSpongycastleCryptoDigestsDSTU7564Digest_BITS_IN_BYTE;
    self->columns_ = OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_512;
    self->rounds_ = OrgSpongycastleCryptoDigestsDSTU7564Digest_NR_512;
    self->state_ = [IOSObjectArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_512 type:IOSClass_byteArray(1)];
  }
  for (jint bufferIndex = 0; bufferIndex < self->state_->size_; bufferIndex++) {
    (void) IOSObjectArray_SetAndConsume(self->state_, bufferIndex, [IOSByteArray newArrayWithLength:self->columns_]);
  }
  *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(self->state_, 0)), 0) = (jbyte) self->state_->size_;
  self->padded_ = nil;
  self->tempState1_ = [IOSObjectArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_1024 type:IOSClass_byteArray(1)];
  self->tempState2_ = [IOSObjectArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_STATE_BYTES_SIZE_1024 type:IOSClass_byteArray(1)];
  for (jint bufferIndex = 0; bufferIndex < self->state_->size_; bufferIndex++) {
    (void) IOSObjectArray_SetAndConsume(self->tempState1_, bufferIndex, [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS]);
    (void) IOSObjectArray_SetAndConsume(self->tempState2_, bufferIndex, [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS]);
  }
  self->tempBuffer_ = [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_1024];
  self->mixColumnsResult_ = [IOSByteArray newArrayWithLength:OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS];
  self->tempLongBuffer_ = [IOSLongArray newArrayWithLength:self->columns_];
  self->buf_ = [IOSByteArray newArrayWithLength:self->blockSize_];
}

OrgSpongycastleCryptoDigestsDSTU7564Digest *new_OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithInt_(jint hashSizeBits) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoDigestsDSTU7564Digest, initWithInt_, hashSizeBits)
}

OrgSpongycastleCryptoDigestsDSTU7564Digest *create_OrgSpongycastleCryptoDigestsDSTU7564Digest_initWithInt_(jint hashSizeBits) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoDigestsDSTU7564Digest, initWithInt_, hashSizeBits)
}

void OrgSpongycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, IOSByteArray *input, jint inOff) {
  for (jint bufferIndex = 0; bufferIndex < ((IOSObjectArray *) nil_chk(self->state_))->size_; bufferIndex++) {
    OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(IOSObjectArray_Get(nil_chk(self->tempState1_), bufferIndex), (jbyte) 0);
    OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(IOSObjectArray_Get(nil_chk(self->tempState2_), bufferIndex), (jbyte) 0);
  }
  for (jint bufferIndex = 0; bufferIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; bufferIndex++) {
    for (jint byteIndex = 0; byteIndex < self->columns_; byteIndex++) {
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState1_), byteIndex)), bufferIndex) = (jbyte) (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->state_, byteIndex)), bufferIndex) ^ IOSByteArray_Get(nil_chk(input), byteIndex * OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS + bufferIndex + inOff));
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState2_), byteIndex)), bufferIndex) = IOSByteArray_Get(input, byteIndex * OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS + bufferIndex + inOff);
    }
  }
  OrgSpongycastleCryptoDigestsDSTU7564Digest_P(self);
  OrgSpongycastleCryptoDigestsDSTU7564Digest_Q(self);
  for (jint bufferIndex = 0; bufferIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; bufferIndex++) {
    for (jint byteIndex = 0; byteIndex < self->columns_; byteIndex++) {
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->state_), byteIndex)), bufferIndex) ^= (jbyte) (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState1_), byteIndex)), bufferIndex) ^ IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState2_), byteIndex)), bufferIndex));
    }
  }
}

void OrgSpongycastleCryptoDigestsDSTU7564Digest_Q(OrgSpongycastleCryptoDigestsDSTU7564Digest *self) {
  for (jint roundIndex = 0; roundIndex < self->rounds_; roundIndex++) {
    for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
      *IOSLongArray_GetRef(nil_chk(self->tempLongBuffer_), columnIndex) = OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_(IOSObjectArray_Get(nil_chk(self->tempState2_), columnIndex), 0);
      *IOSLongArray_GetRef(nil_chk(self->tempLongBuffer_), columnIndex) += ((jlong) 0x00F0F0F0F0F0F0F3LL ^ (JreLShift64((((jlong) (self->columns_ - columnIndex - 1) * (jlong) 0x10LL) ^ (jlong) roundIndex), (7 * 8))));
      OrgSpongycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(self->tempLongBuffer_, columnIndex), IOSObjectArray_Get(nil_chk(self->tempState2_), columnIndex), 0);
    }
    for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
      for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState2_), columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoDigestsDSTU7564Digest_sBoxes), rowIndex % 4)), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->tempState2_, columnIndex)), rowIndex) & (jint) 0xFF);
      }
    }
    jint shift = -1;
    for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
      if ((rowIndex == OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1) && (self->columns_ == OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_1024)) {
        shift = 11;
      }
      else {
        shift++;
      }
      for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(self->tempBuffer_), (columnIndex + shift) % self->columns_) = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState2_), columnIndex)), rowIndex);
      }
      for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState2_), columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(self->tempBuffer_), columnIndex);
      }
    }
    jbyte multiplicationResult;
    for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
      OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(self->mixColumnsResult_, (jbyte) 0);
      for (jint rowIndex = OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1; rowIndex >= 0; rowIndex--) {
        multiplicationResult = 0;
        for (jint rowInternalIndex = OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1; rowInternalIndex >= 0; rowInternalIndex--) {
          multiplicationResult ^= OrgSpongycastleCryptoDigestsDSTU7564Digest_multiplyGFWithByte_withByte_(self, IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState2_), columnIndex)), rowInternalIndex), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoDigestsDSTU7564Digest_mds_matrix), rowIndex)), rowInternalIndex));
        }
        *IOSByteArray_GetRef(nil_chk(self->mixColumnsResult_), rowIndex) = multiplicationResult;
      }
      for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState2_), columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(self->mixColumnsResult_), rowIndex);
      }
    }
  }
}

void OrgSpongycastleCryptoDigestsDSTU7564Digest_P(OrgSpongycastleCryptoDigestsDSTU7564Digest *self) {
  for (jint roundIndex = 0; roundIndex < self->rounds_; roundIndex++) {
    for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState1_), columnIndex)), 0) ^= (jbyte) ((columnIndex * (jint) 0x10) ^ roundIndex);
    }
    for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
      for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState1_), columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoDigestsDSTU7564Digest_sBoxes), rowIndex % 4)), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(self->tempState1_, columnIndex)), rowIndex) & (jint) 0xFF);
      }
    }
    jint shift = -1;
    for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
      if ((rowIndex == OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1) && (self->columns_ == OrgSpongycastleCryptoDigestsDSTU7564Digest_NB_1024)) {
        shift = 11;
      }
      else {
        shift++;
      }
      for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(self->tempBuffer_), (columnIndex + shift) % self->columns_) = IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState1_), columnIndex)), rowIndex);
      }
      for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState1_), columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(self->tempBuffer_), columnIndex);
      }
    }
    jbyte multiplicationResult;
    for (jint columnIndex = 0; columnIndex < self->columns_; columnIndex++) {
      OrgSpongycastleUtilArrays_fillWithByteArray_withByte_(self->mixColumnsResult_, (jbyte) 0);
      for (jint rowIndex = OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1; rowIndex >= 0; rowIndex--) {
        multiplicationResult = 0;
        for (jint rowInternalIndex = OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS - 1; rowInternalIndex >= 0; rowInternalIndex--) {
          multiplicationResult ^= OrgSpongycastleCryptoDigestsDSTU7564Digest_multiplyGFWithByte_withByte_(self, IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState1_), columnIndex)), rowInternalIndex), IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(OrgSpongycastleCryptoDigestsDSTU7564Digest_mds_matrix), rowIndex)), rowInternalIndex));
        }
        *IOSByteArray_GetRef(nil_chk(self->mixColumnsResult_), rowIndex) = multiplicationResult;
      }
      for (jint rowIndex = 0; rowIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_ROWS; rowIndex++) {
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(self->tempState1_), columnIndex)), rowIndex) = IOSByteArray_Get(nil_chk(self->mixColumnsResult_), rowIndex);
      }
    }
  }
}

jbyte OrgSpongycastleCryptoDigestsDSTU7564Digest_multiplyGFWithByte_withByte_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, jbyte x, jbyte y) {
  jbyte result = 0;
  jbyte highestBit;
  for (jint bitIndex = 0; bitIndex < OrgSpongycastleCryptoDigestsDSTU7564Digest_BITS_IN_BYTE; bitIndex++) {
    if ((y & (jbyte) (jint) 0x01) == 1) {
      result ^= x;
    }
    highestBit = (jbyte) (x & (jbyte) (jint) 0x80);
    JreLShiftAssignByte(&x, 1);
    if (highestBit == (jbyte) (jint) 0x80) {
      x = (jbyte) ((jint) x ^ OrgSpongycastleCryptoDigestsDSTU7564Digest_REDUCTIONAL_POLYNOMIAL);
    }
    JreRShiftAssignByte(&y, 1);
  }
  return result;
}

IOSByteArray *OrgSpongycastleCryptoDigestsDSTU7564Digest_padWithByteArray_withInt_withInt_(OrgSpongycastleCryptoDigestsDSTU7564Digest *self, IOSByteArray *inArg, jint inOff, jint len) {
  IOSByteArray *padded;
  if (self->blockSize_ - len < 13) {
    padded = [IOSByteArray newArrayWithLength:2 * self->blockSize_];
  }
  else {
    padded = [IOSByteArray newArrayWithLength:self->blockSize_];
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(inArg, inOff, padded, 0, len);
  *IOSByteArray_GetRef(padded, len) = (jbyte) (jint) 0x80;
  OrgSpongycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(self->inputLength_ * OrgSpongycastleCryptoDigestsDSTU7564Digest_BITS_IN_BYTE, padded, padded->size_ - 12);
  return padded;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoDigestsDSTU7564Digest)
