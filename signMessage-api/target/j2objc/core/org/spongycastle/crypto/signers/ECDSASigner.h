//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/signers/ECDSASigner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoSignersECDSASigner")
#ifdef RESTRICT_OrgSpongycastleCryptoSignersECDSASigner
#define INCLUDE_ALL_OrgSpongycastleCryptoSignersECDSASigner 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoSignersECDSASigner 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoSignersECDSASigner

#if !defined (OrgSpongycastleCryptoSignersECDSASigner_) && (INCLUDE_ALL_OrgSpongycastleCryptoSignersECDSASigner || defined(INCLUDE_OrgSpongycastleCryptoSignersECDSASigner))
#define OrgSpongycastleCryptoSignersECDSASigner_

#define RESTRICT_OrgSpongycastleMathEcECConstants 1
#define INCLUDE_OrgSpongycastleMathEcECConstants 1
#include "org/spongycastle/math/ec/ECConstants.h"

#define RESTRICT_OrgSpongycastleCryptoDSA 1
#define INCLUDE_OrgSpongycastleCryptoDSA 1
#include "org/spongycastle/crypto/DSA.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;
@class OrgSpongycastleMathEcECFieldElement;
@class OrgSpongycastleMathEcECPoint;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoSignersDSAKCalculator;
@protocol OrgSpongycastleMathEcECMultiplier;

@interface OrgSpongycastleCryptoSignersECDSASigner : NSObject < OrgSpongycastleMathEcECConstants, OrgSpongycastleCryptoDSA >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgSpongycastleCryptoSignersDSAKCalculator:(id<OrgSpongycastleCryptoSignersDSAKCalculator>)kCalculator;

- (IOSObjectArray *)generateSignatureWithByteArray:(IOSByteArray *)message;

- (void)init__WithBoolean:(jboolean)forSigning
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)message
                  withJavaMathBigInteger:(JavaMathBigInteger *)r
                  withJavaMathBigInteger:(JavaMathBigInteger *)s;

#pragma mark Protected

- (JavaMathBigInteger *)calculateEWithJavaMathBigInteger:(JavaMathBigInteger *)n
                                           withByteArray:(IOSByteArray *)message;

- (id<OrgSpongycastleMathEcECMultiplier>)createBasePointMultiplier;

- (OrgSpongycastleMathEcECFieldElement *)getDenominatorWithInt:(jint)coordinateSystem
                              withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)p;

- (JavaSecuritySecureRandom *)initSecureRandomWithBoolean:(jboolean)needed
                             withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)provided OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoSignersECDSASigner)

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersECDSASigner_init(OrgSpongycastleCryptoSignersECDSASigner *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersECDSASigner *new_OrgSpongycastleCryptoSignersECDSASigner_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersECDSASigner *create_OrgSpongycastleCryptoSignersECDSASigner_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersECDSASigner_initWithOrgSpongycastleCryptoSignersDSAKCalculator_(OrgSpongycastleCryptoSignersECDSASigner *self, id<OrgSpongycastleCryptoSignersDSAKCalculator> kCalculator);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersECDSASigner *new_OrgSpongycastleCryptoSignersECDSASigner_initWithOrgSpongycastleCryptoSignersDSAKCalculator_(id<OrgSpongycastleCryptoSignersDSAKCalculator> kCalculator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersECDSASigner *create_OrgSpongycastleCryptoSignersECDSASigner_initWithOrgSpongycastleCryptoSignersDSAKCalculator_(id<OrgSpongycastleCryptoSignersDSAKCalculator> kCalculator);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoSignersECDSASigner)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoSignersECDSASigner")
