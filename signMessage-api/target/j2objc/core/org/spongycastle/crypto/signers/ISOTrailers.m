//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/signers/ISOTrailers.java
//

#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/signers/ISOTrailers.h"
#include "org/spongycastle/util/Integers.h"

inline id<JavaUtilMap> OrgSpongycastleCryptoSignersISOTrailers_get_trailerMap(void);
static id<JavaUtilMap> OrgSpongycastleCryptoSignersISOTrailers_trailerMap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoSignersISOTrailers, trailerMap, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoSignersISOTrailers)

@implementation OrgSpongycastleCryptoSignersISOTrailers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoSignersISOTrailers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaLangInteger *)getTrailerWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest {
  return OrgSpongycastleCryptoSignersISOTrailers_getTrailerWithOrgSpongycastleCryptoDigest_(digest);
}

+ (jboolean)noTrailerAvailableWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest {
  return OrgSpongycastleCryptoSignersISOTrailers_noTrailerAvailableWithOrgSpongycastleCryptoDigest_(digest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getTrailerWithOrgSpongycastleCryptoDigest:);
  methods[2].selector = @selector(noTrailerAvailableWithOrgSpongycastleCryptoDigest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "trailerMap", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 3, 4, -1 },
    { "TRAILER_IMPLICIT", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_IMPLICIT, 0x19, -1, -1, -1, -1 },
    { "TRAILER_RIPEMD160", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_RIPEMD160, 0x19, -1, -1, -1, -1 },
    { "TRAILER_RIPEMD128", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_RIPEMD128, 0x19, -1, -1, -1, -1 },
    { "TRAILER_SHA1", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA1, 0x19, -1, -1, -1, -1 },
    { "TRAILER_SHA256", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA256, 0x19, -1, -1, -1, -1 },
    { "TRAILER_SHA512", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA512, 0x19, -1, -1, -1, -1 },
    { "TRAILER_SHA384", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA384, 0x19, -1, -1, -1, -1 },
    { "TRAILER_WHIRLPOOL", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_WHIRLPOOL, 0x19, -1, -1, -1, -1 },
    { "TRAILER_SHA224", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA224, 0x19, -1, -1, -1, -1 },
    { "TRAILER_SHA512_224", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA512_224, 0x19, -1, -1, -1, -1 },
    { "TRAILER_SHA512_256", "I", .constantValue.asInt = OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA512_256, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getTrailer", "LOrgSpongycastleCryptoDigest;", "noTrailerAvailable", &OrgSpongycastleCryptoSignersISOTrailers_trailerMap, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoSignersISOTrailers = { "ISOTrailers", "org.spongycastle.crypto.signers", ptrTable, methods, fields, 7, 0x1, 3, 12, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoSignersISOTrailers;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoSignersISOTrailers class]) {
    {
      id<JavaUtilMap> trailers = new_JavaUtilHashMap_init();
      (void) [trailers putWithId:@"RIPEMD128" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_RIPEMD128)];
      (void) [trailers putWithId:@"RIPEMD160" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_RIPEMD160)];
      (void) [trailers putWithId:@"SHA-1" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA1)];
      (void) [trailers putWithId:@"SHA-224" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA224)];
      (void) [trailers putWithId:@"SHA-256" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA256)];
      (void) [trailers putWithId:@"SHA-384" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA384)];
      (void) [trailers putWithId:@"SHA-512" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA512)];
      (void) [trailers putWithId:@"SHA-512/224" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA512_224)];
      (void) [trailers putWithId:@"SHA-512/256" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_SHA512_256)];
      (void) [trailers putWithId:@"Whirlpool" withId:OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoSignersISOTrailers_TRAILER_WHIRLPOOL)];
      OrgSpongycastleCryptoSignersISOTrailers_trailerMap = JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(trailers);
    }
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoSignersISOTrailers)
  }
}

@end

void OrgSpongycastleCryptoSignersISOTrailers_init(OrgSpongycastleCryptoSignersISOTrailers *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoSignersISOTrailers *new_OrgSpongycastleCryptoSignersISOTrailers_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoSignersISOTrailers, init)
}

OrgSpongycastleCryptoSignersISOTrailers *create_OrgSpongycastleCryptoSignersISOTrailers_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoSignersISOTrailers, init)
}

JavaLangInteger *OrgSpongycastleCryptoSignersISOTrailers_getTrailerWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest) {
  OrgSpongycastleCryptoSignersISOTrailers_initialize();
  return [((id<JavaUtilMap>) nil_chk(OrgSpongycastleCryptoSignersISOTrailers_trailerMap)) getWithId:[((id<OrgSpongycastleCryptoDigest>) nil_chk(digest)) getAlgorithmName]];
}

jboolean OrgSpongycastleCryptoSignersISOTrailers_noTrailerAvailableWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest) {
  OrgSpongycastleCryptoSignersISOTrailers_initialize();
  return ![((id<JavaUtilMap>) nil_chk(OrgSpongycastleCryptoSignersISOTrailers_trailerMap)) containsKeyWithId:[((id<OrgSpongycastleCryptoDigest>) nil_chk(digest)) getAlgorithmName]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoSignersISOTrailers)
