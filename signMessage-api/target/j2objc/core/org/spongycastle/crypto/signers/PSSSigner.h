//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/signers/PSSSigner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoSignersPSSSigner")
#ifdef RESTRICT_OrgSpongycastleCryptoSignersPSSSigner
#define INCLUDE_ALL_OrgSpongycastleCryptoSignersPSSSigner 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoSignersPSSSigner 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoSignersPSSSigner

#if !defined (OrgSpongycastleCryptoSignersPSSSigner_) && (INCLUDE_ALL_OrgSpongycastleCryptoSignersPSSSigner || defined(INCLUDE_OrgSpongycastleCryptoSignersPSSSigner))
#define OrgSpongycastleCryptoSignersPSSSigner_

#define RESTRICT_OrgSpongycastleCryptoSigner 1
#define INCLUDE_OrgSpongycastleCryptoSigner 1
#include "org/spongycastle/crypto/Signer.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoAsymmetricBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastleCryptoSignersPSSSigner : NSObject < OrgSpongycastleCryptoSigner >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                                     withByteArray:(IOSByteArray *)salt;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)contentDigest
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)mgfDigest
                                                     withByteArray:(IOSByteArray *)salt;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)contentDigest
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)mgfDigest
                                                     withByteArray:(IOSByteArray *)salt
                                                          withByte:(jbyte)trailer;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)contentDigest
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)mgfDigest
                                                           withInt:(jint)sLen;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)contentDigest
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)mgfDigest
                                                           withInt:(jint)sLen
                                                          withByte:(jbyte)trailer;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                                           withInt:(jint)sLen;

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricBlockCipher:(id<OrgSpongycastleCryptoAsymmetricBlockCipher>)cipher
                                   withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                                           withInt:(jint)sLen
                                                          withByte:(jbyte)trailer;

- (IOSByteArray *)generateSignature;

- (void)init__WithBoolean:(jboolean)forSigning
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (void)reset;

- (void)updateWithByte:(jbyte)b;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)off
                    withInt:(jint)len;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)signature;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoSignersPSSSigner)

inline jbyte OrgSpongycastleCryptoSignersPSSSigner_get_TRAILER_IMPLICIT(void);
#define OrgSpongycastleCryptoSignersPSSSigner_TRAILER_IMPLICIT -68
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoSignersPSSSigner, TRAILER_IMPLICIT, jbyte)

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withInt_(OrgSpongycastleCryptoSignersPSSSigner *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, jint sLen);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *new_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withInt_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, jint sLen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *create_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withInt_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, jint sLen);

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_(OrgSpongycastleCryptoSignersPSSSigner *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, jint sLen);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *new_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, jint sLen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *create_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, jint sLen);

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withInt_withByte_(OrgSpongycastleCryptoSignersPSSSigner *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, jint sLen, jbyte trailer);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *new_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withInt_withByte_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, jint sLen, jbyte trailer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *create_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withInt_withByte_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, jint sLen, jbyte trailer);

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_withByte_(OrgSpongycastleCryptoSignersPSSSigner *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, jint sLen, jbyte trailer);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *new_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_withByte_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, jint sLen, jbyte trailer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *create_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_withByte_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, jint sLen, jbyte trailer);

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withByteArray_(OrgSpongycastleCryptoSignersPSSSigner *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, IOSByteArray *salt);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *new_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, IOSByteArray *salt) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *create_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> digest, IOSByteArray *salt);

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_(OrgSpongycastleCryptoSignersPSSSigner *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, IOSByteArray *salt);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *new_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, IOSByteArray *salt) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *create_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, IOSByteArray *salt);

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_withByte_(OrgSpongycastleCryptoSignersPSSSigner *self, id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, IOSByteArray *salt, jbyte trailer);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *new_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_withByte_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, IOSByteArray *salt, jbyte trailer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersPSSSigner *create_OrgSpongycastleCryptoSignersPSSSigner_initWithOrgSpongycastleCryptoAsymmetricBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withByteArray_withByte_(id<OrgSpongycastleCryptoAsymmetricBlockCipher> cipher, id<OrgSpongycastleCryptoDigest> contentDigest, id<OrgSpongycastleCryptoDigest> mgfDigest, IOSByteArray *salt, jbyte trailer);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoSignersPSSSigner)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoSignersPSSSigner")
