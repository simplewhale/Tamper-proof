//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/signers/SM2Signer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoSignersSM2Signer")
#ifdef RESTRICT_OrgSpongycastleCryptoSignersSM2Signer
#define INCLUDE_ALL_OrgSpongycastleCryptoSignersSM2Signer 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoSignersSM2Signer 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoSignersSM2Signer

#if !defined (OrgSpongycastleCryptoSignersSM2Signer_) && (INCLUDE_ALL_OrgSpongycastleCryptoSignersSM2Signer || defined(INCLUDE_OrgSpongycastleCryptoSignersSM2Signer))
#define OrgSpongycastleCryptoSignersSM2Signer_

#define RESTRICT_OrgSpongycastleCryptoDSA 1
#define INCLUDE_OrgSpongycastleCryptoDSA 1
#include "org/spongycastle/crypto/DSA.h"

#define RESTRICT_OrgSpongycastleMathEcECConstants 1
#define INCLUDE_OrgSpongycastleMathEcECConstants 1
#include "org/spongycastle/math/ec/ECConstants.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaMathBigInteger;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleMathEcECMultiplier;

@interface OrgSpongycastleCryptoSignersSM2Signer : NSObject < OrgSpongycastleCryptoDSA, OrgSpongycastleMathEcECConstants >

#pragma mark Public

- (instancetype)init;

- (IOSObjectArray *)generateSignatureWithByteArray:(IOSByteArray *)message;

- (void)init__WithBoolean:(jboolean)forSigning
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)message
                  withJavaMathBigInteger:(JavaMathBigInteger *)r
                  withJavaMathBigInteger:(JavaMathBigInteger *)s;

#pragma mark Protected

- (JavaMathBigInteger *)calculateEWithByteArray:(IOSByteArray *)message;

- (id<OrgSpongycastleMathEcECMultiplier>)createBasePointMultiplier;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoSignersSM2Signer)

FOUNDATION_EXPORT void OrgSpongycastleCryptoSignersSM2Signer_init(OrgSpongycastleCryptoSignersSM2Signer *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersSM2Signer *new_OrgSpongycastleCryptoSignersSM2Signer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoSignersSM2Signer *create_OrgSpongycastleCryptoSignersSM2Signer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoSignersSM2Signer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoSignersSM2Signer")
