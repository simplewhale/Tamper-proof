//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/jpake/JPAKEParticipant.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant")
#ifdef RESTRICT_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant

#if !defined (OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_) && (INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant || defined(INCLUDE_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant))
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_

@class IOSCharArray;
@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;
@class OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup;
@class OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload;
@class OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload;
@class OrgSpongycastleCryptoAgreementJpakeJPAKERound3Payload;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)participantId
                   withCharArray:(IOSCharArray *)password;

- (instancetype)initWithNSString:(NSString *)participantId
                   withCharArray:(IOSCharArray *)password
withOrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup:(OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *)group;

- (instancetype)initWithNSString:(NSString *)participantId
                   withCharArray:(IOSCharArray *)password
withOrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup:(OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *)group
 withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (JavaMathBigInteger *)calculateKeyingMaterial;

- (OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload *)createRound1PayloadToSend;

- (OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload *)createRound2PayloadToSend;

- (OrgSpongycastleCryptoAgreementJpakeJPAKERound3Payload *)createRound3PayloadToSendWithJavaMathBigInteger:(JavaMathBigInteger *)keyingMaterial;

- (jint)getState;

- (void)validateRound1PayloadReceivedWithOrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload:(OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload *)round1PayloadReceived;

- (void)validateRound2PayloadReceivedWithOrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload:(OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload *)round2PayloadReceived;

- (void)validateRound3PayloadReceivedWithOrgSpongycastleCryptoAgreementJpakeJPAKERound3Payload:(OrgSpongycastleCryptoAgreementJpakeJPAKERound3Payload *)round3PayloadReceived
                                                                        withJavaMathBigInteger:(JavaMathBigInteger *)keyingMaterial;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant)

inline jint OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_get_STATE_INITIALIZED(void);
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_STATE_INITIALIZED 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant, STATE_INITIALIZED, jint)

inline jint OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_get_STATE_ROUND_1_CREATED(void);
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_STATE_ROUND_1_CREATED 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant, STATE_ROUND_1_CREATED, jint)

inline jint OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_get_STATE_ROUND_1_VALIDATED(void);
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_STATE_ROUND_1_VALIDATED 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant, STATE_ROUND_1_VALIDATED, jint)

inline jint OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_get_STATE_ROUND_2_CREATED(void);
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_STATE_ROUND_2_CREATED 30
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant, STATE_ROUND_2_CREATED, jint)

inline jint OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_get_STATE_ROUND_2_VALIDATED(void);
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_STATE_ROUND_2_VALIDATED 40
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant, STATE_ROUND_2_VALIDATED, jint)

inline jint OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_get_STATE_KEY_CALCULATED(void);
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_STATE_KEY_CALCULATED 50
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant, STATE_KEY_CALCULATED, jint)

inline jint OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_get_STATE_ROUND_3_CREATED(void);
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_STATE_ROUND_3_CREATED 60
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant, STATE_ROUND_3_CREATED, jint)

inline jint OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_get_STATE_ROUND_3_VALIDATED(void);
#define OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_STATE_ROUND_3_VALIDATED 70
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant, STATE_ROUND_3_VALIDATED, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *self, NSString *participantId, IOSCharArray *password);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *new_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_(NSString *participantId, IOSCharArray *password) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *create_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_(NSString *participantId, IOSCharArray *password);

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_withOrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *self, NSString *participantId, IOSCharArray *password, OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *group);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *new_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_withOrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_(NSString *participantId, IOSCharArray *password, OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *group) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *create_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_withOrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_(NSString *participantId, IOSCharArray *password, OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *group);

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_withOrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_withOrgSpongycastleCryptoDigest_withJavaSecuritySecureRandom_(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *self, NSString *participantId, IOSCharArray *password, OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *group, id<OrgSpongycastleCryptoDigest> digest, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *new_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_withOrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_withOrgSpongycastleCryptoDigest_withJavaSecuritySecureRandom_(NSString *participantId, IOSCharArray *password, OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *group, id<OrgSpongycastleCryptoDigest> digest, JavaSecuritySecureRandom *random) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant *create_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant_initWithNSString_withCharArray_withOrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_withOrgSpongycastleCryptoDigest_withJavaSecuritySecureRandom_(NSString *participantId, IOSCharArray *password, OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *group, id<OrgSpongycastleCryptoDigest> digest, JavaSecuritySecureRandom *random);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEParticipant")
