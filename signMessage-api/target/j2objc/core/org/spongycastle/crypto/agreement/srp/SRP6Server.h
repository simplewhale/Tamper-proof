//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/srp/SRP6Server.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementSrpSRP6Server")
#ifdef RESTRICT_OrgSpongycastleCryptoAgreementSrpSRP6Server
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementSrpSRP6Server 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementSrpSRP6Server 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoAgreementSrpSRP6Server

#if !defined (OrgSpongycastleCryptoAgreementSrpSRP6Server_) && (INCLUDE_ALL_OrgSpongycastleCryptoAgreementSrpSRP6Server || defined(INCLUDE_OrgSpongycastleCryptoAgreementSrpSRP6Server))
#define OrgSpongycastleCryptoAgreementSrpSRP6Server_

@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;
@class OrgSpongycastleCryptoParamsSRP6GroupParameters;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastleCryptoAgreementSrpSRP6Server : NSObject {
 @public
  JavaMathBigInteger *N_;
  JavaMathBigInteger *g_;
  JavaMathBigInteger *v_;
  JavaSecuritySecureRandom *random_;
  id<OrgSpongycastleCryptoDigest> digest_;
  JavaMathBigInteger *A_;
  JavaMathBigInteger *b_;
  JavaMathBigInteger *B_;
  JavaMathBigInteger *u_;
  JavaMathBigInteger *S_;
  JavaMathBigInteger *M1_;
  JavaMathBigInteger *M2_;
  JavaMathBigInteger *Key_;
}

#pragma mark Public

- (instancetype)init;

- (JavaMathBigInteger *)calculateSecretWithJavaMathBigInteger:(JavaMathBigInteger *)clientA;

- (JavaMathBigInteger *)calculateServerEvidenceMessage;

- (JavaMathBigInteger *)calculateSessionKey;

- (JavaMathBigInteger *)generateServerCredentials;

- (void)init__WithJavaMathBigInteger:(JavaMathBigInteger *)N
              withJavaMathBigInteger:(JavaMathBigInteger *)g
              withJavaMathBigInteger:(JavaMathBigInteger *)v
     withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
        withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (void)init__WithOrgSpongycastleCryptoParamsSRP6GroupParameters:(OrgSpongycastleCryptoParamsSRP6GroupParameters *)group
                                          withJavaMathBigInteger:(JavaMathBigInteger *)v
                                 withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (jboolean)verifyClientEvidenceMessageWithJavaMathBigInteger:(JavaMathBigInteger *)clientM1;

#pragma mark Protected

- (JavaMathBigInteger *)selectPrivateValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoAgreementSrpSRP6Server)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, N_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, g_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, v_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, random_, JavaSecuritySecureRandom *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, digest_, id<OrgSpongycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, A_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, b_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, B_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, u_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, S_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, M1_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, M2_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementSrpSRP6Server, Key_, JavaMathBigInteger *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementSrpSRP6Server_init(OrgSpongycastleCryptoAgreementSrpSRP6Server *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementSrpSRP6Server *new_OrgSpongycastleCryptoAgreementSrpSRP6Server_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementSrpSRP6Server *create_OrgSpongycastleCryptoAgreementSrpSRP6Server_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoAgreementSrpSRP6Server)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementSrpSRP6Server")
