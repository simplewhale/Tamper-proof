//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/DHAgreement.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/spongycastle/crypto/CipherParameters.h"
#include "org/spongycastle/crypto/agreement/DHAgreement.h"
#include "org/spongycastle/crypto/generators/DHKeyPairGenerator.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/crypto/params/DHKeyGenerationParameters.h"
#include "org/spongycastle/crypto/params/DHParameters.h"
#include "org/spongycastle/crypto/params/DHPrivateKeyParameters.h"
#include "org/spongycastle/crypto/params/DHPublicKeyParameters.h"
#include "org/spongycastle/crypto/params/ParametersWithRandom.h"

@interface OrgSpongycastleCryptoAgreementDHAgreement () {
 @public
  OrgSpongycastleCryptoParamsDHPrivateKeyParameters *key_;
  OrgSpongycastleCryptoParamsDHParameters *dhParams_;
  JavaMathBigInteger *privateValue_;
  JavaSecuritySecureRandom *random_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementDHAgreement, key_, OrgSpongycastleCryptoParamsDHPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementDHAgreement, dhParams_, OrgSpongycastleCryptoParamsDHParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementDHAgreement, privateValue_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementDHAgreement, random_, JavaSecuritySecureRandom *)

inline JavaMathBigInteger *OrgSpongycastleCryptoAgreementDHAgreement_get_ONE(void);
static JavaMathBigInteger *OrgSpongycastleCryptoAgreementDHAgreement_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoAgreementDHAgreement, ONE, JavaMathBigInteger *)

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoAgreementDHAgreement)

@implementation OrgSpongycastleCryptoAgreementDHAgreement

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoAgreementDHAgreement_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)param {
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter *kParam;
  if ([param isKindOfClass:[OrgSpongycastleCryptoParamsParametersWithRandom class]]) {
    OrgSpongycastleCryptoParamsParametersWithRandom *rParam = (OrgSpongycastleCryptoParamsParametersWithRandom *) param;
    self->random_ = [((OrgSpongycastleCryptoParamsParametersWithRandom *) nil_chk(rParam)) getRandom];
    kParam = (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *) cast_chk([rParam getParameters], [OrgSpongycastleCryptoParamsAsymmetricKeyParameter class]);
  }
  else {
    self->random_ = new_JavaSecuritySecureRandom_init();
    kParam = (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *) cast_chk(param, [OrgSpongycastleCryptoParamsAsymmetricKeyParameter class]);
  }
  if (!([kParam isKindOfClass:[OrgSpongycastleCryptoParamsDHPrivateKeyParameters class]])) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"DHEngine expects DHPrivateKeyParameters");
  }
  self->key_ = (OrgSpongycastleCryptoParamsDHPrivateKeyParameters *) cast_chk(kParam, [OrgSpongycastleCryptoParamsDHPrivateKeyParameters class]);
  self->dhParams_ = [((OrgSpongycastleCryptoParamsDHPrivateKeyParameters *) nil_chk(key_)) getParameters];
}

- (JavaMathBigInteger *)calculateMessage {
  OrgSpongycastleCryptoGeneratorsDHKeyPairGenerator *dhGen = new_OrgSpongycastleCryptoGeneratorsDHKeyPairGenerator_init();
  [dhGen init__WithOrgSpongycastleCryptoKeyGenerationParameters:new_OrgSpongycastleCryptoParamsDHKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoParamsDHParameters_(random_, dhParams_)];
  OrgSpongycastleCryptoAsymmetricCipherKeyPair *dhPair = [dhGen generateKeyPair];
  self->privateValue_ = [((OrgSpongycastleCryptoParamsDHPrivateKeyParameters *) nil_chk(((OrgSpongycastleCryptoParamsDHPrivateKeyParameters *) cast_chk([((OrgSpongycastleCryptoAsymmetricCipherKeyPair *) nil_chk(dhPair)) getPrivate], [OrgSpongycastleCryptoParamsDHPrivateKeyParameters class])))) getX];
  return [((OrgSpongycastleCryptoParamsDHPublicKeyParameters *) nil_chk(((OrgSpongycastleCryptoParamsDHPublicKeyParameters *) cast_chk([dhPair getPublic], [OrgSpongycastleCryptoParamsDHPublicKeyParameters class])))) getY];
}

- (JavaMathBigInteger *)calculateAgreementWithOrgSpongycastleCryptoParamsDHPublicKeyParameters:(OrgSpongycastleCryptoParamsDHPublicKeyParameters *)pub
                                                                        withJavaMathBigInteger:(JavaMathBigInteger *)message {
  if (![((OrgSpongycastleCryptoParamsDHParameters *) nil_chk([((OrgSpongycastleCryptoParamsDHPublicKeyParameters *) nil_chk(pub)) getParameters])) isEqual:dhParams_]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Diffie-Hellman public key has wrong parameters.");
  }
  JavaMathBigInteger *p = [((OrgSpongycastleCryptoParamsDHParameters *) nil_chk(dhParams_)) getP];
  JavaMathBigInteger *peerY = [pub getY];
  if (peerY == nil || [peerY compareToWithId:OrgSpongycastleCryptoAgreementDHAgreement_ONE] <= 0 || [peerY compareToWithId:[((JavaMathBigInteger *) nil_chk(p)) subtractWithJavaMathBigInteger:OrgSpongycastleCryptoAgreementDHAgreement_ONE]] >= 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Diffie-Hellman public key is weak");
  }
  JavaMathBigInteger *result = [peerY modPowWithJavaMathBigInteger:privateValue_ withJavaMathBigInteger:p];
  if ([((JavaMathBigInteger *) nil_chk(result)) isEqual:OrgSpongycastleCryptoAgreementDHAgreement_ONE]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Shared key can't be 1");
  }
  return [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk(message)) modPowWithJavaMathBigInteger:[((OrgSpongycastleCryptoParamsDHPrivateKeyParameters *) nil_chk(key_)) getX] withJavaMathBigInteger:p])) multiplyWithJavaMathBigInteger:result])) modWithJavaMathBigInteger:p];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoCipherParameters:);
  methods[2].selector = @selector(calculateMessage);
  methods[3].selector = @selector(calculateAgreementWithOrgSpongycastleCryptoParamsDHPublicKeyParameters:withJavaMathBigInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "key_", "LOrgSpongycastleCryptoParamsDHPrivateKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dhParams_", "LOrgSpongycastleCryptoParamsDHParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privateValue_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoCipherParameters;", "calculateAgreement", "LOrgSpongycastleCryptoParamsDHPublicKeyParameters;LJavaMathBigInteger;", &OrgSpongycastleCryptoAgreementDHAgreement_ONE };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoAgreementDHAgreement = { "DHAgreement", "org.spongycastle.crypto.agreement", ptrTable, methods, fields, 7, 0x1, 4, 5, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoAgreementDHAgreement;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoAgreementDHAgreement class]) {
    OrgSpongycastleCryptoAgreementDHAgreement_ONE = JavaMathBigInteger_valueOfWithLong_(1);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoAgreementDHAgreement)
  }
}

@end

void OrgSpongycastleCryptoAgreementDHAgreement_init(OrgSpongycastleCryptoAgreementDHAgreement *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoAgreementDHAgreement *new_OrgSpongycastleCryptoAgreementDHAgreement_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoAgreementDHAgreement, init)
}

OrgSpongycastleCryptoAgreementDHAgreement *create_OrgSpongycastleCryptoAgreementDHAgreement_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoAgreementDHAgreement, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoAgreementDHAgreement)
