//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/SM2KeyExchange.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementSM2KeyExchange")
#ifdef RESTRICT_OrgSpongycastleCryptoAgreementSM2KeyExchange
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementSM2KeyExchange 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementSM2KeyExchange 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoAgreementSM2KeyExchange

#if !defined (OrgSpongycastleCryptoAgreementSM2KeyExchange_) && (INCLUDE_ALL_OrgSpongycastleCryptoAgreementSM2KeyExchange || defined(INCLUDE_OrgSpongycastleCryptoAgreementSM2KeyExchange))
#define OrgSpongycastleCryptoAgreementSM2KeyExchange_

@class IOSByteArray;
@class IOSObjectArray;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastleCryptoAgreementSM2KeyExchange : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest;

- (IOSByteArray *)calculateKeyWithInt:(jint)kLen
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)pubParam;

- (IOSObjectArray *)calculateKeyWithConfirmationWithInt:(jint)kLen
                                          withByteArray:(IOSByteArray *)confirmationTag
              withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)pubParam;

- (jint)getFieldSize;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)privParam OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoAgreementSM2KeyExchange)

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementSM2KeyExchange_init(OrgSpongycastleCryptoAgreementSM2KeyExchange *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementSM2KeyExchange *new_OrgSpongycastleCryptoAgreementSM2KeyExchange_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementSM2KeyExchange *create_OrgSpongycastleCryptoAgreementSM2KeyExchange_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementSM2KeyExchange_initWithOrgSpongycastleCryptoDigest_(OrgSpongycastleCryptoAgreementSM2KeyExchange *self, id<OrgSpongycastleCryptoDigest> digest);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementSM2KeyExchange *new_OrgSpongycastleCryptoAgreementSM2KeyExchange_initWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementSM2KeyExchange *create_OrgSpongycastleCryptoAgreementSM2KeyExchange_initWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoAgreementSM2KeyExchange)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementSM2KeyExchange")
