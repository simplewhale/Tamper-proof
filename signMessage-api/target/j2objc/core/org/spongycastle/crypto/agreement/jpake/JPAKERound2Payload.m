//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/jpake/JPAKERound2Payload.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/crypto/agreement/jpake/JPAKERound2Payload.h"
#include "org/spongycastle/crypto/agreement/jpake/JPAKEUtil.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload () {
 @public
  NSString *participantId_;
  JavaMathBigInteger *a_;
  IOSObjectArray *knowledgeProofForX2s_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload, participantId_, NSString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload, a_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload, knowledgeProofForX2s_, IOSObjectArray *)

@implementation OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload

- (instancetype)initWithNSString:(NSString *)participantId
          withJavaMathBigInteger:(JavaMathBigInteger *)a
     withJavaMathBigIntegerArray:(IOSObjectArray *)knowledgeProofForX2s {
  OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigIntegerArray_(self, participantId, a, knowledgeProofForX2s);
  return self;
}

- (NSString *)getParticipantId {
  return participantId_;
}

- (JavaMathBigInteger *)getA {
  return a_;
}

- (IOSObjectArray *)getKnowledgeProofForX2s {
  return OrgSpongycastleUtilArrays_copyOfWithJavaMathBigIntegerArray_withInt_(knowledgeProofForX2s_, ((IOSObjectArray *) nil_chk(knowledgeProofForX2s_))->size_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaMathBigInteger:withJavaMathBigIntegerArray:);
  methods[1].selector = @selector(getParticipantId);
  methods[2].selector = @selector(getA);
  methods[3].selector = @selector(getKnowledgeProofForX2s);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "participantId_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "a_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "knowledgeProofForX2s_", "[LJavaMathBigInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaMathBigInteger;[LJavaMathBigInteger;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload = { "JPAKERound2Payload", "org.spongycastle.crypto.agreement.jpake", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload;
}

@end

void OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigIntegerArray_(OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload *self, NSString *participantId, JavaMathBigInteger *a, IOSObjectArray *knowledgeProofForX2s) {
  NSObject_init(self);
  OrgSpongycastleCryptoAgreementJpakeJPAKEUtil_validateNotNullWithId_withNSString_(participantId, @"participantId");
  OrgSpongycastleCryptoAgreementJpakeJPAKEUtil_validateNotNullWithId_withNSString_(a, @"a");
  OrgSpongycastleCryptoAgreementJpakeJPAKEUtil_validateNotNullWithId_withNSString_(knowledgeProofForX2s, @"knowledgeProofForX2s");
  self->participantId_ = participantId;
  self->a_ = a;
  self->knowledgeProofForX2s_ = OrgSpongycastleUtilArrays_copyOfWithJavaMathBigIntegerArray_withInt_(knowledgeProofForX2s, ((IOSObjectArray *) nil_chk(knowledgeProofForX2s))->size_);
}

OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload *new_OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigIntegerArray_(NSString *participantId, JavaMathBigInteger *a, IOSObjectArray *knowledgeProofForX2s) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload, initWithNSString_withJavaMathBigInteger_withJavaMathBigIntegerArray_, participantId, a, knowledgeProofForX2s)
}

OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload *create_OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigIntegerArray_(NSString *participantId, JavaMathBigInteger *a, IOSObjectArray *knowledgeProofForX2s) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload, initWithNSString_withJavaMathBigInteger_withJavaMathBigIntegerArray_, participantId, a, knowledgeProofForX2s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoAgreementJpakeJPAKERound2Payload)
