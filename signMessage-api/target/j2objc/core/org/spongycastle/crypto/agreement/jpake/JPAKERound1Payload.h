//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/jpake/JPAKERound1Payload.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload")
#ifdef RESTRICT_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload

#if !defined (OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload_) && (INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload || defined(INCLUDE_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload))
#define OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload_

@class IOSObjectArray;
@class JavaMathBigInteger;

@interface OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)participantId
          withJavaMathBigInteger:(JavaMathBigInteger *)gx1
          withJavaMathBigInteger:(JavaMathBigInteger *)gx2
     withJavaMathBigIntegerArray:(IOSObjectArray *)knowledgeProofForX1
     withJavaMathBigIntegerArray:(IOSObjectArray *)knowledgeProofForX2;

- (JavaMathBigInteger *)getGx1;

- (JavaMathBigInteger *)getGx2;

- (IOSObjectArray *)getKnowledgeProofForX1;

- (IOSObjectArray *)getKnowledgeProofForX2;

- (NSString *)getParticipantId;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload)

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigIntegerArray_withJavaMathBigIntegerArray_(OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload *self, NSString *participantId, JavaMathBigInteger *gx1, JavaMathBigInteger *gx2, IOSObjectArray *knowledgeProofForX1, IOSObjectArray *knowledgeProofForX2);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload *new_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigIntegerArray_withJavaMathBigIntegerArray_(NSString *participantId, JavaMathBigInteger *gx1, JavaMathBigInteger *gx2, IOSObjectArray *knowledgeProofForX1, IOSObjectArray *knowledgeProofForX2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload *create_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigIntegerArray_withJavaMathBigIntegerArray_(NSString *participantId, JavaMathBigInteger *gx1, JavaMathBigInteger *gx2, IOSObjectArray *knowledgeProofForX1, IOSObjectArray *knowledgeProofForX2);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKERound1Payload")
