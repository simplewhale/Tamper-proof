//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/jpake/JPAKEPrimeOrderGroup.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup")
#ifdef RESTRICT_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup

#if !defined (OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_) && (INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup || defined(INCLUDE_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup))
#define OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_

@class JavaMathBigInteger;

@interface OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup : NSObject

#pragma mark Public

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)q
                    withJavaMathBigInteger:(JavaMathBigInteger *)g;

- (JavaMathBigInteger *)getG;

- (JavaMathBigInteger *)getP;

- (JavaMathBigInteger *)getQ;

#pragma mark Package-Private

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)q
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                               withBoolean:(jboolean)skipChecks;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup)

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *self, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *new_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *create_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g);

FOUNDATION_EXPORT void OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *self, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, jboolean skipChecks);

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *new_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, jboolean skipChecks) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup *create_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, jboolean skipChecks);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoAgreementJpakeJPAKEPrimeOrderGroup")
