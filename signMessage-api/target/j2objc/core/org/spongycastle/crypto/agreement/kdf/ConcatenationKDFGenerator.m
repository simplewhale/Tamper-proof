//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/kdf/ConcatenationKDFGenerator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "org/spongycastle/crypto/DerivationParameters.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/OutputLengthException.h"
#include "org/spongycastle/crypto/agreement/kdf/ConcatenationKDFGenerator.h"
#include "org/spongycastle/crypto/params/KDFParameters.h"

@interface OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator () {
 @public
  id<OrgSpongycastleCryptoDigest> digest_;
  IOSByteArray *shared_;
  IOSByteArray *otherInfo_;
  jint hLen_;
}

- (void)ItoOSPWithInt:(jint)i
        withByteArray:(IOSByteArray *)sp;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator, digest_, id<OrgSpongycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator, shared_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator, otherInfo_, IOSByteArray *)

__attribute__((unused)) static void OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_ItoOSPWithInt_withByteArray_(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator *self, jint i, IOSByteArray *sp);

@implementation OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator

- (instancetype)initWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest {
  OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithOrgSpongycastleCryptoDigest_(self, digest);
  return self;
}

- (void)init__WithOrgSpongycastleCryptoDerivationParameters:(id<OrgSpongycastleCryptoDerivationParameters>)param {
  if ([param isKindOfClass:[OrgSpongycastleCryptoParamsKDFParameters class]]) {
    OrgSpongycastleCryptoParamsKDFParameters *p = (OrgSpongycastleCryptoParamsKDFParameters *) param;
    shared_ = [((OrgSpongycastleCryptoParamsKDFParameters *) nil_chk(p)) getSharedSecret];
    otherInfo_ = [p getIV];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"KDF parameters required for generator");
  }
}

- (id<OrgSpongycastleCryptoDigest>)getDigest {
  return digest_;
}

- (void)ItoOSPWithInt:(jint)i
        withByteArray:(IOSByteArray *)sp {
  OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_ItoOSPWithInt_withByteArray_(self, i, sp);
}

- (jint)generateBytesWithByteArray:(IOSByteArray *)outArg
                           withInt:(jint)outOff
                           withInt:(jint)len {
  if ((((IOSByteArray *) nil_chk(outArg))->size_ - len) < outOff) {
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too small");
  }
  IOSByteArray *hashBuf = [IOSByteArray newArrayWithLength:hLen_];
  IOSByteArray *C = [IOSByteArray newArrayWithLength:4];
  jint counter = 1;
  jint outputLen = 0;
  [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) reset];
  if (len > hLen_) {
    do {
      OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_ItoOSPWithInt_withByteArray_(self, counter, C);
      [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:C withInt:0 withInt:C->size_];
      [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:shared_ withInt:0 withInt:((IOSByteArray *) nil_chk(shared_))->size_];
      [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:otherInfo_ withInt:0 withInt:((IOSByteArray *) nil_chk(otherInfo_))->size_];
      [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) doFinalWithByteArray:hashBuf withInt:0];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(hashBuf, 0, outArg, outOff + outputLen, hLen_);
      outputLen += hLen_;
    }
    while ((counter++) < (len / hLen_));
  }
  if (outputLen < len) {
    OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_ItoOSPWithInt_withByteArray_(self, counter, C);
    [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:C withInt:0 withInt:C->size_];
    [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:shared_ withInt:0 withInt:((IOSByteArray *) nil_chk(shared_))->size_];
    [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:otherInfo_ withInt:0 withInt:((IOSByteArray *) nil_chk(otherInfo_))->size_];
    [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest_)) doFinalWithByteArray:hashBuf withInt:0];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(hashBuf, 0, outArg, outOff + outputLen, len - outputLen);
  }
  return len;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoDigest;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 6, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoDigest:);
  methods[1].selector = @selector(init__WithOrgSpongycastleCryptoDerivationParameters:);
  methods[2].selector = @selector(getDigest);
  methods[3].selector = @selector(ItoOSPWithInt:withByteArray:);
  methods[4].selector = @selector(generateBytesWithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LOrgSpongycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "shared_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "otherInfo_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hLen_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoDigest;", "init", "LOrgSpongycastleCryptoDerivationParameters;", "ItoOSP", "I[B", "generateBytes", "[BII", "LOrgSpongycastleCryptoDataLengthException;LJavaLangIllegalArgumentException;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator = { "ConcatenationKDFGenerator", "org.spongycastle.crypto.agreement.kdf", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator;
}

@end

void OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithOrgSpongycastleCryptoDigest_(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator *self, id<OrgSpongycastleCryptoDigest> digest) {
  NSObject_init(self);
  self->digest_ = digest;
  self->hLen_ = [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest)) getDigestSize];
}

OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator *new_OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator, initWithOrgSpongycastleCryptoDigest_, digest)
}

OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator *create_OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator, initWithOrgSpongycastleCryptoDigest_, digest)
}

void OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator_ItoOSPWithInt_withByteArray_(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator *self, jint i, IOSByteArray *sp) {
  *IOSByteArray_GetRef(nil_chk(sp), 0) = (jbyte) (JreURShift32(i, 24));
  *IOSByteArray_GetRef(sp, 1) = (jbyte) (JreURShift32(i, 16));
  *IOSByteArray_GetRef(sp, 2) = (jbyte) (JreURShift32(i, 8));
  *IOSByteArray_GetRef(sp, 3) = (jbyte) (JreURShift32(i, 0));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoAgreementKdfConcatenationKDFGenerator)
