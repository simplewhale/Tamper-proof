//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/agreement/srp/SRP6Util.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/spongycastle/crypto/CryptoException.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/agreement/srp/SRP6Util.h"
#include "org/spongycastle/util/BigIntegers.h"

@interface OrgSpongycastleCryptoAgreementSrpSRP6Util ()

+ (JavaMathBigInteger *)hashPaddedTripletWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)N
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)n1
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)n2
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)n3;

+ (JavaMathBigInteger *)hashPaddedPairWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                               withJavaMathBigInteger:(JavaMathBigInteger *)N
                                               withJavaMathBigInteger:(JavaMathBigInteger *)n1
                                               withJavaMathBigInteger:(JavaMathBigInteger *)n2;

+ (IOSByteArray *)getPaddedWithJavaMathBigInteger:(JavaMathBigInteger *)n
                                          withInt:(jint)length;

@end

inline JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_get_ZERO(void);
inline JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_set_ZERO(JavaMathBigInteger *value);
static JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_ZERO;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCryptoAgreementSrpSRP6Util, ZERO, JavaMathBigInteger *)

inline JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_get_ONE(void);
inline JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_set_ONE(JavaMathBigInteger *value);
static JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_ONE;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCryptoAgreementSrpSRP6Util, ONE, JavaMathBigInteger *)

__attribute__((unused)) static JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedTripletWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *n1, JavaMathBigInteger *n2, JavaMathBigInteger *n3);

__attribute__((unused)) static JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedPairWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *n1, JavaMathBigInteger *n2);

__attribute__((unused)) static IOSByteArray *OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(JavaMathBigInteger *n, jint length);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoAgreementSrpSRP6Util)

@implementation OrgSpongycastleCryptoAgreementSrpSRP6Util

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaMathBigInteger *)calculateKWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                           withJavaMathBigInteger:(JavaMathBigInteger *)N
                                           withJavaMathBigInteger:(JavaMathBigInteger *)g {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateKWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, g);
}

+ (JavaMathBigInteger *)calculateUWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                           withJavaMathBigInteger:(JavaMathBigInteger *)N
                                           withJavaMathBigInteger:(JavaMathBigInteger *)A
                                           withJavaMathBigInteger:(JavaMathBigInteger *)B {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateUWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, A, B);
}

+ (JavaMathBigInteger *)calculateXWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                           withJavaMathBigInteger:(JavaMathBigInteger *)N
                                                    withByteArray:(IOSByteArray *)salt
                                                    withByteArray:(IOSByteArray *)identity
                                                    withByteArray:(IOSByteArray *)password {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateXWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withByteArray_withByteArray_withByteArray_(digest, N, salt, identity, password);
}

+ (JavaMathBigInteger *)generatePrivateValueWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                                     withJavaMathBigInteger:(JavaMathBigInteger *)N
                                                     withJavaMathBigInteger:(JavaMathBigInteger *)g
                                               withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_generatePrivateValueWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaSecuritySecureRandom_(digest, N, g, random);
}

+ (JavaMathBigInteger *)validatePublicValueWithJavaMathBigInteger:(JavaMathBigInteger *)N
                                           withJavaMathBigInteger:(JavaMathBigInteger *)val {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_validatePublicValueWithJavaMathBigInteger_withJavaMathBigInteger_(N, val);
}

+ (JavaMathBigInteger *)calculateM1WithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                            withJavaMathBigInteger:(JavaMathBigInteger *)N
                                            withJavaMathBigInteger:(JavaMathBigInteger *)A
                                            withJavaMathBigInteger:(JavaMathBigInteger *)B
                                            withJavaMathBigInteger:(JavaMathBigInteger *)S {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateM1WithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, A, B, S);
}

+ (JavaMathBigInteger *)calculateM2WithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                            withJavaMathBigInteger:(JavaMathBigInteger *)N
                                            withJavaMathBigInteger:(JavaMathBigInteger *)A
                                            withJavaMathBigInteger:(JavaMathBigInteger *)M1
                                            withJavaMathBigInteger:(JavaMathBigInteger *)S {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateM2WithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, A, M1, S);
}

+ (JavaMathBigInteger *)calculateKeyWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                             withJavaMathBigInteger:(JavaMathBigInteger *)N
                                             withJavaMathBigInteger:(JavaMathBigInteger *)S {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateKeyWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, S);
}

+ (JavaMathBigInteger *)hashPaddedTripletWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)N
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)n1
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)n2
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)n3 {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedTripletWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, n1, n2, n3);
}

+ (JavaMathBigInteger *)hashPaddedPairWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest
                                               withJavaMathBigInteger:(JavaMathBigInteger *)N
                                               withJavaMathBigInteger:(JavaMathBigInteger *)n1
                                               withJavaMathBigInteger:(JavaMathBigInteger *)n2 {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedPairWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, n1, n2);
}

+ (IOSByteArray *)getPaddedWithJavaMathBigInteger:(JavaMathBigInteger *)n
                                          withInt:(jint)length {
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(n, length);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 8, 9, 10, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 13, 12, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 14, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0xa, 15, 12, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0xa, 16, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 17, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(calculateKWithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[2].selector = @selector(calculateUWithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[3].selector = @selector(calculateXWithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withByteArray:withByteArray:withByteArray:);
  methods[4].selector = @selector(generatePrivateValueWithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withJavaMathBigInteger:withJavaSecuritySecureRandom:);
  methods[5].selector = @selector(validatePublicValueWithJavaMathBigInteger:withJavaMathBigInteger:);
  methods[6].selector = @selector(calculateM1WithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[7].selector = @selector(calculateM2WithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[8].selector = @selector(calculateKeyWithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[9].selector = @selector(hashPaddedTripletWithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[10].selector = @selector(hashPaddedPairWithOrgSpongycastleCryptoDigest:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[11].selector = @selector(getPaddedWithJavaMathBigInteger:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0xa, -1, 19, -1, -1 },
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0xa, -1, 20, -1, -1 },
  };
  static const void *ptrTable[] = { "calculateK", "LOrgSpongycastleCryptoDigest;LJavaMathBigInteger;LJavaMathBigInteger;", "calculateU", "LOrgSpongycastleCryptoDigest;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;", "calculateX", "LOrgSpongycastleCryptoDigest;LJavaMathBigInteger;[B[B[B", "generatePrivateValue", "LOrgSpongycastleCryptoDigest;LJavaMathBigInteger;LJavaMathBigInteger;LJavaSecuritySecureRandom;", "validatePublicValue", "LJavaMathBigInteger;LJavaMathBigInteger;", "LOrgSpongycastleCryptoCryptoException;", "calculateM1", "LOrgSpongycastleCryptoDigest;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;", "calculateM2", "calculateKey", "hashPaddedTriplet", "hashPaddedPair", "getPadded", "LJavaMathBigInteger;I", &OrgSpongycastleCryptoAgreementSrpSRP6Util_ZERO, &OrgSpongycastleCryptoAgreementSrpSRP6Util_ONE };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoAgreementSrpSRP6Util = { "SRP6Util", "org.spongycastle.crypto.agreement.srp", ptrTable, methods, fields, 7, 0x1, 12, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoAgreementSrpSRP6Util;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoAgreementSrpSRP6Util class]) {
    OrgSpongycastleCryptoAgreementSrpSRP6Util_ZERO = JavaMathBigInteger_valueOfWithLong_(0);
    OrgSpongycastleCryptoAgreementSrpSRP6Util_ONE = JavaMathBigInteger_valueOfWithLong_(1);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoAgreementSrpSRP6Util)
  }
}

@end

void OrgSpongycastleCryptoAgreementSrpSRP6Util_init(OrgSpongycastleCryptoAgreementSrpSRP6Util *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoAgreementSrpSRP6Util *new_OrgSpongycastleCryptoAgreementSrpSRP6Util_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoAgreementSrpSRP6Util, init)
}

OrgSpongycastleCryptoAgreementSrpSRP6Util *create_OrgSpongycastleCryptoAgreementSrpSRP6Util_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoAgreementSrpSRP6Util, init)
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateKWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *g) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedPairWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, N, g);
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateUWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *A, JavaMathBigInteger *B) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  return OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedPairWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, A, B);
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateXWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withByteArray_withByteArray_withByteArray_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, IOSByteArray *salt, IOSByteArray *identity, IOSByteArray *password) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  IOSByteArray *output = [IOSByteArray newArrayWithLength:[((id<OrgSpongycastleCryptoDigest>) nil_chk(digest)) getDigestSize]];
  [digest updateWithByteArray:identity withInt:0 withInt:((IOSByteArray *) nil_chk(identity))->size_];
  [digest updateWithByte:(jbyte) ':'];
  [digest updateWithByteArray:password withInt:0 withInt:((IOSByteArray *) nil_chk(password))->size_];
  [digest doFinalWithByteArray:output withInt:0];
  [digest updateWithByteArray:salt withInt:0 withInt:((IOSByteArray *) nil_chk(salt))->size_];
  [digest updateWithByteArray:output withInt:0 withInt:output->size_];
  [digest doFinalWithByteArray:output withInt:0];
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, output);
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_generatePrivateValueWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaSecuritySecureRandom_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *g, JavaSecuritySecureRandom *random) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  jint minBits = JavaLangMath_minWithInt_withInt_(256, [((JavaMathBigInteger *) nil_chk(N)) bitLength] / 2);
  JavaMathBigInteger *min = [((JavaMathBigInteger *) nil_chk(OrgSpongycastleCryptoAgreementSrpSRP6Util_ONE)) shiftLeftWithInt:minBits - 1];
  JavaMathBigInteger *max = [N subtractWithJavaMathBigInteger:OrgSpongycastleCryptoAgreementSrpSRP6Util_ONE];
  return OrgSpongycastleUtilBigIntegers_createRandomInRangeWithJavaMathBigInteger_withJavaMathBigInteger_withJavaSecuritySecureRandom_(min, max, random);
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_validatePublicValueWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *N, JavaMathBigInteger *val) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  val = [((JavaMathBigInteger *) nil_chk(val)) modWithJavaMathBigInteger:N];
  if ([((JavaMathBigInteger *) nil_chk(val)) isEqual:OrgSpongycastleCryptoAgreementSrpSRP6Util_ZERO]) {
    @throw new_OrgSpongycastleCryptoCryptoException_initWithNSString_(@"Invalid public value: 0");
  }
  return val;
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateM1WithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *A, JavaMathBigInteger *B, JavaMathBigInteger *S) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  JavaMathBigInteger *M1 = OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedTripletWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, A, B, S);
  return M1;
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateM2WithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *A, JavaMathBigInteger *M1, JavaMathBigInteger *S) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  JavaMathBigInteger *M2 = OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedTripletWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(digest, N, A, M1, S);
  return M2;
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_calculateKeyWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *S) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  jint padLength = ([((JavaMathBigInteger *) nil_chk(N)) bitLength] + 7) / 8;
  IOSByteArray *_S = OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(S, padLength);
  [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest)) updateWithByteArray:_S withInt:0 withInt:((IOSByteArray *) nil_chk(_S))->size_];
  IOSByteArray *output = [IOSByteArray newArrayWithLength:[digest getDigestSize]];
  [digest doFinalWithByteArray:output withInt:0];
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, output);
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedTripletWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *n1, JavaMathBigInteger *n2, JavaMathBigInteger *n3) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  jint padLength = ([((JavaMathBigInteger *) nil_chk(N)) bitLength] + 7) / 8;
  IOSByteArray *n1_bytes = OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(n1, padLength);
  IOSByteArray *n2_bytes = OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(n2, padLength);
  IOSByteArray *n3_bytes = OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(n3, padLength);
  [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest)) updateWithByteArray:n1_bytes withInt:0 withInt:((IOSByteArray *) nil_chk(n1_bytes))->size_];
  [digest updateWithByteArray:n2_bytes withInt:0 withInt:((IOSByteArray *) nil_chk(n2_bytes))->size_];
  [digest updateWithByteArray:n3_bytes withInt:0 withInt:((IOSByteArray *) nil_chk(n3_bytes))->size_];
  IOSByteArray *output = [IOSByteArray newArrayWithLength:[digest getDigestSize]];
  [digest doFinalWithByteArray:output withInt:0];
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, output);
}

JavaMathBigInteger *OrgSpongycastleCryptoAgreementSrpSRP6Util_hashPaddedPairWithOrgSpongycastleCryptoDigest_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleCryptoDigest> digest, JavaMathBigInteger *N, JavaMathBigInteger *n1, JavaMathBigInteger *n2) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  jint padLength = ([((JavaMathBigInteger *) nil_chk(N)) bitLength] + 7) / 8;
  IOSByteArray *n1_bytes = OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(n1, padLength);
  IOSByteArray *n2_bytes = OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(n2, padLength);
  [((id<OrgSpongycastleCryptoDigest>) nil_chk(digest)) updateWithByteArray:n1_bytes withInt:0 withInt:((IOSByteArray *) nil_chk(n1_bytes))->size_];
  [digest updateWithByteArray:n2_bytes withInt:0 withInt:((IOSByteArray *) nil_chk(n2_bytes))->size_];
  IOSByteArray *output = [IOSByteArray newArrayWithLength:[digest getDigestSize]];
  [digest doFinalWithByteArray:output withInt:0];
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, output);
}

IOSByteArray *OrgSpongycastleCryptoAgreementSrpSRP6Util_getPaddedWithJavaMathBigInteger_withInt_(JavaMathBigInteger *n, jint length) {
  OrgSpongycastleCryptoAgreementSrpSRP6Util_initialize();
  IOSByteArray *bs = OrgSpongycastleUtilBigIntegers_asUnsignedByteArrayWithJavaMathBigInteger_(n);
  if (((IOSByteArray *) nil_chk(bs))->size_ < length) {
    IOSByteArray *tmp = [IOSByteArray newArrayWithLength:length];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bs, 0, tmp, length - bs->size_, bs->size_);
    bs = tmp;
  }
  return bs;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoAgreementSrpSRP6Util)
