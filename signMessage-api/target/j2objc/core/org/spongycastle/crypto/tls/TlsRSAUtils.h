//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsRSAUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSAUtils")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsRSAUtils
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSAUtils 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSAUtils 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsRSAUtils

#if !defined (OrgSpongycastleCryptoTlsTlsRSAUtils_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSAUtils || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsRSAUtils))
#define OrgSpongycastleCryptoTlsTlsRSAUtils_

@class IOSByteArray;
@class JavaIoOutputStream;
@class OrgSpongycastleCryptoParamsRSAKeyParameters;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsTlsRSAUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSByteArray *)generateEncryptedPreMasterSecretWithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context
                                         withOrgSpongycastleCryptoParamsRSAKeyParameters:(OrgSpongycastleCryptoParamsRSAKeyParameters *)rsaServerPublicKey
                                                                  withJavaIoOutputStream:(JavaIoOutputStream *)output;

+ (IOSByteArray *)safeDecryptPreMasterSecretWithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context
                                   withOrgSpongycastleCryptoParamsRSAKeyParameters:(OrgSpongycastleCryptoParamsRSAKeyParameters *)rsaServerPrivateKey
                                                                     withByteArray:(IOSByteArray *)encryptedPreMasterSecret;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsRSAUtils)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsRSAUtils_init(OrgSpongycastleCryptoTlsTlsRSAUtils *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsRSAUtils *new_OrgSpongycastleCryptoTlsTlsRSAUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsRSAUtils *create_OrgSpongycastleCryptoTlsTlsRSAUtils_init(void);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoTlsTlsRSAUtils_generateEncryptedPreMasterSecretWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoParamsRSAKeyParameters_withJavaIoOutputStream_(id<OrgSpongycastleCryptoTlsTlsContext> context, OrgSpongycastleCryptoParamsRSAKeyParameters *rsaServerPublicKey, JavaIoOutputStream *output);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoTlsTlsRSAUtils_safeDecryptPreMasterSecretWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoParamsRSAKeyParameters_withByteArray_(id<OrgSpongycastleCryptoTlsTlsContext> context, OrgSpongycastleCryptoParamsRSAKeyParameters *rsaServerPrivateKey, IOSByteArray *encryptedPreMasterSecret);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsRSAUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSAUtils")
