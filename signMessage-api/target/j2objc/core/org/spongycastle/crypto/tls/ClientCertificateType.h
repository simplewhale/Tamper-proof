//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/ClientCertificateType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsClientCertificateType")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsClientCertificateType
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsClientCertificateType 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsClientCertificateType 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsClientCertificateType

#if !defined (OrgSpongycastleCryptoTlsClientCertificateType_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsClientCertificateType || defined(INCLUDE_OrgSpongycastleCryptoTlsClientCertificateType))
#define OrgSpongycastleCryptoTlsClientCertificateType_

@interface OrgSpongycastleCryptoTlsClientCertificateType : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsClientCertificateType)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_rsa_sign(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_rsa_sign 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, rsa_sign, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_dss_sign(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_dss_sign 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, dss_sign, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_rsa_fixed_dh(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_rsa_fixed_dh 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, rsa_fixed_dh, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_dss_fixed_dh(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_dss_fixed_dh 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, dss_fixed_dh, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_rsa_ephemeral_dh_RESERVED(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_rsa_ephemeral_dh_RESERVED 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, rsa_ephemeral_dh_RESERVED, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_dss_ephemeral_dh_RESERVED(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_dss_ephemeral_dh_RESERVED 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, dss_ephemeral_dh_RESERVED, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_fortezza_dms_RESERVED(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_fortezza_dms_RESERVED 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, fortezza_dms_RESERVED, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_ecdsa_sign(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_ecdsa_sign 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, ecdsa_sign, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_rsa_fixed_ecdh(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_rsa_fixed_ecdh 65
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, rsa_fixed_ecdh, jshort)

inline jshort OrgSpongycastleCryptoTlsClientCertificateType_get_ecdsa_fixed_ecdh(void);
#define OrgSpongycastleCryptoTlsClientCertificateType_ecdsa_fixed_ecdh 66
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientCertificateType, ecdsa_fixed_ecdh, jshort)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsClientCertificateType_init(OrgSpongycastleCryptoTlsClientCertificateType *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsClientCertificateType *new_OrgSpongycastleCryptoTlsClientCertificateType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsClientCertificateType *create_OrgSpongycastleCryptoTlsClientCertificateType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsClientCertificateType)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsClientCertificateType")
