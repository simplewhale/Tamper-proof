//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/DTLSEpoch.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/crypto/tls/DTLSEpoch.h"
#include "org/spongycastle/crypto/tls/DTLSReplayWindow.h"
#include "org/spongycastle/crypto/tls/TlsCipher.h"

@interface OrgSpongycastleCryptoTlsDTLSEpoch () {
 @public
  OrgSpongycastleCryptoTlsDTLSReplayWindow *replayWindow_;
  jint epoch_;
  id<OrgSpongycastleCryptoTlsTlsCipher> cipher_;
  jlong sequenceNumber_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDTLSEpoch, replayWindow_, OrgSpongycastleCryptoTlsDTLSReplayWindow *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDTLSEpoch, cipher_, id<OrgSpongycastleCryptoTlsTlsCipher>)

@implementation OrgSpongycastleCryptoTlsDTLSEpoch

- (instancetype)initWithInt:(jint)epoch
withOrgSpongycastleCryptoTlsTlsCipher:(id<OrgSpongycastleCryptoTlsTlsCipher>)cipher {
  OrgSpongycastleCryptoTlsDTLSEpoch_initWithInt_withOrgSpongycastleCryptoTlsTlsCipher_(self, epoch, cipher);
  return self;
}

- (jlong)allocateSequenceNumber {
  return sequenceNumber_++;
}

- (id<OrgSpongycastleCryptoTlsTlsCipher>)getCipher {
  return cipher_;
}

- (jint)getEpoch {
  return epoch_;
}

- (OrgSpongycastleCryptoTlsDTLSReplayWindow *)getReplayWindow {
  return replayWindow_;
}

- (jlong)getSequenceNumber {
  return sequenceNumber_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsTlsCipher;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsDTLSReplayWindow;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withOrgSpongycastleCryptoTlsTlsCipher:);
  methods[1].selector = @selector(allocateSequenceNumber);
  methods[2].selector = @selector(getCipher);
  methods[3].selector = @selector(getEpoch);
  methods[4].selector = @selector(getReplayWindow);
  methods[5].selector = @selector(getSequenceNumber);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "replayWindow_", "LOrgSpongycastleCryptoTlsDTLSReplayWindow;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "epoch_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cipher_", "LOrgSpongycastleCryptoTlsTlsCipher;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sequenceNumber_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILOrgSpongycastleCryptoTlsTlsCipher;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsDTLSEpoch = { "DTLSEpoch", "org.spongycastle.crypto.tls", ptrTable, methods, fields, 7, 0x0, 6, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsDTLSEpoch;
}

@end

void OrgSpongycastleCryptoTlsDTLSEpoch_initWithInt_withOrgSpongycastleCryptoTlsTlsCipher_(OrgSpongycastleCryptoTlsDTLSEpoch *self, jint epoch, id<OrgSpongycastleCryptoTlsTlsCipher> cipher) {
  NSObject_init(self);
  self->replayWindow_ = new_OrgSpongycastleCryptoTlsDTLSReplayWindow_init();
  self->sequenceNumber_ = 0;
  if (epoch < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'epoch' must be >= 0");
  }
  if (cipher == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'cipher' cannot be null");
  }
  self->epoch_ = epoch;
  self->cipher_ = cipher;
}

OrgSpongycastleCryptoTlsDTLSEpoch *new_OrgSpongycastleCryptoTlsDTLSEpoch_initWithInt_withOrgSpongycastleCryptoTlsTlsCipher_(jint epoch, id<OrgSpongycastleCryptoTlsTlsCipher> cipher) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsDTLSEpoch, initWithInt_withOrgSpongycastleCryptoTlsTlsCipher_, epoch, cipher)
}

OrgSpongycastleCryptoTlsDTLSEpoch *create_OrgSpongycastleCryptoTlsDTLSEpoch_initWithInt_withOrgSpongycastleCryptoTlsTlsCipher_(jint epoch, id<OrgSpongycastleCryptoTlsTlsCipher> cipher) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsDTLSEpoch, initWithInt_withOrgSpongycastleCryptoTlsTlsCipher_, epoch, cipher)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsDTLSEpoch)
