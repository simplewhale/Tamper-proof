//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/SecurityParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSecurityParameters")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsSecurityParameters
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSecurityParameters 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSecurityParameters 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsSecurityParameters

#if !defined (OrgSpongycastleCryptoTlsSecurityParameters_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsSecurityParameters || defined(INCLUDE_OrgSpongycastleCryptoTlsSecurityParameters))
#define OrgSpongycastleCryptoTlsSecurityParameters_

@class IOSByteArray;

@interface OrgSpongycastleCryptoTlsSecurityParameters : NSObject {
 @public
  jint entity_;
  jint cipherSuite_;
  jshort compressionAlgorithm_;
  jint prfAlgorithm_;
  jint verifyDataLength_;
  IOSByteArray *masterSecret_;
  IOSByteArray *clientRandom_;
  IOSByteArray *serverRandom_;
  IOSByteArray *sessionHash_;
  IOSByteArray *pskIdentity_;
  IOSByteArray *srpIdentity_;
  jshort maxFragmentLength_;
  jboolean truncatedHMac_;
  jboolean encryptThenMAC_;
  jboolean extendedMasterSecret_;
}

#pragma mark Public

- (instancetype)init;

- (jint)getCipherSuite;

- (IOSByteArray *)getClientRandom;

- (jshort)getCompressionAlgorithm;

- (jint)getEntity;

- (IOSByteArray *)getMasterSecret;

- (jint)getPrfAlgorithm;

- (IOSByteArray *)getPskIdentity;

- (IOSByteArray *)getPSKIdentity;

- (IOSByteArray *)getServerRandom;

- (IOSByteArray *)getSessionHash;

- (IOSByteArray *)getSRPIdentity;

- (jint)getVerifyDataLength;

#pragma mark Package-Private

- (void)clear;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsSecurityParameters)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSecurityParameters, masterSecret_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSecurityParameters, clientRandom_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSecurityParameters, serverRandom_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSecurityParameters, sessionHash_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSecurityParameters, pskIdentity_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSecurityParameters, srpIdentity_, IOSByteArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsSecurityParameters_init(OrgSpongycastleCryptoTlsSecurityParameters *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSecurityParameters *new_OrgSpongycastleCryptoTlsSecurityParameters_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSecurityParameters *create_OrgSpongycastleCryptoTlsSecurityParameters_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsSecurityParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSecurityParameters")
