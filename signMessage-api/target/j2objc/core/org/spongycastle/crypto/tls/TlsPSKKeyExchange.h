//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsPSKKeyExchange.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsPSKKeyExchange")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsPSKKeyExchange
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsPSKKeyExchange 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsPSKKeyExchange 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsPSKKeyExchange

#if !defined (OrgSpongycastleCryptoTlsTlsPSKKeyExchange_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsPSKKeyExchange || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsPSKKeyExchange))
#define OrgSpongycastleCryptoTlsTlsPSKKeyExchange_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsKeyExchange 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsKeyExchange 1
#include "org/spongycastle/crypto/tls/AbstractTlsKeyExchange.h"

@class IOSByteArray;
@class IOSIntArray;
@class IOSShortArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaUtilVector;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@class OrgSpongycastleCryptoParamsDHParameters;
@class OrgSpongycastleCryptoParamsDHPrivateKeyParameters;
@class OrgSpongycastleCryptoParamsDHPublicKeyParameters;
@class OrgSpongycastleCryptoParamsECPrivateKeyParameters;
@class OrgSpongycastleCryptoParamsECPublicKeyParameters;
@class OrgSpongycastleCryptoParamsRSAKeyParameters;
@class OrgSpongycastleCryptoTlsCertificate;
@class OrgSpongycastleCryptoTlsCertificateRequest;
@protocol OrgSpongycastleCryptoTlsTlsCredentials;
@protocol OrgSpongycastleCryptoTlsTlsEncryptionCredentials;
@protocol OrgSpongycastleCryptoTlsTlsPSKIdentity;
@protocol OrgSpongycastleCryptoTlsTlsPSKIdentityManager;

@interface OrgSpongycastleCryptoTlsTlsPSKKeyExchange : OrgSpongycastleCryptoTlsAbstractTlsKeyExchange {
 @public
  id<OrgSpongycastleCryptoTlsTlsPSKIdentity> pskIdentity_;
  id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager_;
  OrgSpongycastleCryptoParamsDHParameters *dhParameters_;
  IOSIntArray *namedCurves_;
  IOSShortArray *clientECPointFormats_;
  IOSShortArray *serverECPointFormats_;
  IOSByteArray *psk_identity_hint_;
  IOSByteArray *psk_;
  OrgSpongycastleCryptoParamsDHPrivateKeyParameters *dhAgreePrivateKey_;
  OrgSpongycastleCryptoParamsDHPublicKeyParameters *dhAgreePublicKey_;
  OrgSpongycastleCryptoParamsECPrivateKeyParameters *ecAgreePrivateKey_;
  OrgSpongycastleCryptoParamsECPublicKeyParameters *ecAgreePublicKey_;
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter *serverPublicKey_;
  OrgSpongycastleCryptoParamsRSAKeyParameters *rsaServerPublicKey_;
  id<OrgSpongycastleCryptoTlsTlsEncryptionCredentials> serverCredentials_;
  IOSByteArray *premasterSecret_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)keyExchange
         withJavaUtilVector:(JavaUtilVector *)supportedSignatureAlgorithms
withOrgSpongycastleCryptoTlsTlsPSKIdentity:(id<OrgSpongycastleCryptoTlsTlsPSKIdentity>)pskIdentity
withOrgSpongycastleCryptoTlsTlsPSKIdentityManager:(id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager>)pskIdentityManager
withOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)dhParameters
               withIntArray:(IOSIntArray *)namedCurves
             withShortArray:(IOSShortArray *)clientECPointFormats
             withShortArray:(IOSShortArray *)serverECPointFormats;

- (void)generateClientKeyExchangeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (IOSByteArray *)generatePremasterSecret;

- (IOSByteArray *)generateServerKeyExchange;

- (void)processClientCredentialsWithOrgSpongycastleCryptoTlsTlsCredentials:(id<OrgSpongycastleCryptoTlsTlsCredentials>)clientCredentials;

- (void)processClientKeyExchangeWithJavaIoInputStream:(JavaIoInputStream *)input;

- (void)processServerCertificateWithOrgSpongycastleCryptoTlsCertificate:(OrgSpongycastleCryptoTlsCertificate *)serverCertificate;

- (void)processServerCredentialsWithOrgSpongycastleCryptoTlsTlsCredentials:(id<OrgSpongycastleCryptoTlsTlsCredentials>)serverCredentials;

- (void)processServerKeyExchangeWithJavaIoInputStream:(JavaIoInputStream *)input;

- (jboolean)requiresServerKeyExchange;

- (void)skipServerCredentials;

- (void)validateCertificateRequestWithOrgSpongycastleCryptoTlsCertificateRequest:(OrgSpongycastleCryptoTlsCertificateRequest *)certificateRequest;

#pragma mark Protected

- (IOSByteArray *)generateOtherSecretWithInt:(jint)pskLength;

- (OrgSpongycastleCryptoParamsRSAKeyParameters *)validateRSAPublicKeyWithOrgSpongycastleCryptoParamsRSAKeyParameters:(OrgSpongycastleCryptoParamsRSAKeyParameters *)key;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0
         withJavaUtilVector:(JavaUtilVector *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsPSKKeyExchange)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, pskIdentity_, id<OrgSpongycastleCryptoTlsTlsPSKIdentity>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, pskIdentityManager_, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, dhParameters_, OrgSpongycastleCryptoParamsDHParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, namedCurves_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, clientECPointFormats_, IOSShortArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, serverECPointFormats_, IOSShortArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, psk_identity_hint_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, psk_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, dhAgreePrivateKey_, OrgSpongycastleCryptoParamsDHPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, dhAgreePublicKey_, OrgSpongycastleCryptoParamsDHPublicKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, ecAgreePrivateKey_, OrgSpongycastleCryptoParamsECPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, ecAgreePublicKey_, OrgSpongycastleCryptoParamsECPublicKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, serverPublicKey_, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, rsaServerPublicKey_, OrgSpongycastleCryptoParamsRSAKeyParameters *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, serverCredentials_, id<OrgSpongycastleCryptoTlsTlsEncryptionCredentials>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange, premasterSecret_, IOSByteArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsPSKKeyExchange_initWithInt_withJavaUtilVector_withOrgSpongycastleCryptoTlsTlsPSKIdentity_withOrgSpongycastleCryptoTlsTlsPSKIdentityManager_withOrgSpongycastleCryptoParamsDHParameters_withIntArray_withShortArray_withShortArray_(OrgSpongycastleCryptoTlsTlsPSKKeyExchange *self, jint keyExchange, JavaUtilVector *supportedSignatureAlgorithms, id<OrgSpongycastleCryptoTlsTlsPSKIdentity> pskIdentity, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager, OrgSpongycastleCryptoParamsDHParameters *dhParameters, IOSIntArray *namedCurves, IOSShortArray *clientECPointFormats, IOSShortArray *serverECPointFormats);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsPSKKeyExchange *new_OrgSpongycastleCryptoTlsTlsPSKKeyExchange_initWithInt_withJavaUtilVector_withOrgSpongycastleCryptoTlsTlsPSKIdentity_withOrgSpongycastleCryptoTlsTlsPSKIdentityManager_withOrgSpongycastleCryptoParamsDHParameters_withIntArray_withShortArray_withShortArray_(jint keyExchange, JavaUtilVector *supportedSignatureAlgorithms, id<OrgSpongycastleCryptoTlsTlsPSKIdentity> pskIdentity, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager, OrgSpongycastleCryptoParamsDHParameters *dhParameters, IOSIntArray *namedCurves, IOSShortArray *clientECPointFormats, IOSShortArray *serverECPointFormats) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsPSKKeyExchange *create_OrgSpongycastleCryptoTlsTlsPSKKeyExchange_initWithInt_withJavaUtilVector_withOrgSpongycastleCryptoTlsTlsPSKIdentity_withOrgSpongycastleCryptoTlsTlsPSKIdentityManager_withOrgSpongycastleCryptoParamsDHParameters_withIntArray_withShortArray_withShortArray_(jint keyExchange, JavaUtilVector *supportedSignatureAlgorithms, id<OrgSpongycastleCryptoTlsTlsPSKIdentity> pskIdentity, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager, OrgSpongycastleCryptoParamsDHParameters *dhParameters, IOSIntArray *namedCurves, IOSShortArray *clientECPointFormats, IOSShortArray *serverECPointFormats);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsPSKKeyExchange)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsPSKKeyExchange")
