//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsDHUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsDHUtils")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsDHUtils
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsDHUtils 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsDHUtils 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsDHUtils

#if !defined (OrgSpongycastleCryptoTlsTlsDHUtils_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsDHUtils || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsDHUtils))
#define OrgSpongycastleCryptoTlsTlsDHUtils_

@class IOSByteArray;
@class IOSIntArray;
@class IOSShortArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaLangInteger;
@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;
@class JavaUtilHashtable;
@class OrgSpongycastleCryptoAsymmetricCipherKeyPair;
@class OrgSpongycastleCryptoParamsDHParameters;
@class OrgSpongycastleCryptoParamsDHPrivateKeyParameters;
@class OrgSpongycastleCryptoParamsDHPublicKeyParameters;

@interface OrgSpongycastleCryptoTlsTlsDHUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)addNegotiatedDHEGroupsClientExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions
                                                    withShortArray:(IOSShortArray *)dheGroups;

+ (void)addNegotiatedDHEGroupsServerExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions
                                                         withShort:(jshort)dheGroup;

+ (jboolean)areCompatibleParametersWithOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)a
                                   withOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)b;

+ (IOSByteArray *)calculateDHBasicAgreementWithOrgSpongycastleCryptoParamsDHPublicKeyParameters:(OrgSpongycastleCryptoParamsDHPublicKeyParameters *)publicKey
                                          withOrgSpongycastleCryptoParamsDHPrivateKeyParameters:(OrgSpongycastleCryptoParamsDHPrivateKeyParameters *)privateKey;

+ (jboolean)containsDHECipherSuitesWithIntArray:(IOSIntArray *)cipherSuites;

+ (IOSByteArray *)createNegotiatedDHEGroupsClientExtensionWithShortArray:(IOSShortArray *)dheGroups;

+ (IOSByteArray *)createNegotiatedDHEGroupsServerExtensionWithShort:(jshort)dheGroup;

+ (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)generateDHKeyPairWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                                    withOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)dhParams;

+ (OrgSpongycastleCryptoParamsDHPrivateKeyParameters *)generateEphemeralClientKeyExchangeWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                                                          withOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)dhParams
                                                                                               withJavaIoOutputStream:(JavaIoOutputStream *)output;

+ (OrgSpongycastleCryptoParamsDHPrivateKeyParameters *)generateEphemeralServerKeyExchangeWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                                                          withOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)dhParams
                                                                                               withJavaIoOutputStream:(JavaIoOutputStream *)output;

+ (IOSShortArray *)getNegotiatedDHEGroupsClientExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions;

+ (jshort)getNegotiatedDHEGroupsServerExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions;

+ (OrgSpongycastleCryptoParamsDHParameters *)getParametersForDHEGroupWithShort:(jshort)dheGroup;

+ (jboolean)isDHECipherSuiteWithInt:(jint)cipherSuite;

+ (JavaMathBigInteger *)readDHParameterWithJavaIoInputStream:(JavaIoInputStream *)input;

+ (IOSShortArray *)readNegotiatedDHEGroupsClientExtensionWithByteArray:(IOSByteArray *)extensionData;

+ (jshort)readNegotiatedDHEGroupsServerExtensionWithByteArray:(IOSByteArray *)extensionData;

+ (OrgSpongycastleCryptoParamsDHParameters *)validateDHParametersWithOrgSpongycastleCryptoParamsDHParameters:(OrgSpongycastleCryptoParamsDHParameters *)params;

+ (OrgSpongycastleCryptoParamsDHPublicKeyParameters *)validateDHPublicKeyWithOrgSpongycastleCryptoParamsDHPublicKeyParameters:(OrgSpongycastleCryptoParamsDHPublicKeyParameters *)key;

+ (void)writeDHParameterWithJavaMathBigInteger:(JavaMathBigInteger *)x
                        withJavaIoOutputStream:(JavaIoOutputStream *)output;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoTlsTlsDHUtils)

inline JavaMathBigInteger *OrgSpongycastleCryptoTlsTlsDHUtils_get_TWO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaMathBigInteger *OrgSpongycastleCryptoTlsTlsDHUtils_TWO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsTlsDHUtils, TWO, JavaMathBigInteger *)

inline JavaLangInteger *OrgSpongycastleCryptoTlsTlsDHUtils_get_EXT_negotiated_ff_dhe_groups(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaLangInteger *OrgSpongycastleCryptoTlsTlsDHUtils_EXT_negotiated_ff_dhe_groups;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsTlsDHUtils, EXT_negotiated_ff_dhe_groups, JavaLangInteger *)

inline OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_get_draft_ffdhe2432(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_draft_ffdhe2432;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsTlsDHUtils, draft_ffdhe2432, OrgSpongycastleCryptoParamsDHParameters *)

inline OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_get_draft_ffdhe3072(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_draft_ffdhe3072;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsTlsDHUtils, draft_ffdhe3072, OrgSpongycastleCryptoParamsDHParameters *)

inline OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_get_draft_ffdhe4096(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_draft_ffdhe4096;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsTlsDHUtils, draft_ffdhe4096, OrgSpongycastleCryptoParamsDHParameters *)

inline OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_get_draft_ffdhe6144(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_draft_ffdhe6144;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsTlsDHUtils, draft_ffdhe6144, OrgSpongycastleCryptoParamsDHParameters *)

inline OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_get_draft_ffdhe8192(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_draft_ffdhe8192;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsTlsDHUtils, draft_ffdhe8192, OrgSpongycastleCryptoParamsDHParameters *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsDHUtils_init(OrgSpongycastleCryptoTlsTlsDHUtils *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsDHUtils *new_OrgSpongycastleCryptoTlsTlsDHUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsDHUtils *create_OrgSpongycastleCryptoTlsTlsDHUtils_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsDHUtils_addNegotiatedDHEGroupsClientExtensionWithJavaUtilHashtable_withShortArray_(JavaUtilHashtable *extensions, IOSShortArray *dheGroups);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsDHUtils_addNegotiatedDHEGroupsServerExtensionWithJavaUtilHashtable_withShort_(JavaUtilHashtable *extensions, jshort dheGroup);

FOUNDATION_EXPORT IOSShortArray *OrgSpongycastleCryptoTlsTlsDHUtils_getNegotiatedDHEGroupsClientExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions);

FOUNDATION_EXPORT jshort OrgSpongycastleCryptoTlsTlsDHUtils_getNegotiatedDHEGroupsServerExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoTlsTlsDHUtils_createNegotiatedDHEGroupsClientExtensionWithShortArray_(IOSShortArray *dheGroups);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoTlsTlsDHUtils_createNegotiatedDHEGroupsServerExtensionWithShort_(jshort dheGroup);

FOUNDATION_EXPORT IOSShortArray *OrgSpongycastleCryptoTlsTlsDHUtils_readNegotiatedDHEGroupsClientExtensionWithByteArray_(IOSByteArray *extensionData);

FOUNDATION_EXPORT jshort OrgSpongycastleCryptoTlsTlsDHUtils_readNegotiatedDHEGroupsServerExtensionWithByteArray_(IOSByteArray *extensionData);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_getParametersForDHEGroupWithShort_(jshort dheGroup);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoTlsTlsDHUtils_containsDHECipherSuitesWithIntArray_(IOSIntArray *cipherSuites);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoTlsTlsDHUtils_isDHECipherSuiteWithInt_(jint cipherSuite);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoTlsTlsDHUtils_areCompatibleParametersWithOrgSpongycastleCryptoParamsDHParameters_withOrgSpongycastleCryptoParamsDHParameters_(OrgSpongycastleCryptoParamsDHParameters *a, OrgSpongycastleCryptoParamsDHParameters *b);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoTlsTlsDHUtils_calculateDHBasicAgreementWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_withOrgSpongycastleCryptoParamsDHPrivateKeyParameters_(OrgSpongycastleCryptoParamsDHPublicKeyParameters *publicKey, OrgSpongycastleCryptoParamsDHPrivateKeyParameters *privateKey);

FOUNDATION_EXPORT OrgSpongycastleCryptoAsymmetricCipherKeyPair *OrgSpongycastleCryptoTlsTlsDHUtils_generateDHKeyPairWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoParamsDHParameters_(JavaSecuritySecureRandom *random, OrgSpongycastleCryptoParamsDHParameters *dhParams);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHPrivateKeyParameters *OrgSpongycastleCryptoTlsTlsDHUtils_generateEphemeralClientKeyExchangeWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoParamsDHParameters_withJavaIoOutputStream_(JavaSecuritySecureRandom *random, OrgSpongycastleCryptoParamsDHParameters *dhParams, JavaIoOutputStream *output);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHPrivateKeyParameters *OrgSpongycastleCryptoTlsTlsDHUtils_generateEphemeralServerKeyExchangeWithJavaSecuritySecureRandom_withOrgSpongycastleCryptoParamsDHParameters_withJavaIoOutputStream_(JavaSecuritySecureRandom *random, OrgSpongycastleCryptoParamsDHParameters *dhParams, JavaIoOutputStream *output);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHParameters *OrgSpongycastleCryptoTlsTlsDHUtils_validateDHParametersWithOrgSpongycastleCryptoParamsDHParameters_(OrgSpongycastleCryptoParamsDHParameters *params);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsDHPublicKeyParameters *OrgSpongycastleCryptoTlsTlsDHUtils_validateDHPublicKeyWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_(OrgSpongycastleCryptoParamsDHPublicKeyParameters *key);

FOUNDATION_EXPORT JavaMathBigInteger *OrgSpongycastleCryptoTlsTlsDHUtils_readDHParameterWithJavaIoInputStream_(JavaIoInputStream *input);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsDHUtils_writeDHParameterWithJavaMathBigInteger_withJavaIoOutputStream_(JavaMathBigInteger *x, JavaIoOutputStream *output);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsDHUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsDHUtils")
