//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/CombinedHash.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCombinedHash")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsCombinedHash
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCombinedHash 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCombinedHash 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsCombinedHash

#if !defined (OrgSpongycastleCryptoTlsCombinedHash_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsCombinedHash || defined(INCLUDE_OrgSpongycastleCryptoTlsCombinedHash))
#define OrgSpongycastleCryptoTlsCombinedHash_

#define RESTRICT_OrgSpongycastleCryptoTlsTlsHandshakeHash 1
#define INCLUDE_OrgSpongycastleCryptoTlsTlsHandshakeHash 1
#include "org/spongycastle/crypto/tls/TlsHandshakeHash.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoDigest;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsCombinedHash : NSObject < OrgSpongycastleCryptoTlsTlsHandshakeHash > {
 @public
  id<OrgSpongycastleCryptoTlsTlsContext> context_;
  id<OrgSpongycastleCryptoDigest> md5_;
  id<OrgSpongycastleCryptoDigest> sha1_;
}

#pragma mark Public

- (jint)doFinalWithByteArray:(IOSByteArray *)output
                     withInt:(jint)outOff;

- (id<OrgSpongycastleCryptoDigest>)forkPRFHash;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

- (IOSByteArray *)getFinalHashWithShort:(jshort)hashAlgorithm;

- (void)init__WithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context OBJC_METHOD_FAMILY_NONE;

- (id<OrgSpongycastleCryptoTlsTlsHandshakeHash>)notifyPRFDetermined;

- (void)reset;

- (void)sealHashAlgorithms;

- (id<OrgSpongycastleCryptoTlsTlsHandshakeHash>)stopTracking;

- (void)trackHashAlgorithmWithShort:(jshort)hashAlgorithm;

- (void)updateWithByte:(jbyte)input;

- (void)updateWithByteArray:(IOSByteArray *)input
                    withInt:(jint)inOff
                    withInt:(jint)len;

#pragma mark Protected

- (void)ssl3CompleteWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)d
                                      withByteArray:(IOSByteArray *)ipad
                                      withByteArray:(IOSByteArray *)opad
                                            withInt:(jint)padLength;

#pragma mark Package-Private

- (instancetype)init;

- (instancetype)initWithOrgSpongycastleCryptoTlsCombinedHash:(OrgSpongycastleCryptoTlsCombinedHash *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsCombinedHash)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsCombinedHash, context_, id<OrgSpongycastleCryptoTlsTlsContext>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsCombinedHash, md5_, id<OrgSpongycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsCombinedHash, sha1_, id<OrgSpongycastleCryptoDigest>)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsCombinedHash_init(OrgSpongycastleCryptoTlsCombinedHash *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCombinedHash *new_OrgSpongycastleCryptoTlsCombinedHash_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCombinedHash *create_OrgSpongycastleCryptoTlsCombinedHash_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsCombinedHash_initWithOrgSpongycastleCryptoTlsCombinedHash_(OrgSpongycastleCryptoTlsCombinedHash *self, OrgSpongycastleCryptoTlsCombinedHash *t);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCombinedHash *new_OrgSpongycastleCryptoTlsCombinedHash_initWithOrgSpongycastleCryptoTlsCombinedHash_(OrgSpongycastleCryptoTlsCombinedHash *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCombinedHash *create_OrgSpongycastleCryptoTlsCombinedHash_initWithOrgSpongycastleCryptoTlsCombinedHash_(OrgSpongycastleCryptoTlsCombinedHash *t);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsCombinedHash)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCombinedHash")
