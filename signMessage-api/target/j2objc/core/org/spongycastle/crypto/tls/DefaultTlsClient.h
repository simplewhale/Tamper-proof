//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/DefaultTlsClient.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsClient")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsDefaultTlsClient
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsClient 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsClient 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsDefaultTlsClient

#if !defined (OrgSpongycastleCryptoTlsDefaultTlsClient_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsClient || defined(INCLUDE_OrgSpongycastleCryptoTlsDefaultTlsClient))
#define OrgSpongycastleCryptoTlsDefaultTlsClient_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsClient 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsClient 1
#include "org/spongycastle/crypto/tls/AbstractTlsClient.h"

@class IOSIntArray;
@protocol OrgSpongycastleCryptoTlsTlsCipherFactory;
@protocol OrgSpongycastleCryptoTlsTlsKeyExchange;

@interface OrgSpongycastleCryptoTlsDefaultTlsClient : OrgSpongycastleCryptoTlsAbstractTlsClient

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)cipherFactory;

- (IOSIntArray *)getCipherSuites;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)getKeyExchange;

#pragma mark Protected

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createDHEKeyExchangeWithInt:(jint)keyExchange;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createDHKeyExchangeWithInt:(jint)keyExchange;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createECDHEKeyExchangeWithInt:(jint)keyExchange;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createECDHKeyExchangeWithInt:(jint)keyExchange;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createRSAKeyExchange;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsDefaultTlsClient)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsDefaultTlsClient_init(OrgSpongycastleCryptoTlsDefaultTlsClient *self);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsDefaultTlsClient_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_(OrgSpongycastleCryptoTlsDefaultTlsClient *self, id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsDefaultTlsClient)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsClient")
