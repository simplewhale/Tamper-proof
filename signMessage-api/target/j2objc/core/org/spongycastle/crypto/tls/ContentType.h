//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/ContentType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsContentType")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsContentType
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsContentType 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsContentType 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsContentType

#if !defined (OrgSpongycastleCryptoTlsContentType_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsContentType || defined(INCLUDE_OrgSpongycastleCryptoTlsContentType))
#define OrgSpongycastleCryptoTlsContentType_

@interface OrgSpongycastleCryptoTlsContentType : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsContentType)

inline jshort OrgSpongycastleCryptoTlsContentType_get_change_cipher_spec(void);
#define OrgSpongycastleCryptoTlsContentType_change_cipher_spec 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsContentType, change_cipher_spec, jshort)

inline jshort OrgSpongycastleCryptoTlsContentType_get_alert(void);
#define OrgSpongycastleCryptoTlsContentType_alert 21
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsContentType, alert, jshort)

inline jshort OrgSpongycastleCryptoTlsContentType_get_handshake(void);
#define OrgSpongycastleCryptoTlsContentType_handshake 22
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsContentType, handshake, jshort)

inline jshort OrgSpongycastleCryptoTlsContentType_get_application_data(void);
#define OrgSpongycastleCryptoTlsContentType_application_data 23
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsContentType, application_data, jshort)

inline jshort OrgSpongycastleCryptoTlsContentType_get_heartbeat(void);
#define OrgSpongycastleCryptoTlsContentType_heartbeat 24
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsContentType, heartbeat, jshort)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsContentType_init(OrgSpongycastleCryptoTlsContentType *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsContentType *new_OrgSpongycastleCryptoTlsContentType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsContentType *create_OrgSpongycastleCryptoTlsContentType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsContentType)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsContentType")
