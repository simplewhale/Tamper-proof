//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsOutputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsOutputStream")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsOutputStream
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsOutputStream 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsOutputStream 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsOutputStream

#if !defined (OrgSpongycastleCryptoTlsTlsOutputStream_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsOutputStream || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsOutputStream))
#define OrgSpongycastleCryptoTlsTlsOutputStream_

#define RESTRICT_JavaIoOutputStream 1
#define INCLUDE_JavaIoOutputStream 1
#include "java/io/OutputStream.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoTlsTlsProtocol;

@interface OrgSpongycastleCryptoTlsTlsOutputStream : JavaIoOutputStream

#pragma mark Public

- (void)close;

- (void)flush;

- (void)writeWithByteArray:(IOSByteArray *)buf
                   withInt:(jint)offset
                   withInt:(jint)len;

- (void)writeWithInt:(jint)arg0;

#pragma mark Package-Private

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsProtocol:(OrgSpongycastleCryptoTlsTlsProtocol *)handler;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsOutputStream)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsOutputStream_initWithOrgSpongycastleCryptoTlsTlsProtocol_(OrgSpongycastleCryptoTlsTlsOutputStream *self, OrgSpongycastleCryptoTlsTlsProtocol *handler);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsOutputStream *new_OrgSpongycastleCryptoTlsTlsOutputStream_initWithOrgSpongycastleCryptoTlsTlsProtocol_(OrgSpongycastleCryptoTlsTlsProtocol *handler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsOutputStream *create_OrgSpongycastleCryptoTlsTlsOutputStream_initWithOrgSpongycastleCryptoTlsTlsProtocol_(OrgSpongycastleCryptoTlsTlsProtocol *handler);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsOutputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsOutputStream")
