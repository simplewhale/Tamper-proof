//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/DefaultTlsEncryptionCredentials.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials

#if !defined (OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials || defined(INCLUDE_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials))
#define OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsEncryptionCredentials 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsEncryptionCredentials 1
#include "org/spongycastle/crypto/tls/AbstractTlsEncryptionCredentials.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@class OrgSpongycastleCryptoTlsCertificate;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials : OrgSpongycastleCryptoTlsAbstractTlsEncryptionCredentials {
 @public
  id<OrgSpongycastleCryptoTlsTlsContext> context_;
  OrgSpongycastleCryptoTlsCertificate *certificate_;
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateKey_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context
                   withOrgSpongycastleCryptoTlsCertificate:(OrgSpongycastleCryptoTlsCertificate *)certificate
     withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey;

- (IOSByteArray *)decryptPreMasterSecretWithByteArray:(IOSByteArray *)encryptedPreMasterSecret;

- (OrgSpongycastleCryptoTlsCertificate *)getCertificate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials, context_, id<OrgSpongycastleCryptoTlsTlsContext>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials, certificate_, OrgSpongycastleCryptoTlsCertificate *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials, privateKey_, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoTlsCertificate_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials *self, id<OrgSpongycastleCryptoTlsTlsContext> context, OrgSpongycastleCryptoTlsCertificate *certificate, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateKey);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials *new_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoTlsCertificate_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(id<OrgSpongycastleCryptoTlsTlsContext> context, OrgSpongycastleCryptoTlsCertificate *certificate, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials *create_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoTlsCertificate_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(id<OrgSpongycastleCryptoTlsTlsContext> context, OrgSpongycastleCryptoTlsCertificate *certificate, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateKey);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsEncryptionCredentials")
