//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/PSKTlsServer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsPSKTlsServer")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsPSKTlsServer
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsPSKTlsServer 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsPSKTlsServer 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsPSKTlsServer

#if !defined (OrgSpongycastleCryptoTlsPSKTlsServer_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsPSKTlsServer || defined(INCLUDE_OrgSpongycastleCryptoTlsPSKTlsServer))
#define OrgSpongycastleCryptoTlsPSKTlsServer_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsServer 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsServer 1
#include "org/spongycastle/crypto/tls/AbstractTlsServer.h"

@class IOSIntArray;
@class OrgSpongycastleCryptoParamsDHParameters;
@protocol OrgSpongycastleCryptoTlsTlsCipherFactory;
@protocol OrgSpongycastleCryptoTlsTlsCredentials;
@protocol OrgSpongycastleCryptoTlsTlsEncryptionCredentials;
@protocol OrgSpongycastleCryptoTlsTlsKeyExchange;
@protocol OrgSpongycastleCryptoTlsTlsPSKIdentityManager;

@interface OrgSpongycastleCryptoTlsPSKTlsServer : OrgSpongycastleCryptoTlsAbstractTlsServer {
 @public
  id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)cipherFactory
               withOrgSpongycastleCryptoTlsTlsPSKIdentityManager:(id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager>)pskIdentityManager;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsPSKIdentityManager:(id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager>)pskIdentityManager;

- (id<OrgSpongycastleCryptoTlsTlsCredentials>)getCredentials;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)getKeyExchange;

#pragma mark Protected

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createPSKKeyExchangeWithInt:(jint)keyExchange;

- (IOSIntArray *)getCipherSuites;

- (OrgSpongycastleCryptoParamsDHParameters *)getDHParameters;

- (id<OrgSpongycastleCryptoTlsTlsEncryptionCredentials>)getRSAEncryptionCredentials;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsPSKTlsServer)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsPSKTlsServer, pskIdentityManager_, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager>)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsPSKTlsServer_initWithOrgSpongycastleCryptoTlsTlsPSKIdentityManager_(OrgSpongycastleCryptoTlsPSKTlsServer *self, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsPSKTlsServer *new_OrgSpongycastleCryptoTlsPSKTlsServer_initWithOrgSpongycastleCryptoTlsTlsPSKIdentityManager_(id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsPSKTlsServer *create_OrgSpongycastleCryptoTlsPSKTlsServer_initWithOrgSpongycastleCryptoTlsTlsPSKIdentityManager_(id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsPSKTlsServer_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsPSKIdentityManager_(OrgSpongycastleCryptoTlsPSKTlsServer *self, id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsPSKTlsServer *new_OrgSpongycastleCryptoTlsPSKTlsServer_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsPSKIdentityManager_(id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsPSKTlsServer *create_OrgSpongycastleCryptoTlsPSKTlsServer_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsPSKIdentityManager_(id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsPSKIdentityManager> pskIdentityManager);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsPSKTlsServer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsPSKTlsServer")
