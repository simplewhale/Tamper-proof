//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsStreamCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsStreamCipher")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsStreamCipher
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsStreamCipher 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsStreamCipher 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsStreamCipher

#if !defined (OrgSpongycastleCryptoTlsTlsStreamCipher_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsStreamCipher || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsStreamCipher))
#define OrgSpongycastleCryptoTlsTlsStreamCipher_

#define RESTRICT_OrgSpongycastleCryptoTlsTlsCipher 1
#define INCLUDE_OrgSpongycastleCryptoTlsTlsCipher 1
#include "org/spongycastle/crypto/tls/TlsCipher.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoTlsTlsMac;
@protocol OrgSpongycastleCryptoDigest;
@protocol OrgSpongycastleCryptoStreamCipher;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsTlsStreamCipher : NSObject < OrgSpongycastleCryptoTlsTlsCipher > {
 @public
  id<OrgSpongycastleCryptoTlsTlsContext> context_;
  id<OrgSpongycastleCryptoStreamCipher> encryptCipher_;
  id<OrgSpongycastleCryptoStreamCipher> decryptCipher_;
  OrgSpongycastleCryptoTlsTlsMac *writeMac_;
  OrgSpongycastleCryptoTlsTlsMac *readMac_;
  jboolean usesNonce_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context
                     withOrgSpongycastleCryptoStreamCipher:(id<OrgSpongycastleCryptoStreamCipher>)clientWriteCipher
                     withOrgSpongycastleCryptoStreamCipher:(id<OrgSpongycastleCryptoStreamCipher>)serverWriteCipher
                           withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)clientWriteDigest
                           withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)serverWriteDigest
                                                   withInt:(jint)cipherKeySize
                                               withBoolean:(jboolean)usesNonce;

- (IOSByteArray *)decodeCiphertextWithLong:(jlong)seqNo
                                 withShort:(jshort)type
                             withByteArray:(IOSByteArray *)ciphertext
                                   withInt:(jint)offset
                                   withInt:(jint)len;

- (IOSByteArray *)encodePlaintextWithLong:(jlong)seqNo
                                withShort:(jshort)type
                            withByteArray:(IOSByteArray *)plaintext
                                  withInt:(jint)offset
                                  withInt:(jint)len;

- (jint)getPlaintextLimitWithInt:(jint)ciphertextLimit;

#pragma mark Protected

- (void)checkMACWithLong:(jlong)seqNo
               withShort:(jshort)type
           withByteArray:(IOSByteArray *)recBuf
                 withInt:(jint)recStart
                 withInt:(jint)recEnd
           withByteArray:(IOSByteArray *)calcBuf
                 withInt:(jint)calcOff
                 withInt:(jint)calcLen;

- (void)updateIVWithOrgSpongycastleCryptoStreamCipher:(id<OrgSpongycastleCryptoStreamCipher>)cipher
                                          withBoolean:(jboolean)forEncryption
                                             withLong:(jlong)seqNo;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsStreamCipher)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsStreamCipher, context_, id<OrgSpongycastleCryptoTlsTlsContext>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsStreamCipher, encryptCipher_, id<OrgSpongycastleCryptoStreamCipher>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsStreamCipher, decryptCipher_, id<OrgSpongycastleCryptoStreamCipher>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsStreamCipher, writeMac_, OrgSpongycastleCryptoTlsTlsMac *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsStreamCipher, readMac_, OrgSpongycastleCryptoTlsTlsMac *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsStreamCipher_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoStreamCipher_withOrgSpongycastleCryptoStreamCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_withBoolean_(OrgSpongycastleCryptoTlsTlsStreamCipher *self, id<OrgSpongycastleCryptoTlsTlsContext> context, id<OrgSpongycastleCryptoStreamCipher> clientWriteCipher, id<OrgSpongycastleCryptoStreamCipher> serverWriteCipher, id<OrgSpongycastleCryptoDigest> clientWriteDigest, id<OrgSpongycastleCryptoDigest> serverWriteDigest, jint cipherKeySize, jboolean usesNonce);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsStreamCipher *new_OrgSpongycastleCryptoTlsTlsStreamCipher_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoStreamCipher_withOrgSpongycastleCryptoStreamCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_withBoolean_(id<OrgSpongycastleCryptoTlsTlsContext> context, id<OrgSpongycastleCryptoStreamCipher> clientWriteCipher, id<OrgSpongycastleCryptoStreamCipher> serverWriteCipher, id<OrgSpongycastleCryptoDigest> clientWriteDigest, id<OrgSpongycastleCryptoDigest> serverWriteDigest, jint cipherKeySize, jboolean usesNonce) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsStreamCipher *create_OrgSpongycastleCryptoTlsTlsStreamCipher_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoStreamCipher_withOrgSpongycastleCryptoStreamCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_withBoolean_(id<OrgSpongycastleCryptoTlsTlsContext> context, id<OrgSpongycastleCryptoStreamCipher> clientWriteCipher, id<OrgSpongycastleCryptoStreamCipher> serverWriteCipher, id<OrgSpongycastleCryptoDigest> clientWriteDigest, id<OrgSpongycastleCryptoDigest> serverWriteDigest, jint cipherKeySize, jboolean usesNonce);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsStreamCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsStreamCipher")
