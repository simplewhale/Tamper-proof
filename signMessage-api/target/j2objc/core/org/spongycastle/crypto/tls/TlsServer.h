//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsServer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsServer")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsServer
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsServer 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsServer 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsServer

#if !defined (OrgSpongycastleCryptoTlsTlsServer_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsServer || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsServer))
#define OrgSpongycastleCryptoTlsTlsServer_

#define RESTRICT_OrgSpongycastleCryptoTlsTlsPeer 1
#define INCLUDE_OrgSpongycastleCryptoTlsTlsPeer 1
#include "org/spongycastle/crypto/tls/TlsPeer.h"

@class IOSIntArray;
@class IOSShortArray;
@class JavaUtilHashtable;
@class JavaUtilVector;
@class OrgSpongycastleCryptoTlsCertificate;
@class OrgSpongycastleCryptoTlsCertificateRequest;
@class OrgSpongycastleCryptoTlsCertificateStatus;
@class OrgSpongycastleCryptoTlsNewSessionTicket;
@class OrgSpongycastleCryptoTlsProtocolVersion;
@protocol OrgSpongycastleCryptoTlsTlsCredentials;
@protocol OrgSpongycastleCryptoTlsTlsKeyExchange;
@protocol OrgSpongycastleCryptoTlsTlsServerContext;

@protocol OrgSpongycastleCryptoTlsTlsServer < OrgSpongycastleCryptoTlsTlsPeer, JavaObject >

- (void)init__WithOrgSpongycastleCryptoTlsTlsServerContext:(id<OrgSpongycastleCryptoTlsTlsServerContext>)context OBJC_METHOD_FAMILY_NONE;

- (void)notifyClientVersionWithOrgSpongycastleCryptoTlsProtocolVersion:(OrgSpongycastleCryptoTlsProtocolVersion *)clientVersion;

- (void)notifyFallbackWithBoolean:(jboolean)isFallback;

- (void)notifyOfferedCipherSuitesWithIntArray:(IOSIntArray *)offeredCipherSuites;

- (void)notifyOfferedCompressionMethodsWithShortArray:(IOSShortArray *)offeredCompressionMethods;

- (void)processClientExtensionsWithJavaUtilHashtable:(JavaUtilHashtable *)clientExtensions;

- (OrgSpongycastleCryptoTlsProtocolVersion *)getServerVersion;

- (jint)getSelectedCipherSuite;

- (jshort)getSelectedCompressionMethod;

- (JavaUtilHashtable *)getServerExtensions;

- (JavaUtilVector *)getServerSupplementalData;

- (id<OrgSpongycastleCryptoTlsTlsCredentials>)getCredentials;

- (OrgSpongycastleCryptoTlsCertificateStatus *)getCertificateStatus;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)getKeyExchange;

- (OrgSpongycastleCryptoTlsCertificateRequest *)getCertificateRequest;

- (void)processClientSupplementalDataWithJavaUtilVector:(JavaUtilVector *)clientSupplementalData;

- (void)notifyClientCertificateWithOrgSpongycastleCryptoTlsCertificate:(OrgSpongycastleCryptoTlsCertificate *)clientCertificate;

- (OrgSpongycastleCryptoTlsNewSessionTicket *)getNewSessionTicket;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsServer)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsServer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsServer")
