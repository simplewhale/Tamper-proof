//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsBlockCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsBlockCipher")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsBlockCipher
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsBlockCipher 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsBlockCipher 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsBlockCipher

#if !defined (OrgSpongycastleCryptoTlsTlsBlockCipher_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsBlockCipher || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsBlockCipher))
#define OrgSpongycastleCryptoTlsTlsBlockCipher_

#define RESTRICT_OrgSpongycastleCryptoTlsTlsCipher 1
#define INCLUDE_OrgSpongycastleCryptoTlsTlsCipher 1
#include "org/spongycastle/crypto/tls/TlsCipher.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class OrgSpongycastleCryptoTlsTlsMac;
@protocol OrgSpongycastleCryptoBlockCipher;
@protocol OrgSpongycastleCryptoDigest;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsTlsBlockCipher : NSObject < OrgSpongycastleCryptoTlsTlsCipher > {
 @public
  id<OrgSpongycastleCryptoTlsTlsContext> context_;
  IOSByteArray *randomData_;
  jboolean useExplicitIV_;
  jboolean encryptThenMAC_;
  id<OrgSpongycastleCryptoBlockCipher> encryptCipher_;
  id<OrgSpongycastleCryptoBlockCipher> decryptCipher_;
  OrgSpongycastleCryptoTlsTlsMac *writeMac_;
  OrgSpongycastleCryptoTlsTlsMac *readMac_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context
                      withOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)clientWriteCipher
                      withOrgSpongycastleCryptoBlockCipher:(id<OrgSpongycastleCryptoBlockCipher>)serverWriteCipher
                           withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)clientWriteDigest
                           withOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)serverWriteDigest
                                                   withInt:(jint)cipherKeySize;

- (IOSByteArray *)decodeCiphertextWithLong:(jlong)seqNo
                                 withShort:(jshort)type
                             withByteArray:(IOSByteArray *)ciphertext
                                   withInt:(jint)offset
                                   withInt:(jint)len;

- (IOSByteArray *)encodePlaintextWithLong:(jlong)seqNo
                                withShort:(jshort)type
                            withByteArray:(IOSByteArray *)plaintext
                                  withInt:(jint)offset
                                  withInt:(jint)len;

- (jint)getPlaintextLimitWithInt:(jint)ciphertextLimit;

- (OrgSpongycastleCryptoTlsTlsMac *)getReadMac;

- (OrgSpongycastleCryptoTlsTlsMac *)getWriteMac;

#pragma mark Protected

- (jint)checkPaddingConstantTimeWithByteArray:(IOSByteArray *)buf
                                      withInt:(jint)off
                                      withInt:(jint)len
                                      withInt:(jint)blockSize
                                      withInt:(jint)macSize;

- (jint)chooseExtraPadBlocksWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)r
                                                 withInt:(jint)max;

- (jint)lowestBitSetWithInt:(jint)x;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsBlockCipher)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsBlockCipher, context_, id<OrgSpongycastleCryptoTlsTlsContext>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsBlockCipher, randomData_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsBlockCipher, encryptCipher_, id<OrgSpongycastleCryptoBlockCipher>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsBlockCipher, decryptCipher_, id<OrgSpongycastleCryptoBlockCipher>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsBlockCipher, writeMac_, OrgSpongycastleCryptoTlsTlsMac *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsBlockCipher, readMac_, OrgSpongycastleCryptoTlsTlsMac *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsBlockCipher_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_(OrgSpongycastleCryptoTlsTlsBlockCipher *self, id<OrgSpongycastleCryptoTlsTlsContext> context, id<OrgSpongycastleCryptoBlockCipher> clientWriteCipher, id<OrgSpongycastleCryptoBlockCipher> serverWriteCipher, id<OrgSpongycastleCryptoDigest> clientWriteDigest, id<OrgSpongycastleCryptoDigest> serverWriteDigest, jint cipherKeySize);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsBlockCipher *new_OrgSpongycastleCryptoTlsTlsBlockCipher_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_(id<OrgSpongycastleCryptoTlsTlsContext> context, id<OrgSpongycastleCryptoBlockCipher> clientWriteCipher, id<OrgSpongycastleCryptoBlockCipher> serverWriteCipher, id<OrgSpongycastleCryptoDigest> clientWriteDigest, id<OrgSpongycastleCryptoDigest> serverWriteDigest, jint cipherKeySize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsBlockCipher *create_OrgSpongycastleCryptoTlsTlsBlockCipher_initWithOrgSpongycastleCryptoTlsTlsContext_withOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoBlockCipher_withOrgSpongycastleCryptoDigest_withOrgSpongycastleCryptoDigest_withInt_(id<OrgSpongycastleCryptoTlsTlsContext> context, id<OrgSpongycastleCryptoBlockCipher> clientWriteCipher, id<OrgSpongycastleCryptoBlockCipher> serverWriteCipher, id<OrgSpongycastleCryptoDigest> clientWriteDigest, id<OrgSpongycastleCryptoDigest> serverWriteDigest, jint cipherKeySize);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsBlockCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsBlockCipher")
