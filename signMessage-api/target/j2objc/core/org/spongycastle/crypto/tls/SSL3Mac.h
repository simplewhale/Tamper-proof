//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/SSL3Mac.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSSL3Mac")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsSSL3Mac
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSSL3Mac 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSSL3Mac 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsSSL3Mac

#if !defined (OrgSpongycastleCryptoTlsSSL3Mac_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsSSL3Mac || defined(INCLUDE_OrgSpongycastleCryptoTlsSSL3Mac))
#define OrgSpongycastleCryptoTlsSSL3Mac_

#define RESTRICT_OrgSpongycastleCryptoMac 1
#define INCLUDE_OrgSpongycastleCryptoMac 1
#include "org/spongycastle/crypto/Mac.h"

@class IOSByteArray;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoDigest;

@interface OrgSpongycastleCryptoTlsSSL3Mac : NSObject < OrgSpongycastleCryptoMac >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoDigest:(id<OrgSpongycastleCryptoDigest>)digest;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getMacSize;

- (id<OrgSpongycastleCryptoDigest>)getUnderlyingDigest;

- (void)init__WithOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (void)reset;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoTlsSSL3Mac)

inline IOSByteArray *OrgSpongycastleCryptoTlsSSL3Mac_get_IPAD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoTlsSSL3Mac_IPAD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsSSL3Mac, IPAD, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoTlsSSL3Mac_get_OPAD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleCryptoTlsSSL3Mac_OPAD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsSSL3Mac, OPAD, IOSByteArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsSSL3Mac_initWithOrgSpongycastleCryptoDigest_(OrgSpongycastleCryptoTlsSSL3Mac *self, id<OrgSpongycastleCryptoDigest> digest);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSSL3Mac *new_OrgSpongycastleCryptoTlsSSL3Mac_initWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSSL3Mac *create_OrgSpongycastleCryptoTlsSSL3Mac_initWithOrgSpongycastleCryptoDigest_(id<OrgSpongycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsSSL3Mac)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSSL3Mac")
