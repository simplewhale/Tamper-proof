//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/CertificateURL.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateURL")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsCertificateURL
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateURL 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateURL 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsCertificateURL

#if !defined (OrgSpongycastleCryptoTlsCertificateURL_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateURL || defined(INCLUDE_OrgSpongycastleCryptoTlsCertificateURL))
#define OrgSpongycastleCryptoTlsCertificateURL_

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaUtilVector;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsCertificateURL : NSObject {
 @public
  jshort type_;
  JavaUtilVector *urlAndHashList_;
}

#pragma mark Public

- (instancetype)initWithShort:(jshort)type
           withJavaUtilVector:(JavaUtilVector *)urlAndHashList;

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (jshort)getType;

- (JavaUtilVector *)getURLAndHashList;

+ (OrgSpongycastleCryptoTlsCertificateURL *)parseWithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context
                                                                  withJavaIoInputStream:(JavaIoInputStream *)input;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsCertificateURL)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsCertificateURL, urlAndHashList_, JavaUtilVector *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsCertificateURL_initWithShort_withJavaUtilVector_(OrgSpongycastleCryptoTlsCertificateURL *self, jshort type, JavaUtilVector *urlAndHashList);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateURL *new_OrgSpongycastleCryptoTlsCertificateURL_initWithShort_withJavaUtilVector_(jshort type, JavaUtilVector *urlAndHashList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateURL *create_OrgSpongycastleCryptoTlsCertificateURL_initWithShort_withJavaUtilVector_(jshort type, JavaUtilVector *urlAndHashList);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateURL *OrgSpongycastleCryptoTlsCertificateURL_parseWithOrgSpongycastleCryptoTlsTlsContext_withJavaIoInputStream_(id<OrgSpongycastleCryptoTlsTlsContext> context, JavaIoInputStream *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsCertificateURL)

#endif

#if !defined (OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateURL || defined(INCLUDE_OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16))
#define OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16_

#define RESTRICT_JavaIoByteArrayOutputStream 1
#define INCLUDE_JavaIoByteArrayOutputStream 1
#include "java/io/ByteArrayOutputStream.h"

@class JavaIoOutputStream;
@class OrgSpongycastleCryptoTlsCertificateURL;

@interface OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16 : JavaIoByteArrayOutputStream

#pragma mark Package-Private

- (instancetype)initWithOrgSpongycastleCryptoTlsCertificateURL:(OrgSpongycastleCryptoTlsCertificateURL *)outer$;

- (void)encodeToWithJavaIoOutputStream:(JavaIoOutputStream *)output;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16_initWithOrgSpongycastleCryptoTlsCertificateURL_(OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16 *self, OrgSpongycastleCryptoTlsCertificateURL *outer$);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16 *new_OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16_initWithOrgSpongycastleCryptoTlsCertificateURL_(OrgSpongycastleCryptoTlsCertificateURL *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16 *create_OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16_initWithOrgSpongycastleCryptoTlsCertificateURL_(OrgSpongycastleCryptoTlsCertificateURL *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsCertificateURL_ListBuffer16)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateURL")
