//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/SRPTlsClient.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsClient")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsSRPTlsClient
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsClient 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsClient 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsSRPTlsClient

#if !defined (OrgSpongycastleCryptoTlsSRPTlsClient_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsClient || defined(INCLUDE_OrgSpongycastleCryptoTlsSRPTlsClient))
#define OrgSpongycastleCryptoTlsSRPTlsClient_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsClient 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsClient 1
#include "org/spongycastle/crypto/tls/AbstractTlsClient.h"

@class IOSByteArray;
@class IOSIntArray;
@class JavaUtilHashtable;
@protocol OrgSpongycastleCryptoTlsTlsAuthentication;
@protocol OrgSpongycastleCryptoTlsTlsCipherFactory;
@protocol OrgSpongycastleCryptoTlsTlsKeyExchange;
@protocol OrgSpongycastleCryptoTlsTlsSRPGroupVerifier;

@interface OrgSpongycastleCryptoTlsSRPTlsClient : OrgSpongycastleCryptoTlsAbstractTlsClient {
 @public
  id<OrgSpongycastleCryptoTlsTlsSRPGroupVerifier> groupVerifier_;
  IOSByteArray *identity_;
  IOSByteArray *password_;
}

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)identity
                    withByteArray:(IOSByteArray *)password;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)cipherFactory
                                                   withByteArray:(IOSByteArray *)identity
                                                   withByteArray:(IOSByteArray *)password;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)cipherFactory
                 withOrgSpongycastleCryptoTlsTlsSRPGroupVerifier:(id<OrgSpongycastleCryptoTlsTlsSRPGroupVerifier>)groupVerifier
                                                   withByteArray:(IOSByteArray *)identity
                                                   withByteArray:(IOSByteArray *)password;

- (id<OrgSpongycastleCryptoTlsTlsAuthentication>)getAuthentication;

- (IOSIntArray *)getCipherSuites;

- (JavaUtilHashtable *)getClientExtensions;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)getKeyExchange;

- (void)processServerExtensionsWithJavaUtilHashtable:(JavaUtilHashtable *)serverExtensions;

#pragma mark Protected

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createSRPKeyExchangeWithInt:(jint)keyExchange;

- (jboolean)requireSRPServerExtension;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsSRPTlsClient)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSRPTlsClient, groupVerifier_, id<OrgSpongycastleCryptoTlsTlsSRPGroupVerifier>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSRPTlsClient, identity_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSRPTlsClient, password_, IOSByteArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsSRPTlsClient_initWithByteArray_withByteArray_(OrgSpongycastleCryptoTlsSRPTlsClient *self, IOSByteArray *identity, IOSByteArray *password);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsClient *new_OrgSpongycastleCryptoTlsSRPTlsClient_initWithByteArray_withByteArray_(IOSByteArray *identity, IOSByteArray *password) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsClient *create_OrgSpongycastleCryptoTlsSRPTlsClient_initWithByteArray_withByteArray_(IOSByteArray *identity, IOSByteArray *password);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsSRPTlsClient_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withByteArray_withByteArray_(OrgSpongycastleCryptoTlsSRPTlsClient *self, id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, IOSByteArray *identity, IOSByteArray *password);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsClient *new_OrgSpongycastleCryptoTlsSRPTlsClient_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withByteArray_withByteArray_(id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, IOSByteArray *identity, IOSByteArray *password) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsClient *create_OrgSpongycastleCryptoTlsSRPTlsClient_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withByteArray_withByteArray_(id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, IOSByteArray *identity, IOSByteArray *password);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsSRPTlsClient_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsSRPGroupVerifier_withByteArray_withByteArray_(OrgSpongycastleCryptoTlsSRPTlsClient *self, id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsSRPGroupVerifier> groupVerifier, IOSByteArray *identity, IOSByteArray *password);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsClient *new_OrgSpongycastleCryptoTlsSRPTlsClient_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsSRPGroupVerifier_withByteArray_withByteArray_(id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsSRPGroupVerifier> groupVerifier, IOSByteArray *identity, IOSByteArray *password) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsClient *create_OrgSpongycastleCryptoTlsSRPTlsClient_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsSRPGroupVerifier_withByteArray_withByteArray_(id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsSRPGroupVerifier> groupVerifier, IOSByteArray *identity, IOSByteArray *password);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsSRPTlsClient)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsClient")
