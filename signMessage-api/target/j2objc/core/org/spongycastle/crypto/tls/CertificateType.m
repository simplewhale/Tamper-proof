//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/CertificateType.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/tls/CertificateType.h"

@implementation OrgSpongycastleCryptoTlsCertificateType

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoTlsCertificateType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "X509", "S", .constantValue.asShort = OrgSpongycastleCryptoTlsCertificateType_X509, 0x19, -1, -1, -1, -1 },
    { "OpenPGP", "S", .constantValue.asShort = OrgSpongycastleCryptoTlsCertificateType_OpenPGP, 0x19, -1, -1, -1, -1 },
    { "RawPublicKey", "S", .constantValue.asShort = OrgSpongycastleCryptoTlsCertificateType_RawPublicKey, 0x19, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsCertificateType = { "CertificateType", "org.spongycastle.crypto.tls", NULL, methods, fields, 7, 0x1, 1, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsCertificateType;
}

@end

void OrgSpongycastleCryptoTlsCertificateType_init(OrgSpongycastleCryptoTlsCertificateType *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoTlsCertificateType *new_OrgSpongycastleCryptoTlsCertificateType_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsCertificateType, init)
}

OrgSpongycastleCryptoTlsCertificateType *create_OrgSpongycastleCryptoTlsCertificateType_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsCertificateType, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsCertificateType)
