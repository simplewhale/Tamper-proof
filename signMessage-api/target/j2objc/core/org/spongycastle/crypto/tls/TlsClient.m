//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsClient.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/tls/TlsClient.h"

@interface OrgSpongycastleCryptoTlsTlsClient : NSObject

@end

@implementation OrgSpongycastleCryptoTlsTlsClient

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsTlsSession;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsProtocolVersion;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsProtocolVersion;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[S", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashtable;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 12, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 13, 14, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsTlsKeyExchange;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsTlsAuthentication;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 15, 16, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init__WithOrgSpongycastleCryptoTlsTlsClientContext:);
  methods[1].selector = @selector(getSessionToResume);
  methods[2].selector = @selector(getClientHelloRecordLayerVersion);
  methods[3].selector = @selector(getClientVersion);
  methods[4].selector = @selector(isFallback);
  methods[5].selector = @selector(getCipherSuites);
  methods[6].selector = @selector(getCompressionMethods);
  methods[7].selector = @selector(getClientExtensions);
  methods[8].selector = @selector(notifyServerVersionWithOrgSpongycastleCryptoTlsProtocolVersion:);
  methods[9].selector = @selector(notifySessionIDWithByteArray:);
  methods[10].selector = @selector(notifySelectedCipherSuiteWithInt:);
  methods[11].selector = @selector(notifySelectedCompressionMethodWithShort:);
  methods[12].selector = @selector(processServerExtensionsWithJavaUtilHashtable:);
  methods[13].selector = @selector(processServerSupplementalDataWithJavaUtilVector:);
  methods[14].selector = @selector(getKeyExchange);
  methods[15].selector = @selector(getAuthentication);
  methods[16].selector = @selector(getClientSupplementalData);
  methods[17].selector = @selector(notifyNewSessionTicketWithOrgSpongycastleCryptoTlsNewSessionTicket:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoTlsTlsClientContext;", "LJavaIoIOException;", "notifyServerVersion", "LOrgSpongycastleCryptoTlsProtocolVersion;", "notifySessionID", "[B", "notifySelectedCipherSuite", "I", "notifySelectedCompressionMethod", "S", "processServerExtensions", "LJavaUtilHashtable;", "processServerSupplementalData", "LJavaUtilVector;", "notifyNewSessionTicket", "LOrgSpongycastleCryptoTlsNewSessionTicket;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsTlsClient = { "TlsClient", "org.spongycastle.crypto.tls", ptrTable, methods, NULL, 7, 0x609, 18, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsTlsClient;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsTlsClient)
