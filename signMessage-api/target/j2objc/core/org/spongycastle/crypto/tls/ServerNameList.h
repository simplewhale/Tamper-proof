//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/ServerNameList.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsServerNameList")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsServerNameList
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsServerNameList 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsServerNameList 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsServerNameList

#if !defined (OrgSpongycastleCryptoTlsServerNameList_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsServerNameList || defined(INCLUDE_OrgSpongycastleCryptoTlsServerNameList))
#define OrgSpongycastleCryptoTlsServerNameList_

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaUtilVector;

@interface OrgSpongycastleCryptoTlsServerNameList : NSObject {
 @public
  JavaUtilVector *serverNameList_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)serverNameList;

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (JavaUtilVector *)getServerNameList;

+ (OrgSpongycastleCryptoTlsServerNameList *)parseWithJavaIoInputStream:(JavaIoInputStream *)input;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsServerNameList)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsServerNameList, serverNameList_, JavaUtilVector *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsServerNameList_initWithJavaUtilVector_(OrgSpongycastleCryptoTlsServerNameList *self, JavaUtilVector *serverNameList);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsServerNameList *new_OrgSpongycastleCryptoTlsServerNameList_initWithJavaUtilVector_(JavaUtilVector *serverNameList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsServerNameList *create_OrgSpongycastleCryptoTlsServerNameList_initWithJavaUtilVector_(JavaUtilVector *serverNameList);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsServerNameList *OrgSpongycastleCryptoTlsServerNameList_parseWithJavaIoInputStream_(JavaIoInputStream *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsServerNameList)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsServerNameList")
