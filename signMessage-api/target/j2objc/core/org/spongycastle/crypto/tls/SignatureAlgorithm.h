//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/SignatureAlgorithm.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSignatureAlgorithm")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsSignatureAlgorithm
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSignatureAlgorithm 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSignatureAlgorithm 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsSignatureAlgorithm

#if !defined (OrgSpongycastleCryptoTlsSignatureAlgorithm_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsSignatureAlgorithm || defined(INCLUDE_OrgSpongycastleCryptoTlsSignatureAlgorithm))
#define OrgSpongycastleCryptoTlsSignatureAlgorithm_

@interface OrgSpongycastleCryptoTlsSignatureAlgorithm : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsSignatureAlgorithm)

inline jshort OrgSpongycastleCryptoTlsSignatureAlgorithm_get_anonymous(void);
#define OrgSpongycastleCryptoTlsSignatureAlgorithm_anonymous 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsSignatureAlgorithm, anonymous, jshort)

inline jshort OrgSpongycastleCryptoTlsSignatureAlgorithm_get_rsa(void);
#define OrgSpongycastleCryptoTlsSignatureAlgorithm_rsa 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsSignatureAlgorithm, rsa, jshort)

inline jshort OrgSpongycastleCryptoTlsSignatureAlgorithm_get_dsa(void);
#define OrgSpongycastleCryptoTlsSignatureAlgorithm_dsa 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsSignatureAlgorithm, dsa, jshort)

inline jshort OrgSpongycastleCryptoTlsSignatureAlgorithm_get_ecdsa(void);
#define OrgSpongycastleCryptoTlsSignatureAlgorithm_ecdsa 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsSignatureAlgorithm, ecdsa, jshort)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsSignatureAlgorithm_init(OrgSpongycastleCryptoTlsSignatureAlgorithm *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSignatureAlgorithm *new_OrgSpongycastleCryptoTlsSignatureAlgorithm_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSignatureAlgorithm *create_OrgSpongycastleCryptoTlsSignatureAlgorithm_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsSignatureAlgorithm)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSignatureAlgorithm")
