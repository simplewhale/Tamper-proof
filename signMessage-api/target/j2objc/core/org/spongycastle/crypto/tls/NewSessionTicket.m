//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/NewSessionTicket.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "org/spongycastle/crypto/tls/NewSessionTicket.h"
#include "org/spongycastle/crypto/tls/TlsUtils.h"

@implementation OrgSpongycastleCryptoTlsNewSessionTicket

- (instancetype)initWithLong:(jlong)ticketLifetimeHint
               withByteArray:(IOSByteArray *)ticket {
  OrgSpongycastleCryptoTlsNewSessionTicket_initWithLong_withByteArray_(self, ticketLifetimeHint, ticket);
  return self;
}

- (jlong)getTicketLifetimeHint {
  return ticketLifetimeHint_;
}

- (IOSByteArray *)getTicket {
  return ticket_;
}

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgSpongycastleCryptoTlsTlsUtils_writeUint32WithLong_withJavaIoOutputStream_(ticketLifetimeHint_, output);
  OrgSpongycastleCryptoTlsTlsUtils_writeOpaque16WithByteArray_withJavaIoOutputStream_(ticket_, output);
}

+ (OrgSpongycastleCryptoTlsNewSessionTicket *)parseWithJavaIoInputStream:(JavaIoInputStream *)input {
  return OrgSpongycastleCryptoTlsNewSessionTicket_parseWithJavaIoInputStream_(input);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsNewSessionTicket;", 0x9, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLong:withByteArray:);
  methods[1].selector = @selector(getTicketLifetimeHint);
  methods[2].selector = @selector(getTicket);
  methods[3].selector = @selector(encodeWithJavaIoOutputStream:);
  methods[4].selector = @selector(parseWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ticketLifetimeHint_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "ticket_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J[B", "encode", "LJavaIoOutputStream;", "LJavaIoIOException;", "parse", "LJavaIoInputStream;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsNewSessionTicket = { "NewSessionTicket", "org.spongycastle.crypto.tls", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsNewSessionTicket;
}

@end

void OrgSpongycastleCryptoTlsNewSessionTicket_initWithLong_withByteArray_(OrgSpongycastleCryptoTlsNewSessionTicket *self, jlong ticketLifetimeHint, IOSByteArray *ticket) {
  NSObject_init(self);
  self->ticketLifetimeHint_ = ticketLifetimeHint;
  self->ticket_ = ticket;
}

OrgSpongycastleCryptoTlsNewSessionTicket *new_OrgSpongycastleCryptoTlsNewSessionTicket_initWithLong_withByteArray_(jlong ticketLifetimeHint, IOSByteArray *ticket) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsNewSessionTicket, initWithLong_withByteArray_, ticketLifetimeHint, ticket)
}

OrgSpongycastleCryptoTlsNewSessionTicket *create_OrgSpongycastleCryptoTlsNewSessionTicket_initWithLong_withByteArray_(jlong ticketLifetimeHint, IOSByteArray *ticket) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsNewSessionTicket, initWithLong_withByteArray_, ticketLifetimeHint, ticket)
}

OrgSpongycastleCryptoTlsNewSessionTicket *OrgSpongycastleCryptoTlsNewSessionTicket_parseWithJavaIoInputStream_(JavaIoInputStream *input) {
  OrgSpongycastleCryptoTlsNewSessionTicket_initialize();
  jlong ticketLifetimeHint = OrgSpongycastleCryptoTlsTlsUtils_readUint32WithJavaIoInputStream_(input);
  IOSByteArray *ticket = OrgSpongycastleCryptoTlsTlsUtils_readOpaque16WithJavaIoInputStream_(input);
  return new_OrgSpongycastleCryptoTlsNewSessionTicket_initWithLong_withByteArray_(ticketLifetimeHint, ticket);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsNewSessionTicket)
