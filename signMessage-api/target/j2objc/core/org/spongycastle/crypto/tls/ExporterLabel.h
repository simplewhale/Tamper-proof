//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/ExporterLabel.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsExporterLabel")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsExporterLabel
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsExporterLabel 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsExporterLabel 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsExporterLabel

#if !defined (OrgSpongycastleCryptoTlsExporterLabel_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsExporterLabel || defined(INCLUDE_OrgSpongycastleCryptoTlsExporterLabel))
#define OrgSpongycastleCryptoTlsExporterLabel_

@interface OrgSpongycastleCryptoTlsExporterLabel : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsExporterLabel)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_client_finished(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_client_finished;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, client_finished, NSString *)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_server_finished(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_server_finished;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, server_finished, NSString *)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_master_secret(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_master_secret;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, master_secret, NSString *)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_key_expansion(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_key_expansion;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, key_expansion, NSString *)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_client_EAP_encryption(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_client_EAP_encryption;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, client_EAP_encryption, NSString *)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_ttls_keying_material(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_ttls_keying_material;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, ttls_keying_material, NSString *)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_ttls_challenge(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_ttls_challenge;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, ttls_challenge, NSString *)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_dtls_srtp(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_dtls_srtp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, dtls_srtp, NSString *)

inline NSString *OrgSpongycastleCryptoTlsExporterLabel_get_extended_master_secret(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleCryptoTlsExporterLabel_extended_master_secret;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoTlsExporterLabel, extended_master_secret, NSString *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsExporterLabel_init(OrgSpongycastleCryptoTlsExporterLabel *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsExporterLabel *new_OrgSpongycastleCryptoTlsExporterLabel_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsExporterLabel *create_OrgSpongycastleCryptoTlsExporterLabel_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsExporterLabel)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsExporterLabel")
