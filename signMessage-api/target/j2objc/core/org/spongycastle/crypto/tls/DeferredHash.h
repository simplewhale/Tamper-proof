//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/DeferredHash.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDeferredHash")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsDeferredHash
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDeferredHash 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDeferredHash 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsDeferredHash

#if !defined (OrgSpongycastleCryptoTlsDeferredHash_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsDeferredHash || defined(INCLUDE_OrgSpongycastleCryptoTlsDeferredHash))
#define OrgSpongycastleCryptoTlsDeferredHash_

#define RESTRICT_OrgSpongycastleCryptoTlsTlsHandshakeHash 1
#define INCLUDE_OrgSpongycastleCryptoTlsTlsHandshakeHash 1
#include "org/spongycastle/crypto/tls/TlsHandshakeHash.h"

@class IOSByteArray;
@class JavaLangShort;
@protocol OrgSpongycastleCryptoDigest;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsDeferredHash : NSObject < OrgSpongycastleCryptoTlsTlsHandshakeHash > {
 @public
  id<OrgSpongycastleCryptoTlsTlsContext> context_;
}

#pragma mark Public

- (jint)doFinalWithByteArray:(IOSByteArray *)output
                     withInt:(jint)outOff;

- (id<OrgSpongycastleCryptoDigest>)forkPRFHash;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

- (IOSByteArray *)getFinalHashWithShort:(jshort)hashAlgorithm;

- (void)init__WithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context OBJC_METHOD_FAMILY_NONE;

- (id<OrgSpongycastleCryptoTlsTlsHandshakeHash>)notifyPRFDetermined;

- (void)reset;

- (void)sealHashAlgorithms;

- (id<OrgSpongycastleCryptoTlsTlsHandshakeHash>)stopTracking;

- (void)trackHashAlgorithmWithShort:(jshort)hashAlgorithm;

- (void)updateWithByte:(jbyte)input;

- (void)updateWithByteArray:(IOSByteArray *)input
                    withInt:(jint)inOff
                    withInt:(jint)len;

#pragma mark Protected

- (void)checkStopBuffering;

- (void)checkTrackingHashWithJavaLangShort:(JavaLangShort *)hashAlgorithm;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsDeferredHash)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDeferredHash, context_, id<OrgSpongycastleCryptoTlsTlsContext>)

inline jint OrgSpongycastleCryptoTlsDeferredHash_get_BUFFERING_HASH_LIMIT(void);
#define OrgSpongycastleCryptoTlsDeferredHash_BUFFERING_HASH_LIMIT 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsDeferredHash, BUFFERING_HASH_LIMIT, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsDeferredHash_init(OrgSpongycastleCryptoTlsDeferredHash *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsDeferredHash *new_OrgSpongycastleCryptoTlsDeferredHash_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsDeferredHash *create_OrgSpongycastleCryptoTlsDeferredHash_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsDeferredHash)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDeferredHash")
