//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsExtensionsUtils.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/Hashtable.h"
#include "org/spongycastle/crypto/tls/AlertDescription.h"
#include "org/spongycastle/crypto/tls/CertificateStatusRequest.h"
#include "org/spongycastle/crypto/tls/ExtensionType.h"
#include "org/spongycastle/crypto/tls/HeartbeatExtension.h"
#include "org/spongycastle/crypto/tls/ServerNameList.h"
#include "org/spongycastle/crypto/tls/TlsExtensionsUtils.h"
#include "org/spongycastle/crypto/tls/TlsFatalAlert.h"
#include "org/spongycastle/crypto/tls/TlsProtocol.h"
#include "org/spongycastle/crypto/tls/TlsUtils.h"
#include "org/spongycastle/util/Integers.h"

@interface OrgSpongycastleCryptoTlsTlsExtensionsUtils ()

+ (jboolean)readEmptyExtensionDataWithByteArray:(IOSByteArray *)extensionData;

@end

__attribute__((unused)) static jboolean OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEmptyExtensionDataWithByteArray_(IOSByteArray *extensionData);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoTlsTlsExtensionsUtils)

JavaLangInteger *OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_encrypt_then_mac;
JavaLangInteger *OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_extended_master_secret;
JavaLangInteger *OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_heartbeat;
JavaLangInteger *OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_max_fragment_length;
JavaLangInteger *OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_padding;
JavaLangInteger *OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_server_name;
JavaLangInteger *OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_status_request;
JavaLangInteger *OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_truncated_hmac;

@implementation OrgSpongycastleCryptoTlsTlsExtensionsUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaUtilHashtable *)ensureExtensionsInitialisedWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_ensureExtensionsInitialisedWithJavaUtilHashtable_(extensions);
}

+ (void)addEncryptThenMACExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_addEncryptThenMACExtensionWithJavaUtilHashtable_(extensions);
}

+ (void)addExtendedMasterSecretExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_addExtendedMasterSecretExtensionWithJavaUtilHashtable_(extensions);
}

+ (void)addHeartbeatExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions
    withOrgSpongycastleCryptoTlsHeartbeatExtension:(OrgSpongycastleCryptoTlsHeartbeatExtension *)heartbeatExtension {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_addHeartbeatExtensionWithJavaUtilHashtable_withOrgSpongycastleCryptoTlsHeartbeatExtension_(extensions, heartbeatExtension);
}

+ (void)addMaxFragmentLengthExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions
                                                 withShort:(jshort)maxFragmentLength {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_addMaxFragmentLengthExtensionWithJavaUtilHashtable_withShort_(extensions, maxFragmentLength);
}

+ (void)addPaddingExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions
                                         withInt:(jint)dataLength {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_addPaddingExtensionWithJavaUtilHashtable_withInt_(extensions, dataLength);
}

+ (void)addServerNameExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions
         withOrgSpongycastleCryptoTlsServerNameList:(OrgSpongycastleCryptoTlsServerNameList *)serverNameList {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_addServerNameExtensionWithJavaUtilHashtable_withOrgSpongycastleCryptoTlsServerNameList_(extensions, serverNameList);
}

+ (void)addStatusRequestExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions
  withOrgSpongycastleCryptoTlsCertificateStatusRequest:(OrgSpongycastleCryptoTlsCertificateStatusRequest *)statusRequest {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_addStatusRequestExtensionWithJavaUtilHashtable_withOrgSpongycastleCryptoTlsCertificateStatusRequest_(extensions, statusRequest);
}

+ (void)addTruncatedHMacExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_addTruncatedHMacExtensionWithJavaUtilHashtable_(extensions);
}

+ (OrgSpongycastleCryptoTlsHeartbeatExtension *)getHeartbeatExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_getHeartbeatExtensionWithJavaUtilHashtable_(extensions);
}

+ (jshort)getMaxFragmentLengthExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_getMaxFragmentLengthExtensionWithJavaUtilHashtable_(extensions);
}

+ (jint)getPaddingExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_getPaddingExtensionWithJavaUtilHashtable_(extensions);
}

+ (OrgSpongycastleCryptoTlsServerNameList *)getServerNameExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_getServerNameExtensionWithJavaUtilHashtable_(extensions);
}

+ (OrgSpongycastleCryptoTlsCertificateStatusRequest *)getStatusRequestExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_getStatusRequestExtensionWithJavaUtilHashtable_(extensions);
}

+ (jboolean)hasEncryptThenMACExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_hasEncryptThenMACExtensionWithJavaUtilHashtable_(extensions);
}

+ (jboolean)hasExtendedMasterSecretExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_hasExtendedMasterSecretExtensionWithJavaUtilHashtable_(extensions);
}

+ (jboolean)hasTruncatedHMacExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_hasTruncatedHMacExtensionWithJavaUtilHashtable_(extensions);
}

+ (IOSByteArray *)createEmptyExtensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createEmptyExtensionData();
}

+ (IOSByteArray *)createEncryptThenMACExtension {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createEncryptThenMACExtension();
}

+ (IOSByteArray *)createExtendedMasterSecretExtension {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createExtendedMasterSecretExtension();
}

+ (IOSByteArray *)createHeartbeatExtensionWithOrgSpongycastleCryptoTlsHeartbeatExtension:(OrgSpongycastleCryptoTlsHeartbeatExtension *)heartbeatExtension {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createHeartbeatExtensionWithOrgSpongycastleCryptoTlsHeartbeatExtension_(heartbeatExtension);
}

+ (IOSByteArray *)createMaxFragmentLengthExtensionWithShort:(jshort)maxFragmentLength {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createMaxFragmentLengthExtensionWithShort_(maxFragmentLength);
}

+ (IOSByteArray *)createPaddingExtensionWithInt:(jint)dataLength {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createPaddingExtensionWithInt_(dataLength);
}

+ (IOSByteArray *)createServerNameExtensionWithOrgSpongycastleCryptoTlsServerNameList:(OrgSpongycastleCryptoTlsServerNameList *)serverNameList {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createServerNameExtensionWithOrgSpongycastleCryptoTlsServerNameList_(serverNameList);
}

+ (IOSByteArray *)createStatusRequestExtensionWithOrgSpongycastleCryptoTlsCertificateStatusRequest:(OrgSpongycastleCryptoTlsCertificateStatusRequest *)statusRequest {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createStatusRequestExtensionWithOrgSpongycastleCryptoTlsCertificateStatusRequest_(statusRequest);
}

+ (IOSByteArray *)createTruncatedHMacExtension {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createTruncatedHMacExtension();
}

+ (jboolean)readEmptyExtensionDataWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEmptyExtensionDataWithByteArray_(extensionData);
}

+ (jboolean)readEncryptThenMACExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEncryptThenMACExtensionWithByteArray_(extensionData);
}

+ (jboolean)readExtendedMasterSecretExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readExtendedMasterSecretExtensionWithByteArray_(extensionData);
}

+ (OrgSpongycastleCryptoTlsHeartbeatExtension *)readHeartbeatExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readHeartbeatExtensionWithByteArray_(extensionData);
}

+ (jshort)readMaxFragmentLengthExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readMaxFragmentLengthExtensionWithByteArray_(extensionData);
}

+ (jint)readPaddingExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readPaddingExtensionWithByteArray_(extensionData);
}

+ (OrgSpongycastleCryptoTlsServerNameList *)readServerNameExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readServerNameExtensionWithByteArray_(extensionData);
}

+ (OrgSpongycastleCryptoTlsCertificateStatusRequest *)readStatusRequestExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readStatusRequestExtensionWithByteArray_(extensionData);
}

+ (jboolean)readTruncatedHMacExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readTruncatedHMacExtensionWithByteArray_(extensionData);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashtable;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 8, 6, -1, -1, -1 },
    { NULL, "V", 0x9, 9, 10, 6, -1, -1, -1 },
    { NULL, "V", 0x9, 11, 12, 6, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 14, 6, -1, -1, -1 },
    { NULL, "V", 0x9, 15, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsHeartbeatExtension;", 0x9, 16, 1, 6, -1, -1, -1 },
    { NULL, "S", 0x9, 17, 1, 6, -1, -1, -1 },
    { NULL, "I", 0x9, 18, 1, 6, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsServerNameList;", 0x9, 19, 1, 6, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsCertificateStatusRequest;", 0x9, 20, 1, 6, -1, -1, -1 },
    { NULL, "Z", 0x9, 21, 1, 6, -1, -1, -1 },
    { NULL, "Z", 0x9, 22, 1, 6, -1, -1, -1 },
    { NULL, "Z", 0x9, 23, 1, 6, -1, -1, -1 },
    { NULL, "[B", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 24, 25, 6, -1, -1, -1 },
    { NULL, "[B", 0x9, 26, 27, 6, -1, -1, -1 },
    { NULL, "[B", 0x9, 28, 29, 6, -1, -1, -1 },
    { NULL, "[B", 0x9, 30, 31, 6, -1, -1, -1 },
    { NULL, "[B", 0x9, 32, 33, 6, -1, -1, -1 },
    { NULL, "[B", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 34, 35, 6, -1, -1, -1 },
    { NULL, "Z", 0x9, 36, 35, 6, -1, -1, -1 },
    { NULL, "Z", 0x9, 37, 35, 6, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsHeartbeatExtension;", 0x9, 38, 35, 6, -1, -1, -1 },
    { NULL, "S", 0x9, 39, 35, 6, -1, -1, -1 },
    { NULL, "I", 0x9, 40, 35, 6, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsServerNameList;", 0x9, 41, 35, 6, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsCertificateStatusRequest;", 0x9, 42, 35, 6, -1, -1, -1 },
    { NULL, "Z", 0x9, 43, 35, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(ensureExtensionsInitialisedWithJavaUtilHashtable:);
  methods[2].selector = @selector(addEncryptThenMACExtensionWithJavaUtilHashtable:);
  methods[3].selector = @selector(addExtendedMasterSecretExtensionWithJavaUtilHashtable:);
  methods[4].selector = @selector(addHeartbeatExtensionWithJavaUtilHashtable:withOrgSpongycastleCryptoTlsHeartbeatExtension:);
  methods[5].selector = @selector(addMaxFragmentLengthExtensionWithJavaUtilHashtable:withShort:);
  methods[6].selector = @selector(addPaddingExtensionWithJavaUtilHashtable:withInt:);
  methods[7].selector = @selector(addServerNameExtensionWithJavaUtilHashtable:withOrgSpongycastleCryptoTlsServerNameList:);
  methods[8].selector = @selector(addStatusRequestExtensionWithJavaUtilHashtable:withOrgSpongycastleCryptoTlsCertificateStatusRequest:);
  methods[9].selector = @selector(addTruncatedHMacExtensionWithJavaUtilHashtable:);
  methods[10].selector = @selector(getHeartbeatExtensionWithJavaUtilHashtable:);
  methods[11].selector = @selector(getMaxFragmentLengthExtensionWithJavaUtilHashtable:);
  methods[12].selector = @selector(getPaddingExtensionWithJavaUtilHashtable:);
  methods[13].selector = @selector(getServerNameExtensionWithJavaUtilHashtable:);
  methods[14].selector = @selector(getStatusRequestExtensionWithJavaUtilHashtable:);
  methods[15].selector = @selector(hasEncryptThenMACExtensionWithJavaUtilHashtable:);
  methods[16].selector = @selector(hasExtendedMasterSecretExtensionWithJavaUtilHashtable:);
  methods[17].selector = @selector(hasTruncatedHMacExtensionWithJavaUtilHashtable:);
  methods[18].selector = @selector(createEmptyExtensionData);
  methods[19].selector = @selector(createEncryptThenMACExtension);
  methods[20].selector = @selector(createExtendedMasterSecretExtension);
  methods[21].selector = @selector(createHeartbeatExtensionWithOrgSpongycastleCryptoTlsHeartbeatExtension:);
  methods[22].selector = @selector(createMaxFragmentLengthExtensionWithShort:);
  methods[23].selector = @selector(createPaddingExtensionWithInt:);
  methods[24].selector = @selector(createServerNameExtensionWithOrgSpongycastleCryptoTlsServerNameList:);
  methods[25].selector = @selector(createStatusRequestExtensionWithOrgSpongycastleCryptoTlsCertificateStatusRequest:);
  methods[26].selector = @selector(createTruncatedHMacExtension);
  methods[27].selector = @selector(readEmptyExtensionDataWithByteArray:);
  methods[28].selector = @selector(readEncryptThenMACExtensionWithByteArray:);
  methods[29].selector = @selector(readExtendedMasterSecretExtensionWithByteArray:);
  methods[30].selector = @selector(readHeartbeatExtensionWithByteArray:);
  methods[31].selector = @selector(readMaxFragmentLengthExtensionWithByteArray:);
  methods[32].selector = @selector(readPaddingExtensionWithByteArray:);
  methods[33].selector = @selector(readServerNameExtensionWithByteArray:);
  methods[34].selector = @selector(readStatusRequestExtensionWithByteArray:);
  methods[35].selector = @selector(readTruncatedHMacExtensionWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EXT_encrypt_then_mac", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "EXT_extended_master_secret", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 45, -1, -1 },
    { "EXT_heartbeat", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 46, -1, -1 },
    { "EXT_max_fragment_length", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 47, -1, -1 },
    { "EXT_padding", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 48, -1, -1 },
    { "EXT_server_name", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 49, -1, -1 },
    { "EXT_status_request", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 50, -1, -1 },
    { "EXT_truncated_hmac", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
  };
  static const void *ptrTable[] = { "ensureExtensionsInitialised", "LJavaUtilHashtable;", "addEncryptThenMACExtension", "addExtendedMasterSecretExtension", "addHeartbeatExtension", "LJavaUtilHashtable;LOrgSpongycastleCryptoTlsHeartbeatExtension;", "LJavaIoIOException;", "addMaxFragmentLengthExtension", "LJavaUtilHashtable;S", "addPaddingExtension", "LJavaUtilHashtable;I", "addServerNameExtension", "LJavaUtilHashtable;LOrgSpongycastleCryptoTlsServerNameList;", "addStatusRequestExtension", "LJavaUtilHashtable;LOrgSpongycastleCryptoTlsCertificateStatusRequest;", "addTruncatedHMacExtension", "getHeartbeatExtension", "getMaxFragmentLengthExtension", "getPaddingExtension", "getServerNameExtension", "getStatusRequestExtension", "hasEncryptThenMACExtension", "hasExtendedMasterSecretExtension", "hasTruncatedHMacExtension", "createHeartbeatExtension", "LOrgSpongycastleCryptoTlsHeartbeatExtension;", "createMaxFragmentLengthExtension", "S", "createPaddingExtension", "I", "createServerNameExtension", "LOrgSpongycastleCryptoTlsServerNameList;", "createStatusRequestExtension", "LOrgSpongycastleCryptoTlsCertificateStatusRequest;", "readEmptyExtensionData", "[B", "readEncryptThenMACExtension", "readExtendedMasterSecretExtension", "readHeartbeatExtension", "readMaxFragmentLengthExtension", "readPaddingExtension", "readServerNameExtension", "readStatusRequestExtension", "readTruncatedHMacExtension", &OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_encrypt_then_mac, &OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_extended_master_secret, &OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_heartbeat, &OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_max_fragment_length, &OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_padding, &OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_server_name, &OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_status_request, &OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_truncated_hmac };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsTlsExtensionsUtils = { "TlsExtensionsUtils", "org.spongycastle.crypto.tls", ptrTable, methods, fields, 7, 0x1, 36, 8, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsTlsExtensionsUtils;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoTlsTlsExtensionsUtils class]) {
    OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_encrypt_then_mac = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_encrypt_then_mac);
    OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_extended_master_secret = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_extended_master_secret);
    OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_heartbeat = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_heartbeat);
    OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_max_fragment_length = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_max_fragment_length);
    OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_padding = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_padding);
    OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_server_name = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_server_name);
    OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_status_request = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_status_request);
    OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_truncated_hmac = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_truncated_hmac);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoTlsTlsExtensionsUtils)
  }
}

@end

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_init(OrgSpongycastleCryptoTlsTlsExtensionsUtils *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoTlsTlsExtensionsUtils *new_OrgSpongycastleCryptoTlsTlsExtensionsUtils_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsTlsExtensionsUtils, init)
}

OrgSpongycastleCryptoTlsTlsExtensionsUtils *create_OrgSpongycastleCryptoTlsTlsExtensionsUtils_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsTlsExtensionsUtils, init)
}

JavaUtilHashtable *OrgSpongycastleCryptoTlsTlsExtensionsUtils_ensureExtensionsInitialisedWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  return extensions == nil ? new_JavaUtilHashtable_init() : extensions;
}

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_addEncryptThenMACExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_encrypt_then_mac withId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_createEncryptThenMACExtension()];
}

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_addExtendedMasterSecretExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_extended_master_secret withId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_createExtendedMasterSecretExtension()];
}

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_addHeartbeatExtensionWithJavaUtilHashtable_withOrgSpongycastleCryptoTlsHeartbeatExtension_(JavaUtilHashtable *extensions, OrgSpongycastleCryptoTlsHeartbeatExtension *heartbeatExtension) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_heartbeat withId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_createHeartbeatExtensionWithOrgSpongycastleCryptoTlsHeartbeatExtension_(heartbeatExtension)];
}

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_addMaxFragmentLengthExtensionWithJavaUtilHashtable_withShort_(JavaUtilHashtable *extensions, jshort maxFragmentLength) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_max_fragment_length withId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_createMaxFragmentLengthExtensionWithShort_(maxFragmentLength)];
}

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_addPaddingExtensionWithJavaUtilHashtable_withInt_(JavaUtilHashtable *extensions, jint dataLength) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_padding withId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_createPaddingExtensionWithInt_(dataLength)];
}

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_addServerNameExtensionWithJavaUtilHashtable_withOrgSpongycastleCryptoTlsServerNameList_(JavaUtilHashtable *extensions, OrgSpongycastleCryptoTlsServerNameList *serverNameList) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_server_name withId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_createServerNameExtensionWithOrgSpongycastleCryptoTlsServerNameList_(serverNameList)];
}

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_addStatusRequestExtensionWithJavaUtilHashtable_withOrgSpongycastleCryptoTlsCertificateStatusRequest_(JavaUtilHashtable *extensions, OrgSpongycastleCryptoTlsCertificateStatusRequest *statusRequest) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_status_request withId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_createStatusRequestExtensionWithOrgSpongycastleCryptoTlsCertificateStatusRequest_(statusRequest)];
}

void OrgSpongycastleCryptoTlsTlsExtensionsUtils_addTruncatedHMacExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_truncated_hmac withId:OrgSpongycastleCryptoTlsTlsExtensionsUtils_createTruncatedHMacExtension()];
}

OrgSpongycastleCryptoTlsHeartbeatExtension *OrgSpongycastleCryptoTlsTlsExtensionsUtils_getHeartbeatExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_heartbeat);
  return extensionData == nil ? nil : OrgSpongycastleCryptoTlsTlsExtensionsUtils_readHeartbeatExtensionWithByteArray_(extensionData);
}

jshort OrgSpongycastleCryptoTlsTlsExtensionsUtils_getMaxFragmentLengthExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_max_fragment_length);
  return extensionData == nil ? -1 : OrgSpongycastleCryptoTlsTlsExtensionsUtils_readMaxFragmentLengthExtensionWithByteArray_(extensionData);
}

jint OrgSpongycastleCryptoTlsTlsExtensionsUtils_getPaddingExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_padding);
  return extensionData == nil ? -1 : OrgSpongycastleCryptoTlsTlsExtensionsUtils_readPaddingExtensionWithByteArray_(extensionData);
}

OrgSpongycastleCryptoTlsServerNameList *OrgSpongycastleCryptoTlsTlsExtensionsUtils_getServerNameExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_server_name);
  return extensionData == nil ? nil : OrgSpongycastleCryptoTlsTlsExtensionsUtils_readServerNameExtensionWithByteArray_(extensionData);
}

OrgSpongycastleCryptoTlsCertificateStatusRequest *OrgSpongycastleCryptoTlsTlsExtensionsUtils_getStatusRequestExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_status_request);
  return extensionData == nil ? nil : OrgSpongycastleCryptoTlsTlsExtensionsUtils_readStatusRequestExtensionWithByteArray_(extensionData);
}

jboolean OrgSpongycastleCryptoTlsTlsExtensionsUtils_hasEncryptThenMACExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_encrypt_then_mac);
  return extensionData == nil ? false : OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEncryptThenMACExtensionWithByteArray_(extensionData);
}

jboolean OrgSpongycastleCryptoTlsTlsExtensionsUtils_hasExtendedMasterSecretExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_extended_master_secret);
  return extensionData == nil ? false : OrgSpongycastleCryptoTlsTlsExtensionsUtils_readExtendedMasterSecretExtensionWithByteArray_(extensionData);
}

jboolean OrgSpongycastleCryptoTlsTlsExtensionsUtils_hasTruncatedHMacExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsExtensionsUtils_EXT_truncated_hmac);
  return extensionData == nil ? false : OrgSpongycastleCryptoTlsTlsExtensionsUtils_readTruncatedHMacExtensionWithByteArray_(extensionData);
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createEmptyExtensionData() {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  return JreLoadStatic(OrgSpongycastleCryptoTlsTlsUtils, EMPTY_BYTES);
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createEncryptThenMACExtension() {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createEmptyExtensionData();
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createExtendedMasterSecretExtension() {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createEmptyExtensionData();
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createHeartbeatExtensionWithOrgSpongycastleCryptoTlsHeartbeatExtension_(OrgSpongycastleCryptoTlsHeartbeatExtension *heartbeatExtension) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (heartbeatExtension == nil) {
    @throw new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(OrgSpongycastleCryptoTlsAlertDescription_internal_error);
  }
  JavaIoByteArrayOutputStream *buf = new_JavaIoByteArrayOutputStream_init();
  [heartbeatExtension encodeWithJavaIoOutputStream:buf];
  return [buf toByteArray];
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createMaxFragmentLengthExtensionWithShort_(jshort maxFragmentLength) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  OrgSpongycastleCryptoTlsTlsUtils_checkUint8WithShort_(maxFragmentLength);
  IOSByteArray *extensionData = [IOSByteArray newArrayWithLength:1];
  OrgSpongycastleCryptoTlsTlsUtils_writeUint8WithShort_withByteArray_withInt_(maxFragmentLength, extensionData, 0);
  return extensionData;
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createPaddingExtensionWithInt_(jint dataLength) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  OrgSpongycastleCryptoTlsTlsUtils_checkUint16WithInt_(dataLength);
  return [IOSByteArray newArrayWithLength:dataLength];
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createServerNameExtensionWithOrgSpongycastleCryptoTlsServerNameList_(OrgSpongycastleCryptoTlsServerNameList *serverNameList) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (serverNameList == nil) {
    @throw new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(OrgSpongycastleCryptoTlsAlertDescription_internal_error);
  }
  JavaIoByteArrayOutputStream *buf = new_JavaIoByteArrayOutputStream_init();
  [serverNameList encodeWithJavaIoOutputStream:buf];
  return [buf toByteArray];
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createStatusRequestExtensionWithOrgSpongycastleCryptoTlsCertificateStatusRequest_(OrgSpongycastleCryptoTlsCertificateStatusRequest *statusRequest) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (statusRequest == nil) {
    @throw new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(OrgSpongycastleCryptoTlsAlertDescription_internal_error);
  }
  JavaIoByteArrayOutputStream *buf = new_JavaIoByteArrayOutputStream_init();
  [statusRequest encodeWithJavaIoOutputStream:buf];
  return [buf toByteArray];
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsExtensionsUtils_createTruncatedHMacExtension() {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_createEmptyExtensionData();
}

jboolean OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEmptyExtensionDataWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (extensionData == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'extensionData' cannot be null");
  }
  if (extensionData->size_ != 0) {
    @throw new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(OrgSpongycastleCryptoTlsAlertDescription_illegal_parameter);
  }
  return true;
}

jboolean OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEncryptThenMACExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEmptyExtensionDataWithByteArray_(extensionData);
}

jboolean OrgSpongycastleCryptoTlsTlsExtensionsUtils_readExtendedMasterSecretExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEmptyExtensionDataWithByteArray_(extensionData);
}

OrgSpongycastleCryptoTlsHeartbeatExtension *OrgSpongycastleCryptoTlsTlsExtensionsUtils_readHeartbeatExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (extensionData == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'extensionData' cannot be null");
  }
  JavaIoByteArrayInputStream *buf = new_JavaIoByteArrayInputStream_initWithByteArray_(extensionData);
  OrgSpongycastleCryptoTlsHeartbeatExtension *heartbeatExtension = OrgSpongycastleCryptoTlsHeartbeatExtension_parseWithJavaIoInputStream_(buf);
  OrgSpongycastleCryptoTlsTlsProtocol_assertEmptyWithJavaIoByteArrayInputStream_(buf);
  return heartbeatExtension;
}

jshort OrgSpongycastleCryptoTlsTlsExtensionsUtils_readMaxFragmentLengthExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (extensionData == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'extensionData' cannot be null");
  }
  if (extensionData->size_ != 1) {
    @throw new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(OrgSpongycastleCryptoTlsAlertDescription_decode_error);
  }
  return OrgSpongycastleCryptoTlsTlsUtils_readUint8WithByteArray_withInt_(extensionData, 0);
}

jint OrgSpongycastleCryptoTlsTlsExtensionsUtils_readPaddingExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (extensionData == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'extensionData' cannot be null");
  }
  for (jint i = 0; i < extensionData->size_; ++i) {
    if (IOSByteArray_Get(extensionData, i) != 0) {
      @throw new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(OrgSpongycastleCryptoTlsAlertDescription_illegal_parameter);
    }
  }
  return extensionData->size_;
}

OrgSpongycastleCryptoTlsServerNameList *OrgSpongycastleCryptoTlsTlsExtensionsUtils_readServerNameExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (extensionData == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'extensionData' cannot be null");
  }
  JavaIoByteArrayInputStream *buf = new_JavaIoByteArrayInputStream_initWithByteArray_(extensionData);
  OrgSpongycastleCryptoTlsServerNameList *serverNameList = OrgSpongycastleCryptoTlsServerNameList_parseWithJavaIoInputStream_(buf);
  OrgSpongycastleCryptoTlsTlsProtocol_assertEmptyWithJavaIoByteArrayInputStream_(buf);
  return serverNameList;
}

OrgSpongycastleCryptoTlsCertificateStatusRequest *OrgSpongycastleCryptoTlsTlsExtensionsUtils_readStatusRequestExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  if (extensionData == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'extensionData' cannot be null");
  }
  JavaIoByteArrayInputStream *buf = new_JavaIoByteArrayInputStream_initWithByteArray_(extensionData);
  OrgSpongycastleCryptoTlsCertificateStatusRequest *statusRequest = OrgSpongycastleCryptoTlsCertificateStatusRequest_parseWithJavaIoInputStream_(buf);
  OrgSpongycastleCryptoTlsTlsProtocol_assertEmptyWithJavaIoByteArrayInputStream_(buf);
  return statusRequest;
}

jboolean OrgSpongycastleCryptoTlsTlsExtensionsUtils_readTruncatedHMacExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsExtensionsUtils_initialize();
  return OrgSpongycastleCryptoTlsTlsExtensionsUtils_readEmptyExtensionDataWithByteArray_(extensionData);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsTlsExtensionsUtils)
