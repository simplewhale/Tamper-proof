//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/CertificateType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateType")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsCertificateType
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateType 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateType 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsCertificateType

#if !defined (OrgSpongycastleCryptoTlsCertificateType_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateType || defined(INCLUDE_OrgSpongycastleCryptoTlsCertificateType))
#define OrgSpongycastleCryptoTlsCertificateType_

@interface OrgSpongycastleCryptoTlsCertificateType : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsCertificateType)

inline jshort OrgSpongycastleCryptoTlsCertificateType_get_X509(void);
#define OrgSpongycastleCryptoTlsCertificateType_X509 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsCertificateType, X509, jshort)

inline jshort OrgSpongycastleCryptoTlsCertificateType_get_OpenPGP(void);
#define OrgSpongycastleCryptoTlsCertificateType_OpenPGP 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsCertificateType, OpenPGP, jshort)

inline jshort OrgSpongycastleCryptoTlsCertificateType_get_RawPublicKey(void);
#define OrgSpongycastleCryptoTlsCertificateType_RawPublicKey 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsCertificateType, RawPublicKey, jshort)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsCertificateType_init(OrgSpongycastleCryptoTlsCertificateType *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateType *new_OrgSpongycastleCryptoTlsCertificateType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateType *create_OrgSpongycastleCryptoTlsCertificateType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsCertificateType)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateType")
