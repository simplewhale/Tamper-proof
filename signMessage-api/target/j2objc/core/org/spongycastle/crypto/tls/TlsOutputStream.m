//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsOutputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "org/spongycastle/crypto/tls/TlsOutputStream.h"
#include "org/spongycastle/crypto/tls/TlsProtocol.h"

@interface OrgSpongycastleCryptoTlsTlsOutputStream () {
 @public
  IOSByteArray *buf_;
  OrgSpongycastleCryptoTlsTlsProtocol *handler_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsOutputStream, buf_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsTlsOutputStream, handler_, OrgSpongycastleCryptoTlsTlsProtocol *)

@implementation OrgSpongycastleCryptoTlsTlsOutputStream

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsProtocol:(OrgSpongycastleCryptoTlsTlsProtocol *)handler {
  OrgSpongycastleCryptoTlsTlsOutputStream_initWithOrgSpongycastleCryptoTlsTlsProtocol_(self, handler);
  return self;
}

- (void)writeWithByteArray:(IOSByteArray *)buf
                   withInt:(jint)offset
                   withInt:(jint)len {
  [((OrgSpongycastleCryptoTlsTlsProtocol *) nil_chk(self->handler_)) writeDataWithByteArray:buf withInt:offset withInt:len];
}

- (void)writeWithInt:(jint)arg0 {
  *IOSByteArray_GetRef(nil_chk(buf_), 0) = (jbyte) arg0;
  [self writeWithByteArray:buf_ withInt:0 withInt:1];
}

- (void)close {
  [((OrgSpongycastleCryptoTlsTlsProtocol *) nil_chk(handler_)) close];
}

- (void)flush {
  [((OrgSpongycastleCryptoTlsTlsProtocol *) nil_chk(handler_)) flush];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoTlsTlsProtocol:);
  methods[1].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(writeWithInt:);
  methods[3].selector = @selector(close);
  methods[4].selector = @selector(flush);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "buf_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "handler_", "LOrgSpongycastleCryptoTlsTlsProtocol;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoTlsTlsProtocol;", "write", "[BII", "LJavaIoIOException;", "I" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsTlsOutputStream = { "TlsOutputStream", "org.spongycastle.crypto.tls", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsTlsOutputStream;
}

@end

void OrgSpongycastleCryptoTlsTlsOutputStream_initWithOrgSpongycastleCryptoTlsTlsProtocol_(OrgSpongycastleCryptoTlsTlsOutputStream *self, OrgSpongycastleCryptoTlsTlsProtocol *handler) {
  JavaIoOutputStream_init(self);
  self->buf_ = [IOSByteArray newArrayWithLength:1];
  self->handler_ = handler;
}

OrgSpongycastleCryptoTlsTlsOutputStream *new_OrgSpongycastleCryptoTlsTlsOutputStream_initWithOrgSpongycastleCryptoTlsTlsProtocol_(OrgSpongycastleCryptoTlsTlsProtocol *handler) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsTlsOutputStream, initWithOrgSpongycastleCryptoTlsTlsProtocol_, handler)
}

OrgSpongycastleCryptoTlsTlsOutputStream *create_OrgSpongycastleCryptoTlsTlsOutputStream_initWithOrgSpongycastleCryptoTlsTlsProtocol_(OrgSpongycastleCryptoTlsTlsProtocol *handler) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsTlsOutputStream, initWithOrgSpongycastleCryptoTlsTlsProtocol_, handler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsTlsOutputStream)
