//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsFatalAlert.java
//

#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "org/spongycastle/crypto/tls/AlertDescription.h"
#include "org/spongycastle/crypto/tls/TlsException.h"
#include "org/spongycastle/crypto/tls/TlsFatalAlert.h"

@implementation OrgSpongycastleCryptoTlsTlsFatalAlert

- (instancetype)initWithShort:(jshort)alertDescription {
  OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(self, alertDescription);
  return self;
}

- (instancetype)initWithShort:(jshort)alertDescription
        withJavaLangThrowable:(JavaLangThrowable *)alertCause {
  OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_withJavaLangThrowable_(self, alertDescription, alertCause);
  return self;
}

- (jshort)getAlertDescription {
  return alertDescription_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "S", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithShort:);
  methods[1].selector = @selector(initWithShort:withJavaLangThrowable:);
  methods[2].selector = @selector(getAlertDescription);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "alertDescription_", "S", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "S", "SLJavaLangThrowable;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsTlsFatalAlert = { "TlsFatalAlert", "org.spongycastle.crypto.tls", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsTlsFatalAlert;
}

@end

void OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(OrgSpongycastleCryptoTlsTlsFatalAlert *self, jshort alertDescription) {
  OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_withJavaLangThrowable_(self, alertDescription, nil);
}

OrgSpongycastleCryptoTlsTlsFatalAlert *new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(jshort alertDescription) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsTlsFatalAlert, initWithShort_, alertDescription)
}

OrgSpongycastleCryptoTlsTlsFatalAlert *create_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(jshort alertDescription) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsTlsFatalAlert, initWithShort_, alertDescription)
}

void OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_withJavaLangThrowable_(OrgSpongycastleCryptoTlsTlsFatalAlert *self, jshort alertDescription, JavaLangThrowable *alertCause) {
  OrgSpongycastleCryptoTlsTlsException_initWithNSString_withJavaLangThrowable_(self, OrgSpongycastleCryptoTlsAlertDescription_getTextWithShort_(alertDescription), alertCause);
  self->alertDescription_ = alertDescription;
}

OrgSpongycastleCryptoTlsTlsFatalAlert *new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_withJavaLangThrowable_(jshort alertDescription, JavaLangThrowable *alertCause) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsTlsFatalAlert, initWithShort_withJavaLangThrowable_, alertDescription, alertCause)
}

OrgSpongycastleCryptoTlsTlsFatalAlert *create_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_withJavaLangThrowable_(jshort alertDescription, JavaLangThrowable *alertCause) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsTlsFatalAlert, initWithShort_withJavaLangThrowable_, alertDescription, alertCause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsTlsFatalAlert)
