//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/CipherType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCipherType")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsCipherType
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCipherType 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCipherType 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsCipherType

#if !defined (OrgSpongycastleCryptoTlsCipherType_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsCipherType || defined(INCLUDE_OrgSpongycastleCryptoTlsCipherType))
#define OrgSpongycastleCryptoTlsCipherType_

@interface OrgSpongycastleCryptoTlsCipherType : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsCipherType)

inline jint OrgSpongycastleCryptoTlsCipherType_get_stream(void);
#define OrgSpongycastleCryptoTlsCipherType_stream 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsCipherType, stream, jint)

inline jint OrgSpongycastleCryptoTlsCipherType_get_block(void);
#define OrgSpongycastleCryptoTlsCipherType_block 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsCipherType, block, jint)

inline jint OrgSpongycastleCryptoTlsCipherType_get_aead(void);
#define OrgSpongycastleCryptoTlsCipherType_aead 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsCipherType, aead, jint)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsCipherType_init(OrgSpongycastleCryptoTlsCipherType *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCipherType *new_OrgSpongycastleCryptoTlsCipherType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCipherType *create_OrgSpongycastleCryptoTlsCipherType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsCipherType)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCipherType")
