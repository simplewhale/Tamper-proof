//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/BasicTlsPSKIdentity.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity

#if !defined (OrgSpongycastleCryptoTlsBasicTlsPSKIdentity_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity || defined(INCLUDE_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity))
#define OrgSpongycastleCryptoTlsBasicTlsPSKIdentity_

#define RESTRICT_OrgSpongycastleCryptoTlsTlsPSKIdentity 1
#define INCLUDE_OrgSpongycastleCryptoTlsTlsPSKIdentity 1
#include "org/spongycastle/crypto/tls/TlsPSKIdentity.h"

@class IOSByteArray;

@interface OrgSpongycastleCryptoTlsBasicTlsPSKIdentity : NSObject < OrgSpongycastleCryptoTlsTlsPSKIdentity > {
 @public
  IOSByteArray *identity_;
  IOSByteArray *psk_;
}

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)identity
                    withByteArray:(IOSByteArray *)psk;

- (instancetype)initWithNSString:(NSString *)identity
                   withByteArray:(IOSByteArray *)psk;

- (IOSByteArray *)getPSK;

- (IOSByteArray *)getPSKIdentity;

- (void)notifyIdentityHintWithByteArray:(IOSByteArray *)psk_identity_hint;

- (void)skipIdentityHint;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsBasicTlsPSKIdentity)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsBasicTlsPSKIdentity, identity_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsBasicTlsPSKIdentity, psk_, IOSByteArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsBasicTlsPSKIdentity_initWithByteArray_withByteArray_(OrgSpongycastleCryptoTlsBasicTlsPSKIdentity *self, IOSByteArray *identity, IOSByteArray *psk);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsBasicTlsPSKIdentity *new_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity_initWithByteArray_withByteArray_(IOSByteArray *identity, IOSByteArray *psk) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsBasicTlsPSKIdentity *create_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity_initWithByteArray_withByteArray_(IOSByteArray *identity, IOSByteArray *psk);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsBasicTlsPSKIdentity_initWithNSString_withByteArray_(OrgSpongycastleCryptoTlsBasicTlsPSKIdentity *self, NSString *identity, IOSByteArray *psk);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsBasicTlsPSKIdentity *new_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity_initWithNSString_withByteArray_(NSString *identity, IOSByteArray *psk) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsBasicTlsPSKIdentity *create_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity_initWithNSString_withByteArray_(NSString *identity, IOSByteArray *psk);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsBasicTlsPSKIdentity)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsBasicTlsPSKIdentity")
