//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsKeyExchange.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/tls/TlsKeyExchange.h"

@interface OrgSpongycastleCryptoTlsTlsKeyExchange : NSObject

@end

@implementation OrgSpongycastleCryptoTlsTlsKeyExchange

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, 2, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 10, 2, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 12, 6, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 13, 14, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 15, 8, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init__WithOrgSpongycastleCryptoTlsTlsContext:);
  methods[1].selector = @selector(skipServerCredentials);
  methods[2].selector = @selector(processServerCredentialsWithOrgSpongycastleCryptoTlsTlsCredentials:);
  methods[3].selector = @selector(processServerCertificateWithOrgSpongycastleCryptoTlsCertificate:);
  methods[4].selector = @selector(requiresServerKeyExchange);
  methods[5].selector = @selector(generateServerKeyExchange);
  methods[6].selector = @selector(skipServerKeyExchange);
  methods[7].selector = @selector(processServerKeyExchangeWithJavaIoInputStream:);
  methods[8].selector = @selector(validateCertificateRequestWithOrgSpongycastleCryptoTlsCertificateRequest:);
  methods[9].selector = @selector(skipClientCredentials);
  methods[10].selector = @selector(processClientCredentialsWithOrgSpongycastleCryptoTlsTlsCredentials:);
  methods[11].selector = @selector(processClientCertificateWithOrgSpongycastleCryptoTlsCertificate:);
  methods[12].selector = @selector(generateClientKeyExchangeWithJavaIoOutputStream:);
  methods[13].selector = @selector(processClientKeyExchangeWithJavaIoInputStream:);
  methods[14].selector = @selector(generatePremasterSecret);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoTlsTlsContext;", "LJavaIoIOException;", "processServerCredentials", "LOrgSpongycastleCryptoTlsTlsCredentials;", "processServerCertificate", "LOrgSpongycastleCryptoTlsCertificate;", "processServerKeyExchange", "LJavaIoInputStream;", "validateCertificateRequest", "LOrgSpongycastleCryptoTlsCertificateRequest;", "processClientCredentials", "processClientCertificate", "generateClientKeyExchange", "LJavaIoOutputStream;", "processClientKeyExchange" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsTlsKeyExchange = { "TlsKeyExchange", "org.spongycastle.crypto.tls", ptrTable, methods, NULL, 7, 0x609, 15, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsTlsKeyExchange;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsTlsKeyExchange)
