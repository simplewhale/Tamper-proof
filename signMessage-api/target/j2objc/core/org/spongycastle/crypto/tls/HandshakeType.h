//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/HandshakeType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsHandshakeType")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsHandshakeType
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsHandshakeType 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsHandshakeType 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsHandshakeType

#if !defined (OrgSpongycastleCryptoTlsHandshakeType_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsHandshakeType || defined(INCLUDE_OrgSpongycastleCryptoTlsHandshakeType))
#define OrgSpongycastleCryptoTlsHandshakeType_

@interface OrgSpongycastleCryptoTlsHandshakeType : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsHandshakeType)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_hello_request(void);
#define OrgSpongycastleCryptoTlsHandshakeType_hello_request 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, hello_request, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_client_hello(void);
#define OrgSpongycastleCryptoTlsHandshakeType_client_hello 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, client_hello, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_server_hello(void);
#define OrgSpongycastleCryptoTlsHandshakeType_server_hello 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, server_hello, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_certificate(void);
#define OrgSpongycastleCryptoTlsHandshakeType_certificate 11
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, certificate, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_server_key_exchange(void);
#define OrgSpongycastleCryptoTlsHandshakeType_server_key_exchange 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, server_key_exchange, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_certificate_request(void);
#define OrgSpongycastleCryptoTlsHandshakeType_certificate_request 13
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, certificate_request, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_server_hello_done(void);
#define OrgSpongycastleCryptoTlsHandshakeType_server_hello_done 14
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, server_hello_done, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_certificate_verify(void);
#define OrgSpongycastleCryptoTlsHandshakeType_certificate_verify 15
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, certificate_verify, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_client_key_exchange(void);
#define OrgSpongycastleCryptoTlsHandshakeType_client_key_exchange 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, client_key_exchange, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_finished(void);
#define OrgSpongycastleCryptoTlsHandshakeType_finished 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, finished, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_certificate_url(void);
#define OrgSpongycastleCryptoTlsHandshakeType_certificate_url 21
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, certificate_url, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_certificate_status(void);
#define OrgSpongycastleCryptoTlsHandshakeType_certificate_status 22
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, certificate_status, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_hello_verify_request(void);
#define OrgSpongycastleCryptoTlsHandshakeType_hello_verify_request 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, hello_verify_request, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_supplemental_data(void);
#define OrgSpongycastleCryptoTlsHandshakeType_supplemental_data 23
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, supplemental_data, jshort)

inline jshort OrgSpongycastleCryptoTlsHandshakeType_get_session_ticket(void);
#define OrgSpongycastleCryptoTlsHandshakeType_session_ticket 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsHandshakeType, session_ticket, jshort)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsHandshakeType_init(OrgSpongycastleCryptoTlsHandshakeType *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsHandshakeType *new_OrgSpongycastleCryptoTlsHandshakeType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsHandshakeType *create_OrgSpongycastleCryptoTlsHandshakeType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsHandshakeType)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsHandshakeType")
