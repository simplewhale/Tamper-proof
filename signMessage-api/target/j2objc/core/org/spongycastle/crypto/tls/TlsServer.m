//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsServer.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/tls/TlsServer.h"

@interface OrgSpongycastleCryptoTlsTlsServer : NSObject

@end

@implementation OrgSpongycastleCryptoTlsTlsServer

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, 4, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, 4, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 10, 4, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 12, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsProtocolVersion;", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "S", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "LJavaUtilHashtable;", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsTlsCredentials;", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsCertificateStatus;", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsTlsKeyExchange;", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsCertificateRequest;", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x401, 13, 14, 4, -1, -1, -1 },
    { NULL, "V", 0x401, 15, 16, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsNewSessionTicket;", 0x401, -1, -1, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init__WithOrgSpongycastleCryptoTlsTlsServerContext:);
  methods[1].selector = @selector(notifyClientVersionWithOrgSpongycastleCryptoTlsProtocolVersion:);
  methods[2].selector = @selector(notifyFallbackWithBoolean:);
  methods[3].selector = @selector(notifyOfferedCipherSuitesWithIntArray:);
  methods[4].selector = @selector(notifyOfferedCompressionMethodsWithShortArray:);
  methods[5].selector = @selector(processClientExtensionsWithJavaUtilHashtable:);
  methods[6].selector = @selector(getServerVersion);
  methods[7].selector = @selector(getSelectedCipherSuite);
  methods[8].selector = @selector(getSelectedCompressionMethod);
  methods[9].selector = @selector(getServerExtensions);
  methods[10].selector = @selector(getServerSupplementalData);
  methods[11].selector = @selector(getCredentials);
  methods[12].selector = @selector(getCertificateStatus);
  methods[13].selector = @selector(getKeyExchange);
  methods[14].selector = @selector(getCertificateRequest);
  methods[15].selector = @selector(processClientSupplementalDataWithJavaUtilVector:);
  methods[16].selector = @selector(notifyClientCertificateWithOrgSpongycastleCryptoTlsCertificate:);
  methods[17].selector = @selector(getNewSessionTicket);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "init", "LOrgSpongycastleCryptoTlsTlsServerContext;", "notifyClientVersion", "LOrgSpongycastleCryptoTlsProtocolVersion;", "LJavaIoIOException;", "notifyFallback", "Z", "notifyOfferedCipherSuites", "[I", "notifyOfferedCompressionMethods", "[S", "processClientExtensions", "LJavaUtilHashtable;", "processClientSupplementalData", "LJavaUtilVector;", "notifyClientCertificate", "LOrgSpongycastleCryptoTlsCertificate;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsTlsServer = { "TlsServer", "org.spongycastle.crypto.tls", ptrTable, methods, NULL, 7, 0x609, 18, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsTlsServer;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsTlsServer)
