//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsSRTPUtils.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/Hashtable.h"
#include "org/spongycastle/crypto/tls/AlertDescription.h"
#include "org/spongycastle/crypto/tls/ExtensionType.h"
#include "org/spongycastle/crypto/tls/TlsFatalAlert.h"
#include "org/spongycastle/crypto/tls/TlsProtocol.h"
#include "org/spongycastle/crypto/tls/TlsSRTPUtils.h"
#include "org/spongycastle/crypto/tls/TlsUtils.h"
#include "org/spongycastle/crypto/tls/UseSRTPData.h"
#include "org/spongycastle/util/Integers.h"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoTlsTlsSRTPUtils)

JavaLangInteger *OrgSpongycastleCryptoTlsTlsSRTPUtils_EXT_use_srtp;

@implementation OrgSpongycastleCryptoTlsTlsSRTPUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoTlsTlsSRTPUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)addUseSRTPExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions
         withOrgSpongycastleCryptoTlsUseSRTPData:(OrgSpongycastleCryptoTlsUseSRTPData *)useSRTPData {
  OrgSpongycastleCryptoTlsTlsSRTPUtils_addUseSRTPExtensionWithJavaUtilHashtable_withOrgSpongycastleCryptoTlsUseSRTPData_(extensions, useSRTPData);
}

+ (OrgSpongycastleCryptoTlsUseSRTPData *)getUseSRTPExtensionWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  return OrgSpongycastleCryptoTlsTlsSRTPUtils_getUseSRTPExtensionWithJavaUtilHashtable_(extensions);
}

+ (IOSByteArray *)createUseSRTPExtensionWithOrgSpongycastleCryptoTlsUseSRTPData:(OrgSpongycastleCryptoTlsUseSRTPData *)useSRTPData {
  return OrgSpongycastleCryptoTlsTlsSRTPUtils_createUseSRTPExtensionWithOrgSpongycastleCryptoTlsUseSRTPData_(useSRTPData);
}

+ (OrgSpongycastleCryptoTlsUseSRTPData *)readUseSRTPExtensionWithByteArray:(IOSByteArray *)extensionData {
  return OrgSpongycastleCryptoTlsTlsSRTPUtils_readUseSRTPExtensionWithByteArray_(extensionData);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsUseSRTPData;", 0x9, 3, 4, 2, -1, -1, -1 },
    { NULL, "[B", 0x9, 5, 6, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsUseSRTPData;", 0x9, 7, 8, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addUseSRTPExtensionWithJavaUtilHashtable:withOrgSpongycastleCryptoTlsUseSRTPData:);
  methods[2].selector = @selector(getUseSRTPExtensionWithJavaUtilHashtable:);
  methods[3].selector = @selector(createUseSRTPExtensionWithOrgSpongycastleCryptoTlsUseSRTPData:);
  methods[4].selector = @selector(readUseSRTPExtensionWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EXT_use_srtp", "LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "addUseSRTPExtension", "LJavaUtilHashtable;LOrgSpongycastleCryptoTlsUseSRTPData;", "LJavaIoIOException;", "getUseSRTPExtension", "LJavaUtilHashtable;", "createUseSRTPExtension", "LOrgSpongycastleCryptoTlsUseSRTPData;", "readUseSRTPExtension", "[B", &OrgSpongycastleCryptoTlsTlsSRTPUtils_EXT_use_srtp };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsTlsSRTPUtils = { "TlsSRTPUtils", "org.spongycastle.crypto.tls", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsTlsSRTPUtils;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoTlsTlsSRTPUtils class]) {
    OrgSpongycastleCryptoTlsTlsSRTPUtils_EXT_use_srtp = OrgSpongycastleUtilIntegers_valueOfWithInt_(OrgSpongycastleCryptoTlsExtensionType_use_srtp);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoTlsTlsSRTPUtils)
  }
}

@end

void OrgSpongycastleCryptoTlsTlsSRTPUtils_init(OrgSpongycastleCryptoTlsTlsSRTPUtils *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoTlsTlsSRTPUtils *new_OrgSpongycastleCryptoTlsTlsSRTPUtils_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsTlsSRTPUtils, init)
}

OrgSpongycastleCryptoTlsTlsSRTPUtils *create_OrgSpongycastleCryptoTlsTlsSRTPUtils_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsTlsSRTPUtils, init)
}

void OrgSpongycastleCryptoTlsTlsSRTPUtils_addUseSRTPExtensionWithJavaUtilHashtable_withOrgSpongycastleCryptoTlsUseSRTPData_(JavaUtilHashtable *extensions, OrgSpongycastleCryptoTlsUseSRTPData *useSRTPData) {
  OrgSpongycastleCryptoTlsTlsSRTPUtils_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(extensions)) putWithId:OrgSpongycastleCryptoTlsTlsSRTPUtils_EXT_use_srtp withId:OrgSpongycastleCryptoTlsTlsSRTPUtils_createUseSRTPExtensionWithOrgSpongycastleCryptoTlsUseSRTPData_(useSRTPData)];
}

OrgSpongycastleCryptoTlsUseSRTPData *OrgSpongycastleCryptoTlsTlsSRTPUtils_getUseSRTPExtensionWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  OrgSpongycastleCryptoTlsTlsSRTPUtils_initialize();
  IOSByteArray *extensionData = OrgSpongycastleCryptoTlsTlsUtils_getExtensionDataWithJavaUtilHashtable_withJavaLangInteger_(extensions, OrgSpongycastleCryptoTlsTlsSRTPUtils_EXT_use_srtp);
  return extensionData == nil ? nil : OrgSpongycastleCryptoTlsTlsSRTPUtils_readUseSRTPExtensionWithByteArray_(extensionData);
}

IOSByteArray *OrgSpongycastleCryptoTlsTlsSRTPUtils_createUseSRTPExtensionWithOrgSpongycastleCryptoTlsUseSRTPData_(OrgSpongycastleCryptoTlsUseSRTPData *useSRTPData) {
  OrgSpongycastleCryptoTlsTlsSRTPUtils_initialize();
  if (useSRTPData == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'useSRTPData' cannot be null");
  }
  JavaIoByteArrayOutputStream *buf = new_JavaIoByteArrayOutputStream_init();
  OrgSpongycastleCryptoTlsTlsUtils_writeUint16ArrayWithUint16LengthWithIntArray_withJavaIoOutputStream_([useSRTPData getProtectionProfiles], buf);
  OrgSpongycastleCryptoTlsTlsUtils_writeOpaque8WithByteArray_withJavaIoOutputStream_([useSRTPData getMki], buf);
  return [buf toByteArray];
}

OrgSpongycastleCryptoTlsUseSRTPData *OrgSpongycastleCryptoTlsTlsSRTPUtils_readUseSRTPExtensionWithByteArray_(IOSByteArray *extensionData) {
  OrgSpongycastleCryptoTlsTlsSRTPUtils_initialize();
  if (extensionData == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'extensionData' cannot be null");
  }
  JavaIoByteArrayInputStream *buf = new_JavaIoByteArrayInputStream_initWithByteArray_(extensionData);
  jint length = OrgSpongycastleCryptoTlsTlsUtils_readUint16WithJavaIoInputStream_(buf);
  if (length < 2 || (length & 1) != 0) {
    @throw new_OrgSpongycastleCryptoTlsTlsFatalAlert_initWithShort_(OrgSpongycastleCryptoTlsAlertDescription_decode_error);
  }
  IOSIntArray *protectionProfiles = OrgSpongycastleCryptoTlsTlsUtils_readUint16ArrayWithInt_withJavaIoInputStream_(length / 2, buf);
  IOSByteArray *mki = OrgSpongycastleCryptoTlsTlsUtils_readOpaque8WithJavaIoInputStream_(buf);
  OrgSpongycastleCryptoTlsTlsProtocol_assertEmptyWithJavaIoByteArrayInputStream_(buf);
  return new_OrgSpongycastleCryptoTlsUseSRTPData_initWithIntArray_withByteArray_(protectionProfiles, mki);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsTlsSRTPUtils)
