//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/NewSessionTicket.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsNewSessionTicket")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsNewSessionTicket
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsNewSessionTicket 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsNewSessionTicket 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsNewSessionTicket

#if !defined (OrgSpongycastleCryptoTlsNewSessionTicket_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsNewSessionTicket || defined(INCLUDE_OrgSpongycastleCryptoTlsNewSessionTicket))
#define OrgSpongycastleCryptoTlsNewSessionTicket_

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;

@interface OrgSpongycastleCryptoTlsNewSessionTicket : NSObject {
 @public
  jlong ticketLifetimeHint_;
  IOSByteArray *ticket_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)ticketLifetimeHint
               withByteArray:(IOSByteArray *)ticket;

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (IOSByteArray *)getTicket;

- (jlong)getTicketLifetimeHint;

+ (OrgSpongycastleCryptoTlsNewSessionTicket *)parseWithJavaIoInputStream:(JavaIoInputStream *)input;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsNewSessionTicket)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsNewSessionTicket, ticket_, IOSByteArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsNewSessionTicket_initWithLong_withByteArray_(OrgSpongycastleCryptoTlsNewSessionTicket *self, jlong ticketLifetimeHint, IOSByteArray *ticket);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsNewSessionTicket *new_OrgSpongycastleCryptoTlsNewSessionTicket_initWithLong_withByteArray_(jlong ticketLifetimeHint, IOSByteArray *ticket) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsNewSessionTicket *create_OrgSpongycastleCryptoTlsNewSessionTicket_initWithLong_withByteArray_(jlong ticketLifetimeHint, IOSByteArray *ticket);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsNewSessionTicket *OrgSpongycastleCryptoTlsNewSessionTicket_parseWithJavaIoInputStream_(JavaIoInputStream *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsNewSessionTicket)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsNewSessionTicket")
