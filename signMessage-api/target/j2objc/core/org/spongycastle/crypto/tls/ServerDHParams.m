//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/ServerDHParams.java
//

#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/crypto/params/DHParameters.h"
#include "org/spongycastle/crypto/params/DHPublicKeyParameters.h"
#include "org/spongycastle/crypto/tls/ServerDHParams.h"
#include "org/spongycastle/crypto/tls/TlsDHUtils.h"

@implementation OrgSpongycastleCryptoTlsServerDHParams

- (instancetype)initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters:(OrgSpongycastleCryptoParamsDHPublicKeyParameters *)publicKey {
  OrgSpongycastleCryptoTlsServerDHParams_initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_(self, publicKey);
  return self;
}

- (OrgSpongycastleCryptoParamsDHPublicKeyParameters *)getPublicKey {
  return publicKey_;
}

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgSpongycastleCryptoParamsDHParameters *dhParameters = [((OrgSpongycastleCryptoParamsDHPublicKeyParameters *) nil_chk(publicKey_)) getParameters];
  JavaMathBigInteger *Ys = [((OrgSpongycastleCryptoParamsDHPublicKeyParameters *) nil_chk(publicKey_)) getY];
  OrgSpongycastleCryptoTlsTlsDHUtils_writeDHParameterWithJavaMathBigInteger_withJavaIoOutputStream_([((OrgSpongycastleCryptoParamsDHParameters *) nil_chk(dhParameters)) getP], output);
  OrgSpongycastleCryptoTlsTlsDHUtils_writeDHParameterWithJavaMathBigInteger_withJavaIoOutputStream_([dhParameters getG], output);
  OrgSpongycastleCryptoTlsTlsDHUtils_writeDHParameterWithJavaMathBigInteger_withJavaIoOutputStream_(Ys, output);
}

+ (OrgSpongycastleCryptoTlsServerDHParams *)parseWithJavaIoInputStream:(JavaIoInputStream *)input {
  return OrgSpongycastleCryptoTlsServerDHParams_parseWithJavaIoInputStream_(input);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsDHPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoTlsServerDHParams;", 0x9, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters:);
  methods[1].selector = @selector(getPublicKey);
  methods[2].selector = @selector(encodeWithJavaIoOutputStream:);
  methods[3].selector = @selector(parseWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "publicKey_", "LOrgSpongycastleCryptoParamsDHPublicKeyParameters;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoParamsDHPublicKeyParameters;", "encode", "LJavaIoOutputStream;", "LJavaIoIOException;", "parse", "LJavaIoInputStream;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsServerDHParams = { "ServerDHParams", "org.spongycastle.crypto.tls", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsServerDHParams;
}

@end

void OrgSpongycastleCryptoTlsServerDHParams_initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_(OrgSpongycastleCryptoTlsServerDHParams *self, OrgSpongycastleCryptoParamsDHPublicKeyParameters *publicKey) {
  NSObject_init(self);
  if (publicKey == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'publicKey' cannot be null");
  }
  self->publicKey_ = publicKey;
}

OrgSpongycastleCryptoTlsServerDHParams *new_OrgSpongycastleCryptoTlsServerDHParams_initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_(OrgSpongycastleCryptoParamsDHPublicKeyParameters *publicKey) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsServerDHParams, initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_, publicKey)
}

OrgSpongycastleCryptoTlsServerDHParams *create_OrgSpongycastleCryptoTlsServerDHParams_initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_(OrgSpongycastleCryptoParamsDHPublicKeyParameters *publicKey) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsServerDHParams, initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_, publicKey)
}

OrgSpongycastleCryptoTlsServerDHParams *OrgSpongycastleCryptoTlsServerDHParams_parseWithJavaIoInputStream_(JavaIoInputStream *input) {
  OrgSpongycastleCryptoTlsServerDHParams_initialize();
  JavaMathBigInteger *p = OrgSpongycastleCryptoTlsTlsDHUtils_readDHParameterWithJavaIoInputStream_(input);
  JavaMathBigInteger *g = OrgSpongycastleCryptoTlsTlsDHUtils_readDHParameterWithJavaIoInputStream_(input);
  JavaMathBigInteger *Ys = OrgSpongycastleCryptoTlsTlsDHUtils_readDHParameterWithJavaIoInputStream_(input);
  return new_OrgSpongycastleCryptoTlsServerDHParams_initWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_(OrgSpongycastleCryptoTlsTlsDHUtils_validateDHPublicKeyWithOrgSpongycastleCryptoParamsDHPublicKeyParameters_(new_OrgSpongycastleCryptoParamsDHPublicKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsDHParameters_(Ys, new_OrgSpongycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(p, g))));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsServerDHParams)
