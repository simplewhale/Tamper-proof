//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/UserMappingType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsUserMappingType")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsUserMappingType
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsUserMappingType 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsUserMappingType 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsUserMappingType

#if !defined (OrgSpongycastleCryptoTlsUserMappingType_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsUserMappingType || defined(INCLUDE_OrgSpongycastleCryptoTlsUserMappingType))
#define OrgSpongycastleCryptoTlsUserMappingType_

@interface OrgSpongycastleCryptoTlsUserMappingType : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsUserMappingType)

inline jshort OrgSpongycastleCryptoTlsUserMappingType_get_upn_domain_hint(void);
#define OrgSpongycastleCryptoTlsUserMappingType_upn_domain_hint 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsUserMappingType, upn_domain_hint, jshort)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsUserMappingType_init(OrgSpongycastleCryptoTlsUserMappingType *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsUserMappingType *new_OrgSpongycastleCryptoTlsUserMappingType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsUserMappingType *create_OrgSpongycastleCryptoTlsUserMappingType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsUserMappingType)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsUserMappingType")
