//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/ClientAuthenticationType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsClientAuthenticationType")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsClientAuthenticationType
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsClientAuthenticationType 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsClientAuthenticationType 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsClientAuthenticationType

#if !defined (OrgSpongycastleCryptoTlsClientAuthenticationType_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsClientAuthenticationType || defined(INCLUDE_OrgSpongycastleCryptoTlsClientAuthenticationType))
#define OrgSpongycastleCryptoTlsClientAuthenticationType_

@interface OrgSpongycastleCryptoTlsClientAuthenticationType : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsClientAuthenticationType)

inline jshort OrgSpongycastleCryptoTlsClientAuthenticationType_get_anonymous(void);
#define OrgSpongycastleCryptoTlsClientAuthenticationType_anonymous 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientAuthenticationType, anonymous, jshort)

inline jshort OrgSpongycastleCryptoTlsClientAuthenticationType_get_certificate_based(void);
#define OrgSpongycastleCryptoTlsClientAuthenticationType_certificate_based 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientAuthenticationType, certificate_based, jshort)

inline jshort OrgSpongycastleCryptoTlsClientAuthenticationType_get_psk(void);
#define OrgSpongycastleCryptoTlsClientAuthenticationType_psk 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsClientAuthenticationType, psk, jshort)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsClientAuthenticationType_init(OrgSpongycastleCryptoTlsClientAuthenticationType *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsClientAuthenticationType *new_OrgSpongycastleCryptoTlsClientAuthenticationType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsClientAuthenticationType *create_OrgSpongycastleCryptoTlsClientAuthenticationType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsClientAuthenticationType)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsClientAuthenticationType")
