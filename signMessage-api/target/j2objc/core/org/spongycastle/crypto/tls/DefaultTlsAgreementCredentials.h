//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/DefaultTlsAgreementCredentials.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials

#if !defined (OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials || defined(INCLUDE_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials))
#define OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsAgreementCredentials 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsAgreementCredentials 1
#include "org/spongycastle/crypto/tls/AbstractTlsAgreementCredentials.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@class OrgSpongycastleCryptoTlsCertificate;
@protocol OrgSpongycastleCryptoBasicAgreement;

@interface OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials : OrgSpongycastleCryptoTlsAbstractTlsAgreementCredentials {
 @public
  OrgSpongycastleCryptoTlsCertificate *certificate_;
  OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateKey_;
  id<OrgSpongycastleCryptoBasicAgreement> basicAgreement_;
  jboolean truncateAgreement_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoTlsCertificate:(OrgSpongycastleCryptoTlsCertificate *)certificate
      withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey;

- (IOSByteArray *)generateAgreementWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)peerPublicKey;

- (OrgSpongycastleCryptoTlsCertificate *)getCertificate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials, certificate_, OrgSpongycastleCryptoTlsCertificate *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials, privateKey_, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials, basicAgreement_, id<OrgSpongycastleCryptoBasicAgreement>)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials_initWithOrgSpongycastleCryptoTlsCertificate_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials *self, OrgSpongycastleCryptoTlsCertificate *certificate, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateKey);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials *new_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials_initWithOrgSpongycastleCryptoTlsCertificate_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(OrgSpongycastleCryptoTlsCertificate *certificate, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials *create_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials_initWithOrgSpongycastleCryptoTlsCertificate_withOrgSpongycastleCryptoParamsAsymmetricKeyParameter_(OrgSpongycastleCryptoTlsCertificate *certificate, OrgSpongycastleCryptoParamsAsymmetricKeyParameter *privateKey);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsAgreementCredentials")
