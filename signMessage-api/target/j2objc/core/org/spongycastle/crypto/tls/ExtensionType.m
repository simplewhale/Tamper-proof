//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/ExtensionType.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/tls/ExtensionType.h"

@implementation OrgSpongycastleCryptoTlsExtensionType

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoTlsExtensionType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "server_name", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_server_name, 0x19, -1, -1, -1, -1 },
    { "max_fragment_length", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_max_fragment_length, 0x19, -1, -1, -1, -1 },
    { "client_certificate_url", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_client_certificate_url, 0x19, -1, -1, -1, -1 },
    { "trusted_ca_keys", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_trusted_ca_keys, 0x19, -1, -1, -1, -1 },
    { "truncated_hmac", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_truncated_hmac, 0x19, -1, -1, -1, -1 },
    { "status_request", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_status_request, 0x19, -1, -1, -1, -1 },
    { "user_mapping", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_user_mapping, 0x19, -1, -1, -1, -1 },
    { "client_authz", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_client_authz, 0x19, -1, -1, -1, -1 },
    { "server_authz", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_server_authz, 0x19, -1, -1, -1, -1 },
    { "cert_type", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_cert_type, 0x19, -1, -1, -1, -1 },
    { "supported_groups", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_supported_groups, 0x19, -1, -1, -1, -1 },
    { "elliptic_curves", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_elliptic_curves, 0x19, -1, -1, -1, -1 },
    { "ec_point_formats", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_ec_point_formats, 0x19, -1, -1, -1, -1 },
    { "srp", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_srp, 0x19, -1, -1, -1, -1 },
    { "signature_algorithms", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_signature_algorithms, 0x19, -1, -1, -1, -1 },
    { "use_srtp", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_use_srtp, 0x19, -1, -1, -1, -1 },
    { "heartbeat", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_heartbeat, 0x19, -1, -1, -1, -1 },
    { "application_layer_protocol_negotiation", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_application_layer_protocol_negotiation, 0x19, -1, -1, -1, -1 },
    { "status_request_v2", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_status_request_v2, 0x19, -1, -1, -1, -1 },
    { "signed_certificate_timestamp", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_signed_certificate_timestamp, 0x19, -1, -1, -1, -1 },
    { "client_certificate_type", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_client_certificate_type, 0x19, -1, -1, -1, -1 },
    { "server_certificate_type", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_server_certificate_type, 0x19, -1, -1, -1, -1 },
    { "padding", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_padding, 0x19, -1, -1, -1, -1 },
    { "encrypt_then_mac", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_encrypt_then_mac, 0x19, -1, -1, -1, -1 },
    { "extended_master_secret", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_extended_master_secret, 0x19, -1, -1, -1, -1 },
    { "DRAFT_token_binding", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_DRAFT_token_binding, 0x19, -1, -1, -1, -1 },
    { "cached_info", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_cached_info, 0x19, -1, -1, -1, -1 },
    { "session_ticket", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_session_ticket, 0x19, -1, -1, -1, -1 },
    { "negotiated_ff_dhe_groups", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_negotiated_ff_dhe_groups, 0x19, -1, -1, -1, -1 },
    { "renegotiation_info", "I", .constantValue.asInt = OrgSpongycastleCryptoTlsExtensionType_renegotiation_info, 0x19, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsExtensionType = { "ExtensionType", "org.spongycastle.crypto.tls", NULL, methods, fields, 7, 0x1, 1, 30, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsExtensionType;
}

@end

void OrgSpongycastleCryptoTlsExtensionType_init(OrgSpongycastleCryptoTlsExtensionType *self) {
  NSObject_init(self);
}

OrgSpongycastleCryptoTlsExtensionType *new_OrgSpongycastleCryptoTlsExtensionType_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsExtensionType, init)
}

OrgSpongycastleCryptoTlsExtensionType *create_OrgSpongycastleCryptoTlsExtensionType_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsExtensionType, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsExtensionType)
