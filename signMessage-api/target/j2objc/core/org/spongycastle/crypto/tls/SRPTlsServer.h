//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/SRPTlsServer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsServer")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsSRPTlsServer
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsServer 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsServer 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsSRPTlsServer

#if !defined (OrgSpongycastleCryptoTlsSRPTlsServer_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsServer || defined(INCLUDE_OrgSpongycastleCryptoTlsSRPTlsServer))
#define OrgSpongycastleCryptoTlsSRPTlsServer_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsServer 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsServer 1
#include "org/spongycastle/crypto/tls/AbstractTlsServer.h"

@class IOSByteArray;
@class IOSIntArray;
@class JavaUtilHashtable;
@class OrgSpongycastleCryptoTlsTlsSRPLoginParameters;
@protocol OrgSpongycastleCryptoTlsTlsCipherFactory;
@protocol OrgSpongycastleCryptoTlsTlsCredentials;
@protocol OrgSpongycastleCryptoTlsTlsKeyExchange;
@protocol OrgSpongycastleCryptoTlsTlsSRPIdentityManager;
@protocol OrgSpongycastleCryptoTlsTlsSignerCredentials;

@interface OrgSpongycastleCryptoTlsSRPTlsServer : OrgSpongycastleCryptoTlsAbstractTlsServer {
 @public
  id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager> srpIdentityManager_;
  IOSByteArray *srpIdentity_;
  OrgSpongycastleCryptoTlsTlsSRPLoginParameters *loginParameters_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)cipherFactory
               withOrgSpongycastleCryptoTlsTlsSRPIdentityManager:(id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager>)srpIdentityManager;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsSRPIdentityManager:(id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager>)srpIdentityManager;

- (id<OrgSpongycastleCryptoTlsTlsCredentials>)getCredentials;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)getKeyExchange;

- (jint)getSelectedCipherSuite;

- (void)processClientExtensionsWithJavaUtilHashtable:(JavaUtilHashtable *)clientExtensions;

#pragma mark Protected

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createSRPKeyExchangeWithInt:(jint)keyExchange;

- (IOSIntArray *)getCipherSuites;

- (id<OrgSpongycastleCryptoTlsTlsSignerCredentials>)getDSASignerCredentials;

- (id<OrgSpongycastleCryptoTlsTlsSignerCredentials>)getRSASignerCredentials;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsSRPTlsServer)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSRPTlsServer, srpIdentityManager_, id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSRPTlsServer, srpIdentity_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsSRPTlsServer, loginParameters_, OrgSpongycastleCryptoTlsTlsSRPLoginParameters *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsSRPTlsServer_initWithOrgSpongycastleCryptoTlsTlsSRPIdentityManager_(OrgSpongycastleCryptoTlsSRPTlsServer *self, id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager> srpIdentityManager);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsServer *new_OrgSpongycastleCryptoTlsSRPTlsServer_initWithOrgSpongycastleCryptoTlsTlsSRPIdentityManager_(id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager> srpIdentityManager) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsServer *create_OrgSpongycastleCryptoTlsSRPTlsServer_initWithOrgSpongycastleCryptoTlsTlsSRPIdentityManager_(id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager> srpIdentityManager);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsSRPTlsServer_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsSRPIdentityManager_(OrgSpongycastleCryptoTlsSRPTlsServer *self, id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager> srpIdentityManager);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsServer *new_OrgSpongycastleCryptoTlsSRPTlsServer_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsSRPIdentityManager_(id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager> srpIdentityManager) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsSRPTlsServer *create_OrgSpongycastleCryptoTlsSRPTlsServer_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_withOrgSpongycastleCryptoTlsTlsSRPIdentityManager_(id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory, id<OrgSpongycastleCryptoTlsTlsSRPIdentityManager> srpIdentityManager);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsSRPTlsServer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsSRPTlsServer")
