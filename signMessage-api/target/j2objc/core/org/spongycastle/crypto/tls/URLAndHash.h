//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/URLAndHash.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsURLAndHash")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsURLAndHash
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsURLAndHash 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsURLAndHash 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsURLAndHash

#if !defined (OrgSpongycastleCryptoTlsURLAndHash_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsURLAndHash || defined(INCLUDE_OrgSpongycastleCryptoTlsURLAndHash))
#define OrgSpongycastleCryptoTlsURLAndHash_

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsURLAndHash : NSObject {
 @public
  NSString *url_;
  IOSByteArray *sha1Hash_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)url
                   withByteArray:(IOSByteArray *)sha1Hash;

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (IOSByteArray *)getSHA1Hash;

- (NSString *)getURL;

+ (OrgSpongycastleCryptoTlsURLAndHash *)parseWithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context
                                                              withJavaIoInputStream:(JavaIoInputStream *)input;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsURLAndHash)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsURLAndHash, url_, NSString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsURLAndHash, sha1Hash_, IOSByteArray *)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsURLAndHash_initWithNSString_withByteArray_(OrgSpongycastleCryptoTlsURLAndHash *self, NSString *url, IOSByteArray *sha1Hash);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsURLAndHash *new_OrgSpongycastleCryptoTlsURLAndHash_initWithNSString_withByteArray_(NSString *url, IOSByteArray *sha1Hash) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsURLAndHash *create_OrgSpongycastleCryptoTlsURLAndHash_initWithNSString_withByteArray_(NSString *url, IOSByteArray *sha1Hash);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsURLAndHash *OrgSpongycastleCryptoTlsURLAndHash_parseWithOrgSpongycastleCryptoTlsTlsContext_withJavaIoInputStream_(id<OrgSpongycastleCryptoTlsTlsContext> context, JavaIoInputStream *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsURLAndHash)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsURLAndHash")
