//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/NameType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsNameType")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsNameType
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsNameType 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsNameType 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsNameType

#if !defined (OrgSpongycastleCryptoTlsNameType_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsNameType || defined(INCLUDE_OrgSpongycastleCryptoTlsNameType))
#define OrgSpongycastleCryptoTlsNameType_

@interface OrgSpongycastleCryptoTlsNameType : NSObject

#pragma mark Public

- (instancetype)init;

+ (jboolean)isValidWithShort:(jshort)nameType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsNameType)

inline jshort OrgSpongycastleCryptoTlsNameType_get_host_name(void);
#define OrgSpongycastleCryptoTlsNameType_host_name 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoTlsNameType, host_name, jshort)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsNameType_init(OrgSpongycastleCryptoTlsNameType *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsNameType *new_OrgSpongycastleCryptoTlsNameType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsNameType *create_OrgSpongycastleCryptoTlsNameType_init(void);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoTlsNameType_isValidWithShort_(jshort nameType);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsNameType)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsNameType")
