//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsECDSASigner.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/crypto/DSA.h"
#include "org/spongycastle/crypto/Digest.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/crypto/params/ECPublicKeyParameters.h"
#include "org/spongycastle/crypto/signers/ECDSASigner.h"
#include "org/spongycastle/crypto/signers/HMacDSAKCalculator.h"
#include "org/spongycastle/crypto/tls/SignatureAlgorithm.h"
#include "org/spongycastle/crypto/tls/TlsDSASigner.h"
#include "org/spongycastle/crypto/tls/TlsECDSASigner.h"
#include "org/spongycastle/crypto/tls/TlsUtils.h"

@implementation OrgSpongycastleCryptoTlsTlsECDSASigner

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleCryptoTlsTlsECDSASigner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isValidPublicKeyWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey {
  return [publicKey isKindOfClass:[OrgSpongycastleCryptoParamsECPublicKeyParameters class]];
}

- (id<OrgSpongycastleCryptoDSA>)createDSAImplWithShort:(jshort)hashAlgorithm {
  return new_OrgSpongycastleCryptoSignersECDSASigner_initWithOrgSpongycastleCryptoSignersDSAKCalculator_(new_OrgSpongycastleCryptoSignersHMacDSAKCalculator_initWithOrgSpongycastleCryptoDigest_(OrgSpongycastleCryptoTlsTlsUtils_createHashWithShort_(hashAlgorithm)));
}

- (jshort)getSignatureAlgorithm {
  return OrgSpongycastleCryptoTlsSignatureAlgorithm_ecdsa;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoDSA;", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "S", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isValidPublicKeyWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:);
  methods[2].selector = @selector(createDSAImplWithShort:);
  methods[3].selector = @selector(getSignatureAlgorithm);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "isValidPublicKey", "LOrgSpongycastleCryptoParamsAsymmetricKeyParameter;", "createDSAImpl", "S" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoTlsTlsECDSASigner = { "TlsECDSASigner", "org.spongycastle.crypto.tls", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoTlsTlsECDSASigner;
}

@end

void OrgSpongycastleCryptoTlsTlsECDSASigner_init(OrgSpongycastleCryptoTlsTlsECDSASigner *self) {
  OrgSpongycastleCryptoTlsTlsDSASigner_init(self);
}

OrgSpongycastleCryptoTlsTlsECDSASigner *new_OrgSpongycastleCryptoTlsTlsECDSASigner_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoTlsTlsECDSASigner, init)
}

OrgSpongycastleCryptoTlsTlsECDSASigner *create_OrgSpongycastleCryptoTlsTlsECDSASigner_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoTlsTlsECDSASigner, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoTlsTlsECDSASigner)
