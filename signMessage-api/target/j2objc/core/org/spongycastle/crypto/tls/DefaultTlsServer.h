//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/DefaultTlsServer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsServer")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsDefaultTlsServer
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsServer 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsServer 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsDefaultTlsServer

#if !defined (OrgSpongycastleCryptoTlsDefaultTlsServer_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsServer || defined(INCLUDE_OrgSpongycastleCryptoTlsDefaultTlsServer))
#define OrgSpongycastleCryptoTlsDefaultTlsServer_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsServer 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsServer 1
#include "org/spongycastle/crypto/tls/AbstractTlsServer.h"

@class IOSIntArray;
@class OrgSpongycastleCryptoParamsDHParameters;
@protocol OrgSpongycastleCryptoTlsTlsCipherFactory;
@protocol OrgSpongycastleCryptoTlsTlsCredentials;
@protocol OrgSpongycastleCryptoTlsTlsEncryptionCredentials;
@protocol OrgSpongycastleCryptoTlsTlsKeyExchange;
@protocol OrgSpongycastleCryptoTlsTlsSignerCredentials;

@interface OrgSpongycastleCryptoTlsDefaultTlsServer : OrgSpongycastleCryptoTlsAbstractTlsServer

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgSpongycastleCryptoTlsTlsCipherFactory:(id<OrgSpongycastleCryptoTlsTlsCipherFactory>)cipherFactory;

- (id<OrgSpongycastleCryptoTlsTlsCredentials>)getCredentials;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)getKeyExchange;

#pragma mark Protected

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createDHEKeyExchangeWithInt:(jint)keyExchange;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createDHKeyExchangeWithInt:(jint)keyExchange;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createECDHEKeyExchangeWithInt:(jint)keyExchange;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createECDHKeyExchangeWithInt:(jint)keyExchange;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)createRSAKeyExchange;

- (IOSIntArray *)getCipherSuites;

- (OrgSpongycastleCryptoParamsDHParameters *)getDHParameters;

- (id<OrgSpongycastleCryptoTlsTlsSignerCredentials>)getDSASignerCredentials;

- (id<OrgSpongycastleCryptoTlsTlsSignerCredentials>)getECDSASignerCredentials;

- (id<OrgSpongycastleCryptoTlsTlsEncryptionCredentials>)getRSAEncryptionCredentials;

- (id<OrgSpongycastleCryptoTlsTlsSignerCredentials>)getRSASignerCredentials;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsDefaultTlsServer)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsDefaultTlsServer_init(OrgSpongycastleCryptoTlsDefaultTlsServer *self);

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsDefaultTlsServer_initWithOrgSpongycastleCryptoTlsTlsCipherFactory_(OrgSpongycastleCryptoTlsDefaultTlsServer *self, id<OrgSpongycastleCryptoTlsTlsCipherFactory> cipherFactory);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsDefaultTlsServer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDefaultTlsServer")
