//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/CertificateStatus.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatus")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsCertificateStatus
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatus 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatus 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsCertificateStatus

#if !defined (OrgSpongycastleCryptoTlsCertificateStatus_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatus || defined(INCLUDE_OrgSpongycastleCryptoTlsCertificateStatus))
#define OrgSpongycastleCryptoTlsCertificateStatus_

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class OrgSpongycastleAsn1OcspOCSPResponse;

@interface OrgSpongycastleCryptoTlsCertificateStatus : NSObject {
 @public
  jshort statusType_;
  id response_;
}

#pragma mark Public

- (instancetype)initWithShort:(jshort)statusType
                       withId:(id)response;

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (OrgSpongycastleAsn1OcspOCSPResponse *)getOCSPResponse;

- (id)getResponse;

- (jshort)getStatusType;

+ (OrgSpongycastleCryptoTlsCertificateStatus *)parseWithJavaIoInputStream:(JavaIoInputStream *)input;

#pragma mark Protected

+ (jboolean)isCorrectTypeWithShort:(jshort)statusType
                            withId:(id)response;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsCertificateStatus)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsCertificateStatus, response_, id)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsCertificateStatus_initWithShort_withId_(OrgSpongycastleCryptoTlsCertificateStatus *self, jshort statusType, id response);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateStatus *new_OrgSpongycastleCryptoTlsCertificateStatus_initWithShort_withId_(jshort statusType, id response) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateStatus *create_OrgSpongycastleCryptoTlsCertificateStatus_initWithShort_withId_(jshort statusType, id response);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateStatus *OrgSpongycastleCryptoTlsCertificateStatus_parseWithJavaIoInputStream_(JavaIoInputStream *input);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoTlsCertificateStatus_isCorrectTypeWithShort_withId_(jshort statusType, id response);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsCertificateStatus)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatus")
