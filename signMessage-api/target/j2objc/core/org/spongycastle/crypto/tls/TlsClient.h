//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsClient.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsClient")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsClient
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsClient 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsClient 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsClient

#if !defined (OrgSpongycastleCryptoTlsTlsClient_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsClient || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsClient))
#define OrgSpongycastleCryptoTlsTlsClient_

#define RESTRICT_OrgSpongycastleCryptoTlsTlsPeer 1
#define INCLUDE_OrgSpongycastleCryptoTlsTlsPeer 1
#include "org/spongycastle/crypto/tls/TlsPeer.h"

@class IOSByteArray;
@class IOSIntArray;
@class IOSShortArray;
@class JavaUtilHashtable;
@class JavaUtilVector;
@class OrgSpongycastleCryptoTlsNewSessionTicket;
@class OrgSpongycastleCryptoTlsProtocolVersion;
@protocol OrgSpongycastleCryptoTlsTlsAuthentication;
@protocol OrgSpongycastleCryptoTlsTlsClientContext;
@protocol OrgSpongycastleCryptoTlsTlsKeyExchange;
@protocol OrgSpongycastleCryptoTlsTlsSession;

@protocol OrgSpongycastleCryptoTlsTlsClient < OrgSpongycastleCryptoTlsTlsPeer, JavaObject >

- (void)init__WithOrgSpongycastleCryptoTlsTlsClientContext:(id<OrgSpongycastleCryptoTlsTlsClientContext>)context OBJC_METHOD_FAMILY_NONE;

- (id<OrgSpongycastleCryptoTlsTlsSession>)getSessionToResume;

- (OrgSpongycastleCryptoTlsProtocolVersion *)getClientHelloRecordLayerVersion;

- (OrgSpongycastleCryptoTlsProtocolVersion *)getClientVersion;

- (jboolean)isFallback;

- (IOSIntArray *)getCipherSuites;

- (IOSShortArray *)getCompressionMethods;

- (JavaUtilHashtable *)getClientExtensions;

- (void)notifyServerVersionWithOrgSpongycastleCryptoTlsProtocolVersion:(OrgSpongycastleCryptoTlsProtocolVersion *)selectedVersion;

- (void)notifySessionIDWithByteArray:(IOSByteArray *)sessionID;

- (void)notifySelectedCipherSuiteWithInt:(jint)selectedCipherSuite;

- (void)notifySelectedCompressionMethodWithShort:(jshort)selectedCompressionMethod;

- (void)processServerExtensionsWithJavaUtilHashtable:(JavaUtilHashtable *)serverExtensions;

- (void)processServerSupplementalDataWithJavaUtilVector:(JavaUtilVector *)serverSupplementalData;

- (id<OrgSpongycastleCryptoTlsTlsKeyExchange>)getKeyExchange;

- (id<OrgSpongycastleCryptoTlsTlsAuthentication>)getAuthentication;

- (JavaUtilVector *)getClientSupplementalData;

- (void)notifyNewSessionTicketWithOrgSpongycastleCryptoTlsNewSessionTicket:(OrgSpongycastleCryptoTlsNewSessionTicket *)newSessionTicket;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsClient)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsClient)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsClient")
