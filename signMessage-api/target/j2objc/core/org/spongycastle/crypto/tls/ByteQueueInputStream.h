//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/ByteQueueInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsByteQueueInputStream")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsByteQueueInputStream
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsByteQueueInputStream 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsByteQueueInputStream 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsByteQueueInputStream

#if !defined (OrgSpongycastleCryptoTlsByteQueueInputStream_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsByteQueueInputStream || defined(INCLUDE_OrgSpongycastleCryptoTlsByteQueueInputStream))
#define OrgSpongycastleCryptoTlsByteQueueInputStream_

#define RESTRICT_JavaIoInputStream 1
#define INCLUDE_JavaIoInputStream 1
#include "java/io/InputStream.h"

@class IOSByteArray;

@interface OrgSpongycastleCryptoTlsByteQueueInputStream : JavaIoInputStream

#pragma mark Public

- (instancetype)init;

- (void)addBytesWithByteArray:(IOSByteArray *)bytes;

- (jint)available;

- (void)close;

- (jint)peekWithByteArray:(IOSByteArray *)buf;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

- (jlong)skipWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsByteQueueInputStream)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsByteQueueInputStream_init(OrgSpongycastleCryptoTlsByteQueueInputStream *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsByteQueueInputStream *new_OrgSpongycastleCryptoTlsByteQueueInputStream_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsByteQueueInputStream *create_OrgSpongycastleCryptoTlsByteQueueInputStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsByteQueueInputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsByteQueueInputStream")
