//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/AbstractTlsSigner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsAbstractTlsSigner")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsSigner
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsAbstractTlsSigner 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsAbstractTlsSigner 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsSigner

#if !defined (OrgSpongycastleCryptoTlsAbstractTlsSigner_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsAbstractTlsSigner || defined(INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsSigner))
#define OrgSpongycastleCryptoTlsAbstractTlsSigner_

#define RESTRICT_OrgSpongycastleCryptoTlsTlsSigner 1
#define INCLUDE_OrgSpongycastleCryptoTlsTlsSigner 1
#include "org/spongycastle/crypto/tls/TlsSigner.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@protocol OrgSpongycastleCryptoSigner;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@interface OrgSpongycastleCryptoTlsAbstractTlsSigner : NSObject < OrgSpongycastleCryptoTlsTlsSigner > {
 @public
  id<OrgSpongycastleCryptoTlsTlsContext> context_;
}

#pragma mark Public

- (instancetype)init;

- (id<OrgSpongycastleCryptoSigner>)createSignerWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey;

- (id<OrgSpongycastleCryptoSigner>)createVerifyerWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey;

- (IOSByteArray *)generateRawSignatureWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey
                                                                              withByteArray:(IOSByteArray *)md5AndSha1;

- (void)init__WithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context OBJC_METHOD_FAMILY_NONE;

- (jboolean)verifyRawSignatureWithByteArray:(IOSByteArray *)sigBytes
withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                              withByteArray:(IOSByteArray *)md5AndSha1;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsAbstractTlsSigner)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsAbstractTlsSigner, context_, id<OrgSpongycastleCryptoTlsTlsContext>)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsAbstractTlsSigner_init(OrgSpongycastleCryptoTlsAbstractTlsSigner *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsAbstractTlsSigner)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsAbstractTlsSigner")
