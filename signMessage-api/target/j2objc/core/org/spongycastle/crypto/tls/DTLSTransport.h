//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/DTLSTransport.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDTLSTransport")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsDTLSTransport
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDTLSTransport 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsDTLSTransport 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsDTLSTransport

#if !defined (OrgSpongycastleCryptoTlsDTLSTransport_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsDTLSTransport || defined(INCLUDE_OrgSpongycastleCryptoTlsDTLSTransport))
#define OrgSpongycastleCryptoTlsDTLSTransport_

#define RESTRICT_OrgSpongycastleCryptoTlsDatagramTransport 1
#define INCLUDE_OrgSpongycastleCryptoTlsDatagramTransport 1
#include "org/spongycastle/crypto/tls/DatagramTransport.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoTlsDTLSRecordLayer;

@interface OrgSpongycastleCryptoTlsDTLSTransport : NSObject < OrgSpongycastleCryptoTlsDatagramTransport >

#pragma mark Public

- (void)close;

- (jint)getReceiveLimit;

- (jint)getSendLimit;

- (jint)receiveWithByteArray:(IOSByteArray *)buf
                     withInt:(jint)off
                     withInt:(jint)len
                     withInt:(jint)waitMillis;

- (void)sendWithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off
                  withInt:(jint)len;

#pragma mark Package-Private

- (instancetype)initWithOrgSpongycastleCryptoTlsDTLSRecordLayer:(OrgSpongycastleCryptoTlsDTLSRecordLayer *)recordLayer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsDTLSTransport)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsDTLSTransport_initWithOrgSpongycastleCryptoTlsDTLSRecordLayer_(OrgSpongycastleCryptoTlsDTLSTransport *self, OrgSpongycastleCryptoTlsDTLSRecordLayer *recordLayer);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsDTLSTransport *new_OrgSpongycastleCryptoTlsDTLSTransport_initWithOrgSpongycastleCryptoTlsDTLSRecordLayer_(OrgSpongycastleCryptoTlsDTLSRecordLayer *recordLayer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsDTLSTransport *create_OrgSpongycastleCryptoTlsDTLSTransport_initWithOrgSpongycastleCryptoTlsDTLSRecordLayer_(OrgSpongycastleCryptoTlsDTLSRecordLayer *recordLayer);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsDTLSTransport)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsDTLSTransport")
