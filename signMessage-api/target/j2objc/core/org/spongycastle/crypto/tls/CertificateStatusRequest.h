//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/CertificateStatusRequest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatusRequest")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsCertificateStatusRequest
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatusRequest 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatusRequest 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsCertificateStatusRequest

#if !defined (OrgSpongycastleCryptoTlsCertificateStatusRequest_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatusRequest || defined(INCLUDE_OrgSpongycastleCryptoTlsCertificateStatusRequest))
#define OrgSpongycastleCryptoTlsCertificateStatusRequest_

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class OrgSpongycastleCryptoTlsOCSPStatusRequest;

@interface OrgSpongycastleCryptoTlsCertificateStatusRequest : NSObject {
 @public
  jshort statusType_;
  id request_;
}

#pragma mark Public

- (instancetype)initWithShort:(jshort)statusType
                       withId:(id)request;

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (OrgSpongycastleCryptoTlsOCSPStatusRequest *)getOCSPStatusRequest;

- (id)getRequest;

- (jshort)getStatusType;

+ (OrgSpongycastleCryptoTlsCertificateStatusRequest *)parseWithJavaIoInputStream:(JavaIoInputStream *)input;

#pragma mark Protected

+ (jboolean)isCorrectTypeWithShort:(jshort)statusType
                            withId:(id)request;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsCertificateStatusRequest)

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoTlsCertificateStatusRequest, request_, id)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsCertificateStatusRequest_initWithShort_withId_(OrgSpongycastleCryptoTlsCertificateStatusRequest *self, jshort statusType, id request);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateStatusRequest *new_OrgSpongycastleCryptoTlsCertificateStatusRequest_initWithShort_withId_(jshort statusType, id request) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateStatusRequest *create_OrgSpongycastleCryptoTlsCertificateStatusRequest_initWithShort_withId_(jshort statusType, id request);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsCertificateStatusRequest *OrgSpongycastleCryptoTlsCertificateStatusRequest_parseWithJavaIoInputStream_(JavaIoInputStream *input);

FOUNDATION_EXPORT jboolean OrgSpongycastleCryptoTlsCertificateStatusRequest_isCorrectTypeWithShort_withId_(jshort statusType, id request);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsCertificateStatusRequest)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsCertificateStatusRequest")
