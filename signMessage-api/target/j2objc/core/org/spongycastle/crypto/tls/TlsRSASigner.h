//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsRSASigner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSASigner")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsRSASigner
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSASigner 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSASigner 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsRSASigner

#if !defined (OrgSpongycastleCryptoTlsTlsRSASigner_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSASigner || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsRSASigner))
#define OrgSpongycastleCryptoTlsTlsRSASigner_

#define RESTRICT_OrgSpongycastleCryptoTlsAbstractTlsSigner 1
#define INCLUDE_OrgSpongycastleCryptoTlsAbstractTlsSigner 1
#include "org/spongycastle/crypto/tls/AbstractTlsSigner.h"

@class IOSByteArray;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@class OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm;
@protocol OrgSpongycastleCryptoAsymmetricBlockCipher;
@protocol OrgSpongycastleCryptoCipherParameters;
@protocol OrgSpongycastleCryptoSigner;

@interface OrgSpongycastleCryptoTlsTlsRSASigner : OrgSpongycastleCryptoTlsAbstractTlsSigner

#pragma mark Public

- (instancetype)init;

- (id<OrgSpongycastleCryptoSigner>)createSignerWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                               withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey;

- (id<OrgSpongycastleCryptoSigner>)createVerifyerWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                                 withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey;

- (IOSByteArray *)generateRawSignatureWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                      withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey
                                                                              withByteArray:(IOSByteArray *)hash_;

- (jboolean)isValidPublicKeyWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey;

- (jboolean)verifyRawSignatureWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                                                      withByteArray:(IOSByteArray *)sigBytes
                              withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                                                                      withByteArray:(IOSByteArray *)hash_;

#pragma mark Protected

- (id<OrgSpongycastleCryptoAsymmetricBlockCipher>)createRSAImpl;

- (id<OrgSpongycastleCryptoSigner>)makeSignerWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                                                                       withBoolean:(jboolean)raw
                                                                                       withBoolean:(jboolean)forSigning
                                                         withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)cp;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsRSASigner)

FOUNDATION_EXPORT void OrgSpongycastleCryptoTlsTlsRSASigner_init(OrgSpongycastleCryptoTlsTlsRSASigner *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsRSASigner *new_OrgSpongycastleCryptoTlsTlsRSASigner_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoTlsTlsRSASigner *create_OrgSpongycastleCryptoTlsTlsRSASigner_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsRSASigner)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsRSASigner")
