//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/tls/TlsSigner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsSigner")
#ifdef RESTRICT_OrgSpongycastleCryptoTlsTlsSigner
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsSigner 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsSigner 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoTlsTlsSigner

#if !defined (OrgSpongycastleCryptoTlsTlsSigner_) && (INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsSigner || defined(INCLUDE_OrgSpongycastleCryptoTlsTlsSigner))
#define OrgSpongycastleCryptoTlsTlsSigner_

@class IOSByteArray;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@class OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm;
@protocol OrgSpongycastleCryptoSigner;
@protocol OrgSpongycastleCryptoTlsTlsContext;

@protocol OrgSpongycastleCryptoTlsTlsSigner < JavaObject >

- (void)init__WithOrgSpongycastleCryptoTlsTlsContext:(id<OrgSpongycastleCryptoTlsTlsContext>)context OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)generateRawSignatureWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey
                                                                              withByteArray:(IOSByteArray *)md5AndSha1;

- (IOSByteArray *)generateRawSignatureWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                      withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey
                                                                              withByteArray:(IOSByteArray *)hash_;

- (jboolean)verifyRawSignatureWithByteArray:(IOSByteArray *)sigBytes
withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                              withByteArray:(IOSByteArray *)md5AndSha1;

- (jboolean)verifyRawSignatureWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                                                      withByteArray:(IOSByteArray *)sigBytes
                              withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                                                                      withByteArray:(IOSByteArray *)hash_;

- (id<OrgSpongycastleCryptoSigner>)createSignerWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey;

- (id<OrgSpongycastleCryptoSigner>)createSignerWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                               withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)privateKey;

- (id<OrgSpongycastleCryptoSigner>)createVerifyerWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey;

- (id<OrgSpongycastleCryptoSigner>)createVerifyerWithOrgSpongycastleCryptoTlsSignatureAndHashAlgorithm:(OrgSpongycastleCryptoTlsSignatureAndHashAlgorithm *)algorithm
                                                 withOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey;

- (jboolean)isValidPublicKeyWithOrgSpongycastleCryptoParamsAsymmetricKeyParameter:(OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)publicKey;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoTlsTlsSigner)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoTlsTlsSigner)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoTlsTlsSigner")
