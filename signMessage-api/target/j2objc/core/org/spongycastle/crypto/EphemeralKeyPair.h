//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/crypto/EphemeralKeyPair.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoEphemeralKeyPair")
#ifdef RESTRICT_OrgSpongycastleCryptoEphemeralKeyPair
#define INCLUDE_ALL_OrgSpongycastleCryptoEphemeralKeyPair 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoEphemeralKeyPair 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoEphemeralKeyPair

#if !defined (OrgSpongycastleCryptoEphemeralKeyPair_) && (INCLUDE_ALL_OrgSpongycastleCryptoEphemeralKeyPair || defined(INCLUDE_OrgSpongycastleCryptoEphemeralKeyPair))
#define OrgSpongycastleCryptoEphemeralKeyPair_

@class IOSByteArray;
@class OrgSpongycastleCryptoAsymmetricCipherKeyPair;
@protocol OrgSpongycastleCryptoKeyEncoder;

@interface OrgSpongycastleCryptoEphemeralKeyPair : NSObject

#pragma mark Public

- (instancetype)initWithOrgSpongycastleCryptoAsymmetricCipherKeyPair:(OrgSpongycastleCryptoAsymmetricCipherKeyPair *)keyPair
                                 withOrgSpongycastleCryptoKeyEncoder:(id<OrgSpongycastleCryptoKeyEncoder>)publicKeyEncoder;

- (IOSByteArray *)getEncodedPublicKey;

- (OrgSpongycastleCryptoAsymmetricCipherKeyPair *)getKeyPair;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoEphemeralKeyPair)

FOUNDATION_EXPORT void OrgSpongycastleCryptoEphemeralKeyPair_initWithOrgSpongycastleCryptoAsymmetricCipherKeyPair_withOrgSpongycastleCryptoKeyEncoder_(OrgSpongycastleCryptoEphemeralKeyPair *self, OrgSpongycastleCryptoAsymmetricCipherKeyPair *keyPair, id<OrgSpongycastleCryptoKeyEncoder> publicKeyEncoder);

FOUNDATION_EXPORT OrgSpongycastleCryptoEphemeralKeyPair *new_OrgSpongycastleCryptoEphemeralKeyPair_initWithOrgSpongycastleCryptoAsymmetricCipherKeyPair_withOrgSpongycastleCryptoKeyEncoder_(OrgSpongycastleCryptoAsymmetricCipherKeyPair *keyPair, id<OrgSpongycastleCryptoKeyEncoder> publicKeyEncoder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoEphemeralKeyPair *create_OrgSpongycastleCryptoEphemeralKeyPair_initWithOrgSpongycastleCryptoAsymmetricCipherKeyPair_withOrgSpongycastleCryptoKeyEncoder_(OrgSpongycastleCryptoAsymmetricCipherKeyPair *keyPair, id<OrgSpongycastleCryptoKeyEncoder> publicKeyEncoder);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoEphemeralKeyPair)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoEphemeralKeyPair")
