//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/isismtt/ocsp/RequestedCertificate.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/asn1/DERTaggedObject.h"
#include "org/spongycastle/asn1/isismtt/ocsp/RequestedCertificate.h"
#include "org/spongycastle/asn1/x509/Certificate.h"

@interface OrgSpongycastleAsn1IsismttOcspRequestedCertificate () {
 @public
  OrgSpongycastleAsn1X509Certificate *cert_;
  IOSByteArray *publicKeyCert_;
  IOSByteArray *attributeCert_;
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)tagged;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, cert_, OrgSpongycastleAsn1X509Certificate *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, publicKeyCert_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, attributeCert_, IOSByteArray *)

__attribute__((unused)) static void OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_(OrgSpongycastleAsn1IsismttOcspRequestedCertificate *self, OrgSpongycastleAsn1ASN1TaggedObject *tagged);

__attribute__((unused)) static OrgSpongycastleAsn1IsismttOcspRequestedCertificate *new_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_(OrgSpongycastleAsn1ASN1TaggedObject *tagged) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1IsismttOcspRequestedCertificate *create_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_(OrgSpongycastleAsn1ASN1TaggedObject *tagged);

@implementation OrgSpongycastleAsn1IsismttOcspRequestedCertificate

+ (OrgSpongycastleAsn1IsismttOcspRequestedCertificate *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_(obj);
}

+ (OrgSpongycastleAsn1IsismttOcspRequestedCertificate *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                               withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)tagged {
  OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_(self, tagged);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1X509Certificate:(OrgSpongycastleAsn1X509Certificate *)certificate {
  OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1X509Certificate_(self, certificate);
  return self;
}

- (instancetype)initWithInt:(jint)type
              withByteArray:(IOSByteArray *)certificateOctets {
  OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithInt_withByteArray_(self, type, certificateOctets);
  return self;
}

- (jint)getType {
  if (cert_ != nil) {
    return OrgSpongycastleAsn1IsismttOcspRequestedCertificate_certificate;
  }
  if (publicKeyCert_ != nil) {
    return OrgSpongycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate;
  }
  return OrgSpongycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate;
}

- (IOSByteArray *)getCertificateBytes {
  if (cert_ != nil) {
    @try {
      return [cert_ getEncoded];
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"can't decode certificate: ", e));
    }
  }
  if (publicKeyCert_ != nil) {
    return publicKeyCert_;
  }
  return attributeCert_;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  if (publicKeyCert_ != nil) {
    return new_OrgSpongycastleAsn1DERTaggedObject_initWithInt_withOrgSpongycastleAsn1ASN1Encodable_(0, new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(publicKeyCert_));
  }
  if (attributeCert_ != nil) {
    return new_OrgSpongycastleAsn1DERTaggedObject_initWithInt_withOrgSpongycastleAsn1ASN1Encodable_(1, new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(attributeCert_));
  }
  return [((OrgSpongycastleAsn1X509Certificate *) nil_chk(cert_)) toASN1Primitive];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1IsismttOcspRequestedCertificate;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1IsismttOcspRequestedCertificate;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1ASN1TaggedObject:);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1X509Certificate:);
  methods[4].selector = @selector(initWithInt:withByteArray:);
  methods[5].selector = @selector(getType);
  methods[6].selector = @selector(getCertificateBytes);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certificate", "I", .constantValue.asInt = OrgSpongycastleAsn1IsismttOcspRequestedCertificate_certificate, 0x19, -1, -1, -1, -1 },
    { "publicKeyCertificate", "I", .constantValue.asInt = OrgSpongycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate, 0x19, -1, -1, -1, -1 },
    { "attributeCertificate", "I", .constantValue.asInt = OrgSpongycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate, 0x19, -1, -1, -1, -1 },
    { "cert_", "LOrgSpongycastleAsn1X509Certificate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKeyCert_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeCert_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LOrgSpongycastleAsn1ASN1TaggedObject;", "LOrgSpongycastleAsn1X509Certificate;", "I[B" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1IsismttOcspRequestedCertificate = { "RequestedCertificate", "org.spongycastle.asn1.isismtt.ocsp", ptrTable, methods, fields, 7, 0x1, 8, 6, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1IsismttOcspRequestedCertificate;
}

@end

OrgSpongycastleAsn1IsismttOcspRequestedCertificate *OrgSpongycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initialize();
  if (obj == nil || [obj isKindOfClass:[OrgSpongycastleAsn1IsismttOcspRequestedCertificate class]]) {
    return (OrgSpongycastleAsn1IsismttOcspRequestedCertificate *) cast_chk(obj, [OrgSpongycastleAsn1IsismttOcspRequestedCertificate class]);
  }
  if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Sequence class]]) {
    return new_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(obj));
  }
  if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1TaggedObject class]]) {
    return new_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_((OrgSpongycastleAsn1ASN1TaggedObject *) obj);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}

OrgSpongycastleAsn1IsismttOcspRequestedCertificate *OrgSpongycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initialize();
  if (!explicit_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"choice item must be explicitly tagged");
  }
  return OrgSpongycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject]);
}

void OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_(OrgSpongycastleAsn1IsismttOcspRequestedCertificate *self, OrgSpongycastleAsn1ASN1TaggedObject *tagged) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  if ([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == OrgSpongycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate) {
    self->publicKeyCert_ = [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(OrgSpongycastleAsn1ASN1OctetString_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(tagged, true))) getOctets];
  }
  else if ([tagged getTagNo] == OrgSpongycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate) {
    self->attributeCert_ = [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(OrgSpongycastleAsn1ASN1OctetString_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(tagged, true))) getOctets];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown tag number: ", [tagged getTagNo]));
  }
}

OrgSpongycastleAsn1IsismttOcspRequestedCertificate *new_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_(OrgSpongycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, initWithOrgSpongycastleAsn1ASN1TaggedObject_, tagged)
}

OrgSpongycastleAsn1IsismttOcspRequestedCertificate *create_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_(OrgSpongycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, initWithOrgSpongycastleAsn1ASN1TaggedObject_, tagged)
}

void OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1IsismttOcspRequestedCertificate *self, OrgSpongycastleAsn1X509Certificate *certificate) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->cert_ = certificate;
}

OrgSpongycastleAsn1IsismttOcspRequestedCertificate *new_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1X509Certificate *certificate) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, initWithOrgSpongycastleAsn1X509Certificate_, certificate)
}

OrgSpongycastleAsn1IsismttOcspRequestedCertificate *create_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1X509Certificate *certificate) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, initWithOrgSpongycastleAsn1X509Certificate_, certificate)
}

void OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithInt_withByteArray_(OrgSpongycastleAsn1IsismttOcspRequestedCertificate *self, jint type, IOSByteArray *certificateOctets) {
  OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithOrgSpongycastleAsn1ASN1TaggedObject_(self, new_OrgSpongycastleAsn1DERTaggedObject_initWithInt_withOrgSpongycastleAsn1ASN1Encodable_(type, new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(certificateOctets)));
}

OrgSpongycastleAsn1IsismttOcspRequestedCertificate *new_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithInt_withByteArray_(jint type, IOSByteArray *certificateOctets) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, initWithInt_withByteArray_, type, certificateOctets)
}

OrgSpongycastleAsn1IsismttOcspRequestedCertificate *create_OrgSpongycastleAsn1IsismttOcspRequestedCertificate_initWithInt_withByteArray_(jint type, IOSByteArray *certificateOctets) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1IsismttOcspRequestedCertificate, initWithInt_withByteArray_, type, certificateOctets)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1IsismttOcspRequestedCertificate)
