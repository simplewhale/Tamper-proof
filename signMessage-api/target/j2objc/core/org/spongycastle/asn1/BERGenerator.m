//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/BERGenerator.java
//

#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "org/spongycastle/asn1/ASN1Generator.h"
#include "org/spongycastle/asn1/BERGenerator.h"
#include "org/spongycastle/asn1/BERTags.h"

@interface OrgSpongycastleAsn1BERGenerator () {
 @public
  jboolean _tagged_;
  jboolean _isExplicit_;
  jint _tagNo_;
}

- (void)writeHdrWithInt:(jint)tag;

@end

__attribute__((unused)) static void OrgSpongycastleAsn1BERGenerator_writeHdrWithInt_(OrgSpongycastleAsn1BERGenerator *self, jint tag);

@implementation OrgSpongycastleAsn1BERGenerator

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  OrgSpongycastleAsn1BERGenerator_initWithJavaIoOutputStream_(self, outArg);
  return self;
}

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                   withInt:(jint)tagNo
                               withBoolean:(jboolean)isExplicit {
  OrgSpongycastleAsn1BERGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(self, outArg, tagNo, isExplicit);
  return self;
}

- (JavaIoOutputStream *)getRawOutputStream {
  return _out_;
}

- (void)writeHdrWithInt:(jint)tag {
  OrgSpongycastleAsn1BERGenerator_writeHdrWithInt_(self, tag);
}

- (void)writeBERHeaderWithInt:(jint)tag {
  if (_tagged_) {
    jint tagNum = _tagNo_ | OrgSpongycastleAsn1BERTags_TAGGED;
    if (_isExplicit_) {
      OrgSpongycastleAsn1BERGenerator_writeHdrWithInt_(self, tagNum | OrgSpongycastleAsn1BERTags_CONSTRUCTED);
      OrgSpongycastleAsn1BERGenerator_writeHdrWithInt_(self, tag);
    }
    else {
      if ((tag & OrgSpongycastleAsn1BERTags_CONSTRUCTED) != 0) {
        OrgSpongycastleAsn1BERGenerator_writeHdrWithInt_(self, tagNum | OrgSpongycastleAsn1BERTags_CONSTRUCTED);
      }
      else {
        OrgSpongycastleAsn1BERGenerator_writeHdrWithInt_(self, tagNum);
      }
    }
  }
  else {
    OrgSpongycastleAsn1BERGenerator_writeHdrWithInt_(self, tag);
  }
}

- (void)writeBEREnd {
  [((JavaIoOutputStream *) nil_chk(_out_)) writeWithInt:(jint) 0x00];
  [((JavaIoOutputStream *) nil_chk(_out_)) writeWithInt:(jint) 0x00];
  if (_tagged_ && _isExplicit_) {
    [((JavaIoOutputStream *) nil_chk(_out_)) writeWithInt:(jint) 0x00];
    [((JavaIoOutputStream *) nil_chk(_out_)) writeWithInt:(jint) 0x00];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoOutputStream:);
  methods[1].selector = @selector(initWithJavaIoOutputStream:withInt:withBoolean:);
  methods[2].selector = @selector(getRawOutputStream);
  methods[3].selector = @selector(writeHdrWithInt:);
  methods[4].selector = @selector(writeBERHeaderWithInt:);
  methods[5].selector = @selector(writeBEREnd);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_tagged_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_isExplicit_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_tagNo_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoOutputStream;", "LJavaIoOutputStream;IZ", "writeHdr", "I", "LJavaIoIOException;", "writeBERHeader" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1BERGenerator = { "BERGenerator", "org.spongycastle.asn1", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1BERGenerator;
}

@end

void OrgSpongycastleAsn1BERGenerator_initWithJavaIoOutputStream_(OrgSpongycastleAsn1BERGenerator *self, JavaIoOutputStream *outArg) {
  OrgSpongycastleAsn1ASN1Generator_initWithJavaIoOutputStream_(self, outArg);
  self->_tagged_ = false;
}

OrgSpongycastleAsn1BERGenerator *new_OrgSpongycastleAsn1BERGenerator_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1BERGenerator, initWithJavaIoOutputStream_, outArg)
}

OrgSpongycastleAsn1BERGenerator *create_OrgSpongycastleAsn1BERGenerator_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1BERGenerator, initWithJavaIoOutputStream_, outArg)
}

void OrgSpongycastleAsn1BERGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(OrgSpongycastleAsn1BERGenerator *self, JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit) {
  OrgSpongycastleAsn1ASN1Generator_initWithJavaIoOutputStream_(self, outArg);
  self->_tagged_ = false;
  self->_tagged_ = true;
  self->_isExplicit_ = isExplicit;
  self->_tagNo_ = tagNo;
}

OrgSpongycastleAsn1BERGenerator *new_OrgSpongycastleAsn1BERGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1BERGenerator, initWithJavaIoOutputStream_withInt_withBoolean_, outArg, tagNo, isExplicit)
}

OrgSpongycastleAsn1BERGenerator *create_OrgSpongycastleAsn1BERGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1BERGenerator, initWithJavaIoOutputStream_withInt_withBoolean_, outArg, tagNo, isExplicit)
}

void OrgSpongycastleAsn1BERGenerator_writeHdrWithInt_(OrgSpongycastleAsn1BERGenerator *self, jint tag) {
  [((JavaIoOutputStream *) nil_chk(self->_out_)) writeWithInt:tag];
  [((JavaIoOutputStream *) nil_chk(self->_out_)) writeWithInt:(jint) 0x80];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1BERGenerator)
