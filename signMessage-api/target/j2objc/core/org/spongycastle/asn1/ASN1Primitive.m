//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/ASN1Primitive.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/ClassCastException.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1InputStream.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1OutputStream.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"

@implementation OrgSpongycastleAsn1ASN1Primitive

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgSpongycastleAsn1ASN1Primitive *)fromByteArrayWithByteArray:(IOSByteArray *)data {
  return OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(data);
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return true;
  }
  return ([OrgSpongycastleAsn1ASN1Encodable_class_() isInstance:o]) && [self asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:[((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check(o, OrgSpongycastleAsn1ASN1Encodable_class_())))) toASN1Primitive]];
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  return self;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toDERObject {
  return self;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toDLObject {
  return self;
}

- (NSUInteger)hash {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isConstructed {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)encodedLength {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)encodeWithOrgSpongycastleAsn1ASN1OutputStream:(OrgSpongycastleAsn1ASN1OutputStream *)outArg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)o {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "Z", 0x11, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 5, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x400, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x400, 6, 7, 2, -1, -1, -1 },
    { NULL, "Z", 0x400, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(fromByteArrayWithByteArray:);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(toASN1Primitive);
  methods[4].selector = @selector(toDERObject);
  methods[5].selector = @selector(toDLObject);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(isConstructed);
  methods[8].selector = @selector(encodedLength);
  methods[9].selector = @selector(encodeWithOrgSpongycastleAsn1ASN1OutputStream:);
  methods[10].selector = @selector(asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "fromByteArray", "[B", "LJavaIoIOException;", "equals", "LNSObject;", "hashCode", "encode", "LOrgSpongycastleAsn1ASN1OutputStream;", "asn1Equals", "LOrgSpongycastleAsn1ASN1Primitive;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1ASN1Primitive = { "ASN1Primitive", "org.spongycastle.asn1", ptrTable, methods, NULL, 7, 0x401, 11, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1ASN1Primitive;
}

@end

void OrgSpongycastleAsn1ASN1Primitive_init(OrgSpongycastleAsn1ASN1Primitive *self) {
  OrgSpongycastleAsn1ASN1Object_init(self);
}

OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(IOSByteArray *data) {
  OrgSpongycastleAsn1ASN1Primitive_initialize();
  OrgSpongycastleAsn1ASN1InputStream *aIn = new_OrgSpongycastleAsn1ASN1InputStream_initWithByteArray_(data);
  @try {
    OrgSpongycastleAsn1ASN1Primitive *o = [aIn readObject];
    if ([aIn available] != 0) {
      @throw new_JavaIoIOException_initWithNSString_(@"Extra data detected in stream");
    }
    return o;
  }
  @catch (JavaLangClassCastException *e) {
    @throw new_JavaIoIOException_initWithNSString_(@"cannot recognise object in stream");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1ASN1Primitive)
