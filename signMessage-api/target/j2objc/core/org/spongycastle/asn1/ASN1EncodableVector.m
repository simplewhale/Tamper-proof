//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/ASN1EncodableVector.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Enumeration.h"
#include "java/util/Vector.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"

@interface OrgSpongycastleAsn1ASN1EncodableVector () {
 @public
  JavaUtilVector *v_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1ASN1EncodableVector, v_, JavaUtilVector *)

@implementation OrgSpongycastleAsn1ASN1EncodableVector

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleAsn1ASN1EncodableVector_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addWithOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)obj {
  [((JavaUtilVector *) nil_chk(v_)) addElementWithId:obj];
}

- (void)addAllWithOrgSpongycastleAsn1ASN1EncodableVector:(OrgSpongycastleAsn1ASN1EncodableVector *)other {
  for (id<JavaUtilEnumeration> en = [((JavaUtilVector *) nil_chk(((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk(other))->v_)) elements]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
    [v_ addElementWithId:[en nextElement]];
  }
}

- (id<OrgSpongycastleAsn1ASN1Encodable>)getWithInt:(jint)i {
  return (id<OrgSpongycastleAsn1ASN1Encodable>) cast_check([((JavaUtilVector *) nil_chk(v_)) elementAtWithInt:i], OrgSpongycastleAsn1ASN1Encodable_class_());
}

- (jint)size {
  return [((JavaUtilVector *) nil_chk(v_)) size];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Encodable;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithOrgSpongycastleAsn1ASN1Encodable:);
  methods[2].selector = @selector(addAllWithOrgSpongycastleAsn1ASN1EncodableVector:);
  methods[3].selector = @selector(getWithInt:);
  methods[4].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "v_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "LOrgSpongycastleAsn1ASN1Encodable;", "addAll", "LOrgSpongycastleAsn1ASN1EncodableVector;", "get", "I" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1ASN1EncodableVector = { "ASN1EncodableVector", "org.spongycastle.asn1", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1ASN1EncodableVector;
}

@end

void OrgSpongycastleAsn1ASN1EncodableVector_init(OrgSpongycastleAsn1ASN1EncodableVector *self) {
  NSObject_init(self);
  self->v_ = new_JavaUtilVector_init();
}

OrgSpongycastleAsn1ASN1EncodableVector *new_OrgSpongycastleAsn1ASN1EncodableVector_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1EncodableVector, init)
}

OrgSpongycastleAsn1ASN1EncodableVector *create_OrgSpongycastleAsn1ASN1EncodableVector_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1EncodableVector, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1ASN1EncodableVector)
