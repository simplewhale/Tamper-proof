//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/util/ASN1Dump.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"
#include "org/spongycastle/asn1/ASN1ApplicationSpecific.h"
#include "org/spongycastle/asn1/ASN1Boolean.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1Enumerated.h"
#include "org/spongycastle/asn1/ASN1GeneralizedTime.h"
#include "org/spongycastle/asn1/ASN1Integer.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1Set.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/ASN1UTCTime.h"
#include "org/spongycastle/asn1/BERApplicationSpecific.h"
#include "org/spongycastle/asn1/BEROctetString.h"
#include "org/spongycastle/asn1/BERSequence.h"
#include "org/spongycastle/asn1/BERSet.h"
#include "org/spongycastle/asn1/BERTaggedObject.h"
#include "org/spongycastle/asn1/BERTags.h"
#include "org/spongycastle/asn1/DERApplicationSpecific.h"
#include "org/spongycastle/asn1/DERBMPString.h"
#include "org/spongycastle/asn1/DERBitString.h"
#include "org/spongycastle/asn1/DERExternal.h"
#include "org/spongycastle/asn1/DERGraphicString.h"
#include "org/spongycastle/asn1/DERIA5String.h"
#include "org/spongycastle/asn1/DERNull.h"
#include "org/spongycastle/asn1/DERPrintableString.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/DERT61String.h"
#include "org/spongycastle/asn1/DERUTF8String.h"
#include "org/spongycastle/asn1/DERVideotexString.h"
#include "org/spongycastle/asn1/DERVisibleString.h"
#include "org/spongycastle/asn1/util/ASN1Dump.h"
#include "org/spongycastle/util/Strings.h"
#include "org/spongycastle/util/encoders/Hex.h"

@interface OrgSpongycastleAsn1UtilASN1Dump ()

+ (NSString *)outputApplicationSpecificWithNSString:(NSString *)type
                                       withNSString:(NSString *)indent
                                        withBoolean:(jboolean)verbose
               withOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)obj
                                       withNSString:(NSString *)nl;

+ (NSString *)dumpBinaryDataAsStringWithNSString:(NSString *)indent
                                   withByteArray:(IOSByteArray *)bytes;

+ (NSString *)calculateAscStringWithByteArray:(IOSByteArray *)bytes
                                      withInt:(jint)off
                                      withInt:(jint)len;

@end

inline NSString *OrgSpongycastleAsn1UtilASN1Dump_get_TAB(void);
static NSString *OrgSpongycastleAsn1UtilASN1Dump_TAB = @"    ";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1UtilASN1Dump, TAB, NSString *)

inline jint OrgSpongycastleAsn1UtilASN1Dump_get_SAMPLE_SIZE(void);
#define OrgSpongycastleAsn1UtilASN1Dump_SAMPLE_SIZE 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1UtilASN1Dump, SAMPLE_SIZE, jint)

__attribute__((unused)) static NSString *OrgSpongycastleAsn1UtilASN1Dump_outputApplicationSpecificWithNSString_withNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withNSString_(NSString *type, NSString *indent, jboolean verbose, OrgSpongycastleAsn1ASN1Primitive *obj, NSString *nl);

__attribute__((unused)) static NSString *OrgSpongycastleAsn1UtilASN1Dump_dumpBinaryDataAsStringWithNSString_withByteArray_(NSString *indent, IOSByteArray *bytes);

__attribute__((unused)) static NSString *OrgSpongycastleAsn1UtilASN1Dump_calculateAscStringWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint off, jint len);

@implementation OrgSpongycastleAsn1UtilASN1Dump

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleAsn1UtilASN1Dump_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)_dumpAsStringWithNSString:(NSString *)indent
                      withBoolean:(jboolean)verbose
withOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)obj
         withJavaLangStringBuffer:(JavaLangStringBuffer *)buf {
  OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(indent, verbose, obj, buf);
}

+ (NSString *)outputApplicationSpecificWithNSString:(NSString *)type
                                       withNSString:(NSString *)indent
                                        withBoolean:(jboolean)verbose
               withOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)obj
                                       withNSString:(NSString *)nl {
  return OrgSpongycastleAsn1UtilASN1Dump_outputApplicationSpecificWithNSString_withNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withNSString_(type, indent, verbose, obj, nl);
}

+ (NSString *)dumpAsStringWithId:(id)obj {
  return OrgSpongycastleAsn1UtilASN1Dump_dumpAsStringWithId_(obj);
}

+ (NSString *)dumpAsStringWithId:(id)obj
                     withBoolean:(jboolean)verbose {
  return OrgSpongycastleAsn1UtilASN1Dump_dumpAsStringWithId_withBoolean_(obj, verbose);
}

+ (NSString *)dumpBinaryDataAsStringWithNSString:(NSString *)indent
                                   withByteArray:(IOSByteArray *)bytes {
  return OrgSpongycastleAsn1UtilASN1Dump_dumpBinaryDataAsStringWithNSString_withByteArray_(indent, bytes);
}

+ (NSString *)calculateAscStringWithByteArray:(IOSByteArray *)bytes
                                      withInt:(jint)off
                                      withInt:(jint)len {
  return OrgSpongycastleAsn1UtilASN1Dump_calculateAscStringWithByteArray_withInt_withInt_(bytes, off, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(_dumpAsStringWithNSString:withBoolean:withOrgSpongycastleAsn1ASN1Primitive:withJavaLangStringBuffer:);
  methods[2].selector = @selector(outputApplicationSpecificWithNSString:withNSString:withBoolean:withOrgSpongycastleAsn1ASN1Primitive:withNSString:);
  methods[3].selector = @selector(dumpAsStringWithId:);
  methods[4].selector = @selector(dumpAsStringWithId:withBoolean:);
  methods[5].selector = @selector(dumpBinaryDataAsStringWithNSString:withByteArray:);
  methods[6].selector = @selector(calculateAscStringWithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAB", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "SAMPLE_SIZE", "I", .constantValue.asInt = OrgSpongycastleAsn1UtilASN1Dump_SAMPLE_SIZE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "_dumpAsString", "LNSString;ZLOrgSpongycastleAsn1ASN1Primitive;LJavaLangStringBuffer;", "outputApplicationSpecific", "LNSString;LNSString;ZLOrgSpongycastleAsn1ASN1Primitive;LNSString;", "dumpAsString", "LNSObject;", "LNSObject;Z", "dumpBinaryDataAsString", "LNSString;[B", "calculateAscString", "[BII", &OrgSpongycastleAsn1UtilASN1Dump_TAB };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1UtilASN1Dump = { "ASN1Dump", "org.spongycastle.asn1.util", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1UtilASN1Dump;
}

@end

void OrgSpongycastleAsn1UtilASN1Dump_init(OrgSpongycastleAsn1UtilASN1Dump *self) {
  NSObject_init(self);
}

OrgSpongycastleAsn1UtilASN1Dump *new_OrgSpongycastleAsn1UtilASN1Dump_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1UtilASN1Dump, init)
}

OrgSpongycastleAsn1UtilASN1Dump *create_OrgSpongycastleAsn1UtilASN1Dump_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1UtilASN1Dump, init)
}

void OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(NSString *indent, jboolean verbose, OrgSpongycastleAsn1ASN1Primitive *obj, JavaLangStringBuffer *buf) {
  OrgSpongycastleAsn1UtilASN1Dump_initialize();
  NSString *nl = OrgSpongycastleUtilStrings_lineSeparator();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Sequence class]]) {
    id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(((OrgSpongycastleAsn1ASN1Sequence *) obj))) getObjects];
    NSString *tab = JreStrcat("$$", indent, OrgSpongycastleAsn1UtilASN1Dump_TAB);
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:indent];
    if ([obj isKindOfClass:[OrgSpongycastleAsn1BERSequence class]]) {
      (void) [buf appendWithNSString:@"BER Sequence"];
    }
    else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERSequence class]]) {
      (void) [buf appendWithNSString:@"DER Sequence"];
    }
    else {
      (void) [buf appendWithNSString:@"Sequence"];
    }
    (void) [buf appendWithNSString:nl];
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      id o = [e nextElement];
      if (o == nil || [o isEqual:JreLoadStatic(OrgSpongycastleAsn1DERNull, INSTANCE)]) {
        (void) [buf appendWithNSString:tab];
        (void) [buf appendWithNSString:@"NULL"];
        (void) [buf appendWithNSString:nl];
      }
      else if ([o isKindOfClass:[OrgSpongycastleAsn1ASN1Primitive class]]) {
        OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(tab, verbose, (OrgSpongycastleAsn1ASN1Primitive *) o, buf);
      }
      else {
        OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(tab, verbose, [((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check(o, OrgSpongycastleAsn1ASN1Encodable_class_())) toASN1Primitive], buf);
      }
    }
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1TaggedObject class]]) {
    NSString *tab = JreStrcat("$$", indent, OrgSpongycastleAsn1UtilASN1Dump_TAB);
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:indent];
    if ([obj isKindOfClass:[OrgSpongycastleAsn1BERTaggedObject class]]) {
      (void) [buf appendWithNSString:@"BER Tagged ["];
    }
    else {
      (void) [buf appendWithNSString:@"Tagged ["];
    }
    OrgSpongycastleAsn1ASN1TaggedObject *o = (OrgSpongycastleAsn1ASN1TaggedObject *) cast_chk(obj, [OrgSpongycastleAsn1ASN1TaggedObject class]);
    (void) [buf appendWithNSString:JavaLangInteger_toStringWithInt_([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(o)) getTagNo])];
    (void) [buf appendWithChar:']'];
    if (![o isExplicit]) {
      (void) [buf appendWithNSString:@" IMPLICIT "];
    }
    (void) [buf appendWithNSString:nl];
    if ([o isEmpty]) {
      (void) [buf appendWithNSString:tab];
      (void) [buf appendWithNSString:@"EMPTY"];
      (void) [buf appendWithNSString:nl];
    }
    else {
      OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(tab, verbose, [o getObject], buf);
    }
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Set class]]) {
    id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Set *) nil_chk(((OrgSpongycastleAsn1ASN1Set *) obj))) getObjects];
    NSString *tab = JreStrcat("$$", indent, OrgSpongycastleAsn1UtilASN1Dump_TAB);
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:indent];
    if ([obj isKindOfClass:[OrgSpongycastleAsn1BERSet class]]) {
      (void) [buf appendWithNSString:@"BER Set"];
    }
    else {
      (void) [buf appendWithNSString:@"DER Set"];
    }
    (void) [buf appendWithNSString:nl];
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      id o = [e nextElement];
      if (o == nil) {
        (void) [buf appendWithNSString:tab];
        (void) [buf appendWithNSString:@"NULL"];
        (void) [buf appendWithNSString:nl];
      }
      else if ([o isKindOfClass:[OrgSpongycastleAsn1ASN1Primitive class]]) {
        OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(tab, verbose, (OrgSpongycastleAsn1ASN1Primitive *) o, buf);
      }
      else {
        OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(tab, verbose, [((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check(o, OrgSpongycastleAsn1ASN1Encodable_class_())) toASN1Primitive], buf);
      }
    }
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1OctetString class]]) {
    OrgSpongycastleAsn1ASN1OctetString *oct = (OrgSpongycastleAsn1ASN1OctetString *) obj;
    if ([obj isKindOfClass:[OrgSpongycastleAsn1BEROctetString class]]) {
      (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$I$", indent, @"BER Constructed Octet String[", ((IOSByteArray *) nil_chk([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(oct)) getOctets]))->size_, @"] ")];
    }
    else {
      (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$I$", indent, @"DER Octet String[", ((IOSByteArray *) nil_chk([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(oct)) getOctets]))->size_, @"] ")];
    }
    if (verbose) {
      (void) [buf appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_dumpBinaryDataAsStringWithNSString_withByteArray_(indent, [oct getOctets])];
    }
    else {
      (void) [buf appendWithNSString:nl];
    }
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$C$", indent, @"ObjectIdentifier(", [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(((OrgSpongycastleAsn1ASN1ObjectIdentifier *) obj))) getId], ')', nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Boolean class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$ZC$", indent, @"Boolean(", [((OrgSpongycastleAsn1ASN1Boolean *) nil_chk(((OrgSpongycastleAsn1ASN1Boolean *) obj))) isTrue], ')', nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Integer class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$@C$", indent, @"Integer(", [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) obj))) getValue], ')', nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERBitString class]]) {
    OrgSpongycastleAsn1DERBitString *bt = (OrgSpongycastleAsn1DERBitString *) obj;
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$I$I$", indent, @"DER Bit String[", ((IOSByteArray *) nil_chk([((OrgSpongycastleAsn1DERBitString *) nil_chk(bt)) getBytes]))->size_, @", ", [bt getPadBits], @"] ")];
    if (verbose) {
      (void) [buf appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_dumpBinaryDataAsStringWithNSString_withByteArray_(indent, [bt getBytes])];
    }
    else {
      (void) [buf appendWithNSString:nl];
    }
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERIA5String class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"IA5String(", [((OrgSpongycastleAsn1DERIA5String *) nil_chk(((OrgSpongycastleAsn1DERIA5String *) obj))) getString], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERUTF8String class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"UTF8String(", [((OrgSpongycastleAsn1DERUTF8String *) nil_chk(((OrgSpongycastleAsn1DERUTF8String *) obj))) getString], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERPrintableString class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"PrintableString(", [((OrgSpongycastleAsn1DERPrintableString *) nil_chk(((OrgSpongycastleAsn1DERPrintableString *) obj))) getString], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERVisibleString class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"VisibleString(", [((OrgSpongycastleAsn1DERVisibleString *) nil_chk(((OrgSpongycastleAsn1DERVisibleString *) obj))) getString], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERBMPString class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"BMPString(", [((OrgSpongycastleAsn1DERBMPString *) nil_chk(((OrgSpongycastleAsn1DERBMPString *) obj))) getString], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERT61String class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"T61String(", [((OrgSpongycastleAsn1DERT61String *) nil_chk(((OrgSpongycastleAsn1DERT61String *) obj))) getString], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERGraphicString class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"GraphicString(", [((OrgSpongycastleAsn1DERGraphicString *) nil_chk(((OrgSpongycastleAsn1DERGraphicString *) obj))) getString], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERVideotexString class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"VideotexString(", [((OrgSpongycastleAsn1DERVideotexString *) nil_chk(((OrgSpongycastleAsn1DERVideotexString *) obj))) getString], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1UTCTime class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"UTCTime(", [((OrgSpongycastleAsn1ASN1UTCTime *) nil_chk(((OrgSpongycastleAsn1ASN1UTCTime *) obj))) getTime], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1GeneralizedTime class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$$$", indent, @"GeneralizedTime(", [((OrgSpongycastleAsn1ASN1GeneralizedTime *) nil_chk(((OrgSpongycastleAsn1ASN1GeneralizedTime *) obj))) getTime], @") ", nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1BERApplicationSpecific class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_outputApplicationSpecificWithNSString_withNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withNSString_(@"BER", indent, verbose, obj, nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERApplicationSpecific class]]) {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_outputApplicationSpecificWithNSString_withNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withNSString_(@"DER", indent, verbose, obj, nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Enumerated class]]) {
    OrgSpongycastleAsn1ASN1Enumerated *en = (OrgSpongycastleAsn1ASN1Enumerated *) obj;
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$@C$", indent, @"DER Enumerated(", [((OrgSpongycastleAsn1ASN1Enumerated *) nil_chk(en)) getValue], ')', nl)];
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1DERExternal class]]) {
    OrgSpongycastleAsn1DERExternal *ext = (OrgSpongycastleAsn1DERExternal *) obj;
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$", indent, @"External ", nl)];
    NSString *tab = JreStrcat("$$", indent, OrgSpongycastleAsn1UtilASN1Dump_TAB);
    if ([((OrgSpongycastleAsn1DERExternal *) nil_chk(ext)) getDirectReference] != nil) {
      (void) [buf appendWithNSString:JreStrcat("$$$$", tab, @"Direct Reference: ", [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([ext getDirectReference])) getId], nl)];
    }
    if ([ext getIndirectReference] != nil) {
      (void) [buf appendWithNSString:JreStrcat("$$$$", tab, @"Indirect Reference: ", [((OrgSpongycastleAsn1ASN1Integer *) nil_chk([ext getIndirectReference])) description], nl)];
    }
    if ([ext getDataValueDescriptor] != nil) {
      OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(tab, verbose, [ext getDataValueDescriptor], buf);
    }
    (void) [buf appendWithNSString:JreStrcat("$$I$", tab, @"Encoding: ", [ext getEncoding], nl)];
    OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(tab, verbose, [ext getExternalContent], buf);
  }
  else {
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:JreStrcat("$$$", indent, [((OrgSpongycastleAsn1ASN1Primitive *) nil_chk(obj)) description], nl)];
  }
}

NSString *OrgSpongycastleAsn1UtilASN1Dump_outputApplicationSpecificWithNSString_withNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withNSString_(NSString *type, NSString *indent, jboolean verbose, OrgSpongycastleAsn1ASN1Primitive *obj, NSString *nl) {
  OrgSpongycastleAsn1UtilASN1Dump_initialize();
  OrgSpongycastleAsn1ASN1ApplicationSpecific *app = OrgSpongycastleAsn1ASN1ApplicationSpecific_getInstanceWithId_(obj);
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  if ([((OrgSpongycastleAsn1ASN1ApplicationSpecific *) nil_chk(app)) isConstructed]) {
    @try {
      OrgSpongycastleAsn1ASN1Sequence *s = OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_([app getObjectWithInt:OrgSpongycastleAsn1BERTags_SEQUENCE]);
      (void) [buf appendWithNSString:JreStrcat("$$$IC$", indent, type, @" ApplicationSpecific[", [app getApplicationTag], ']', nl)];
      for (id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(s)) getObjects]; [((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]; ) {
        OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(JreStrcat("$$", indent, OrgSpongycastleAsn1UtilASN1Dump_TAB), verbose, (OrgSpongycastleAsn1ASN1Primitive *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Primitive class]), buf);
      }
    }
    @catch (JavaIoIOException *e) {
      (void) [buf appendWithId:e];
    }
    return [buf description];
  }
  return JreStrcat("$$$I$$C$", indent, type, @" ApplicationSpecific[", [app getApplicationTag], @"] (", OrgSpongycastleUtilStrings_fromByteArrayWithByteArray_(OrgSpongycastleUtilEncodersHex_encodeWithByteArray_([app getContents])), ')', nl);
}

NSString *OrgSpongycastleAsn1UtilASN1Dump_dumpAsStringWithId_(id obj) {
  OrgSpongycastleAsn1UtilASN1Dump_initialize();
  return OrgSpongycastleAsn1UtilASN1Dump_dumpAsStringWithId_withBoolean_(obj, false);
}

NSString *OrgSpongycastleAsn1UtilASN1Dump_dumpAsStringWithId_withBoolean_(id obj, jboolean verbose) {
  OrgSpongycastleAsn1UtilASN1Dump_initialize();
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Primitive class]]) {
    OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(@"", verbose, (OrgSpongycastleAsn1ASN1Primitive *) obj, buf);
  }
  else if ([OrgSpongycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    OrgSpongycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgSpongycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(@"", verbose, [((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check(obj, OrgSpongycastleAsn1ASN1Encodable_class_())))) toASN1Primitive], buf);
  }
  else {
    return JreStrcat("$$", @"unknown object type ", [nil_chk(obj) description]);
  }
  return [buf description];
}

NSString *OrgSpongycastleAsn1UtilASN1Dump_dumpBinaryDataAsStringWithNSString_withByteArray_(NSString *indent, IOSByteArray *bytes) {
  OrgSpongycastleAsn1UtilASN1Dump_initialize();
  NSString *nl = OrgSpongycastleUtilStrings_lineSeparator();
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  (void) JreStrAppendStrong(&indent, "$", OrgSpongycastleAsn1UtilASN1Dump_TAB);
  (void) [buf appendWithNSString:nl];
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(bytes))->size_; i += OrgSpongycastleAsn1UtilASN1Dump_SAMPLE_SIZE) {
    if (bytes->size_ - i > OrgSpongycastleAsn1UtilASN1Dump_SAMPLE_SIZE) {
      (void) [buf appendWithNSString:indent];
      (void) [buf appendWithNSString:OrgSpongycastleUtilStrings_fromByteArrayWithByteArray_(OrgSpongycastleUtilEncodersHex_encodeWithByteArray_withInt_withInt_(bytes, i, OrgSpongycastleAsn1UtilASN1Dump_SAMPLE_SIZE))];
      (void) [buf appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_TAB];
      (void) [buf appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_calculateAscStringWithByteArray_withInt_withInt_(bytes, i, OrgSpongycastleAsn1UtilASN1Dump_SAMPLE_SIZE)];
      (void) [buf appendWithNSString:nl];
    }
    else {
      (void) [buf appendWithNSString:indent];
      (void) [buf appendWithNSString:OrgSpongycastleUtilStrings_fromByteArrayWithByteArray_(OrgSpongycastleUtilEncodersHex_encodeWithByteArray_withInt_withInt_(bytes, i, bytes->size_ - i))];
      for (jint j = bytes->size_ - i; j != OrgSpongycastleAsn1UtilASN1Dump_SAMPLE_SIZE; j++) {
        (void) [buf appendWithNSString:@"  "];
      }
      (void) [buf appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_TAB];
      (void) [buf appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_calculateAscStringWithByteArray_withInt_withInt_(bytes, i, bytes->size_ - i)];
      (void) [buf appendWithNSString:nl];
    }
  }
  return [buf description];
}

NSString *OrgSpongycastleAsn1UtilASN1Dump_calculateAscStringWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint off, jint len) {
  OrgSpongycastleAsn1UtilASN1Dump_initialize();
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  for (jint i = off; i != off + len; i++) {
    if (IOSByteArray_Get(nil_chk(bytes), i) >= ' ' && IOSByteArray_Get(bytes, i) <= '~') {
      (void) [buf appendWithChar:(jchar) IOSByteArray_Get(bytes, i)];
    }
  }
  return [buf description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1UtilASN1Dump)
