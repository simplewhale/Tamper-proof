//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/cmp/CertifiedKeyPair.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/DERTaggedObject.h"
#include "org/spongycastle/asn1/cmp/CertOrEncCert.h"
#include "org/spongycastle/asn1/cmp/CertifiedKeyPair.h"
#include "org/spongycastle/asn1/crmf/EncryptedValue.h"
#include "org/spongycastle/asn1/crmf/PKIPublicationInfo.h"

@interface OrgSpongycastleAsn1CmpCertifiedKeyPair () {
 @public
  OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert_;
  OrgSpongycastleAsn1CrmfEncryptedValue *privateKey_;
  OrgSpongycastleAsn1CrmfPKIPublicationInfo *publicationInfo_;
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmpCertifiedKeyPair, certOrEncCert_, OrgSpongycastleAsn1CmpCertOrEncCert *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmpCertifiedKeyPair, privateKey_, OrgSpongycastleAsn1CrmfEncryptedValue *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmpCertifiedKeyPair, publicationInfo_, OrgSpongycastleAsn1CrmfPKIPublicationInfo *)

__attribute__((unused)) static void OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmpCertifiedKeyPair *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1CmpCertifiedKeyPair *new_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1CmpCertifiedKeyPair *create_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

@implementation OrgSpongycastleAsn1CmpCertifiedKeyPair

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (OrgSpongycastleAsn1CmpCertifiedKeyPair *)getInstanceWithId:(id)o {
  return OrgSpongycastleAsn1CmpCertifiedKeyPair_getInstanceWithId_(o);
}

- (instancetype)initWithOrgSpongycastleAsn1CmpCertOrEncCert:(OrgSpongycastleAsn1CmpCertOrEncCert *)certOrEncCert {
  OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_(self, certOrEncCert);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1CmpCertOrEncCert:(OrgSpongycastleAsn1CmpCertOrEncCert *)certOrEncCert
                  withOrgSpongycastleAsn1CrmfEncryptedValue:(OrgSpongycastleAsn1CrmfEncryptedValue *)privateKey
              withOrgSpongycastleAsn1CrmfPKIPublicationInfo:(OrgSpongycastleAsn1CrmfPKIPublicationInfo *)publicationInfo {
  OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_(self, certOrEncCert, privateKey, publicationInfo);
  return self;
}

- (OrgSpongycastleAsn1CmpCertOrEncCert *)getCertOrEncCert {
  return certOrEncCert_;
}

- (OrgSpongycastleAsn1CrmfEncryptedValue *)getPrivateKey {
  return privateKey_;
}

- (OrgSpongycastleAsn1CrmfPKIPublicationInfo *)getPublicationInfo {
  return publicationInfo_;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:certOrEncCert_];
  if (privateKey_ != nil) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(true, 0, privateKey_)];
  }
  if (publicationInfo_ != nil) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(true, 1, publicationInfo_)];
  }
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmpCertifiedKeyPair;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmpCertOrEncCert;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CrmfEncryptedValue;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CrmfPKIPublicationInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1CmpCertOrEncCert:);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1CmpCertOrEncCert:withOrgSpongycastleAsn1CrmfEncryptedValue:withOrgSpongycastleAsn1CrmfPKIPublicationInfo:);
  methods[4].selector = @selector(getCertOrEncCert);
  methods[5].selector = @selector(getPrivateKey);
  methods[6].selector = @selector(getPublicationInfo);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certOrEncCert_", "LOrgSpongycastleAsn1CmpCertOrEncCert;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privateKey_", "LOrgSpongycastleAsn1CrmfEncryptedValue;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicationInfo_", "LOrgSpongycastleAsn1CrmfPKIPublicationInfo;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "LOrgSpongycastleAsn1CmpCertOrEncCert;", "LOrgSpongycastleAsn1CmpCertOrEncCert;LOrgSpongycastleAsn1CrmfEncryptedValue;LOrgSpongycastleAsn1CrmfPKIPublicationInfo;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1CmpCertifiedKeyPair = { "CertifiedKeyPair", "org.spongycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1CmpCertifiedKeyPair;
}

@end

void OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmpCertifiedKeyPair *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->certOrEncCert_ = OrgSpongycastleAsn1CmpCertOrEncCert_getInstanceWithId_([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  if ([seq size] >= 2) {
    if ([seq size] == 2) {
      OrgSpongycastleAsn1ASN1TaggedObject *tagged = OrgSpongycastleAsn1ASN1TaggedObject_getInstanceWithId_([seq getObjectAtWithInt:1]);
      if ([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == 0) {
        self->privateKey_ = OrgSpongycastleAsn1CrmfEncryptedValue_getInstanceWithId_([tagged getObject]);
      }
      else {
        self->publicationInfo_ = OrgSpongycastleAsn1CrmfPKIPublicationInfo_getInstanceWithId_([tagged getObject]);
      }
    }
    else {
      self->privateKey_ = OrgSpongycastleAsn1CrmfEncryptedValue_getInstanceWithId_(OrgSpongycastleAsn1ASN1TaggedObject_getInstanceWithId_([seq getObjectAtWithInt:1]));
      self->publicationInfo_ = OrgSpongycastleAsn1CrmfPKIPublicationInfo_getInstanceWithId_(OrgSpongycastleAsn1ASN1TaggedObject_getInstanceWithId_([seq getObjectAtWithInt:2]));
    }
  }
}

OrgSpongycastleAsn1CmpCertifiedKeyPair *new_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmpCertifiedKeyPair, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1CmpCertifiedKeyPair *create_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmpCertifiedKeyPair, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1CmpCertifiedKeyPair *OrgSpongycastleAsn1CmpCertifiedKeyPair_getInstanceWithId_(id o) {
  OrgSpongycastleAsn1CmpCertifiedKeyPair_initialize();
  if ([o isKindOfClass:[OrgSpongycastleAsn1CmpCertifiedKeyPair class]]) {
    return (OrgSpongycastleAsn1CmpCertifiedKeyPair *) o;
  }
  if (o != nil) {
    return new_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_(OrgSpongycastleAsn1CmpCertifiedKeyPair *self, OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert) {
  OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_(self, certOrEncCert, nil, nil);
}

OrgSpongycastleAsn1CmpCertifiedKeyPair *new_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_(OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmpCertifiedKeyPair, initWithOrgSpongycastleAsn1CmpCertOrEncCert_, certOrEncCert)
}

OrgSpongycastleAsn1CmpCertifiedKeyPair *create_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_(OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmpCertifiedKeyPair, initWithOrgSpongycastleAsn1CmpCertOrEncCert_, certOrEncCert)
}

void OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_(OrgSpongycastleAsn1CmpCertifiedKeyPair *self, OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert, OrgSpongycastleAsn1CrmfEncryptedValue *privateKey, OrgSpongycastleAsn1CrmfPKIPublicationInfo *publicationInfo) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  if (certOrEncCert == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'certOrEncCert' cannot be null");
  }
  self->certOrEncCert_ = certOrEncCert;
  self->privateKey_ = privateKey;
  self->publicationInfo_ = publicationInfo;
}

OrgSpongycastleAsn1CmpCertifiedKeyPair *new_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_(OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert, OrgSpongycastleAsn1CrmfEncryptedValue *privateKey, OrgSpongycastleAsn1CrmfPKIPublicationInfo *publicationInfo) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmpCertifiedKeyPair, initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_, certOrEncCert, privateKey, publicationInfo)
}

OrgSpongycastleAsn1CmpCertifiedKeyPair *create_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_(OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert, OrgSpongycastleAsn1CrmfEncryptedValue *privateKey, OrgSpongycastleAsn1CrmfPKIPublicationInfo *publicationInfo) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmpCertifiedKeyPair, initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_, certOrEncCert, privateKey, publicationInfo)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1CmpCertifiedKeyPair)
