//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/cmp/CertifiedKeyPair.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmpCertifiedKeyPair")
#ifdef RESTRICT_OrgSpongycastleAsn1CmpCertifiedKeyPair
#define INCLUDE_ALL_OrgSpongycastleAsn1CmpCertifiedKeyPair 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1CmpCertifiedKeyPair 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1CmpCertifiedKeyPair

#if !defined (OrgSpongycastleAsn1CmpCertifiedKeyPair_) && (INCLUDE_ALL_OrgSpongycastleAsn1CmpCertifiedKeyPair || defined(INCLUDE_OrgSpongycastleAsn1CmpCertifiedKeyPair))
#define OrgSpongycastleAsn1CmpCertifiedKeyPair_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1CmpCertOrEncCert;
@class OrgSpongycastleAsn1CrmfEncryptedValue;
@class OrgSpongycastleAsn1CrmfPKIPublicationInfo;

@interface OrgSpongycastleAsn1CmpCertifiedKeyPair : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1CmpCertOrEncCert:(OrgSpongycastleAsn1CmpCertOrEncCert *)certOrEncCert;

- (instancetype)initWithOrgSpongycastleAsn1CmpCertOrEncCert:(OrgSpongycastleAsn1CmpCertOrEncCert *)certOrEncCert
                  withOrgSpongycastleAsn1CrmfEncryptedValue:(OrgSpongycastleAsn1CrmfEncryptedValue *)privateKey
              withOrgSpongycastleAsn1CrmfPKIPublicationInfo:(OrgSpongycastleAsn1CrmfPKIPublicationInfo *)publicationInfo;

- (OrgSpongycastleAsn1CmpCertOrEncCert *)getCertOrEncCert;

+ (OrgSpongycastleAsn1CmpCertifiedKeyPair *)getInstanceWithId:(id)o;

- (OrgSpongycastleAsn1CrmfEncryptedValue *)getPrivateKey;

- (OrgSpongycastleAsn1CrmfPKIPublicationInfo *)getPublicationInfo;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmpCertifiedKeyPair)

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpCertifiedKeyPair *OrgSpongycastleAsn1CmpCertifiedKeyPair_getInstanceWithId_(id o);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_(OrgSpongycastleAsn1CmpCertifiedKeyPair *self, OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpCertifiedKeyPair *new_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_(OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpCertifiedKeyPair *create_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_(OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_(OrgSpongycastleAsn1CmpCertifiedKeyPair *self, OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert, OrgSpongycastleAsn1CrmfEncryptedValue *privateKey, OrgSpongycastleAsn1CrmfPKIPublicationInfo *publicationInfo);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpCertifiedKeyPair *new_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_(OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert, OrgSpongycastleAsn1CrmfEncryptedValue *privateKey, OrgSpongycastleAsn1CrmfPKIPublicationInfo *publicationInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpCertifiedKeyPair *create_OrgSpongycastleAsn1CmpCertifiedKeyPair_initWithOrgSpongycastleAsn1CmpCertOrEncCert_withOrgSpongycastleAsn1CrmfEncryptedValue_withOrgSpongycastleAsn1CrmfPKIPublicationInfo_(OrgSpongycastleAsn1CmpCertOrEncCert *certOrEncCert, OrgSpongycastleAsn1CrmfEncryptedValue *privateKey, OrgSpongycastleAsn1CrmfPKIPublicationInfo *publicationInfo);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmpCertifiedKeyPair)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmpCertifiedKeyPair")
