//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/cmp/Challenge.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmpChallenge")
#ifdef RESTRICT_OrgSpongycastleAsn1CmpChallenge
#define INCLUDE_ALL_OrgSpongycastleAsn1CmpChallenge 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1CmpChallenge 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1CmpChallenge

#if !defined (OrgSpongycastleAsn1CmpChallenge_) && (INCLUDE_ALL_OrgSpongycastleAsn1CmpChallenge || defined(INCLUDE_OrgSpongycastleAsn1CmpChallenge))
#define OrgSpongycastleAsn1CmpChallenge_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class IOSByteArray;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

@interface OrgSpongycastleAsn1CmpChallenge : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)owf
                                                     withByteArray:(IOSByteArray *)witness
                                                     withByteArray:(IOSByteArray *)challenge;

- (instancetype)initWithByteArray:(IOSByteArray *)witness
                    withByteArray:(IOSByteArray *)challenge;

- (IOSByteArray *)getChallenge;

+ (OrgSpongycastleAsn1CmpChallenge *)getInstanceWithId:(id)o;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getOwf;

- (IOSByteArray *)getWitness;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmpChallenge)

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpChallenge *OrgSpongycastleAsn1CmpChallenge_getInstanceWithId_(id o);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmpChallenge_initWithByteArray_withByteArray_(OrgSpongycastleAsn1CmpChallenge *self, IOSByteArray *witness, IOSByteArray *challenge);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpChallenge *new_OrgSpongycastleAsn1CmpChallenge_initWithByteArray_withByteArray_(IOSByteArray *witness, IOSByteArray *challenge) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpChallenge *create_OrgSpongycastleAsn1CmpChallenge_initWithByteArray_withByteArray_(IOSByteArray *witness, IOSByteArray *challenge);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmpChallenge_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgSpongycastleAsn1CmpChallenge *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *owf, IOSByteArray *witness, IOSByteArray *challenge);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpChallenge *new_OrgSpongycastleAsn1CmpChallenge_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgSpongycastleAsn1X509AlgorithmIdentifier *owf, IOSByteArray *witness, IOSByteArray *challenge) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmpChallenge *create_OrgSpongycastleAsn1CmpChallenge_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgSpongycastleAsn1X509AlgorithmIdentifier *owf, IOSByteArray *witness, IOSByteArray *challenge);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmpChallenge)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmpChallenge")
