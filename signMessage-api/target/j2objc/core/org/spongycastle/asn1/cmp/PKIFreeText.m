//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/cmp/PKIFreeText.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/DERUTF8String.h"
#include "org/spongycastle/asn1/cmp/PKIFreeText.h"

@interface OrgSpongycastleAsn1CmpPKIFreeText ()

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmpPKIFreeText *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1CmpPKIFreeText *new_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1CmpPKIFreeText *create_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

@implementation OrgSpongycastleAsn1CmpPKIFreeText

+ (OrgSpongycastleAsn1CmpPKIFreeText *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                              withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1CmpPKIFreeText_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (OrgSpongycastleAsn1CmpPKIFreeText *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1CmpPKIFreeText_getInstanceWithId_(obj);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1DERUTF8String:(OrgSpongycastleAsn1DERUTF8String *)p {
  OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8String_(self, p);
  return self;
}

- (instancetype)initWithNSString:(NSString *)p {
  OrgSpongycastleAsn1CmpPKIFreeText_initWithNSString_(self, p);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1DERUTF8StringArray:(IOSObjectArray *)strs {
  OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8StringArray_(self, strs);
  return self;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)strs {
  OrgSpongycastleAsn1CmpPKIFreeText_initWithNSStringArray_(self, strs);
  return self;
}

- (jint)size {
  return [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(strings_)) size];
}

- (OrgSpongycastleAsn1DERUTF8String *)getStringAtWithInt:(jint)i {
  return (OrgSpongycastleAsn1DERUTF8String *) cast_chk([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(strings_)) getObjectAtWithInt:i], [OrgSpongycastleAsn1DERUTF8String class]);
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  return strings_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1CmpPKIFreeText;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmpPKIFreeText;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERUTF8String;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1DERUTF8String:);
  methods[4].selector = @selector(initWithNSString:);
  methods[5].selector = @selector(initWithOrgSpongycastleAsn1DERUTF8StringArray:);
  methods[6].selector = @selector(initWithNSStringArray:);
  methods[7].selector = @selector(size);
  methods[8].selector = @selector(getStringAtWithInt:);
  methods[9].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "strings_", "LOrgSpongycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgSpongycastleAsn1ASN1Sequence;", "LOrgSpongycastleAsn1DERUTF8String;", "LNSString;", "[LOrgSpongycastleAsn1DERUTF8String;", "[LNSString;", "getStringAt", "I" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1CmpPKIFreeText = { "PKIFreeText", "org.spongycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 10, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1CmpPKIFreeText;
}

@end

OrgSpongycastleAsn1CmpPKIFreeText *OrgSpongycastleAsn1CmpPKIFreeText_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1CmpPKIFreeText_initialize();
  return OrgSpongycastleAsn1CmpPKIFreeText_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgSpongycastleAsn1CmpPKIFreeText *OrgSpongycastleAsn1CmpPKIFreeText_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1CmpPKIFreeText_initialize();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1CmpPKIFreeText class]]) {
    return (OrgSpongycastleAsn1CmpPKIFreeText *) obj;
  }
  else if (obj != nil) {
    return new_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmpPKIFreeText *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    if (!([[e nextElement] isKindOfClass:[OrgSpongycastleAsn1DERUTF8String class]])) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"attempt to insert non UTF8 STRING into PKIFreeText");
    }
  }
  self->strings_ = seq;
}

OrgSpongycastleAsn1CmpPKIFreeText *new_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1CmpPKIFreeText *create_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

void OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8String_(OrgSpongycastleAsn1CmpPKIFreeText *self, OrgSpongycastleAsn1DERUTF8String *p) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->strings_ = new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1Encodable_(p);
}

OrgSpongycastleAsn1CmpPKIFreeText *new_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8String_(OrgSpongycastleAsn1DERUTF8String *p) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithOrgSpongycastleAsn1DERUTF8String_, p)
}

OrgSpongycastleAsn1CmpPKIFreeText *create_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8String_(OrgSpongycastleAsn1DERUTF8String *p) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithOrgSpongycastleAsn1DERUTF8String_, p)
}

void OrgSpongycastleAsn1CmpPKIFreeText_initWithNSString_(OrgSpongycastleAsn1CmpPKIFreeText *self, NSString *p) {
  OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8String_(self, new_OrgSpongycastleAsn1DERUTF8String_initWithNSString_(p));
}

OrgSpongycastleAsn1CmpPKIFreeText *new_OrgSpongycastleAsn1CmpPKIFreeText_initWithNSString_(NSString *p) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithNSString_, p)
}

OrgSpongycastleAsn1CmpPKIFreeText *create_OrgSpongycastleAsn1CmpPKIFreeText_initWithNSString_(NSString *p) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithNSString_, p)
}

void OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8StringArray_(OrgSpongycastleAsn1CmpPKIFreeText *self, IOSObjectArray *strs) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->strings_ = new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableArray_(strs);
}

OrgSpongycastleAsn1CmpPKIFreeText *new_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8StringArray_(IOSObjectArray *strs) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithOrgSpongycastleAsn1DERUTF8StringArray_, strs)
}

OrgSpongycastleAsn1CmpPKIFreeText *create_OrgSpongycastleAsn1CmpPKIFreeText_initWithOrgSpongycastleAsn1DERUTF8StringArray_(IOSObjectArray *strs) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithOrgSpongycastleAsn1DERUTF8StringArray_, strs)
}

void OrgSpongycastleAsn1CmpPKIFreeText_initWithNSStringArray_(OrgSpongycastleAsn1CmpPKIFreeText *self, IOSObjectArray *strs) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(strs))->size_; i++) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERUTF8String_initWithNSString_(IOSObjectArray_Get(strs, i))];
  }
  self->strings_ = new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

OrgSpongycastleAsn1CmpPKIFreeText *new_OrgSpongycastleAsn1CmpPKIFreeText_initWithNSStringArray_(IOSObjectArray *strs) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithNSStringArray_, strs)
}

OrgSpongycastleAsn1CmpPKIFreeText *create_OrgSpongycastleAsn1CmpPKIFreeText_initWithNSStringArray_(IOSObjectArray *strs) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmpPKIFreeText, initWithNSStringArray_, strs)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1CmpPKIFreeText)
