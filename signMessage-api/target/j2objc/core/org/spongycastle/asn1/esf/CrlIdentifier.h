//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/esf/CrlIdentifier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1EsfCrlIdentifier")
#ifdef RESTRICT_OrgSpongycastleAsn1EsfCrlIdentifier
#define INCLUDE_ALL_OrgSpongycastleAsn1EsfCrlIdentifier 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1EsfCrlIdentifier 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1EsfCrlIdentifier

#if !defined (OrgSpongycastleAsn1EsfCrlIdentifier_) && (INCLUDE_ALL_OrgSpongycastleAsn1EsfCrlIdentifier || defined(INCLUDE_OrgSpongycastleAsn1EsfCrlIdentifier))
#define OrgSpongycastleAsn1EsfCrlIdentifier_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class JavaMathBigInteger;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1UTCTime;
@class OrgSpongycastleAsn1X500X500Name;

@interface OrgSpongycastleAsn1EsfCrlIdentifier : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)crlIssuer
                     withOrgSpongycastleAsn1ASN1UTCTime:(OrgSpongycastleAsn1ASN1UTCTime *)crlIssuedTime;

- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)crlIssuer
                     withOrgSpongycastleAsn1ASN1UTCTime:(OrgSpongycastleAsn1ASN1UTCTime *)crlIssuedTime
                                 withJavaMathBigInteger:(JavaMathBigInteger *)crlNumber;

- (OrgSpongycastleAsn1ASN1UTCTime *)getCrlIssuedTime;

- (OrgSpongycastleAsn1X500X500Name *)getCrlIssuer;

- (JavaMathBigInteger *)getCrlNumber;

+ (OrgSpongycastleAsn1EsfCrlIdentifier *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1EsfCrlIdentifier)

FOUNDATION_EXPORT OrgSpongycastleAsn1EsfCrlIdentifier *OrgSpongycastleAsn1EsfCrlIdentifier_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgSpongycastleAsn1EsfCrlIdentifier_initWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1ASN1UTCTime_(OrgSpongycastleAsn1EsfCrlIdentifier *self, OrgSpongycastleAsn1X500X500Name *crlIssuer, OrgSpongycastleAsn1ASN1UTCTime *crlIssuedTime);

FOUNDATION_EXPORT OrgSpongycastleAsn1EsfCrlIdentifier *new_OrgSpongycastleAsn1EsfCrlIdentifier_initWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1ASN1UTCTime_(OrgSpongycastleAsn1X500X500Name *crlIssuer, OrgSpongycastleAsn1ASN1UTCTime *crlIssuedTime) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1EsfCrlIdentifier *create_OrgSpongycastleAsn1EsfCrlIdentifier_initWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1ASN1UTCTime_(OrgSpongycastleAsn1X500X500Name *crlIssuer, OrgSpongycastleAsn1ASN1UTCTime *crlIssuedTime);

FOUNDATION_EXPORT void OrgSpongycastleAsn1EsfCrlIdentifier_initWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1ASN1UTCTime_withJavaMathBigInteger_(OrgSpongycastleAsn1EsfCrlIdentifier *self, OrgSpongycastleAsn1X500X500Name *crlIssuer, OrgSpongycastleAsn1ASN1UTCTime *crlIssuedTime, JavaMathBigInteger *crlNumber);

FOUNDATION_EXPORT OrgSpongycastleAsn1EsfCrlIdentifier *new_OrgSpongycastleAsn1EsfCrlIdentifier_initWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1ASN1UTCTime_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *crlIssuer, OrgSpongycastleAsn1ASN1UTCTime *crlIssuedTime, JavaMathBigInteger *crlNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1EsfCrlIdentifier *create_OrgSpongycastleAsn1EsfCrlIdentifier_initWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1ASN1UTCTime_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *crlIssuer, OrgSpongycastleAsn1ASN1UTCTime *crlIssuedTime, JavaMathBigInteger *crlNumber);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1EsfCrlIdentifier)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1EsfCrlIdentifier")
