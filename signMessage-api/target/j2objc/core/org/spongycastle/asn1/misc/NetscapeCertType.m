//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/misc/NetscapeCertType.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/spongycastle/asn1/ASN1BitString.h"
#include "org/spongycastle/asn1/DERBitString.h"
#include "org/spongycastle/asn1/misc/NetscapeCertType.h"

@implementation OrgSpongycastleAsn1MiscNetscapeCertType

- (instancetype)initWithInt:(jint)usage {
  OrgSpongycastleAsn1MiscNetscapeCertType_initWithInt_(self, usage);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1DERBitString:(OrgSpongycastleAsn1DERBitString *)usage {
  OrgSpongycastleAsn1MiscNetscapeCertType_initWithOrgSpongycastleAsn1DERBitString_(self, usage);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$", @"NetscapeCertType: 0x", JavaLangInteger_toHexStringWithInt_(IOSByteArray_Get(nil_chk(data_), 0) & (jint) 0xff));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1DERBitString:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sslClient", "I", .constantValue.asInt = OrgSpongycastleAsn1MiscNetscapeCertType_sslClient, 0x19, -1, -1, -1, -1 },
    { "sslServer", "I", .constantValue.asInt = OrgSpongycastleAsn1MiscNetscapeCertType_sslServer, 0x19, -1, -1, -1, -1 },
    { "smime", "I", .constantValue.asInt = OrgSpongycastleAsn1MiscNetscapeCertType_smime, 0x19, -1, -1, -1, -1 },
    { "objectSigning", "I", .constantValue.asInt = OrgSpongycastleAsn1MiscNetscapeCertType_objectSigning, 0x19, -1, -1, -1, -1 },
    { "reserved", "I", .constantValue.asInt = OrgSpongycastleAsn1MiscNetscapeCertType_reserved, 0x19, -1, -1, -1, -1 },
    { "sslCA", "I", .constantValue.asInt = OrgSpongycastleAsn1MiscNetscapeCertType_sslCA, 0x19, -1, -1, -1, -1 },
    { "smimeCA", "I", .constantValue.asInt = OrgSpongycastleAsn1MiscNetscapeCertType_smimeCA, 0x19, -1, -1, -1, -1 },
    { "objectSigningCA", "I", .constantValue.asInt = OrgSpongycastleAsn1MiscNetscapeCertType_objectSigningCA, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LOrgSpongycastleAsn1DERBitString;", "toString" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1MiscNetscapeCertType = { "NetscapeCertType", "org.spongycastle.asn1.misc", ptrTable, methods, fields, 7, 0x1, 3, 8, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1MiscNetscapeCertType;
}

@end

void OrgSpongycastleAsn1MiscNetscapeCertType_initWithInt_(OrgSpongycastleAsn1MiscNetscapeCertType *self, jint usage) {
  OrgSpongycastleAsn1DERBitString_initWithByteArray_withInt_(self, OrgSpongycastleAsn1ASN1BitString_getBytesWithInt_(usage), OrgSpongycastleAsn1ASN1BitString_getPadBitsWithInt_(usage));
}

OrgSpongycastleAsn1MiscNetscapeCertType *new_OrgSpongycastleAsn1MiscNetscapeCertType_initWithInt_(jint usage) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1MiscNetscapeCertType, initWithInt_, usage)
}

OrgSpongycastleAsn1MiscNetscapeCertType *create_OrgSpongycastleAsn1MiscNetscapeCertType_initWithInt_(jint usage) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1MiscNetscapeCertType, initWithInt_, usage)
}

void OrgSpongycastleAsn1MiscNetscapeCertType_initWithOrgSpongycastleAsn1DERBitString_(OrgSpongycastleAsn1MiscNetscapeCertType *self, OrgSpongycastleAsn1DERBitString *usage) {
  OrgSpongycastleAsn1DERBitString_initWithByteArray_withInt_(self, [((OrgSpongycastleAsn1DERBitString *) nil_chk(usage)) getBytes], [usage getPadBits]);
}

OrgSpongycastleAsn1MiscNetscapeCertType *new_OrgSpongycastleAsn1MiscNetscapeCertType_initWithOrgSpongycastleAsn1DERBitString_(OrgSpongycastleAsn1DERBitString *usage) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1MiscNetscapeCertType, initWithOrgSpongycastleAsn1DERBitString_, usage)
}

OrgSpongycastleAsn1MiscNetscapeCertType *create_OrgSpongycastleAsn1MiscNetscapeCertType_initWithOrgSpongycastleAsn1DERBitString_(OrgSpongycastleAsn1DERBitString *usage) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1MiscNetscapeCertType, initWithOrgSpongycastleAsn1DERBitString_, usage)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1MiscNetscapeCertType)
