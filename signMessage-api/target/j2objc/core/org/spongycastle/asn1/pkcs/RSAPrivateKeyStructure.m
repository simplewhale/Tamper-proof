//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/pkcs/RSAPrivateKeyStructure.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Integer.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/pkcs/RSAPrivateKeyStructure.h"

@interface OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure () {
 @public
  jint version__;
  JavaMathBigInteger *modulus_;
  JavaMathBigInteger *publicExponent_;
  JavaMathBigInteger *privateExponent_;
  JavaMathBigInteger *prime1_;
  JavaMathBigInteger *prime2_;
  JavaMathBigInteger *exponent1_;
  JavaMathBigInteger *exponent2_;
  JavaMathBigInteger *coefficient_;
  OrgSpongycastleAsn1ASN1Sequence *otherPrimeInfos_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, modulus_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, publicExponent_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, privateExponent_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, prime1_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, prime2_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, exponent1_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, exponent2_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, coefficient_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, otherPrimeInfos_, OrgSpongycastleAsn1ASN1Sequence *)

@implementation OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure

+ (OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                          withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_getInstanceWithId_(obj);
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)modulus
                    withJavaMathBigInteger:(JavaMathBigInteger *)publicExponent
                    withJavaMathBigInteger:(JavaMathBigInteger *)privateExponent
                    withJavaMathBigInteger:(JavaMathBigInteger *)prime1
                    withJavaMathBigInteger:(JavaMathBigInteger *)prime2
                    withJavaMathBigInteger:(JavaMathBigInteger *)exponent1
                    withJavaMathBigInteger:(JavaMathBigInteger *)exponent2
                    withJavaMathBigInteger:(JavaMathBigInteger *)coefficient {
  OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(self, modulus, publicExponent, privateExponent, prime1, prime2, exponent1, exponent2, coefficient);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (jint)getVersion {
  return version__;
}

- (JavaMathBigInteger *)getModulus {
  return modulus_;
}

- (JavaMathBigInteger *)getPublicExponent {
  return publicExponent_;
}

- (JavaMathBigInteger *)getPrivateExponent {
  return privateExponent_;
}

- (JavaMathBigInteger *)getPrime1 {
  return prime1_;
}

- (JavaMathBigInteger *)getPrime2 {
  return prime2_;
}

- (JavaMathBigInteger *)getExponent1 {
  return exponent1_;
}

- (JavaMathBigInteger *)getExponent2 {
  return exponent2_;
}

- (JavaMathBigInteger *)getCoefficient {
  return coefficient_;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithLong_(version__)];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([self getModulus])];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([self getPublicExponent])];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([self getPrivateExponent])];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([self getPrime1])];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([self getPrime2])];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([self getExponent1])];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([self getExponent2])];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([self getCoefficient])];
  if (otherPrimeInfos_ != nil) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:otherPrimeInfos_];
  }
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1PkcsRSAPrivateKeyStructure;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1PkcsRSAPrivateKeyStructure;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[4].selector = @selector(getVersion);
  methods[5].selector = @selector(getModulus);
  methods[6].selector = @selector(getPublicExponent);
  methods[7].selector = @selector(getPrivateExponent);
  methods[8].selector = @selector(getPrime1);
  methods[9].selector = @selector(getPrime2);
  methods[10].selector = @selector(getExponent1);
  methods[11].selector = @selector(getExponent2);
  methods[12].selector = @selector(getCoefficient);
  methods[13].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "I", .constantValue.asLong = 0, 0x2, 5, -1, -1, -1 },
    { "modulus_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicExponent_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privateExponent_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "prime1_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "prime2_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "exponent1_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "exponent2_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "coefficient_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "otherPrimeInfos_", "LOrgSpongycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;", "LOrgSpongycastleAsn1ASN1Sequence;", "version" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure = { "RSAPrivateKeyStructure", "org.spongycastle.asn1.pkcs", ptrTable, methods, fields, 7, 0x1, 14, 10, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure;
}

@end

OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initialize();
  return OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initialize();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure class]]) {
    return (OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *) obj;
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Sequence class]]) {
    return new_OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithOrgSpongycastleAsn1ASN1Sequence_((OrgSpongycastleAsn1ASN1Sequence *) obj);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unknown object in factory: ", [[nil_chk(obj) java_getClass] getName]));
}

void OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *self, JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *prime1, JavaMathBigInteger *prime2, JavaMathBigInteger *exponent1, JavaMathBigInteger *exponent2, JavaMathBigInteger *coefficient) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->otherPrimeInfos_ = nil;
  self->version__ = 0;
  self->modulus_ = modulus;
  self->publicExponent_ = publicExponent;
  self->privateExponent_ = privateExponent;
  self->prime1_ = prime1;
  self->prime2_ = prime2;
  self->exponent1_ = exponent1;
  self->exponent2_ = exponent2;
  self->coefficient_ = coefficient;
}

OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *new_OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *prime1, JavaMathBigInteger *prime2, JavaMathBigInteger *exponent1, JavaMathBigInteger *exponent2, JavaMathBigInteger *coefficient) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, modulus, publicExponent, privateExponent, prime1, prime2, exponent1, exponent2, coefficient)
}

OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *create_OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *prime1, JavaMathBigInteger *prime2, JavaMathBigInteger *exponent1, JavaMathBigInteger *exponent2, JavaMathBigInteger *coefficient) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, modulus, publicExponent, privateExponent, prime1, prime2, exponent1, exponent2, coefficient)
}

void OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->otherPrimeInfos_ = nil;
  id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  JavaMathBigInteger *v = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([((id<JavaUtilEnumeration>) nil_chk(e)) nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  if ([((JavaMathBigInteger *) nil_chk(v)) intValue] != 0 && [v intValue] != 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"wrong version for RSA private key");
  }
  self->version__ = [v intValue];
  self->modulus_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  self->publicExponent_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  self->privateExponent_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  self->prime1_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  self->prime2_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  self->exponent1_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  self->exponent2_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  self->coefficient_ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(((OrgSpongycastleAsn1ASN1Integer *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Integer class])))) getValue];
  if ([e hasMoreElements]) {
    self->otherPrimeInfos_ = (OrgSpongycastleAsn1ASN1Sequence *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Sequence class]);
  }
}

OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *new_OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure *create_OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1PkcsRSAPrivateKeyStructure)
