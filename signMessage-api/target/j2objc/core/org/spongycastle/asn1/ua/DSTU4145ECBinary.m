//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/ua/DSTU4145ECBinary.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Integer.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/DERTaggedObject.h"
#include "org/spongycastle/asn1/ua/DSTU4145BinaryField.h"
#include "org/spongycastle/asn1/ua/DSTU4145ECBinary.h"
#include "org/spongycastle/asn1/ua/DSTU4145PointEncoder.h"
#include "org/spongycastle/crypto/params/ECDomainParameters.h"
#include "org/spongycastle/math/ec/ECAlgorithms.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/math/field/FiniteField.h"
#include "org/spongycastle/math/field/Polynomial.h"
#include "org/spongycastle/math/field/PolynomialExtensionField.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastleAsn1UaDSTU4145ECBinary ()

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1UaDSTU4145ECBinary *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1UaDSTU4145ECBinary *new_OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1UaDSTU4145ECBinary *create_OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

@implementation OrgSpongycastleAsn1UaDSTU4145ECBinary

- (instancetype)initWithOrgSpongycastleCryptoParamsECDomainParameters:(OrgSpongycastleCryptoParamsECDomainParameters *)params {
  OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleCryptoParamsECDomainParameters_(self, params);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (OrgSpongycastleAsn1UaDSTU4145ECBinary *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1UaDSTU4145ECBinary_getInstanceWithId_(obj);
}

- (OrgSpongycastleAsn1UaDSTU4145BinaryField *)getField {
  return f_;
}

- (JavaMathBigInteger *)getA {
  return [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(a_)) getValue];
}

- (IOSByteArray *)getB {
  return OrgSpongycastleUtilArrays_cloneWithByteArray_([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(b_)) getOctets]);
}

- (JavaMathBigInteger *)getN {
  return [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(n_)) getValue];
}

- (IOSByteArray *)getG {
  return OrgSpongycastleUtilArrays_cloneWithByteArray_([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(bp_)) getOctets]);
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  if (0 != [((JavaMathBigInteger *) nil_chk(version__)) compareToWithId:JavaMathBigInteger_valueOfWithLong_(0)]) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(true, 0, new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(version__))];
  }
  [v addWithOrgSpongycastleAsn1ASN1Encodable:f_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:a_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:b_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:n_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:bp_];
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1UaDSTU4145ECBinary;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1UaDSTU4145BinaryField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCryptoParamsECDomainParameters:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithId:);
  methods[3].selector = @selector(getField);
  methods[4].selector = @selector(getA);
  methods[5].selector = @selector(getB);
  methods[6].selector = @selector(getN);
  methods[7].selector = @selector(getG);
  methods[8].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, 4, -1, -1, -1 },
    { "f_", "LOrgSpongycastleAsn1UaDSTU4145BinaryField;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "a_", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "b_", "LOrgSpongycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "n_", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bp_", "LOrgSpongycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCryptoParamsECDomainParameters;", "LOrgSpongycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "version" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1UaDSTU4145ECBinary = { "DSTU4145ECBinary", "org.spongycastle.asn1.ua", ptrTable, methods, fields, 7, 0x1, 9, 6, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1UaDSTU4145ECBinary;
}

@end

void OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleCryptoParamsECDomainParameters_(OrgSpongycastleAsn1UaDSTU4145ECBinary *self, OrgSpongycastleCryptoParamsECDomainParameters *params) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->version__ = JavaMathBigInteger_valueOfWithLong_(0);
  OrgSpongycastleMathEcECCurve *curve = [((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(params)) getCurve];
  if (!OrgSpongycastleMathEcECAlgorithms_isF2mCurveWithOrgSpongycastleMathEcECCurve_(curve)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"only binary domain is possible");
  }
  id<OrgSpongycastleMathFieldPolynomialExtensionField> field = (id<OrgSpongycastleMathFieldPolynomialExtensionField>) cast_check([((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getField], OrgSpongycastleMathFieldPolynomialExtensionField_class_());
  IOSIntArray *exponents = [((id<OrgSpongycastleMathFieldPolynomial>) nil_chk([((id<OrgSpongycastleMathFieldPolynomialExtensionField>) nil_chk(field)) getMinimalPolynomial])) getExponentsPresent];
  if (((IOSIntArray *) nil_chk(exponents))->size_ == 3) {
    self->f_ = new_OrgSpongycastleAsn1UaDSTU4145BinaryField_initWithInt_withInt_(IOSIntArray_Get(exponents, 2), IOSIntArray_Get(exponents, 1));
  }
  else if (exponents->size_ == 5) {
    self->f_ = new_OrgSpongycastleAsn1UaDSTU4145BinaryField_initWithInt_withInt_withInt_withInt_(IOSIntArray_Get(exponents, 4), IOSIntArray_Get(exponents, 1), IOSIntArray_Get(exponents, 2), IOSIntArray_Get(exponents, 3));
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"curve must have a trinomial or pentanomial basis");
  }
  self->a_ = new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger]);
  self->b_ = new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_([((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getB])) getEncoded]);
  self->n_ = new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([params getN]);
  self->bp_ = new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(OrgSpongycastleAsn1UaDSTU4145PointEncoder_encodePointWithOrgSpongycastleMathEcECPoint_([params getG]));
}

OrgSpongycastleAsn1UaDSTU4145ECBinary *new_OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleCryptoParamsECDomainParameters_(OrgSpongycastleCryptoParamsECDomainParameters *params) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1UaDSTU4145ECBinary, initWithOrgSpongycastleCryptoParamsECDomainParameters_, params)
}

OrgSpongycastleAsn1UaDSTU4145ECBinary *create_OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleCryptoParamsECDomainParameters_(OrgSpongycastleCryptoParamsECDomainParameters *params) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1UaDSTU4145ECBinary, initWithOrgSpongycastleCryptoParamsECDomainParameters_, params)
}

void OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1UaDSTU4145ECBinary *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->version__ = JavaMathBigInteger_valueOfWithLong_(0);
  jint index = 0;
  if ([[((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:index] isKindOfClass:[OrgSpongycastleAsn1ASN1TaggedObject class]]) {
    OrgSpongycastleAsn1ASN1TaggedObject *taggedVersion = (OrgSpongycastleAsn1ASN1TaggedObject *) cast_chk([seq getObjectAtWithInt:index], [OrgSpongycastleAsn1ASN1TaggedObject class]);
    if ([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(taggedVersion)) isExplicit] && 0 == [taggedVersion getTagNo]) {
      self->version__ = [((OrgSpongycastleAsn1ASN1Integer *) nil_chk(OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_([taggedVersion getLoadedObject]))) getValue];
      index++;
    }
    else {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"object parse error");
    }
  }
  self->f_ = OrgSpongycastleAsn1UaDSTU4145BinaryField_getInstanceWithId_([seq getObjectAtWithInt:index]);
  index++;
  self->a_ = OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:index]);
  index++;
  self->b_ = OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:index]);
  index++;
  self->n_ = OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:index]);
  index++;
  self->bp_ = OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:index]);
}

OrgSpongycastleAsn1UaDSTU4145ECBinary *new_OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1UaDSTU4145ECBinary, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1UaDSTU4145ECBinary *create_OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1UaDSTU4145ECBinary, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1UaDSTU4145ECBinary *OrgSpongycastleAsn1UaDSTU4145ECBinary_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1UaDSTU4145ECBinary_initialize();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1UaDSTU4145ECBinary class]]) {
    return (OrgSpongycastleAsn1UaDSTU4145ECBinary *) obj;
  }
  if (obj != nil) {
    return new_OrgSpongycastleAsn1UaDSTU4145ECBinary_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1UaDSTU4145ECBinary)
