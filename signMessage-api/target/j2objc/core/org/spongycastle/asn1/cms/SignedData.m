//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/cms/SignedData.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Integer.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1Set.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/BERSequence.h"
#include "org/spongycastle/asn1/BERSet.h"
#include "org/spongycastle/asn1/BERTaggedObject.h"
#include "org/spongycastle/asn1/DERTaggedObject.h"
#include "org/spongycastle/asn1/cms/CMSObjectIdentifiers.h"
#include "org/spongycastle/asn1/cms/ContentInfo.h"
#include "org/spongycastle/asn1/cms/SignedData.h"
#include "org/spongycastle/asn1/cms/SignerInfo.h"

@interface OrgSpongycastleAsn1CmsSignedData () {
 @public
  OrgSpongycastleAsn1ASN1Integer *version__;
  OrgSpongycastleAsn1ASN1Set *digestAlgorithms_;
  OrgSpongycastleAsn1CmsContentInfo *contentInfo_;
  OrgSpongycastleAsn1ASN1Set *certificates_;
  OrgSpongycastleAsn1ASN1Set *crls_;
  OrgSpongycastleAsn1ASN1Set *signerInfos_;
  jboolean certsBer_;
  jboolean crlsBer_;
}

- (OrgSpongycastleAsn1ASN1Integer *)calculateVersionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)contentOid
                                                                 withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)certs
                                                                 withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)crls
                                                                 withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)signerInfs;

- (jboolean)checkForVersion3WithOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)signerInfs;

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmsSignedData, version__, OrgSpongycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmsSignedData, digestAlgorithms_, OrgSpongycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmsSignedData, contentInfo_, OrgSpongycastleAsn1CmsContentInfo *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmsSignedData, certificates_, OrgSpongycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmsSignedData, crls_, OrgSpongycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1CmsSignedData, signerInfos_, OrgSpongycastleAsn1ASN1Set *)

inline OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_get_VERSION_1(void);
static OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_VERSION_1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1CmsSignedData, VERSION_1, OrgSpongycastleAsn1ASN1Integer *)

inline OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_get_VERSION_3(void);
static OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_VERSION_3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1CmsSignedData, VERSION_3, OrgSpongycastleAsn1ASN1Integer *)

inline OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_get_VERSION_4(void);
static OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_VERSION_4;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1CmsSignedData, VERSION_4, OrgSpongycastleAsn1ASN1Integer *)

inline OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_get_VERSION_5(void);
static OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_VERSION_5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1CmsSignedData, VERSION_5, OrgSpongycastleAsn1ASN1Integer *)

__attribute__((unused)) static OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_calculateVersionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1CmsSignedData *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *contentOid, OrgSpongycastleAsn1ASN1Set *certs, OrgSpongycastleAsn1ASN1Set *crls, OrgSpongycastleAsn1ASN1Set *signerInfs);

__attribute__((unused)) static jboolean OrgSpongycastleAsn1CmsSignedData_checkForVersion3WithOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1CmsSignedData *self, OrgSpongycastleAsn1ASN1Set *signerInfs);

__attribute__((unused)) static void OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsSignedData *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1CmsSignedData *new_OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1CmsSignedData *create_OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleAsn1CmsSignedData)

@implementation OrgSpongycastleAsn1CmsSignedData

+ (OrgSpongycastleAsn1CmsSignedData *)getInstanceWithId:(id)o {
  return OrgSpongycastleAsn1CmsSignedData_getInstanceWithId_(o);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)digestAlgorithms
             withOrgSpongycastleAsn1CmsContentInfo:(OrgSpongycastleAsn1CmsContentInfo *)contentInfo
                    withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)certificates
                    withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)crls
                    withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)signerInfos {
  OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1CmsContentInfo_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(self, digestAlgorithms, contentInfo, certificates, crls, signerInfos);
  return self;
}

- (OrgSpongycastleAsn1ASN1Integer *)calculateVersionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)contentOid
                                                                 withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)certs
                                                                 withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)crls
                                                                 withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)signerInfs {
  return OrgSpongycastleAsn1CmsSignedData_calculateVersionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(self, contentOid, certs, crls, signerInfs);
}

- (jboolean)checkForVersion3WithOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)signerInfs {
  return OrgSpongycastleAsn1CmsSignedData_checkForVersion3WithOrgSpongycastleAsn1ASN1Set_(self, signerInfs);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (OrgSpongycastleAsn1ASN1Integer *)getVersion {
  return version__;
}

- (OrgSpongycastleAsn1ASN1Set *)getDigestAlgorithms {
  return digestAlgorithms_;
}

- (OrgSpongycastleAsn1CmsContentInfo *)getEncapContentInfo {
  return contentInfo_;
}

- (OrgSpongycastleAsn1ASN1Set *)getCertificates {
  return certificates_;
}

- (OrgSpongycastleAsn1ASN1Set *)getCRLs {
  return crls_;
}

- (OrgSpongycastleAsn1ASN1Set *)getSignerInfos {
  return signerInfos_;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:version__];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:digestAlgorithms_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:contentInfo_];
  if (certificates_ != nil) {
    if (certsBer_) {
      [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1BERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, 0, certificates_)];
    }
    else {
      [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, 0, certificates_)];
    }
  }
  if (crls_ != nil) {
    if (crlsBer_) {
      [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1BERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, 1, crls_)];
    }
    else {
      [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, 1, crls_)];
    }
  }
  [v addWithOrgSpongycastleAsn1ASN1Encodable:signerInfos_];
  return new_OrgSpongycastleAsn1BERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1CmsSignedData;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 7, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmsContentInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1ASN1Set:withOrgSpongycastleAsn1CmsContentInfo:withOrgSpongycastleAsn1ASN1Set:withOrgSpongycastleAsn1ASN1Set:withOrgSpongycastleAsn1ASN1Set:);
  methods[2].selector = @selector(calculateVersionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:withOrgSpongycastleAsn1ASN1Set:withOrgSpongycastleAsn1ASN1Set:withOrgSpongycastleAsn1ASN1Set:);
  methods[3].selector = @selector(checkForVersion3WithOrgSpongycastleAsn1ASN1Set:);
  methods[4].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[5].selector = @selector(getVersion);
  methods[6].selector = @selector(getDigestAlgorithms);
  methods[7].selector = @selector(getEncapContentInfo);
  methods[8].selector = @selector(getCertificates);
  methods[9].selector = @selector(getCRLs);
  methods[10].selector = @selector(getSignerInfos);
  methods[11].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VERSION_1", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "VERSION_3", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "VERSION_4", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "VERSION_5", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "version__", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, 12, -1, -1, -1 },
    { "digestAlgorithms_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentInfo_", "LOrgSpongycastleAsn1CmsContentInfo;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificates_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "crls_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signerInfos_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certsBer_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "crlsBer_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgSpongycastleAsn1ASN1Set;LOrgSpongycastleAsn1CmsContentInfo;LOrgSpongycastleAsn1ASN1Set;LOrgSpongycastleAsn1ASN1Set;LOrgSpongycastleAsn1ASN1Set;", "calculateVersion", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;LOrgSpongycastleAsn1ASN1Set;LOrgSpongycastleAsn1ASN1Set;LOrgSpongycastleAsn1ASN1Set;", "checkForVersion3", "LOrgSpongycastleAsn1ASN1Set;", "LOrgSpongycastleAsn1ASN1Sequence;", &OrgSpongycastleAsn1CmsSignedData_VERSION_1, &OrgSpongycastleAsn1CmsSignedData_VERSION_3, &OrgSpongycastleAsn1CmsSignedData_VERSION_4, &OrgSpongycastleAsn1CmsSignedData_VERSION_5, "version" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1CmsSignedData = { "SignedData", "org.spongycastle.asn1.cms", ptrTable, methods, fields, 7, 0x1, 12, 12, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1CmsSignedData;
}

+ (void)initialize {
  if (self == [OrgSpongycastleAsn1CmsSignedData class]) {
    OrgSpongycastleAsn1CmsSignedData_VERSION_1 = new_OrgSpongycastleAsn1ASN1Integer_initWithLong_(1);
    OrgSpongycastleAsn1CmsSignedData_VERSION_3 = new_OrgSpongycastleAsn1ASN1Integer_initWithLong_(3);
    OrgSpongycastleAsn1CmsSignedData_VERSION_4 = new_OrgSpongycastleAsn1ASN1Integer_initWithLong_(4);
    OrgSpongycastleAsn1CmsSignedData_VERSION_5 = new_OrgSpongycastleAsn1ASN1Integer_initWithLong_(5);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleAsn1CmsSignedData)
  }
}

@end

OrgSpongycastleAsn1CmsSignedData *OrgSpongycastleAsn1CmsSignedData_getInstanceWithId_(id o) {
  OrgSpongycastleAsn1CmsSignedData_initialize();
  if ([o isKindOfClass:[OrgSpongycastleAsn1CmsSignedData class]]) {
    return (OrgSpongycastleAsn1CmsSignedData *) o;
  }
  else if (o != nil) {
    return new_OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1CmsContentInfo_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1CmsSignedData *self, OrgSpongycastleAsn1ASN1Set *digestAlgorithms, OrgSpongycastleAsn1CmsContentInfo *contentInfo, OrgSpongycastleAsn1ASN1Set *certificates, OrgSpongycastleAsn1ASN1Set *crls, OrgSpongycastleAsn1ASN1Set *signerInfos) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->version__ = OrgSpongycastleAsn1CmsSignedData_calculateVersionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(self, [((OrgSpongycastleAsn1CmsContentInfo *) nil_chk(contentInfo)) getContentType], certificates, crls, signerInfos);
  self->digestAlgorithms_ = digestAlgorithms;
  self->contentInfo_ = contentInfo;
  self->certificates_ = certificates;
  self->crls_ = crls;
  self->signerInfos_ = signerInfos;
  self->crlsBer_ = [crls isKindOfClass:[OrgSpongycastleAsn1BERSet class]];
  self->certsBer_ = [certificates isKindOfClass:[OrgSpongycastleAsn1BERSet class]];
}

OrgSpongycastleAsn1CmsSignedData *new_OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1CmsContentInfo_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1ASN1Set *digestAlgorithms, OrgSpongycastleAsn1CmsContentInfo *contentInfo, OrgSpongycastleAsn1ASN1Set *certificates, OrgSpongycastleAsn1ASN1Set *crls, OrgSpongycastleAsn1ASN1Set *signerInfos) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmsSignedData, initWithOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1CmsContentInfo_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_, digestAlgorithms, contentInfo, certificates, crls, signerInfos)
}

OrgSpongycastleAsn1CmsSignedData *create_OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1CmsContentInfo_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1ASN1Set *digestAlgorithms, OrgSpongycastleAsn1CmsContentInfo *contentInfo, OrgSpongycastleAsn1ASN1Set *certificates, OrgSpongycastleAsn1ASN1Set *crls, OrgSpongycastleAsn1ASN1Set *signerInfos) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmsSignedData, initWithOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1CmsContentInfo_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_, digestAlgorithms, contentInfo, certificates, crls, signerInfos)
}

OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1CmsSignedData_calculateVersionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1CmsSignedData *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *contentOid, OrgSpongycastleAsn1ASN1Set *certs, OrgSpongycastleAsn1ASN1Set *crls, OrgSpongycastleAsn1ASN1Set *signerInfs) {
  jboolean otherCert = false;
  jboolean otherCrl = false;
  jboolean attrCertV1Found = false;
  jboolean attrCertV2Found = false;
  if (certs != nil) {
    for (id<JavaUtilEnumeration> en = [certs getObjects]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
      id obj = [en nextElement];
      if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1TaggedObject class]]) {
        OrgSpongycastleAsn1ASN1TaggedObject *tagged = OrgSpongycastleAsn1ASN1TaggedObject_getInstanceWithId_(obj);
        if ([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == 1) {
          attrCertV1Found = true;
        }
        else if ([tagged getTagNo] == 2) {
          attrCertV2Found = true;
        }
        else if ([tagged getTagNo] == 3) {
          otherCert = true;
        }
      }
    }
  }
  if (otherCert) {
    return new_OrgSpongycastleAsn1ASN1Integer_initWithLong_(5);
  }
  if (crls != nil) {
    for (id<JavaUtilEnumeration> en = [crls getObjects]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
      id obj = [en nextElement];
      if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1TaggedObject class]]) {
        otherCrl = true;
      }
    }
  }
  if (otherCrl) {
    return OrgSpongycastleAsn1CmsSignedData_VERSION_5;
  }
  if (attrCertV2Found) {
    return OrgSpongycastleAsn1CmsSignedData_VERSION_4;
  }
  if (attrCertV1Found) {
    return OrgSpongycastleAsn1CmsSignedData_VERSION_3;
  }
  if (OrgSpongycastleAsn1CmsSignedData_checkForVersion3WithOrgSpongycastleAsn1ASN1Set_(self, signerInfs)) {
    return OrgSpongycastleAsn1CmsSignedData_VERSION_3;
  }
  if (![((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgSpongycastleAsn1CmsCMSObjectIdentifiers, data))) isEqual:contentOid]) {
    return OrgSpongycastleAsn1CmsSignedData_VERSION_3;
  }
  return OrgSpongycastleAsn1CmsSignedData_VERSION_1;
}

jboolean OrgSpongycastleAsn1CmsSignedData_checkForVersion3WithOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1CmsSignedData *self, OrgSpongycastleAsn1ASN1Set *signerInfs) {
  for (id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Set *) nil_chk(signerInfs)) getObjects]; [((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]; ) {
    OrgSpongycastleAsn1CmsSignerInfo *s = OrgSpongycastleAsn1CmsSignerInfo_getInstanceWithId_([e nextElement]);
    if ([((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(s)) getVersion])) getValue])) intValue] == 3) {
      return true;
    }
  }
  return false;
}

void OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsSignedData *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  self->version__ = OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_([((id<JavaUtilEnumeration>) nil_chk(e)) nextElement]);
  self->digestAlgorithms_ = ((OrgSpongycastleAsn1ASN1Set *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Set class]));
  self->contentInfo_ = OrgSpongycastleAsn1CmsContentInfo_getInstanceWithId_([e nextElement]);
  while ([e hasMoreElements]) {
    OrgSpongycastleAsn1ASN1Primitive *o = (OrgSpongycastleAsn1ASN1Primitive *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Primitive class]);
    if ([o isKindOfClass:[OrgSpongycastleAsn1ASN1TaggedObject class]]) {
      OrgSpongycastleAsn1ASN1TaggedObject *tagged = (OrgSpongycastleAsn1ASN1TaggedObject *) o;
      switch ([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo]) {
        case 0:
        self->certsBer_ = [tagged isKindOfClass:[OrgSpongycastleAsn1BERTaggedObject class]];
        self->certificates_ = OrgSpongycastleAsn1ASN1Set_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
        break;
        case 1:
        self->crlsBer_ = [tagged isKindOfClass:[OrgSpongycastleAsn1BERTaggedObject class]];
        self->crls_ = OrgSpongycastleAsn1ASN1Set_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
        break;
        default:
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown tag value ", [tagged getTagNo]));
      }
    }
    else {
      self->signerInfos_ = (OrgSpongycastleAsn1ASN1Set *) cast_chk(o, [OrgSpongycastleAsn1ASN1Set class]);
    }
  }
}

OrgSpongycastleAsn1CmsSignedData *new_OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1CmsSignedData, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1CmsSignedData *create_OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1CmsSignedData, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1CmsSignedData)
