//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/x509/Certificate.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1Integer.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/DERBitString.h"
#include "org/spongycastle/asn1/x500/X500Name.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/asn1/x509/Certificate.h"
#include "org/spongycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/spongycastle/asn1/x509/TBSCertificate.h"
#include "org/spongycastle/asn1/x509/Time.h"

@interface OrgSpongycastleAsn1X509Certificate ()

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void OrgSpongycastleAsn1X509Certificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509Certificate *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1X509Certificate *new_OrgSpongycastleAsn1X509Certificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1X509Certificate *create_OrgSpongycastleAsn1X509Certificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

@implementation OrgSpongycastleAsn1X509Certificate

+ (OrgSpongycastleAsn1X509Certificate *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                               withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1X509Certificate_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (OrgSpongycastleAsn1X509Certificate *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(obj);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1X509Certificate_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (OrgSpongycastleAsn1X509TBSCertificate *)getTBSCertificate {
  return tbsCert_;
}

- (OrgSpongycastleAsn1ASN1Integer *)getVersion {
  return [((OrgSpongycastleAsn1X509TBSCertificate *) nil_chk(tbsCert_)) getVersion];
}

- (jint)getVersionNumber {
  return [((OrgSpongycastleAsn1X509TBSCertificate *) nil_chk(tbsCert_)) getVersionNumber];
}

- (OrgSpongycastleAsn1ASN1Integer *)getSerialNumber {
  return [((OrgSpongycastleAsn1X509TBSCertificate *) nil_chk(tbsCert_)) getSerialNumber];
}

- (OrgSpongycastleAsn1X500X500Name *)getIssuer {
  return [((OrgSpongycastleAsn1X509TBSCertificate *) nil_chk(tbsCert_)) getIssuer];
}

- (OrgSpongycastleAsn1X509Time *)getStartDate {
  return [((OrgSpongycastleAsn1X509TBSCertificate *) nil_chk(tbsCert_)) getStartDate];
}

- (OrgSpongycastleAsn1X509Time *)getEndDate {
  return [((OrgSpongycastleAsn1X509TBSCertificate *) nil_chk(tbsCert_)) getEndDate];
}

- (OrgSpongycastleAsn1X500X500Name *)getSubject {
  return [((OrgSpongycastleAsn1X509TBSCertificate *) nil_chk(tbsCert_)) getSubject];
}

- (OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)getSubjectPublicKeyInfo {
  return [((OrgSpongycastleAsn1X509TBSCertificate *) nil_chk(tbsCert_)) getSubjectPublicKeyInfo];
}

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm {
  return sigAlgId_;
}

- (OrgSpongycastleAsn1DERBitString *)getSignature {
  return sig_;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  return seq_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1X509Certificate;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Certificate;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509TBSCertificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509SubjectPublicKeyInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERBitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(getTBSCertificate);
  methods[4].selector = @selector(getVersion);
  methods[5].selector = @selector(getVersionNumber);
  methods[6].selector = @selector(getSerialNumber);
  methods[7].selector = @selector(getIssuer);
  methods[8].selector = @selector(getStartDate);
  methods[9].selector = @selector(getEndDate);
  methods[10].selector = @selector(getSubject);
  methods[11].selector = @selector(getSubjectPublicKeyInfo);
  methods[12].selector = @selector(getSignatureAlgorithm);
  methods[13].selector = @selector(getSignature);
  methods[14].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seq_", "LOrgSpongycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "tbsCert_", "LOrgSpongycastleAsn1X509TBSCertificate;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sigAlgId_", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sig_", "LOrgSpongycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgSpongycastleAsn1ASN1Sequence;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509Certificate = { "Certificate", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 15, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509Certificate;
}

@end

OrgSpongycastleAsn1X509Certificate *OrgSpongycastleAsn1X509Certificate_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1X509Certificate_initialize();
  return OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgSpongycastleAsn1X509Certificate *OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1X509Certificate_initialize();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1X509Certificate class]]) {
    return (OrgSpongycastleAsn1X509Certificate *) obj;
  }
  else if (obj != nil) {
    return new_OrgSpongycastleAsn1X509Certificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void OrgSpongycastleAsn1X509Certificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509Certificate *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->seq_ = seq;
  if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] == 3) {
    self->tbsCert_ = OrgSpongycastleAsn1X509TBSCertificate_getInstanceWithId_([seq getObjectAtWithInt:0]);
    self->sigAlgId_ = OrgSpongycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:1]);
    self->sig_ = OrgSpongycastleAsn1DERBitString_getInstanceWithId_([seq getObjectAtWithInt:2]);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"sequence wrong size for a certificate");
  }
}

OrgSpongycastleAsn1X509Certificate *new_OrgSpongycastleAsn1X509Certificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509Certificate, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1X509Certificate *create_OrgSpongycastleAsn1X509Certificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509Certificate, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509Certificate)
