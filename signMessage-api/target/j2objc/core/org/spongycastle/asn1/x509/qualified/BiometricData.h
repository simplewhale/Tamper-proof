//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/x509/qualified/BiometricData.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1X509QualifiedBiometricData")
#ifdef RESTRICT_OrgSpongycastleAsn1X509QualifiedBiometricData
#define INCLUDE_ALL_OrgSpongycastleAsn1X509QualifiedBiometricData 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1X509QualifiedBiometricData 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1X509QualifiedBiometricData

#if !defined (OrgSpongycastleAsn1X509QualifiedBiometricData_) && (INCLUDE_ALL_OrgSpongycastleAsn1X509QualifiedBiometricData || defined(INCLUDE_OrgSpongycastleAsn1X509QualifiedBiometricData))
#define OrgSpongycastleAsn1X509QualifiedBiometricData_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class OrgSpongycastleAsn1ASN1OctetString;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1DERIA5String;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;
@class OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData;

@interface OrgSpongycastleAsn1X509QualifiedBiometricData : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X509QualifiedTypeOfBiometricData:(OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *)typeOfBiometricData
                             withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)hashAlgorithm
                                     withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)biometricDataHash;

- (instancetype)initWithOrgSpongycastleAsn1X509QualifiedTypeOfBiometricData:(OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *)typeOfBiometricData
                             withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)hashAlgorithm
                                     withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)biometricDataHash
                                        withOrgSpongycastleAsn1DERIA5String:(OrgSpongycastleAsn1DERIA5String *)sourceDataUri;

- (OrgSpongycastleAsn1ASN1OctetString *)getBiometricDataHash;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm;

+ (OrgSpongycastleAsn1X509QualifiedBiometricData *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1DERIA5String *)getSourceDataUri;

- (OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *)getTypeOfBiometricData;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1X509QualifiedBiometricData)

FOUNDATION_EXPORT OrgSpongycastleAsn1X509QualifiedBiometricData *OrgSpongycastleAsn1X509QualifiedBiometricData_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgSpongycastleAsn1X509QualifiedBiometricData_initWithOrgSpongycastleAsn1X509QualifiedTypeOfBiometricData_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1DERIA5String_(OrgSpongycastleAsn1X509QualifiedBiometricData *self, OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *typeOfBiometricData, OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *biometricDataHash, OrgSpongycastleAsn1DERIA5String *sourceDataUri);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509QualifiedBiometricData *new_OrgSpongycastleAsn1X509QualifiedBiometricData_initWithOrgSpongycastleAsn1X509QualifiedTypeOfBiometricData_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1DERIA5String_(OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *typeOfBiometricData, OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *biometricDataHash, OrgSpongycastleAsn1DERIA5String *sourceDataUri) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1X509QualifiedBiometricData *create_OrgSpongycastleAsn1X509QualifiedBiometricData_initWithOrgSpongycastleAsn1X509QualifiedTypeOfBiometricData_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1DERIA5String_(OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *typeOfBiometricData, OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *biometricDataHash, OrgSpongycastleAsn1DERIA5String *sourceDataUri);

FOUNDATION_EXPORT void OrgSpongycastleAsn1X509QualifiedBiometricData_initWithOrgSpongycastleAsn1X509QualifiedTypeOfBiometricData_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_(OrgSpongycastleAsn1X509QualifiedBiometricData *self, OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *typeOfBiometricData, OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *biometricDataHash);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509QualifiedBiometricData *new_OrgSpongycastleAsn1X509QualifiedBiometricData_initWithOrgSpongycastleAsn1X509QualifiedTypeOfBiometricData_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_(OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *typeOfBiometricData, OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *biometricDataHash) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1X509QualifiedBiometricData *create_OrgSpongycastleAsn1X509QualifiedBiometricData_initWithOrgSpongycastleAsn1X509QualifiedTypeOfBiometricData_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_(OrgSpongycastleAsn1X509QualifiedTypeOfBiometricData *typeOfBiometricData, OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *biometricDataHash);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1X509QualifiedBiometricData)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1X509QualifiedBiometricData")
