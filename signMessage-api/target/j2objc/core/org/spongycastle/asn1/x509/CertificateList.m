//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/x509/CertificateList.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/DERBitString.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/x500/X500Name.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/asn1/x509/CertificateList.h"
#include "org/spongycastle/asn1/x509/TBSCertList.h"
#include "org/spongycastle/asn1/x509/Time.h"

@implementation OrgSpongycastleAsn1X509CertificateList

+ (OrgSpongycastleAsn1X509CertificateList *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                   withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1X509CertificateList_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (OrgSpongycastleAsn1X509CertificateList *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(obj);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1X509CertificateList_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (OrgSpongycastleAsn1X509TBSCertList *)getTBSCertList {
  return tbsCertList_;
}

- (IOSObjectArray *)getRevokedCertificates {
  return [((OrgSpongycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getRevokedCertificates];
}

- (id<JavaUtilEnumeration>)getRevokedCertificateEnumeration {
  return [((OrgSpongycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getRevokedCertificateEnumeration];
}

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm {
  return sigAlgId_;
}

- (OrgSpongycastleAsn1DERBitString *)getSignature {
  return sig_;
}

- (jint)getVersionNumber {
  return [((OrgSpongycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getVersionNumber];
}

- (OrgSpongycastleAsn1X500X500Name *)getIssuer {
  return [((OrgSpongycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getIssuer];
}

- (OrgSpongycastleAsn1X509Time *)getThisUpdate {
  return [((OrgSpongycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getThisUpdate];
}

- (OrgSpongycastleAsn1X509Time *)getNextUpdate {
  return [((OrgSpongycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getNextUpdate];
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:tbsCertList_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:sigAlgId_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:sig_];
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

- (NSUInteger)hash {
  if (!isHashCodeSet_) {
    hashCodeValue_ = ((jint) [super hash]);
    isHashCodeSet_ = true;
  }
  return hashCodeValue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1X509CertificateList;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509CertificateList;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509TBSCertList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1X509TBSCertList_CRLEntry;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERBitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(getTBSCertList);
  methods[4].selector = @selector(getRevokedCertificates);
  methods[5].selector = @selector(getRevokedCertificateEnumeration);
  methods[6].selector = @selector(getSignatureAlgorithm);
  methods[7].selector = @selector(getSignature);
  methods[8].selector = @selector(getVersionNumber);
  methods[9].selector = @selector(getIssuer);
  methods[10].selector = @selector(getThisUpdate);
  methods[11].selector = @selector(getNextUpdate);
  methods[12].selector = @selector(toASN1Primitive);
  methods[13].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tbsCertList_", "LOrgSpongycastleAsn1X509TBSCertList;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sigAlgId_", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sig_", "LOrgSpongycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "isHashCodeSet_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "hashCodeValue_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgSpongycastleAsn1ASN1Sequence;", "hashCode" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509CertificateList = { "CertificateList", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 14, 5, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509CertificateList;
}

@end

OrgSpongycastleAsn1X509CertificateList *OrgSpongycastleAsn1X509CertificateList_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1X509CertificateList_initialize();
  return OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgSpongycastleAsn1X509CertificateList *OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1X509CertificateList_initialize();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1X509CertificateList class]]) {
    return (OrgSpongycastleAsn1X509CertificateList *) obj;
  }
  else if (obj != nil) {
    return new_OrgSpongycastleAsn1X509CertificateList_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void OrgSpongycastleAsn1X509CertificateList_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509CertificateList *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->isHashCodeSet_ = false;
  if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] == 3) {
    self->tbsCertList_ = OrgSpongycastleAsn1X509TBSCertList_getInstanceWithId_([seq getObjectAtWithInt:0]);
    self->sigAlgId_ = OrgSpongycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:1]);
    self->sig_ = OrgSpongycastleAsn1DERBitString_getInstanceWithId_([seq getObjectAtWithInt:2]);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"sequence wrong size for CertificateList");
  }
}

OrgSpongycastleAsn1X509CertificateList *new_OrgSpongycastleAsn1X509CertificateList_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509CertificateList, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1X509CertificateList *create_OrgSpongycastleAsn1X509CertificateList_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509CertificateList, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509CertificateList)
