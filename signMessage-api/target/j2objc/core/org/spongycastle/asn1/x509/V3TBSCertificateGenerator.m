//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/x509/V3TBSCertificateGenerator.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Integer.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1UTCTime.h"
#include "org/spongycastle/asn1/DERBitString.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/DERTaggedObject.h"
#include "org/spongycastle/asn1/x500/X500Name.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/asn1/x509/Extension.h"
#include "org/spongycastle/asn1/x509/Extensions.h"
#include "org/spongycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/spongycastle/asn1/x509/TBSCertificate.h"
#include "org/spongycastle/asn1/x509/Time.h"
#include "org/spongycastle/asn1/x509/V3TBSCertificateGenerator.h"
#include "org/spongycastle/asn1/x509/X509Extensions.h"
#include "org/spongycastle/asn1/x509/X509Name.h"

@interface OrgSpongycastleAsn1X509V3TBSCertificateGenerator () {
 @public
  jboolean altNamePresentAndCritical_;
  OrgSpongycastleAsn1DERBitString *issuerUniqueID_;
  OrgSpongycastleAsn1DERBitString *subjectUniqueID_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509V3TBSCertificateGenerator, issuerUniqueID_, OrgSpongycastleAsn1DERBitString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509V3TBSCertificateGenerator, subjectUniqueID_, OrgSpongycastleAsn1DERBitString *)

@implementation OrgSpongycastleAsn1X509V3TBSCertificateGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgSpongycastleAsn1X509V3TBSCertificateGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setSerialNumberWithOrgSpongycastleAsn1ASN1Integer:(OrgSpongycastleAsn1ASN1Integer *)serialNumber {
  self->serialNumber_ = serialNumber;
}

- (void)setSignatureWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)signature {
  self->signature_ = signature;
}

- (void)setIssuerWithOrgSpongycastleAsn1X509X509Name:(OrgSpongycastleAsn1X509X509Name *)issuer {
  self->issuer_ = OrgSpongycastleAsn1X500X500Name_getInstanceWithId_(issuer);
}

- (void)setIssuerWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer {
  self->issuer_ = issuer;
}

- (void)setStartDateWithOrgSpongycastleAsn1ASN1UTCTime:(OrgSpongycastleAsn1ASN1UTCTime *)startDate {
  self->startDate_ = new_OrgSpongycastleAsn1X509Time_initWithOrgSpongycastleAsn1ASN1Primitive_(startDate);
}

- (void)setStartDateWithOrgSpongycastleAsn1X509Time:(OrgSpongycastleAsn1X509Time *)startDate {
  self->startDate_ = startDate;
}

- (void)setEndDateWithOrgSpongycastleAsn1ASN1UTCTime:(OrgSpongycastleAsn1ASN1UTCTime *)endDate {
  self->endDate_ = new_OrgSpongycastleAsn1X509Time_initWithOrgSpongycastleAsn1ASN1Primitive_(endDate);
}

- (void)setEndDateWithOrgSpongycastleAsn1X509Time:(OrgSpongycastleAsn1X509Time *)endDate {
  self->endDate_ = endDate;
}

- (void)setSubjectWithOrgSpongycastleAsn1X509X509Name:(OrgSpongycastleAsn1X509X509Name *)subject {
  self->subject_ = OrgSpongycastleAsn1X500X500Name_getInstanceWithId_([((OrgSpongycastleAsn1X509X509Name *) nil_chk(subject)) toASN1Primitive]);
}

- (void)setSubjectWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)subject {
  self->subject_ = subject;
}

- (void)setIssuerUniqueIDWithOrgSpongycastleAsn1DERBitString:(OrgSpongycastleAsn1DERBitString *)uniqueID {
  self->issuerUniqueID_ = uniqueID;
}

- (void)setSubjectUniqueIDWithOrgSpongycastleAsn1DERBitString:(OrgSpongycastleAsn1DERBitString *)uniqueID {
  self->subjectUniqueID_ = uniqueID;
}

- (void)setSubjectPublicKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)pubKeyInfo {
  self->subjectPublicKeyInfo_ = pubKeyInfo;
}

- (void)setExtensionsWithOrgSpongycastleAsn1X509X509Extensions:(OrgSpongycastleAsn1X509X509Extensions *)extensions {
  [self setExtensionsWithOrgSpongycastleAsn1X509Extensions:OrgSpongycastleAsn1X509Extensions_getInstanceWithId_(extensions)];
}

- (void)setExtensionsWithOrgSpongycastleAsn1X509Extensions:(OrgSpongycastleAsn1X509Extensions *)extensions {
  self->extensions_ = extensions;
  if (extensions != nil) {
    OrgSpongycastleAsn1X509Extension *altName = [extensions getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1X509Extension, subjectAlternativeName)];
    if (altName != nil && [altName isCritical]) {
      altNamePresentAndCritical_ = true;
    }
  }
}

- (OrgSpongycastleAsn1X509TBSCertificate *)generateTBSCertificate {
  if ((serialNumber_ == nil) || (signature_ == nil) || (issuer_ == nil) || (startDate_ == nil) || (endDate_ == nil) || (subject_ == nil && !altNamePresentAndCritical_) || (subjectPublicKeyInfo_ == nil)) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"not all mandatory fields set in V3 TBScertificate generator");
  }
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:version__];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:serialNumber_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:signature_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:issuer_];
  OrgSpongycastleAsn1ASN1EncodableVector *validity = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [validity addWithOrgSpongycastleAsn1ASN1Encodable:startDate_];
  [validity addWithOrgSpongycastleAsn1ASN1Encodable:endDate_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(validity)];
  if (subject_ != nil) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:subject_];
  }
  else {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERSequence_init()];
  }
  [v addWithOrgSpongycastleAsn1ASN1Encodable:subjectPublicKeyInfo_];
  if (issuerUniqueID_ != nil) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, 1, issuerUniqueID_)];
  }
  if (subjectUniqueID_ != nil) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, 2, subjectUniqueID_)];
  }
  if (extensions_ != nil) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(true, 3, extensions_)];
  }
  return OrgSpongycastleAsn1X509TBSCertificate_getInstanceWithId_(new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 19, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509TBSCertificate;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setSerialNumberWithOrgSpongycastleAsn1ASN1Integer:);
  methods[2].selector = @selector(setSignatureWithOrgSpongycastleAsn1X509AlgorithmIdentifier:);
  methods[3].selector = @selector(setIssuerWithOrgSpongycastleAsn1X509X509Name:);
  methods[4].selector = @selector(setIssuerWithOrgSpongycastleAsn1X500X500Name:);
  methods[5].selector = @selector(setStartDateWithOrgSpongycastleAsn1ASN1UTCTime:);
  methods[6].selector = @selector(setStartDateWithOrgSpongycastleAsn1X509Time:);
  methods[7].selector = @selector(setEndDateWithOrgSpongycastleAsn1ASN1UTCTime:);
  methods[8].selector = @selector(setEndDateWithOrgSpongycastleAsn1X509Time:);
  methods[9].selector = @selector(setSubjectWithOrgSpongycastleAsn1X509X509Name:);
  methods[10].selector = @selector(setSubjectWithOrgSpongycastleAsn1X500X500Name:);
  methods[11].selector = @selector(setIssuerUniqueIDWithOrgSpongycastleAsn1DERBitString:);
  methods[12].selector = @selector(setSubjectUniqueIDWithOrgSpongycastleAsn1DERBitString:);
  methods[13].selector = @selector(setSubjectPublicKeyInfoWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:);
  methods[14].selector = @selector(setExtensionsWithOrgSpongycastleAsn1X509X509Extensions:);
  methods[15].selector = @selector(setExtensionsWithOrgSpongycastleAsn1X509Extensions:);
  methods[16].selector = @selector(generateTBSCertificate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "LOrgSpongycastleAsn1DERTaggedObject;", .constantValue.asLong = 0, 0x0, 20, -1, -1, -1 },
    { "serialNumber_", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "signature_", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "issuer_", "LOrgSpongycastleAsn1X500X500Name;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "startDate_", "LOrgSpongycastleAsn1X509Time;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "endDate_", "LOrgSpongycastleAsn1X509Time;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "subject_", "LOrgSpongycastleAsn1X500X500Name;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "subjectPublicKeyInfo_", "LOrgSpongycastleAsn1X509SubjectPublicKeyInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "extensions_", "LOrgSpongycastleAsn1X509Extensions;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "altNamePresentAndCritical_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuerUniqueID_", "LOrgSpongycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "subjectUniqueID_", "LOrgSpongycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setSerialNumber", "LOrgSpongycastleAsn1ASN1Integer;", "setSignature", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", "setIssuer", "LOrgSpongycastleAsn1X509X509Name;", "LOrgSpongycastleAsn1X500X500Name;", "setStartDate", "LOrgSpongycastleAsn1ASN1UTCTime;", "LOrgSpongycastleAsn1X509Time;", "setEndDate", "setSubject", "setIssuerUniqueID", "LOrgSpongycastleAsn1DERBitString;", "setSubjectUniqueID", "setSubjectPublicKeyInfo", "LOrgSpongycastleAsn1X509SubjectPublicKeyInfo;", "setExtensions", "LOrgSpongycastleAsn1X509X509Extensions;", "LOrgSpongycastleAsn1X509Extensions;", "version" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509V3TBSCertificateGenerator = { "V3TBSCertificateGenerator", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 17, 12, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509V3TBSCertificateGenerator;
}

@end

void OrgSpongycastleAsn1X509V3TBSCertificateGenerator_init(OrgSpongycastleAsn1X509V3TBSCertificateGenerator *self) {
  NSObject_init(self);
  self->version__ = new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(true, 0, new_OrgSpongycastleAsn1ASN1Integer_initWithLong_(2));
}

OrgSpongycastleAsn1X509V3TBSCertificateGenerator *new_OrgSpongycastleAsn1X509V3TBSCertificateGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509V3TBSCertificateGenerator, init)
}

OrgSpongycastleAsn1X509V3TBSCertificateGenerator *create_OrgSpongycastleAsn1X509V3TBSCertificateGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509V3TBSCertificateGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509V3TBSCertificateGenerator)
