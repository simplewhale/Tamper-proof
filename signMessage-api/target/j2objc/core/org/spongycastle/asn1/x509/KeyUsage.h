//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/x509/KeyUsage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1X509KeyUsage")
#ifdef RESTRICT_OrgSpongycastleAsn1X509KeyUsage
#define INCLUDE_ALL_OrgSpongycastleAsn1X509KeyUsage 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1X509KeyUsage 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1X509KeyUsage

#if !defined (OrgSpongycastleAsn1X509KeyUsage_) && (INCLUDE_ALL_OrgSpongycastleAsn1X509KeyUsage || defined(INCLUDE_OrgSpongycastleAsn1X509KeyUsage))
#define OrgSpongycastleAsn1X509KeyUsage_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class IOSByteArray;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1X509Extensions;

@interface OrgSpongycastleAsn1X509KeyUsage : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithInt:(jint)usage;

+ (OrgSpongycastleAsn1X509KeyUsage *)fromExtensionsWithOrgSpongycastleAsn1X509Extensions:(OrgSpongycastleAsn1X509Extensions *)extensions;

- (IOSByteArray *)getBytes;

+ (OrgSpongycastleAsn1X509KeyUsage *)getInstanceWithId:(id)obj;

- (jint)getPadBits;

- (jboolean)hasUsagesWithInt:(jint)usages;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1X509KeyUsage)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_digitalSignature(void);
#define OrgSpongycastleAsn1X509KeyUsage_digitalSignature 128
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, digitalSignature, jint)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_nonRepudiation(void);
#define OrgSpongycastleAsn1X509KeyUsage_nonRepudiation 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, nonRepudiation, jint)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_keyEncipherment(void);
#define OrgSpongycastleAsn1X509KeyUsage_keyEncipherment 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, keyEncipherment, jint)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_dataEncipherment(void);
#define OrgSpongycastleAsn1X509KeyUsage_dataEncipherment 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, dataEncipherment, jint)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_keyAgreement(void);
#define OrgSpongycastleAsn1X509KeyUsage_keyAgreement 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, keyAgreement, jint)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_keyCertSign(void);
#define OrgSpongycastleAsn1X509KeyUsage_keyCertSign 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, keyCertSign, jint)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_cRLSign(void);
#define OrgSpongycastleAsn1X509KeyUsage_cRLSign 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, cRLSign, jint)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_encipherOnly(void);
#define OrgSpongycastleAsn1X509KeyUsage_encipherOnly 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, encipherOnly, jint)

inline jint OrgSpongycastleAsn1X509KeyUsage_get_decipherOnly(void);
#define OrgSpongycastleAsn1X509KeyUsage_decipherOnly 32768
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1X509KeyUsage, decipherOnly, jint)

FOUNDATION_EXPORT OrgSpongycastleAsn1X509KeyUsage *OrgSpongycastleAsn1X509KeyUsage_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509KeyUsage *OrgSpongycastleAsn1X509KeyUsage_fromExtensionsWithOrgSpongycastleAsn1X509Extensions_(OrgSpongycastleAsn1X509Extensions *extensions);

FOUNDATION_EXPORT void OrgSpongycastleAsn1X509KeyUsage_initWithInt_(OrgSpongycastleAsn1X509KeyUsage *self, jint usage);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509KeyUsage *new_OrgSpongycastleAsn1X509KeyUsage_initWithInt_(jint usage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1X509KeyUsage *create_OrgSpongycastleAsn1X509KeyUsage_initWithInt_(jint usage);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1X509KeyUsage)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1X509KeyUsage")
