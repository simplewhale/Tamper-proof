//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/ess/ESSCertID.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/ess/ESSCertID.h"
#include "org/spongycastle/asn1/x509/IssuerSerial.h"

@interface OrgSpongycastleAsn1EssESSCertID () {
 @public
  OrgSpongycastleAsn1ASN1OctetString *certHash_;
  OrgSpongycastleAsn1X509IssuerSerial *issuerSerial_;
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EssESSCertID, certHash_, OrgSpongycastleAsn1ASN1OctetString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EssESSCertID, issuerSerial_, OrgSpongycastleAsn1X509IssuerSerial *)

__attribute__((unused)) static void OrgSpongycastleAsn1EssESSCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1EssESSCertID *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1EssESSCertID *new_OrgSpongycastleAsn1EssESSCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1EssESSCertID *create_OrgSpongycastleAsn1EssESSCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

@implementation OrgSpongycastleAsn1EssESSCertID

+ (OrgSpongycastleAsn1EssESSCertID *)getInstanceWithId:(id)o {
  return OrgSpongycastleAsn1EssESSCertID_getInstanceWithId_(o);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1EssESSCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)hash_ {
  OrgSpongycastleAsn1EssESSCertID_initWithByteArray_(self, hash_);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)hash_
withOrgSpongycastleAsn1X509IssuerSerial:(OrgSpongycastleAsn1X509IssuerSerial *)issuerSerial {
  OrgSpongycastleAsn1EssESSCertID_initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(self, hash_, issuerSerial);
  return self;
}

- (IOSByteArray *)getCertHash {
  return [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(certHash_)) getOctets];
}

- (OrgSpongycastleAsn1X509IssuerSerial *)getIssuerSerial {
  return issuerSerial_;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:certHash_];
  if (issuerSerial_ != nil) {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:issuerSerial_];
  }
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1EssESSCertID;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509IssuerSerial;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(initWithByteArray:withOrgSpongycastleAsn1X509IssuerSerial:);
  methods[4].selector = @selector(getCertHash);
  methods[5].selector = @selector(getIssuerSerial);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certHash_", "LOrgSpongycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuerSerial_", "LOrgSpongycastleAsn1X509IssuerSerial;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgSpongycastleAsn1ASN1Sequence;", "[B", "[BLOrgSpongycastleAsn1X509IssuerSerial;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1EssESSCertID = { "ESSCertID", "org.spongycastle.asn1.ess", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1EssESSCertID;
}

@end

OrgSpongycastleAsn1EssESSCertID *OrgSpongycastleAsn1EssESSCertID_getInstanceWithId_(id o) {
  OrgSpongycastleAsn1EssESSCertID_initialize();
  if ([o isKindOfClass:[OrgSpongycastleAsn1EssESSCertID class]]) {
    return (OrgSpongycastleAsn1EssESSCertID *) o;
  }
  else if (o != nil) {
    return new_OrgSpongycastleAsn1EssESSCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void OrgSpongycastleAsn1EssESSCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1EssESSCertID *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] < 1 || [seq size] > 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
  self->certHash_ = OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:0]);
  if ([seq size] > 1) {
    self->issuerSerial_ = OrgSpongycastleAsn1X509IssuerSerial_getInstanceWithId_([seq getObjectAtWithInt:1]);
  }
}

OrgSpongycastleAsn1EssESSCertID *new_OrgSpongycastleAsn1EssESSCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EssESSCertID, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

OrgSpongycastleAsn1EssESSCertID *create_OrgSpongycastleAsn1EssESSCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EssESSCertID, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

void OrgSpongycastleAsn1EssESSCertID_initWithByteArray_(OrgSpongycastleAsn1EssESSCertID *self, IOSByteArray *hash_) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->certHash_ = new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(hash_);
}

OrgSpongycastleAsn1EssESSCertID *new_OrgSpongycastleAsn1EssESSCertID_initWithByteArray_(IOSByteArray *hash_) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EssESSCertID, initWithByteArray_, hash_)
}

OrgSpongycastleAsn1EssESSCertID *create_OrgSpongycastleAsn1EssESSCertID_initWithByteArray_(IOSByteArray *hash_) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EssESSCertID, initWithByteArray_, hash_)
}

void OrgSpongycastleAsn1EssESSCertID_initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(OrgSpongycastleAsn1EssESSCertID *self, IOSByteArray *hash_, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->certHash_ = new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(hash_);
  self->issuerSerial_ = issuerSerial;
}

OrgSpongycastleAsn1EssESSCertID *new_OrgSpongycastleAsn1EssESSCertID_initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(IOSByteArray *hash_, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EssESSCertID, initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_, hash_, issuerSerial)
}

OrgSpongycastleAsn1EssESSCertID *create_OrgSpongycastleAsn1EssESSCertID_initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(IOSByteArray *hash_, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EssESSCertID, initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_, hash_, issuerSerial)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1EssESSCertID)
