//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/eac/CertificateBody.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/spongycastle/asn1/ASN1ApplicationSpecific.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1InputStream.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/BERTags.h"
#include "org/spongycastle/asn1/DERApplicationSpecific.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/asn1/eac/CertificateBody.h"
#include "org/spongycastle/asn1/eac/CertificateHolderAuthorization.h"
#include "org/spongycastle/asn1/eac/CertificateHolderReference.h"
#include "org/spongycastle/asn1/eac/CertificationAuthorityReference.h"
#include "org/spongycastle/asn1/eac/EACTags.h"
#include "org/spongycastle/asn1/eac/PackedDate.h"
#include "org/spongycastle/asn1/eac/PublicKeyDataObject.h"

@interface OrgSpongycastleAsn1EacCertificateBody () {
 @public
  OrgSpongycastleAsn1DERApplicationSpecific *certificateProfileIdentifier_;
  OrgSpongycastleAsn1DERApplicationSpecific *certificationAuthorityReference_;
  OrgSpongycastleAsn1EacPublicKeyDataObject *publicKey_;
  OrgSpongycastleAsn1DERApplicationSpecific *certificateHolderReference_;
  OrgSpongycastleAsn1EacCertificateHolderAuthorization *certificateHolderAuthorization_;
  OrgSpongycastleAsn1DERApplicationSpecific *certificateEffectiveDate_;
  OrgSpongycastleAsn1DERApplicationSpecific *certificateExpirationDate_;
  jint certificateType_;
}

- (void)setIso7816CertificateBodyWithOrgSpongycastleAsn1ASN1ApplicationSpecific:(OrgSpongycastleAsn1ASN1ApplicationSpecific *)appSpe;

- (instancetype)initWithOrgSpongycastleAsn1ASN1ApplicationSpecific:(OrgSpongycastleAsn1ASN1ApplicationSpecific *)obj;

- (OrgSpongycastleAsn1ASN1Primitive *)profileToASN1Object;

- (void)setCertificateProfileIdentifierWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)certificateProfileIdentifier;

- (void)setCertificateHolderReferenceWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)certificateHolderReference;

- (void)setCertificationAuthorityReferenceWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)certificationAuthorityReference;

- (void)setPublicKeyWithOrgSpongycastleAsn1EacPublicKeyDataObject:(OrgSpongycastleAsn1EacPublicKeyDataObject *)publicKey;

- (OrgSpongycastleAsn1ASN1Primitive *)requestToASN1Object;

- (void)setCertificateEffectiveDateWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)ced;

- (void)setCertificateExpirationDateWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)ced;

- (void)setCertificateHolderAuthorizationWithOrgSpongycastleAsn1EacCertificateHolderAuthorization:(OrgSpongycastleAsn1EacCertificateHolderAuthorization *)cha;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateBody, certificateProfileIdentifier_, OrgSpongycastleAsn1DERApplicationSpecific *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateBody, certificationAuthorityReference_, OrgSpongycastleAsn1DERApplicationSpecific *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateBody, publicKey_, OrgSpongycastleAsn1EacPublicKeyDataObject *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateBody, certificateHolderReference_, OrgSpongycastleAsn1DERApplicationSpecific *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateBody, certificateHolderAuthorization_, OrgSpongycastleAsn1EacCertificateHolderAuthorization *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateBody, certificateEffectiveDate_, OrgSpongycastleAsn1DERApplicationSpecific *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateBody, certificateExpirationDate_, OrgSpongycastleAsn1DERApplicationSpecific *)

inline jint OrgSpongycastleAsn1EacCertificateBody_get_CPI(void);
#define OrgSpongycastleAsn1EacCertificateBody_CPI 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1EacCertificateBody, CPI, jint)

inline jint OrgSpongycastleAsn1EacCertificateBody_get_CAR(void);
#define OrgSpongycastleAsn1EacCertificateBody_CAR 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1EacCertificateBody, CAR, jint)

inline jint OrgSpongycastleAsn1EacCertificateBody_get_PK(void);
#define OrgSpongycastleAsn1EacCertificateBody_PK 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1EacCertificateBody, PK, jint)

inline jint OrgSpongycastleAsn1EacCertificateBody_get_CHR(void);
#define OrgSpongycastleAsn1EacCertificateBody_CHR 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1EacCertificateBody, CHR, jint)

inline jint OrgSpongycastleAsn1EacCertificateBody_get_CHA(void);
#define OrgSpongycastleAsn1EacCertificateBody_CHA 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1EacCertificateBody, CHA, jint)

inline jint OrgSpongycastleAsn1EacCertificateBody_get_CEfD(void);
#define OrgSpongycastleAsn1EacCertificateBody_CEfD 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1EacCertificateBody, CEfD, jint)

inline jint OrgSpongycastleAsn1EacCertificateBody_get_CExD(void);
#define OrgSpongycastleAsn1EacCertificateBody_CExD 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1EacCertificateBody, CExD, jint)

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_setIso7816CertificateBodyWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1ASN1ApplicationSpecific *obj);

__attribute__((unused)) static OrgSpongycastleAsn1EacCertificateBody *new_OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific *obj) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1EacCertificateBody *create_OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific *obj);

__attribute__((unused)) static OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleAsn1EacCertificateBody_profileToASN1Object(OrgSpongycastleAsn1EacCertificateBody *self);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_setCertificateProfileIdentifierWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *certificateProfileIdentifier);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *certificateHolderReference);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_setCertificationAuthorityReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *certificationAuthorityReference);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_setPublicKeyWithOrgSpongycastleAsn1EacPublicKeyDataObject_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1EacPublicKeyDataObject *publicKey);

__attribute__((unused)) static OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleAsn1EacCertificateBody_requestToASN1Object(OrgSpongycastleAsn1EacCertificateBody *self);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_setCertificateEffectiveDateWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *ced);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_setCertificateExpirationDateWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *ced);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderAuthorizationWithOrgSpongycastleAsn1EacCertificateHolderAuthorization_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1EacCertificateHolderAuthorization *cha);

@implementation OrgSpongycastleAsn1EacCertificateBody

- (void)setIso7816CertificateBodyWithOrgSpongycastleAsn1ASN1ApplicationSpecific:(OrgSpongycastleAsn1ASN1ApplicationSpecific *)appSpe {
  OrgSpongycastleAsn1EacCertificateBody_setIso7816CertificateBodyWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(self, appSpe);
}

- (instancetype)initWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)certificateProfileIdentifier
        withOrgSpongycastleAsn1EacCertificationAuthorityReference:(OrgSpongycastleAsn1EacCertificationAuthorityReference *)certificationAuthorityReference
                    withOrgSpongycastleAsn1EacPublicKeyDataObject:(OrgSpongycastleAsn1EacPublicKeyDataObject *)publicKey
             withOrgSpongycastleAsn1EacCertificateHolderReference:(OrgSpongycastleAsn1EacCertificateHolderReference *)certificateHolderReference
         withOrgSpongycastleAsn1EacCertificateHolderAuthorization:(OrgSpongycastleAsn1EacCertificateHolderAuthorization *)certificateHolderAuthorization
                             withOrgSpongycastleAsn1EacPackedDate:(OrgSpongycastleAsn1EacPackedDate *)certificateEffectiveDate
                             withOrgSpongycastleAsn1EacPackedDate:(OrgSpongycastleAsn1EacPackedDate *)certificateExpirationDate {
  OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1DERApplicationSpecific_withOrgSpongycastleAsn1EacCertificationAuthorityReference_withOrgSpongycastleAsn1EacPublicKeyDataObject_withOrgSpongycastleAsn1EacCertificateHolderReference_withOrgSpongycastleAsn1EacCertificateHolderAuthorization_withOrgSpongycastleAsn1EacPackedDate_withOrgSpongycastleAsn1EacPackedDate_(self, certificateProfileIdentifier, certificationAuthorityReference, publicKey, certificateHolderReference, certificateHolderAuthorization, certificateEffectiveDate, certificateExpirationDate);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1ApplicationSpecific:(OrgSpongycastleAsn1ASN1ApplicationSpecific *)obj {
  OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(self, obj);
  return self;
}

- (OrgSpongycastleAsn1ASN1Primitive *)profileToASN1Object {
  return OrgSpongycastleAsn1EacCertificateBody_profileToASN1Object(self);
}

- (void)setCertificateProfileIdentifierWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)certificateProfileIdentifier {
  OrgSpongycastleAsn1EacCertificateBody_setCertificateProfileIdentifierWithOrgSpongycastleAsn1DERApplicationSpecific_(self, certificateProfileIdentifier);
}

- (void)setCertificateHolderReferenceWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)certificateHolderReference {
  OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(self, certificateHolderReference);
}

- (void)setCertificationAuthorityReferenceWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)certificationAuthorityReference {
  OrgSpongycastleAsn1EacCertificateBody_setCertificationAuthorityReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(self, certificationAuthorityReference);
}

- (void)setPublicKeyWithOrgSpongycastleAsn1EacPublicKeyDataObject:(OrgSpongycastleAsn1EacPublicKeyDataObject *)publicKey {
  OrgSpongycastleAsn1EacCertificateBody_setPublicKeyWithOrgSpongycastleAsn1EacPublicKeyDataObject_(self, publicKey);
}

- (OrgSpongycastleAsn1ASN1Primitive *)requestToASN1Object {
  return OrgSpongycastleAsn1EacCertificateBody_requestToASN1Object(self);
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  @try {
    if (certificateType_ == OrgSpongycastleAsn1EacCertificateBody_profileType) {
      return OrgSpongycastleAsn1EacCertificateBody_profileToASN1Object(self);
    }
    if (certificateType_ == OrgSpongycastleAsn1EacCertificateBody_requestType) {
      return OrgSpongycastleAsn1EacCertificateBody_requestToASN1Object(self);
    }
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
  return nil;
}

- (jint)getCertificateType {
  return certificateType_;
}

+ (OrgSpongycastleAsn1EacCertificateBody *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1EacCertificateBody_getInstanceWithId_(obj);
}

- (OrgSpongycastleAsn1EacPackedDate *)getCertificateEffectiveDate {
  if ((self->certificateType_ & OrgSpongycastleAsn1EacCertificateBody_CEfD) == OrgSpongycastleAsn1EacCertificateBody_CEfD) {
    return new_OrgSpongycastleAsn1EacPackedDate_initWithByteArray_([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(certificateEffectiveDate_)) getContents]);
  }
  return nil;
}

- (void)setCertificateEffectiveDateWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)ced {
  OrgSpongycastleAsn1EacCertificateBody_setCertificateEffectiveDateWithOrgSpongycastleAsn1DERApplicationSpecific_(self, ced);
}

- (OrgSpongycastleAsn1EacPackedDate *)getCertificateExpirationDate {
  if ((self->certificateType_ & OrgSpongycastleAsn1EacCertificateBody_CExD) == OrgSpongycastleAsn1EacCertificateBody_CExD) {
    return new_OrgSpongycastleAsn1EacPackedDate_initWithByteArray_([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(certificateExpirationDate_)) getContents]);
  }
  @throw new_JavaIoIOException_initWithNSString_(@"certificate Expiration Date not set");
}

- (void)setCertificateExpirationDateWithOrgSpongycastleAsn1DERApplicationSpecific:(OrgSpongycastleAsn1DERApplicationSpecific *)ced {
  OrgSpongycastleAsn1EacCertificateBody_setCertificateExpirationDateWithOrgSpongycastleAsn1DERApplicationSpecific_(self, ced);
}

- (OrgSpongycastleAsn1EacCertificateHolderAuthorization *)getCertificateHolderAuthorization {
  if ((self->certificateType_ & OrgSpongycastleAsn1EacCertificateBody_CHA) == OrgSpongycastleAsn1EacCertificateBody_CHA) {
    return certificateHolderAuthorization_;
  }
  @throw new_JavaIoIOException_initWithNSString_(@"Certificate Holder Authorisation not set");
}

- (void)setCertificateHolderAuthorizationWithOrgSpongycastleAsn1EacCertificateHolderAuthorization:(OrgSpongycastleAsn1EacCertificateHolderAuthorization *)cha {
  OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderAuthorizationWithOrgSpongycastleAsn1EacCertificateHolderAuthorization_(self, cha);
}

- (OrgSpongycastleAsn1EacCertificateHolderReference *)getCertificateHolderReference {
  return new_OrgSpongycastleAsn1EacCertificateHolderReference_initWithByteArray_([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(certificateHolderReference_)) getContents]);
}

- (OrgSpongycastleAsn1DERApplicationSpecific *)getCertificateProfileIdentifier {
  return certificateProfileIdentifier_;
}

- (OrgSpongycastleAsn1EacCertificationAuthorityReference *)getCertificationAuthorityReference {
  if ((self->certificateType_ & OrgSpongycastleAsn1EacCertificateBody_CAR) == OrgSpongycastleAsn1EacCertificateBody_CAR) {
    return new_OrgSpongycastleAsn1EacCertificationAuthorityReference_initWithByteArray_([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(certificationAuthorityReference_)) getContents]);
  }
  @throw new_JavaIoIOException_initWithNSString_(@"Certification authority reference not set");
}

- (OrgSpongycastleAsn1EacPublicKeyDataObject *)getPublicKey {
  return publicKey_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x2, 0, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacCertificateBody;", 0x9, 11, 12, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacPackedDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 5, 6, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacPackedDate;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 5, 6, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacCertificateHolderAuthorization;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacCertificateHolderReference;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERApplicationSpecific;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacCertificationAuthorityReference;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacPublicKeyDataObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setIso7816CertificateBodyWithOrgSpongycastleAsn1ASN1ApplicationSpecific:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1DERApplicationSpecific:withOrgSpongycastleAsn1EacCertificationAuthorityReference:withOrgSpongycastleAsn1EacPublicKeyDataObject:withOrgSpongycastleAsn1EacCertificateHolderReference:withOrgSpongycastleAsn1EacCertificateHolderAuthorization:withOrgSpongycastleAsn1EacPackedDate:withOrgSpongycastleAsn1EacPackedDate:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1ASN1ApplicationSpecific:);
  methods[3].selector = @selector(profileToASN1Object);
  methods[4].selector = @selector(setCertificateProfileIdentifierWithOrgSpongycastleAsn1DERApplicationSpecific:);
  methods[5].selector = @selector(setCertificateHolderReferenceWithOrgSpongycastleAsn1DERApplicationSpecific:);
  methods[6].selector = @selector(setCertificationAuthorityReferenceWithOrgSpongycastleAsn1DERApplicationSpecific:);
  methods[7].selector = @selector(setPublicKeyWithOrgSpongycastleAsn1EacPublicKeyDataObject:);
  methods[8].selector = @selector(requestToASN1Object);
  methods[9].selector = @selector(toASN1Primitive);
  methods[10].selector = @selector(getCertificateType);
  methods[11].selector = @selector(getInstanceWithId:);
  methods[12].selector = @selector(getCertificateEffectiveDate);
  methods[13].selector = @selector(setCertificateEffectiveDateWithOrgSpongycastleAsn1DERApplicationSpecific:);
  methods[14].selector = @selector(getCertificateExpirationDate);
  methods[15].selector = @selector(setCertificateExpirationDateWithOrgSpongycastleAsn1DERApplicationSpecific:);
  methods[16].selector = @selector(getCertificateHolderAuthorization);
  methods[17].selector = @selector(setCertificateHolderAuthorizationWithOrgSpongycastleAsn1EacCertificateHolderAuthorization:);
  methods[18].selector = @selector(getCertificateHolderReference);
  methods[19].selector = @selector(getCertificateProfileIdentifier);
  methods[20].selector = @selector(getCertificationAuthorityReference);
  methods[21].selector = @selector(getPublicKey);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seq_", "LOrgSpongycastleAsn1ASN1InputStream;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "certificateProfileIdentifier_", "LOrgSpongycastleAsn1DERApplicationSpecific;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificationAuthorityReference_", "LOrgSpongycastleAsn1DERApplicationSpecific;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKey_", "LOrgSpongycastleAsn1EacPublicKeyDataObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificateHolderReference_", "LOrgSpongycastleAsn1DERApplicationSpecific;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificateHolderAuthorization_", "LOrgSpongycastleAsn1EacCertificateHolderAuthorization;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificateEffectiveDate_", "LOrgSpongycastleAsn1DERApplicationSpecific;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificateExpirationDate_", "LOrgSpongycastleAsn1DERApplicationSpecific;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificateType_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "CPI", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_CPI, 0x1a, -1, -1, -1, -1 },
    { "CAR", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_CAR, 0x1a, -1, -1, -1, -1 },
    { "PK", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_PK, 0x1a, -1, -1, -1, -1 },
    { "CHR", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_CHR, 0x1a, -1, -1, -1, -1 },
    { "CHA", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_CHA, 0x1a, -1, -1, -1, -1 },
    { "CEfD", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_CEfD, 0x1a, -1, -1, -1, -1 },
    { "CExD", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_CExD, 0x1a, -1, -1, -1, -1 },
    { "profileType", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_profileType, 0x19, -1, -1, -1, -1 },
    { "requestType", "I", .constantValue.asInt = OrgSpongycastleAsn1EacCertificateBody_requestType, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setIso7816CertificateBody", "LOrgSpongycastleAsn1ASN1ApplicationSpecific;", "LJavaIoIOException;", "LOrgSpongycastleAsn1DERApplicationSpecific;LOrgSpongycastleAsn1EacCertificationAuthorityReference;LOrgSpongycastleAsn1EacPublicKeyDataObject;LOrgSpongycastleAsn1EacCertificateHolderReference;LOrgSpongycastleAsn1EacCertificateHolderAuthorization;LOrgSpongycastleAsn1EacPackedDate;LOrgSpongycastleAsn1EacPackedDate;", "setCertificateProfileIdentifier", "LOrgSpongycastleAsn1DERApplicationSpecific;", "LJavaLangIllegalArgumentException;", "setCertificateHolderReference", "setCertificationAuthorityReference", "setPublicKey", "LOrgSpongycastleAsn1EacPublicKeyDataObject;", "getInstance", "LNSObject;", "setCertificateEffectiveDate", "setCertificateExpirationDate", "setCertificateHolderAuthorization", "LOrgSpongycastleAsn1EacCertificateHolderAuthorization;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1EacCertificateBody = { "CertificateBody", "org.spongycastle.asn1.eac", ptrTable, methods, fields, 7, 0x1, 22, 18, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1EacCertificateBody;
}

@end

void OrgSpongycastleAsn1EacCertificateBody_setIso7816CertificateBodyWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe) {
  IOSByteArray *content;
  if ([((OrgSpongycastleAsn1ASN1ApplicationSpecific *) nil_chk(appSpe)) getApplicationTag] == OrgSpongycastleAsn1EacEACTags_CERTIFICATE_CONTENT_TEMPLATE) {
    content = [appSpe getContents];
  }
  else {
    @throw new_JavaIoIOException_initWithNSString_(@"Bad tag : not an iso7816 CERTIFICATE_CONTENT_TEMPLATE");
  }
  OrgSpongycastleAsn1ASN1InputStream *aIS = new_OrgSpongycastleAsn1ASN1InputStream_initWithByteArray_(content);
  OrgSpongycastleAsn1ASN1Primitive *obj;
  while ((obj = [aIS readObject]) != nil) {
    OrgSpongycastleAsn1DERApplicationSpecific *aSpe;
    if ([obj isKindOfClass:[OrgSpongycastleAsn1DERApplicationSpecific class]]) {
      aSpe = (OrgSpongycastleAsn1DERApplicationSpecific *) obj;
    }
    else {
      @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I@", @"Not a valid iso7816 content : not a DERApplicationSpecific Object :", OrgSpongycastleAsn1EacEACTags_encodeTagWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(appSpe), [((OrgSpongycastleAsn1ASN1Primitive *) nil_chk(obj)) java_getClass]));
    }
    switch ([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(aSpe)) getApplicationTag]) {
      case OrgSpongycastleAsn1EacEACTags_INTERCHANGE_PROFILE:
      OrgSpongycastleAsn1EacCertificateBody_setCertificateProfileIdentifierWithOrgSpongycastleAsn1DERApplicationSpecific_(self, aSpe);
      break;
      case OrgSpongycastleAsn1EacEACTags_ISSUER_IDENTIFICATION_NUMBER:
      OrgSpongycastleAsn1EacCertificateBody_setCertificationAuthorityReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(self, aSpe);
      break;
      case OrgSpongycastleAsn1EacEACTags_CARDHOLDER_PUBLIC_KEY_TEMPLATE:
      OrgSpongycastleAsn1EacCertificateBody_setPublicKeyWithOrgSpongycastleAsn1EacPublicKeyDataObject_(self, OrgSpongycastleAsn1EacPublicKeyDataObject_getInstanceWithId_([aSpe getObjectWithInt:OrgSpongycastleAsn1BERTags_SEQUENCE]));
      break;
      case OrgSpongycastleAsn1EacEACTags_CARDHOLDER_NAME:
      OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(self, aSpe);
      break;
      case OrgSpongycastleAsn1EacEACTags_CERTIFICATE_HOLDER_AUTHORIZATION_TEMPLATE:
      OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderAuthorizationWithOrgSpongycastleAsn1EacCertificateHolderAuthorization_(self, new_OrgSpongycastleAsn1EacCertificateHolderAuthorization_initWithOrgSpongycastleAsn1DERApplicationSpecific_(aSpe));
      break;
      case OrgSpongycastleAsn1EacEACTags_APPLICATION_EFFECTIVE_DATE:
      OrgSpongycastleAsn1EacCertificateBody_setCertificateEffectiveDateWithOrgSpongycastleAsn1DERApplicationSpecific_(self, aSpe);
      break;
      case OrgSpongycastleAsn1EacEACTags_APPLICATION_EXPIRATION_DATE:
      OrgSpongycastleAsn1EacCertificateBody_setCertificateExpirationDateWithOrgSpongycastleAsn1DERApplicationSpecific_(self, aSpe);
      break;
      default:
      self->certificateType_ = 0;
      @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"Not a valid iso7816 DERApplicationSpecific tag ", [aSpe getApplicationTag]));
    }
  }
  [aIS close];
}

void OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1DERApplicationSpecific_withOrgSpongycastleAsn1EacCertificationAuthorityReference_withOrgSpongycastleAsn1EacPublicKeyDataObject_withOrgSpongycastleAsn1EacCertificateHolderReference_withOrgSpongycastleAsn1EacCertificateHolderAuthorization_withOrgSpongycastleAsn1EacPackedDate_withOrgSpongycastleAsn1EacPackedDate_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *certificateProfileIdentifier, OrgSpongycastleAsn1EacCertificationAuthorityReference *certificationAuthorityReference, OrgSpongycastleAsn1EacPublicKeyDataObject *publicKey, OrgSpongycastleAsn1EacCertificateHolderReference *certificateHolderReference, OrgSpongycastleAsn1EacCertificateHolderAuthorization *certificateHolderAuthorization, OrgSpongycastleAsn1EacPackedDate *certificateEffectiveDate, OrgSpongycastleAsn1EacPackedDate *certificateExpirationDate) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->certificateType_ = 0;
  OrgSpongycastleAsn1EacCertificateBody_setCertificateProfileIdentifierWithOrgSpongycastleAsn1DERApplicationSpecific_(self, certificateProfileIdentifier);
  OrgSpongycastleAsn1EacCertificateBody_setCertificationAuthorityReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(self, new_OrgSpongycastleAsn1DERApplicationSpecific_initWithInt_withByteArray_(OrgSpongycastleAsn1EacEACTags_ISSUER_IDENTIFICATION_NUMBER, [((OrgSpongycastleAsn1EacCertificationAuthorityReference *) nil_chk(certificationAuthorityReference)) getEncoded]));
  OrgSpongycastleAsn1EacCertificateBody_setPublicKeyWithOrgSpongycastleAsn1EacPublicKeyDataObject_(self, publicKey);
  OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(self, new_OrgSpongycastleAsn1DERApplicationSpecific_initWithInt_withByteArray_(OrgSpongycastleAsn1EacEACTags_CARDHOLDER_NAME, [((OrgSpongycastleAsn1EacCertificateHolderReference *) nil_chk(certificateHolderReference)) getEncoded]));
  OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderAuthorizationWithOrgSpongycastleAsn1EacCertificateHolderAuthorization_(self, certificateHolderAuthorization);
  @try {
    OrgSpongycastleAsn1EacCertificateBody_setCertificateEffectiveDateWithOrgSpongycastleAsn1DERApplicationSpecific_(self, new_OrgSpongycastleAsn1DERApplicationSpecific_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, OrgSpongycastleAsn1EacEACTags_APPLICATION_EFFECTIVE_DATE, new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_([((OrgSpongycastleAsn1EacPackedDate *) nil_chk(certificateEffectiveDate)) getEncoding])));
    OrgSpongycastleAsn1EacCertificateBody_setCertificateExpirationDateWithOrgSpongycastleAsn1DERApplicationSpecific_(self, new_OrgSpongycastleAsn1DERApplicationSpecific_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, OrgSpongycastleAsn1EacEACTags_APPLICATION_EXPIRATION_DATE, new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_([((OrgSpongycastleAsn1EacPackedDate *) nil_chk(certificateExpirationDate)) getEncoding])));
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unable to encode dates: ", [e getMessage]));
  }
}

OrgSpongycastleAsn1EacCertificateBody *new_OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1DERApplicationSpecific_withOrgSpongycastleAsn1EacCertificationAuthorityReference_withOrgSpongycastleAsn1EacPublicKeyDataObject_withOrgSpongycastleAsn1EacCertificateHolderReference_withOrgSpongycastleAsn1EacCertificateHolderAuthorization_withOrgSpongycastleAsn1EacPackedDate_withOrgSpongycastleAsn1EacPackedDate_(OrgSpongycastleAsn1DERApplicationSpecific *certificateProfileIdentifier, OrgSpongycastleAsn1EacCertificationAuthorityReference *certificationAuthorityReference, OrgSpongycastleAsn1EacPublicKeyDataObject *publicKey, OrgSpongycastleAsn1EacCertificateHolderReference *certificateHolderReference, OrgSpongycastleAsn1EacCertificateHolderAuthorization *certificateHolderAuthorization, OrgSpongycastleAsn1EacPackedDate *certificateEffectiveDate, OrgSpongycastleAsn1EacPackedDate *certificateExpirationDate) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EacCertificateBody, initWithOrgSpongycastleAsn1DERApplicationSpecific_withOrgSpongycastleAsn1EacCertificationAuthorityReference_withOrgSpongycastleAsn1EacPublicKeyDataObject_withOrgSpongycastleAsn1EacCertificateHolderReference_withOrgSpongycastleAsn1EacCertificateHolderAuthorization_withOrgSpongycastleAsn1EacPackedDate_withOrgSpongycastleAsn1EacPackedDate_, certificateProfileIdentifier, certificationAuthorityReference, publicKey, certificateHolderReference, certificateHolderAuthorization, certificateEffectiveDate, certificateExpirationDate)
}

OrgSpongycastleAsn1EacCertificateBody *create_OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1DERApplicationSpecific_withOrgSpongycastleAsn1EacCertificationAuthorityReference_withOrgSpongycastleAsn1EacPublicKeyDataObject_withOrgSpongycastleAsn1EacCertificateHolderReference_withOrgSpongycastleAsn1EacCertificateHolderAuthorization_withOrgSpongycastleAsn1EacPackedDate_withOrgSpongycastleAsn1EacPackedDate_(OrgSpongycastleAsn1DERApplicationSpecific *certificateProfileIdentifier, OrgSpongycastleAsn1EacCertificationAuthorityReference *certificationAuthorityReference, OrgSpongycastleAsn1EacPublicKeyDataObject *publicKey, OrgSpongycastleAsn1EacCertificateHolderReference *certificateHolderReference, OrgSpongycastleAsn1EacCertificateHolderAuthorization *certificateHolderAuthorization, OrgSpongycastleAsn1EacPackedDate *certificateEffectiveDate, OrgSpongycastleAsn1EacPackedDate *certificateExpirationDate) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EacCertificateBody, initWithOrgSpongycastleAsn1DERApplicationSpecific_withOrgSpongycastleAsn1EacCertificationAuthorityReference_withOrgSpongycastleAsn1EacPublicKeyDataObject_withOrgSpongycastleAsn1EacCertificateHolderReference_withOrgSpongycastleAsn1EacCertificateHolderAuthorization_withOrgSpongycastleAsn1EacPackedDate_withOrgSpongycastleAsn1EacPackedDate_, certificateProfileIdentifier, certificationAuthorityReference, publicKey, certificateHolderReference, certificateHolderAuthorization, certificateEffectiveDate, certificateExpirationDate)
}

void OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1ASN1ApplicationSpecific *obj) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->certificateType_ = 0;
  OrgSpongycastleAsn1EacCertificateBody_setIso7816CertificateBodyWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(self, obj);
}

OrgSpongycastleAsn1EacCertificateBody *new_OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific *obj) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EacCertificateBody, initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_, obj)
}

OrgSpongycastleAsn1EacCertificateBody *create_OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific *obj) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EacCertificateBody, initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_, obj)
}

OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleAsn1EacCertificateBody_profileToASN1Object(OrgSpongycastleAsn1EacCertificateBody *self) {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:self->certificateProfileIdentifier_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:self->certificationAuthorityReference_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERApplicationSpecific_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, OrgSpongycastleAsn1EacEACTags_CARDHOLDER_PUBLIC_KEY_TEMPLATE, self->publicKey_)];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:self->certificateHolderReference_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:self->certificateHolderAuthorization_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:self->certificateEffectiveDate_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:self->certificateExpirationDate_];
  return new_OrgSpongycastleAsn1DERApplicationSpecific_initWithInt_withOrgSpongycastleAsn1ASN1EncodableVector_(OrgSpongycastleAsn1EacEACTags_CERTIFICATE_CONTENT_TEMPLATE, v);
}

void OrgSpongycastleAsn1EacCertificateBody_setCertificateProfileIdentifierWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *certificateProfileIdentifier) {
  if ([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(certificateProfileIdentifier)) getApplicationTag] == OrgSpongycastleAsn1EacEACTags_INTERCHANGE_PROFILE) {
    self->certificateProfileIdentifier_ = certificateProfileIdentifier;
    self->certificateType_ |= OrgSpongycastleAsn1EacCertificateBody_CPI;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Not an Iso7816Tags.INTERCHANGE_PROFILE tag :", OrgSpongycastleAsn1EacEACTags_encodeTagWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(certificateProfileIdentifier)));
  }
}

void OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *certificateHolderReference) {
  if ([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(certificateHolderReference)) getApplicationTag] == OrgSpongycastleAsn1EacEACTags_CARDHOLDER_NAME) {
    self->certificateHolderReference_ = certificateHolderReference;
    self->certificateType_ |= OrgSpongycastleAsn1EacCertificateBody_CHR;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Not an Iso7816Tags.CARDHOLDER_NAME tag");
  }
}

void OrgSpongycastleAsn1EacCertificateBody_setCertificationAuthorityReferenceWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *certificationAuthorityReference) {
  if ([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(certificationAuthorityReference)) getApplicationTag] == OrgSpongycastleAsn1EacEACTags_ISSUER_IDENTIFICATION_NUMBER) {
    self->certificationAuthorityReference_ = certificationAuthorityReference;
    self->certificateType_ |= OrgSpongycastleAsn1EacCertificateBody_CAR;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Not an Iso7816Tags.ISSUER_IDENTIFICATION_NUMBER tag");
  }
}

void OrgSpongycastleAsn1EacCertificateBody_setPublicKeyWithOrgSpongycastleAsn1EacPublicKeyDataObject_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1EacPublicKeyDataObject *publicKey) {
  self->publicKey_ = OrgSpongycastleAsn1EacPublicKeyDataObject_getInstanceWithId_(publicKey);
  self->certificateType_ |= OrgSpongycastleAsn1EacCertificateBody_PK;
}

OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleAsn1EacCertificateBody_requestToASN1Object(OrgSpongycastleAsn1EacCertificateBody *self) {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:self->certificateProfileIdentifier_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERApplicationSpecific_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, OrgSpongycastleAsn1EacEACTags_CARDHOLDER_PUBLIC_KEY_TEMPLATE, self->publicKey_)];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:self->certificateHolderReference_];
  return new_OrgSpongycastleAsn1DERApplicationSpecific_initWithInt_withOrgSpongycastleAsn1ASN1EncodableVector_(OrgSpongycastleAsn1EacEACTags_CERTIFICATE_CONTENT_TEMPLATE, v);
}

OrgSpongycastleAsn1EacCertificateBody *OrgSpongycastleAsn1EacCertificateBody_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1EacCertificateBody_initialize();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1EacCertificateBody class]]) {
    return (OrgSpongycastleAsn1EacCertificateBody *) obj;
  }
  else if (obj != nil) {
    return new_OrgSpongycastleAsn1EacCertificateBody_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific_getInstanceWithId_(obj));
  }
  return nil;
}

void OrgSpongycastleAsn1EacCertificateBody_setCertificateEffectiveDateWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *ced) {
  if ([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(ced)) getApplicationTag] == OrgSpongycastleAsn1EacEACTags_APPLICATION_EFFECTIVE_DATE) {
    self->certificateEffectiveDate_ = ced;
    self->certificateType_ |= OrgSpongycastleAsn1EacCertificateBody_CEfD;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Not an Iso7816Tags.APPLICATION_EFFECTIVE_DATE tag :", OrgSpongycastleAsn1EacEACTags_encodeTagWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(ced)));
  }
}

void OrgSpongycastleAsn1EacCertificateBody_setCertificateExpirationDateWithOrgSpongycastleAsn1DERApplicationSpecific_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1DERApplicationSpecific *ced) {
  if ([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(ced)) getApplicationTag] == OrgSpongycastleAsn1EacEACTags_APPLICATION_EXPIRATION_DATE) {
    self->certificateExpirationDate_ = ced;
    self->certificateType_ |= OrgSpongycastleAsn1EacCertificateBody_CExD;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Not an Iso7816Tags.APPLICATION_EXPIRATION_DATE tag");
  }
}

void OrgSpongycastleAsn1EacCertificateBody_setCertificateHolderAuthorizationWithOrgSpongycastleAsn1EacCertificateHolderAuthorization_(OrgSpongycastleAsn1EacCertificateBody *self, OrgSpongycastleAsn1EacCertificateHolderAuthorization *cha) {
  self->certificateHolderAuthorization_ = cha;
  self->certificateType_ |= OrgSpongycastleAsn1EacCertificateBody_CHA;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1EacCertificateBody)
