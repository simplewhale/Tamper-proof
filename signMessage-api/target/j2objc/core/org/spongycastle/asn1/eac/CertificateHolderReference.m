//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/eac/CertificateHolderReference.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/asn1/eac/CertificateHolderReference.h"

@interface OrgSpongycastleAsn1EacCertificateHolderReference () {
 @public
  NSString *countryCode_;
  NSString *holderMnemonic_;
  NSString *sequenceNumber_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateHolderReference, countryCode_, NSString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateHolderReference, holderMnemonic_, NSString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCertificateHolderReference, sequenceNumber_, NSString *)

inline NSString *OrgSpongycastleAsn1EacCertificateHolderReference_get_ReferenceEncoding(void);
static NSString *OrgSpongycastleAsn1EacCertificateHolderReference_ReferenceEncoding = @"ISO-8859-1";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1EacCertificateHolderReference, ReferenceEncoding, NSString *)

@implementation OrgSpongycastleAsn1EacCertificateHolderReference

- (instancetype)initWithNSString:(NSString *)countryCode
                    withNSString:(NSString *)holderMnemonic
                    withNSString:(NSString *)sequenceNumber {
  OrgSpongycastleAsn1EacCertificateHolderReference_initWithNSString_withNSString_withNSString_(self, countryCode, holderMnemonic, sequenceNumber);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)contents {
  OrgSpongycastleAsn1EacCertificateHolderReference_initWithByteArray_(self, contents);
  return self;
}

- (NSString *)getCountryCode {
  return countryCode_;
}

- (NSString *)getHolderMnemonic {
  return holderMnemonic_;
}

- (NSString *)getSequenceNumber {
  return sequenceNumber_;
}

- (IOSByteArray *)getEncoded {
  NSString *ref = JreStrcat("$$$", countryCode_, holderMnemonic_, sequenceNumber_);
  @try {
    return [ref java_getBytesWithCharsetName:OrgSpongycastleAsn1EacCertificateHolderReference_ReferenceEncoding];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSString_([e description]);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(getCountryCode);
  methods[3].selector = @selector(getHolderMnemonic);
  methods[4].selector = @selector(getSequenceNumber);
  methods[5].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ReferenceEncoding", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "countryCode_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "holderMnemonic_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sequenceNumber_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;", "[B", &OrgSpongycastleAsn1EacCertificateHolderReference_ReferenceEncoding };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1EacCertificateHolderReference = { "CertificateHolderReference", "org.spongycastle.asn1.eac", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1EacCertificateHolderReference;
}

@end

void OrgSpongycastleAsn1EacCertificateHolderReference_initWithNSString_withNSString_withNSString_(OrgSpongycastleAsn1EacCertificateHolderReference *self, NSString *countryCode, NSString *holderMnemonic, NSString *sequenceNumber) {
  NSObject_init(self);
  self->countryCode_ = countryCode;
  self->holderMnemonic_ = holderMnemonic;
  self->sequenceNumber_ = sequenceNumber;
}

OrgSpongycastleAsn1EacCertificateHolderReference *new_OrgSpongycastleAsn1EacCertificateHolderReference_initWithNSString_withNSString_withNSString_(NSString *countryCode, NSString *holderMnemonic, NSString *sequenceNumber) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EacCertificateHolderReference, initWithNSString_withNSString_withNSString_, countryCode, holderMnemonic, sequenceNumber)
}

OrgSpongycastleAsn1EacCertificateHolderReference *create_OrgSpongycastleAsn1EacCertificateHolderReference_initWithNSString_withNSString_withNSString_(NSString *countryCode, NSString *holderMnemonic, NSString *sequenceNumber) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EacCertificateHolderReference, initWithNSString_withNSString_withNSString_, countryCode, holderMnemonic, sequenceNumber)
}

void OrgSpongycastleAsn1EacCertificateHolderReference_initWithByteArray_(OrgSpongycastleAsn1EacCertificateHolderReference *self, IOSByteArray *contents) {
  NSObject_init(self);
  @try {
    NSString *concat = [NSString java_stringWithBytes:contents charsetName:OrgSpongycastleAsn1EacCertificateHolderReference_ReferenceEncoding];
    self->countryCode_ = [concat java_substring:0 endIndex:2];
    self->holderMnemonic_ = [concat java_substring:2 endIndex:[concat java_length] - 5];
    self->sequenceNumber_ = [concat java_substring:[concat java_length] - 5];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSString_([e description]);
  }
}

OrgSpongycastleAsn1EacCertificateHolderReference *new_OrgSpongycastleAsn1EacCertificateHolderReference_initWithByteArray_(IOSByteArray *contents) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EacCertificateHolderReference, initWithByteArray_, contents)
}

OrgSpongycastleAsn1EacCertificateHolderReference *create_OrgSpongycastleAsn1EacCertificateHolderReference_initWithByteArray_(IOSByteArray *contents) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EacCertificateHolderReference, initWithByteArray_, contents)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1EacCertificateHolderReference)
