//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/eac/CVCertificate.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "org/spongycastle/asn1/ASN1ApplicationSpecific.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1InputStream.h"
#include "org/spongycastle/asn1/ASN1Object.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1ParsingException.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/DERApplicationSpecific.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/asn1/eac/CVCertificate.h"
#include "org/spongycastle/asn1/eac/CertificateBody.h"
#include "org/spongycastle/asn1/eac/CertificateHolderAuthorization.h"
#include "org/spongycastle/asn1/eac/CertificateHolderReference.h"
#include "org/spongycastle/asn1/eac/CertificationAuthorityReference.h"
#include "org/spongycastle/asn1/eac/EACTags.h"
#include "org/spongycastle/asn1/eac/Flags.h"
#include "org/spongycastle/asn1/eac/PackedDate.h"
#include "org/spongycastle/util/Arrays.h"

@interface OrgSpongycastleAsn1EacCVCertificate () {
 @public
  OrgSpongycastleAsn1EacCertificateBody *certificateBody_;
  IOSByteArray *signature_;
  jint valid_;
}

- (void)setPrivateDataWithOrgSpongycastleAsn1ASN1ApplicationSpecific:(OrgSpongycastleAsn1ASN1ApplicationSpecific *)appSpe;

- (void)initFromWithOrgSpongycastleAsn1ASN1InputStream:(OrgSpongycastleAsn1ASN1InputStream *)aIS OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgSpongycastleAsn1ASN1ApplicationSpecific:(OrgSpongycastleAsn1ASN1ApplicationSpecific *)appSpe;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCVCertificate, certificateBody_, OrgSpongycastleAsn1EacCertificateBody *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EacCVCertificate, signature_, IOSByteArray *)

inline jint OrgSpongycastleAsn1EacCVCertificate_get_bodyValid(void);
inline jint OrgSpongycastleAsn1EacCVCertificate_set_bodyValid(jint value);
inline jint *OrgSpongycastleAsn1EacCVCertificate_getRef_bodyValid(void);
static jint OrgSpongycastleAsn1EacCVCertificate_bodyValid = 1;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgSpongycastleAsn1EacCVCertificate, bodyValid, jint)

inline jint OrgSpongycastleAsn1EacCVCertificate_get_signValid(void);
inline jint OrgSpongycastleAsn1EacCVCertificate_set_signValid(jint value);
inline jint *OrgSpongycastleAsn1EacCVCertificate_getRef_signValid(void);
static jint OrgSpongycastleAsn1EacCVCertificate_signValid = 2;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgSpongycastleAsn1EacCVCertificate, signValid, jint)

__attribute__((unused)) static void OrgSpongycastleAsn1EacCVCertificate_setPrivateDataWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1EacCVCertificate *self, OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCVCertificate_initFromWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleAsn1EacCVCertificate *self, OrgSpongycastleAsn1ASN1InputStream *aIS);

__attribute__((unused)) static void OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1EacCVCertificate *self, OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe);

__attribute__((unused)) static OrgSpongycastleAsn1EacCVCertificate *new_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1EacCVCertificate *create_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe);

@implementation OrgSpongycastleAsn1EacCVCertificate

- (void)setPrivateDataWithOrgSpongycastleAsn1ASN1ApplicationSpecific:(OrgSpongycastleAsn1ASN1ApplicationSpecific *)appSpe {
  OrgSpongycastleAsn1EacCVCertificate_setPrivateDataWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(self, appSpe);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1InputStream:(OrgSpongycastleAsn1ASN1InputStream *)aIS {
  OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1InputStream_(self, aIS);
  return self;
}

- (void)initFromWithOrgSpongycastleAsn1ASN1InputStream:(OrgSpongycastleAsn1ASN1InputStream *)aIS {
  OrgSpongycastleAsn1EacCVCertificate_initFromWithOrgSpongycastleAsn1ASN1InputStream_(self, aIS);
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1ApplicationSpecific:(OrgSpongycastleAsn1ASN1ApplicationSpecific *)appSpe {
  OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(self, appSpe);
  return self;
}

- (instancetype)initWithOrgSpongycastleAsn1EacCertificateBody:(OrgSpongycastleAsn1EacCertificateBody *)body
                                                withByteArray:(IOSByteArray *)signature {
  OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1EacCertificateBody_withByteArray_(self, body, signature);
  return self;
}

+ (OrgSpongycastleAsn1EacCVCertificate *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1EacCVCertificate_getInstanceWithId_(obj);
}

- (IOSByteArray *)getSignature {
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(signature_);
}

- (OrgSpongycastleAsn1EacCertificateBody *)getBody {
  return certificateBody_;
}

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  [v addWithOrgSpongycastleAsn1ASN1Encodable:certificateBody_];
  @try {
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERApplicationSpecific_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, OrgSpongycastleAsn1EacEACTags_STATIC_INTERNAL_AUTHENTIFICATION_ONE_STEP, new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(signature_))];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"unable to convert signature!");
  }
  return new_OrgSpongycastleAsn1DERApplicationSpecific_initWithInt_withOrgSpongycastleAsn1ASN1EncodableVector_(OrgSpongycastleAsn1EacEACTags_CARDHOLDER_CERTIFICATE, v);
}

- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getHolderAuthorization {
  OrgSpongycastleAsn1EacCertificateHolderAuthorization *cha = [((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(certificateBody_)) getCertificateHolderAuthorization];
  return [((OrgSpongycastleAsn1EacCertificateHolderAuthorization *) nil_chk(cha)) getOid];
}

- (OrgSpongycastleAsn1EacPackedDate *)getEffectiveDate {
  return [((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(certificateBody_)) getCertificateEffectiveDate];
}

- (jint)getCertificateType {
  return [((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(self->certificateBody_)) getCertificateType];
}

- (OrgSpongycastleAsn1EacPackedDate *)getExpirationDate {
  return [((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(certificateBody_)) getCertificateExpirationDate];
}

- (jint)getRole {
  OrgSpongycastleAsn1EacCertificateHolderAuthorization *cha = [((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(certificateBody_)) getCertificateHolderAuthorization];
  return [((OrgSpongycastleAsn1EacCertificateHolderAuthorization *) nil_chk(cha)) getAccessRights];
}

- (OrgSpongycastleAsn1EacCertificationAuthorityReference *)getAuthorityReference {
  return [((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(certificateBody_)) getCertificationAuthorityReference];
}

- (OrgSpongycastleAsn1EacCertificateHolderReference *)getHolderReference {
  return [((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(certificateBody_)) getCertificateHolderReference];
}

- (jint)getHolderAuthorizationRole {
  jint rights = [((OrgSpongycastleAsn1EacCertificateHolderAuthorization *) nil_chk([((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(certificateBody_)) getCertificateHolderAuthorization])) getAccessRights];
  return rights & (jint) 0xC0;
}

- (OrgSpongycastleAsn1EacFlags *)getHolderAuthorizationRights {
  return new_OrgSpongycastleAsn1EacFlags_initWithInt_([((OrgSpongycastleAsn1EacCertificateHolderAuthorization *) nil_chk([((OrgSpongycastleAsn1EacCertificateBody *) nil_chk(certificateBody_)) getCertificateHolderAuthorization])) getAccessRights] & (jint) 0x1F);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x2, 0, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 3, 2, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacCVCertificate;", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacCertificateBody;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacPackedDate;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacPackedDate;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacCertificationAuthorityReference;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacCertificateHolderReference;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1EacFlags;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setPrivateDataWithOrgSpongycastleAsn1ASN1ApplicationSpecific:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1ASN1InputStream:);
  methods[2].selector = @selector(initFromWithOrgSpongycastleAsn1ASN1InputStream:);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1ASN1ApplicationSpecific:);
  methods[4].selector = @selector(initWithOrgSpongycastleAsn1EacCertificateBody:withByteArray:);
  methods[5].selector = @selector(getInstanceWithId:);
  methods[6].selector = @selector(getSignature);
  methods[7].selector = @selector(getBody);
  methods[8].selector = @selector(toASN1Primitive);
  methods[9].selector = @selector(getHolderAuthorization);
  methods[10].selector = @selector(getEffectiveDate);
  methods[11].selector = @selector(getCertificateType);
  methods[12].selector = @selector(getExpirationDate);
  methods[13].selector = @selector(getRole);
  methods[14].selector = @selector(getAuthorityReference);
  methods[15].selector = @selector(getHolderReference);
  methods[16].selector = @selector(getHolderAuthorizationRole);
  methods[17].selector = @selector(getHolderAuthorizationRights);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certificateBody_", "LOrgSpongycastleAsn1EacCertificateBody;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signature_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "valid_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bodyValid", "I", .constantValue.asLong = 0, 0xa, -1, 8, -1, -1 },
    { "signValid", "I", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "setPrivateData", "LOrgSpongycastleAsn1ASN1ApplicationSpecific;", "LJavaIoIOException;", "LOrgSpongycastleAsn1ASN1InputStream;", "initFrom", "LOrgSpongycastleAsn1EacCertificateBody;[B", "getInstance", "LNSObject;", &OrgSpongycastleAsn1EacCVCertificate_bodyValid, &OrgSpongycastleAsn1EacCVCertificate_signValid };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1EacCVCertificate = { "CVCertificate", "org.spongycastle.asn1.eac", ptrTable, methods, fields, 7, 0x1, 18, 5, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1EacCVCertificate;
}

@end

void OrgSpongycastleAsn1EacCVCertificate_setPrivateDataWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1EacCVCertificate *self, OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe) {
  self->valid_ = 0;
  if ([((OrgSpongycastleAsn1ASN1ApplicationSpecific *) nil_chk(appSpe)) getApplicationTag] == OrgSpongycastleAsn1EacEACTags_CARDHOLDER_CERTIFICATE) {
    OrgSpongycastleAsn1ASN1InputStream *content = new_OrgSpongycastleAsn1ASN1InputStream_initWithByteArray_([appSpe getContents]);
    OrgSpongycastleAsn1ASN1Primitive *tmpObj;
    while ((tmpObj = [content readObject]) != nil) {
      OrgSpongycastleAsn1DERApplicationSpecific *aSpe;
      if ([tmpObj isKindOfClass:[OrgSpongycastleAsn1DERApplicationSpecific class]]) {
        aSpe = (OrgSpongycastleAsn1DERApplicationSpecific *) tmpObj;
        switch ([((OrgSpongycastleAsn1DERApplicationSpecific *) nil_chk(aSpe)) getApplicationTag]) {
          case OrgSpongycastleAsn1EacEACTags_CERTIFICATE_CONTENT_TEMPLATE:
          self->certificateBody_ = OrgSpongycastleAsn1EacCertificateBody_getInstanceWithId_(aSpe);
          self->valid_ |= OrgSpongycastleAsn1EacCVCertificate_bodyValid;
          break;
          case OrgSpongycastleAsn1EacEACTags_STATIC_INTERNAL_AUTHENTIFICATION_ONE_STEP:
          self->signature_ = [aSpe getContents];
          self->valid_ |= OrgSpongycastleAsn1EacCVCertificate_signValid;
          break;
          default:
          @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"Invalid tag, not an Iso7816CertificateStructure :", [aSpe getApplicationTag]));
        }
      }
      else {
        @throw new_JavaIoIOException_initWithNSString_(@"Invalid Object, not an Iso7816CertificateStructure");
      }
    }
    [content close];
  }
  else {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"not a CARDHOLDER_CERTIFICATE :", [appSpe getApplicationTag]));
  }
  if (self->valid_ != (OrgSpongycastleAsn1EacCVCertificate_signValid | OrgSpongycastleAsn1EacCVCertificate_bodyValid)) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"invalid CARDHOLDER_CERTIFICATE :", [appSpe getApplicationTag]));
  }
}

void OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleAsn1EacCVCertificate *self, OrgSpongycastleAsn1ASN1InputStream *aIS) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  OrgSpongycastleAsn1EacCVCertificate_initFromWithOrgSpongycastleAsn1ASN1InputStream_(self, aIS);
}

OrgSpongycastleAsn1EacCVCertificate *new_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleAsn1ASN1InputStream *aIS) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EacCVCertificate, initWithOrgSpongycastleAsn1ASN1InputStream_, aIS)
}

OrgSpongycastleAsn1EacCVCertificate *create_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleAsn1ASN1InputStream *aIS) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EacCVCertificate, initWithOrgSpongycastleAsn1ASN1InputStream_, aIS)
}

void OrgSpongycastleAsn1EacCVCertificate_initFromWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleAsn1EacCVCertificate *self, OrgSpongycastleAsn1ASN1InputStream *aIS) {
  OrgSpongycastleAsn1ASN1Primitive *obj;
  while ((obj = [((OrgSpongycastleAsn1ASN1InputStream *) nil_chk(aIS)) readObject]) != nil) {
    if ([obj isKindOfClass:[OrgSpongycastleAsn1DERApplicationSpecific class]]) {
      OrgSpongycastleAsn1EacCVCertificate_setPrivateDataWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(self, (OrgSpongycastleAsn1DERApplicationSpecific *) obj);
    }
    else {
      @throw new_JavaIoIOException_initWithNSString_(@"Invalid Input Stream for creating an Iso7816CertificateStructure");
    }
  }
}

void OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1EacCVCertificate *self, OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  OrgSpongycastleAsn1EacCVCertificate_setPrivateDataWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(self, appSpe);
}

OrgSpongycastleAsn1EacCVCertificate *new_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EacCVCertificate, initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_, appSpe)
}

OrgSpongycastleAsn1EacCVCertificate *create_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific *appSpe) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EacCVCertificate, initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_, appSpe)
}

void OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1EacCertificateBody_withByteArray_(OrgSpongycastleAsn1EacCVCertificate *self, OrgSpongycastleAsn1EacCertificateBody *body, IOSByteArray *signature) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->certificateBody_ = body;
  self->signature_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(signature);
  self->valid_ |= OrgSpongycastleAsn1EacCVCertificate_bodyValid;
  self->valid_ |= OrgSpongycastleAsn1EacCVCertificate_signValid;
}

OrgSpongycastleAsn1EacCVCertificate *new_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1EacCertificateBody_withByteArray_(OrgSpongycastleAsn1EacCertificateBody *body, IOSByteArray *signature) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EacCVCertificate, initWithOrgSpongycastleAsn1EacCertificateBody_withByteArray_, body, signature)
}

OrgSpongycastleAsn1EacCVCertificate *create_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1EacCertificateBody_withByteArray_(OrgSpongycastleAsn1EacCertificateBody *body, IOSByteArray *signature) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EacCVCertificate, initWithOrgSpongycastleAsn1EacCertificateBody_withByteArray_, body, signature)
}

OrgSpongycastleAsn1EacCVCertificate *OrgSpongycastleAsn1EacCVCertificate_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1EacCVCertificate_initialize();
  if ([obj isKindOfClass:[OrgSpongycastleAsn1EacCVCertificate class]]) {
    return (OrgSpongycastleAsn1EacCVCertificate *) obj;
  }
  else if (obj != nil) {
    @try {
      return new_OrgSpongycastleAsn1EacCVCertificate_initWithOrgSpongycastleAsn1ASN1ApplicationSpecific_(OrgSpongycastleAsn1ASN1ApplicationSpecific_getInstanceWithId_(obj));
    }
    @catch (JavaIoIOException *e) {
      @throw new_OrgSpongycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"unable to parse data: ", [e getMessage]), e);
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1EacCVCertificate)
