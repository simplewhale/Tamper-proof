//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/core/org/spongycastle/asn1/mozilla/SignedPublicKeyAndChallenge.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge")
#ifdef RESTRICT_OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge
#define INCLUDE_ALL_OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge

#if !defined (OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge_) && (INCLUDE_ALL_OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge || defined(INCLUDE_OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge))
#define OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1DERBitString;
@class OrgSpongycastleAsn1MozillaPublicKeyAndChallenge;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

@interface OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

+ (OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1MozillaPublicKeyAndChallenge *)getPublicKeyAndChallenge;

- (OrgSpongycastleAsn1DERBitString *)getSignature;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge)

FOUNDATION_EXPORT OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge *OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1MozillaSignedPublicKeyAndChallenge")
