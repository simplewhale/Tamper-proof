//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/commons-codec/org/apache/commons/codec/net/QuotedPrintableCodec.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/Character.h"
#include "java/util/BitSet.h"
#include "org/apache/commons/codec/CharEncoding.h"
#include "org/apache/commons/codec/DecoderException.h"
#include "org/apache/commons/codec/EncoderException.h"
#include "org/apache/commons/codec/binary/StringUtils.h"
#include "org/apache/commons/codec/net/QuotedPrintableCodec.h"
#include "org/apache/commons/codec/net/Utils.h"

@interface OrgApacheCommonsCodecNetQuotedPrintableCodec () {
 @public
  NSString *charset_;
}

+ (void)encodeQuotedPrintableWithInt:(jint)b
     withJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)buffer;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCodecNetQuotedPrintableCodec, charset_, NSString *)

inline JavaUtilBitSet *OrgApacheCommonsCodecNetQuotedPrintableCodec_get_PRINTABLE_CHARS(void);
static JavaUtilBitSet *OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsCodecNetQuotedPrintableCodec, PRINTABLE_CHARS, JavaUtilBitSet *)

inline jbyte OrgApacheCommonsCodecNetQuotedPrintableCodec_get_ESCAPE_CHAR(void);
#define OrgApacheCommonsCodecNetQuotedPrintableCodec_ESCAPE_CHAR 61
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecNetQuotedPrintableCodec, ESCAPE_CHAR, jbyte)

inline jbyte OrgApacheCommonsCodecNetQuotedPrintableCodec_get_TAB(void);
#define OrgApacheCommonsCodecNetQuotedPrintableCodec_TAB 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecNetQuotedPrintableCodec, TAB, jbyte)

inline jbyte OrgApacheCommonsCodecNetQuotedPrintableCodec_get_SPACE(void);
#define OrgApacheCommonsCodecNetQuotedPrintableCodec_SPACE 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecNetQuotedPrintableCodec, SPACE, jbyte)

__attribute__((unused)) static void OrgApacheCommonsCodecNetQuotedPrintableCodec_encodeQuotedPrintableWithInt_withJavaIoByteArrayOutputStream_(jint b, JavaIoByteArrayOutputStream *buffer);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsCodecNetQuotedPrintableCodec)

@implementation OrgApacheCommonsCodecNetQuotedPrintableCodec

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsCodecNetQuotedPrintableCodec_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)charset {
  OrgApacheCommonsCodecNetQuotedPrintableCodec_initWithNSString_(self, charset);
  return self;
}

+ (void)encodeQuotedPrintableWithInt:(jint)b
     withJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)buffer {
  OrgApacheCommonsCodecNetQuotedPrintableCodec_encodeQuotedPrintableWithInt_withJavaIoByteArrayOutputStream_(b, buffer);
}

+ (IOSByteArray *)encodeQuotedPrintableWithJavaUtilBitSet:(JavaUtilBitSet *)printable
                                            withByteArray:(IOSByteArray *)bytes {
  return OrgApacheCommonsCodecNetQuotedPrintableCodec_encodeQuotedPrintableWithJavaUtilBitSet_withByteArray_(printable, bytes);
}

+ (IOSByteArray *)decodeQuotedPrintableWithByteArray:(IOSByteArray *)bytes {
  return OrgApacheCommonsCodecNetQuotedPrintableCodec_decodeQuotedPrintableWithByteArray_(bytes);
}

- (IOSByteArray *)encodeWithByteArray:(IOSByteArray *)bytes {
  return OrgApacheCommonsCodecNetQuotedPrintableCodec_encodeQuotedPrintableWithJavaUtilBitSet_withByteArray_(OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS, bytes);
}

- (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)bytes {
  return OrgApacheCommonsCodecNetQuotedPrintableCodec_decodeQuotedPrintableWithByteArray_(bytes);
}

- (NSString *)encodeWithNSString:(NSString *)pString {
  if (pString == nil) {
    return nil;
  }
  @try {
    return [self encodeWithNSString:pString withNSString:[self getDefaultCharset]];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_OrgApacheCommonsCodecEncoderException_initWithNSString_withJavaLangThrowable_([e getMessage], e);
  }
}

- (NSString *)decodeWithNSString:(NSString *)pString
                    withNSString:(NSString *)charset {
  if (pString == nil) {
    return nil;
  }
  return [NSString java_stringWithBytes:[self decodeWithByteArray:OrgApacheCommonsCodecBinaryStringUtils_getBytesUsAsciiWithNSString_(pString)] charsetName:charset];
}

- (NSString *)decodeWithNSString:(NSString *)pString {
  if (pString == nil) {
    return nil;
  }
  @try {
    return [self decodeWithNSString:pString withNSString:[self getDefaultCharset]];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_OrgApacheCommonsCodecDecoderException_initWithNSString_withJavaLangThrowable_([e getMessage], e);
  }
}

- (id)encodeWithId:(id)pObject {
  if (pObject == nil) {
    return nil;
  }
  else if ([pObject isKindOfClass:[IOSByteArray class]]) {
    return [self encodeWithByteArray:(IOSByteArray *) cast_chk(pObject, [IOSByteArray class])];
  }
  else if ([pObject isKindOfClass:[NSString class]]) {
    return [self encodeWithNSString:(NSString *) pObject];
  }
  else {
    @throw new_OrgApacheCommonsCodecEncoderException_initWithNSString_(JreStrcat("$$$", @"Objects of type ", [[pObject java_getClass] getName], @" cannot be quoted-printable encoded"));
  }
}

- (id)decodeWithId:(id)pObject {
  if (pObject == nil) {
    return nil;
  }
  else if ([pObject isKindOfClass:[IOSByteArray class]]) {
    return [self decodeWithByteArray:(IOSByteArray *) cast_chk(pObject, [IOSByteArray class])];
  }
  else if ([pObject isKindOfClass:[NSString class]]) {
    return [self decodeWithNSString:(NSString *) pObject];
  }
  else {
    @throw new_OrgApacheCommonsCodecDecoderException_initWithNSString_(JreStrcat("$$$", @"Objects of type ", [[pObject java_getClass] getName], @" cannot be quoted-printable decoded"));
  }
}

- (NSString *)getDefaultCharset {
  return self->charset_;
}

- (NSString *)encodeWithNSString:(NSString *)pString
                    withNSString:(NSString *)charset {
  if (pString == nil) {
    return nil;
  }
  return OrgApacheCommonsCodecBinaryStringUtils_newStringUsAsciiWithByteArray_([self encodeWithByteArray:[pString java_getBytesWithCharsetName:charset]]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1a, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x19, 1, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x19, 4, 5, 6, -1, -1, -1 },
    { NULL, "[B", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 8, 5, 6, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 0, 9, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, 10, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, 0, 6, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 7, 12, 9, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 8, 12, 6, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 10, 13, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(encodeQuotedPrintableWithInt:withJavaIoByteArrayOutputStream:);
  methods[3].selector = @selector(encodeQuotedPrintableWithJavaUtilBitSet:withByteArray:);
  methods[4].selector = @selector(decodeQuotedPrintableWithByteArray:);
  methods[5].selector = @selector(encodeWithByteArray:);
  methods[6].selector = @selector(decodeWithByteArray:);
  methods[7].selector = @selector(encodeWithNSString:);
  methods[8].selector = @selector(decodeWithNSString:withNSString:);
  methods[9].selector = @selector(decodeWithNSString:);
  methods[10].selector = @selector(encodeWithId:);
  methods[11].selector = @selector(decodeWithId:);
  methods[12].selector = @selector(getDefaultCharset);
  methods[13].selector = @selector(encodeWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "charset_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "PRINTABLE_CHARS", "LJavaUtilBitSet;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "ESCAPE_CHAR", "B", .constantValue.asChar = OrgApacheCommonsCodecNetQuotedPrintableCodec_ESCAPE_CHAR, 0x1a, -1, -1, -1, -1 },
    { "TAB", "B", .constantValue.asChar = OrgApacheCommonsCodecNetQuotedPrintableCodec_TAB, 0x1a, -1, -1, -1, -1 },
    { "SPACE", "B", .constantValue.asChar = OrgApacheCommonsCodecNetQuotedPrintableCodec_SPACE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "encodeQuotedPrintable", "ILJavaIoByteArrayOutputStream;", "LJavaUtilBitSet;[B", "decodeQuotedPrintable", "[B", "LOrgApacheCommonsCodecDecoderException;", "encode", "decode", "LOrgApacheCommonsCodecEncoderException;", "LNSString;LNSString;", "LOrgApacheCommonsCodecDecoderException;LJavaIoUnsupportedEncodingException;", "LNSObject;", "LJavaIoUnsupportedEncodingException;", &OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS };
  static const J2ObjcClassInfo _OrgApacheCommonsCodecNetQuotedPrintableCodec = { "QuotedPrintableCodec", "org.apache.commons.codec.net", ptrTable, methods, fields, 7, 0x1, 14, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsCodecNetQuotedPrintableCodec;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsCodecNetQuotedPrintableCodec class]) {
    OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS = new_JavaUtilBitSet_initWithInt_(256);
    {
      for (jint i = 33; i <= 60; i++) {
        [OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS setWithInt:i];
      }
      for (jint i = 62; i <= 126; i++) {
        [OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS setWithInt:i];
      }
      [OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS setWithInt:OrgApacheCommonsCodecNetQuotedPrintableCodec_TAB];
      [OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS setWithInt:OrgApacheCommonsCodecNetQuotedPrintableCodec_SPACE];
    }
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsCodecNetQuotedPrintableCodec)
  }
}

@end

void OrgApacheCommonsCodecNetQuotedPrintableCodec_init(OrgApacheCommonsCodecNetQuotedPrintableCodec *self) {
  OrgApacheCommonsCodecNetQuotedPrintableCodec_initWithNSString_(self, OrgApacheCommonsCodecCharEncoding_UTF_8);
}

OrgApacheCommonsCodecNetQuotedPrintableCodec *new_OrgApacheCommonsCodecNetQuotedPrintableCodec_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsCodecNetQuotedPrintableCodec, init)
}

OrgApacheCommonsCodecNetQuotedPrintableCodec *create_OrgApacheCommonsCodecNetQuotedPrintableCodec_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsCodecNetQuotedPrintableCodec, init)
}

void OrgApacheCommonsCodecNetQuotedPrintableCodec_initWithNSString_(OrgApacheCommonsCodecNetQuotedPrintableCodec *self, NSString *charset) {
  NSObject_init(self);
  self->charset_ = charset;
}

OrgApacheCommonsCodecNetQuotedPrintableCodec *new_OrgApacheCommonsCodecNetQuotedPrintableCodec_initWithNSString_(NSString *charset) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsCodecNetQuotedPrintableCodec, initWithNSString_, charset)
}

OrgApacheCommonsCodecNetQuotedPrintableCodec *create_OrgApacheCommonsCodecNetQuotedPrintableCodec_initWithNSString_(NSString *charset) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsCodecNetQuotedPrintableCodec, initWithNSString_, charset)
}

void OrgApacheCommonsCodecNetQuotedPrintableCodec_encodeQuotedPrintableWithInt_withJavaIoByteArrayOutputStream_(jint b, JavaIoByteArrayOutputStream *buffer) {
  OrgApacheCommonsCodecNetQuotedPrintableCodec_initialize();
  [((JavaIoByteArrayOutputStream *) nil_chk(buffer)) writeWithInt:OrgApacheCommonsCodecNetQuotedPrintableCodec_ESCAPE_CHAR];
  jchar hex1 = JavaLangCharacter_toUpperCaseWithChar_(JavaLangCharacter_forDigitWithInt_withInt_((JreRShift32(b, 4)) & (jint) 0xF, 16));
  jchar hex2 = JavaLangCharacter_toUpperCaseWithChar_(JavaLangCharacter_forDigitWithInt_withInt_(b & (jint) 0xF, 16));
  [buffer writeWithInt:hex1];
  [buffer writeWithInt:hex2];
}

IOSByteArray *OrgApacheCommonsCodecNetQuotedPrintableCodec_encodeQuotedPrintableWithJavaUtilBitSet_withByteArray_(JavaUtilBitSet *printable, IOSByteArray *bytes) {
  OrgApacheCommonsCodecNetQuotedPrintableCodec_initialize();
  if (bytes == nil) {
    return nil;
  }
  if (printable == nil) {
    printable = OrgApacheCommonsCodecNetQuotedPrintableCodec_PRINTABLE_CHARS;
  }
  JavaIoByteArrayOutputStream *buffer = new_JavaIoByteArrayOutputStream_init();
  {
    IOSByteArray *a__ = bytes;
    jbyte const *b__ = a__->buffer_;
    jbyte const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jbyte c = *b__++;
      jint b = c;
      if (b < 0) {
        b = 256 + b;
      }
      if ([((JavaUtilBitSet *) nil_chk(printable)) getWithInt:b]) {
        [buffer writeWithInt:b];
      }
      else {
        OrgApacheCommonsCodecNetQuotedPrintableCodec_encodeQuotedPrintableWithInt_withJavaIoByteArrayOutputStream_(b, buffer);
      }
    }
  }
  return [buffer toByteArray];
}

IOSByteArray *OrgApacheCommonsCodecNetQuotedPrintableCodec_decodeQuotedPrintableWithByteArray_(IOSByteArray *bytes) {
  OrgApacheCommonsCodecNetQuotedPrintableCodec_initialize();
  if (bytes == nil) {
    return nil;
  }
  JavaIoByteArrayOutputStream *buffer = new_JavaIoByteArrayOutputStream_init();
  for (jint i = 0; i < bytes->size_; i++) {
    jint b = IOSByteArray_Get(bytes, i);
    if (b == OrgApacheCommonsCodecNetQuotedPrintableCodec_ESCAPE_CHAR) {
      @try {
        jint u = OrgApacheCommonsCodecNetUtils_digit16WithByte_(IOSByteArray_Get(bytes, ++i));
        jint l = OrgApacheCommonsCodecNetUtils_digit16WithByte_(IOSByteArray_Get(bytes, ++i));
        [buffer writeWithInt:(jchar) ((JreLShift32(u, 4)) + l)];
      }
      @catch (JavaLangArrayIndexOutOfBoundsException *e) {
        @throw new_OrgApacheCommonsCodecDecoderException_initWithNSString_withJavaLangThrowable_(@"Invalid quoted-printable encoding", e);
      }
    }
    else {
      [buffer writeWithInt:b];
    }
  }
  return [buffer toByteArray];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCodecNetQuotedPrintableCodec)
