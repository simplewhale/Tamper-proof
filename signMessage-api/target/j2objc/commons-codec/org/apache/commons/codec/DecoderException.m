//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/commons-codec/org/apache/commons/codec/DecoderException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "org/apache/commons/codec/DecoderException.h"

inline jlong OrgApacheCommonsCodecDecoderException_get_serialVersionUID(void);
#define OrgApacheCommonsCodecDecoderException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecDecoderException, serialVersionUID, jlong)

@implementation OrgApacheCommonsCodecDecoderException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsCodecDecoderException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message {
  OrgApacheCommonsCodecDecoderException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgApacheCommonsCodecDecoderException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgApacheCommonsCodecDecoderException_initWithJavaLangThrowable_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[3].selector = @selector(initWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsCodecDecoderException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangThrowable;", "LJavaLangThrowable;" };
  static const J2ObjcClassInfo _OrgApacheCommonsCodecDecoderException = { "DecoderException", "org.apache.commons.codec", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsCodecDecoderException;
}

@end

void OrgApacheCommonsCodecDecoderException_init(OrgApacheCommonsCodecDecoderException *self) {
  JavaLangException_init(self);
}

OrgApacheCommonsCodecDecoderException *new_OrgApacheCommonsCodecDecoderException_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsCodecDecoderException, init)
}

OrgApacheCommonsCodecDecoderException *create_OrgApacheCommonsCodecDecoderException_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsCodecDecoderException, init)
}

void OrgApacheCommonsCodecDecoderException_initWithNSString_(OrgApacheCommonsCodecDecoderException *self, NSString *message) {
  JavaLangException_initWithNSString_(self, message);
}

OrgApacheCommonsCodecDecoderException *new_OrgApacheCommonsCodecDecoderException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsCodecDecoderException, initWithNSString_, message)
}

OrgApacheCommonsCodecDecoderException *create_OrgApacheCommonsCodecDecoderException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsCodecDecoderException, initWithNSString_, message)
}

void OrgApacheCommonsCodecDecoderException_initWithNSString_withJavaLangThrowable_(OrgApacheCommonsCodecDecoderException *self, NSString *message, JavaLangThrowable *cause) {
  JavaLangException_initWithNSString_withJavaLangThrowable_(self, message, cause);
}

OrgApacheCommonsCodecDecoderException *new_OrgApacheCommonsCodecDecoderException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsCodecDecoderException, initWithNSString_withJavaLangThrowable_, message, cause)
}

OrgApacheCommonsCodecDecoderException *create_OrgApacheCommonsCodecDecoderException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsCodecDecoderException, initWithNSString_withJavaLangThrowable_, message, cause)
}

void OrgApacheCommonsCodecDecoderException_initWithJavaLangThrowable_(OrgApacheCommonsCodecDecoderException *self, JavaLangThrowable *cause) {
  JavaLangException_initWithJavaLangThrowable_(self, cause);
}

OrgApacheCommonsCodecDecoderException *new_OrgApacheCommonsCodecDecoderException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsCodecDecoderException, initWithJavaLangThrowable_, cause)
}

OrgApacheCommonsCodecDecoderException *create_OrgApacheCommonsCodecDecoderException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsCodecDecoderException, initWithJavaLangThrowable_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCodecDecoderException)
