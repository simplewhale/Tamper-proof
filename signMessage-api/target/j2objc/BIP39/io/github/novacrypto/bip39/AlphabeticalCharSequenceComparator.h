//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/BIP39/io/github/novacrypto/bip39/AlphabeticalCharSequenceComparator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoGithubNovacryptoBip39AlphabeticalCharSequenceComparator")
#ifdef RESTRICT_IoGithubNovacryptoBip39AlphabeticalCharSequenceComparator
#define INCLUDE_ALL_IoGithubNovacryptoBip39AlphabeticalCharSequenceComparator 0
#else
#define INCLUDE_ALL_IoGithubNovacryptoBip39AlphabeticalCharSequenceComparator 1
#endif
#undef RESTRICT_IoGithubNovacryptoBip39AlphabeticalCharSequenceComparator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoGithubNovacryptoBip39CharSequenceComparators_) && (INCLUDE_ALL_IoGithubNovacryptoBip39AlphabeticalCharSequenceComparator || defined(INCLUDE_IoGithubNovacryptoBip39CharSequenceComparators))
#define IoGithubNovacryptoBip39CharSequenceComparators_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class IOSObjectArray;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

typedef NS_ENUM(NSUInteger, IoGithubNovacryptoBip39CharSequenceComparators_Enum) {
  IoGithubNovacryptoBip39CharSequenceComparators_Enum_ALPHABETICAL = 0,
};

@interface IoGithubNovacryptoBip39CharSequenceComparators : JavaLangEnum < JavaUtilComparator >

#pragma mark Public

+ (IoGithubNovacryptoBip39CharSequenceComparators *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(IoGithubNovacryptoBip39CharSequenceComparators)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT IoGithubNovacryptoBip39CharSequenceComparators *IoGithubNovacryptoBip39CharSequenceComparators_values_[];

inline IoGithubNovacryptoBip39CharSequenceComparators *IoGithubNovacryptoBip39CharSequenceComparators_get_ALPHABETICAL(void);
J2OBJC_ENUM_CONSTANT(IoGithubNovacryptoBip39CharSequenceComparators, ALPHABETICAL)

FOUNDATION_EXPORT IOSObjectArray *IoGithubNovacryptoBip39CharSequenceComparators_values(void);

FOUNDATION_EXPORT IoGithubNovacryptoBip39CharSequenceComparators *IoGithubNovacryptoBip39CharSequenceComparators_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT IoGithubNovacryptoBip39CharSequenceComparators *IoGithubNovacryptoBip39CharSequenceComparators_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(IoGithubNovacryptoBip39CharSequenceComparators)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoGithubNovacryptoBip39AlphabeticalCharSequenceComparator")
