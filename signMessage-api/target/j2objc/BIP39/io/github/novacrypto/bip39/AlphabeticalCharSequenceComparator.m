//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/BIP39/io/github/novacrypto/bip39/AlphabeticalCharSequenceComparator.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "io/github/novacrypto/bip39/AlphabeticalCharSequenceComparator.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/Comparator.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

#pragma clang diagnostic ignored "-Wprotocol"

__attribute__((unused)) static void IoGithubNovacryptoBip39CharSequenceComparators_initWithNSString_withInt_(IoGithubNovacryptoBip39CharSequenceComparators *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static IoGithubNovacryptoBip39CharSequenceComparators *new_IoGithubNovacryptoBip39CharSequenceComparators_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface IoGithubNovacryptoBip39CharSequenceComparators_1 : IoGithubNovacryptoBip39CharSequenceComparators

- (jint)compareWithId:(id<JavaLangCharSequence>)o1
               withId:(id<JavaLangCharSequence>)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(IoGithubNovacryptoBip39CharSequenceComparators_1)

__attribute__((unused)) static void IoGithubNovacryptoBip39CharSequenceComparators_1_initWithNSString_withInt_(IoGithubNovacryptoBip39CharSequenceComparators_1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static IoGithubNovacryptoBip39CharSequenceComparators_1 *new_IoGithubNovacryptoBip39CharSequenceComparators_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(IoGithubNovacryptoBip39CharSequenceComparators)

IoGithubNovacryptoBip39CharSequenceComparators *IoGithubNovacryptoBip39CharSequenceComparators_values_[1];

@implementation IoGithubNovacryptoBip39CharSequenceComparators

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (IOSObjectArray *)values {
  return IoGithubNovacryptoBip39CharSequenceComparators_values();
}

+ (IoGithubNovacryptoBip39CharSequenceComparators *)valueOfWithNSString:(NSString *)name {
  return IoGithubNovacryptoBip39CharSequenceComparators_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LIoGithubNovacryptoBip39CharSequenceComparators;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoGithubNovacryptoBip39CharSequenceComparators;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ALPHABETICAL", "LIoGithubNovacryptoBip39CharSequenceComparators;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(IoGithubNovacryptoBip39CharSequenceComparators, ALPHABETICAL), "Ljava/lang/Enum<Lio/github/novacrypto/bip39/CharSequenceComparators;>;Ljava/util/Comparator<Ljava/lang/CharSequence;>;" };
  static const J2ObjcClassInfo _IoGithubNovacryptoBip39CharSequenceComparators = { "CharSequenceComparators", "io.github.novacrypto.bip39", ptrTable, methods, fields, 7, 0x4400, 2, 1, -1, -1, -1, 3, -1 };
  return &_IoGithubNovacryptoBip39CharSequenceComparators;
}

+ (void)initialize {
  if (self == [IoGithubNovacryptoBip39CharSequenceComparators class]) {
    JreEnum(IoGithubNovacryptoBip39CharSequenceComparators, ALPHABETICAL) = new_IoGithubNovacryptoBip39CharSequenceComparators_1_initWithNSString_withInt_(JreEnumConstantName(IoGithubNovacryptoBip39CharSequenceComparators_class_(), 0), 0);
    J2OBJC_SET_INITIALIZED(IoGithubNovacryptoBip39CharSequenceComparators)
  }
}

@end

void IoGithubNovacryptoBip39CharSequenceComparators_initWithNSString_withInt_(IoGithubNovacryptoBip39CharSequenceComparators *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IoGithubNovacryptoBip39CharSequenceComparators *new_IoGithubNovacryptoBip39CharSequenceComparators_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(IoGithubNovacryptoBip39CharSequenceComparators, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *IoGithubNovacryptoBip39CharSequenceComparators_values() {
  IoGithubNovacryptoBip39CharSequenceComparators_initialize();
  return [IOSObjectArray arrayWithObjects:IoGithubNovacryptoBip39CharSequenceComparators_values_ count:1 type:IoGithubNovacryptoBip39CharSequenceComparators_class_()];
}

IoGithubNovacryptoBip39CharSequenceComparators *IoGithubNovacryptoBip39CharSequenceComparators_valueOfWithNSString_(NSString *name) {
  IoGithubNovacryptoBip39CharSequenceComparators_initialize();
  for (int i = 0; i < 1; i++) {
    IoGithubNovacryptoBip39CharSequenceComparators *e = IoGithubNovacryptoBip39CharSequenceComparators_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

IoGithubNovacryptoBip39CharSequenceComparators *IoGithubNovacryptoBip39CharSequenceComparators_fromOrdinal(NSUInteger ordinal) {
  IoGithubNovacryptoBip39CharSequenceComparators_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return IoGithubNovacryptoBip39CharSequenceComparators_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoGithubNovacryptoBip39CharSequenceComparators)

@implementation IoGithubNovacryptoBip39CharSequenceComparators_1

- (jint)compareWithId:(id<JavaLangCharSequence>)o1
               withId:(id<JavaLangCharSequence>)o2 {
  jint length1 = [((id<JavaLangCharSequence>) nil_chk(o1)) java_length];
  jint length2 = [((id<JavaLangCharSequence>) nil_chk(o2)) java_length];
  jint length = JavaLangMath_minWithInt_withInt_(length1, length2);
  for (jint i = 0; i < length; i++) {
    jint compare = JavaLangCharacter_compareWithChar_withChar_([o1 charAtWithInt:i], [o2 charAtWithInt:i]);
    if (compare != 0) return compare;
  }
  return JavaLangInteger_compareWithInt_withInt_(length1, length2);
}

- (void)dealloc {
  JreCheckFinalize(self, [IoGithubNovacryptoBip39CharSequenceComparators_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LJavaLangCharSequence;LJavaLangCharSequence;", "LIoGithubNovacryptoBip39CharSequenceComparators;" };
  static const J2ObjcClassInfo _IoGithubNovacryptoBip39CharSequenceComparators_1 = { "", "io.github.novacrypto.bip39", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 2, -1, -1, -1, -1 };
  return &_IoGithubNovacryptoBip39CharSequenceComparators_1;
}

@end

void IoGithubNovacryptoBip39CharSequenceComparators_1_initWithNSString_withInt_(IoGithubNovacryptoBip39CharSequenceComparators_1 *self, NSString *__name, jint __ordinal) {
  IoGithubNovacryptoBip39CharSequenceComparators_initWithNSString_withInt_(self, __name, __ordinal);
}

IoGithubNovacryptoBip39CharSequenceComparators_1 *new_IoGithubNovacryptoBip39CharSequenceComparators_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(IoGithubNovacryptoBip39CharSequenceComparators_1, initWithNSString_withInt_, __name, __ordinal)
}
