//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/BIP39/io/github/novacrypto/bip39/WordListMapNormalization.java
//

#include "J2ObjC_source.h"
#include "io/github/novacrypto/bip39/WordList.h"
#include "io/github/novacrypto/bip39/WordListMapNormalization.h"
#include "java/lang/CharSequence.h"
#include "java/text/Normalizer.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface IoGithubNovacryptoBip39WordListMapNormalization () {
 @public
  id<JavaUtilMap> normalizedMap_;
}

@end

J2OBJC_FIELD_SETTER(IoGithubNovacryptoBip39WordListMapNormalization, normalizedMap_, id<JavaUtilMap>)

@implementation IoGithubNovacryptoBip39WordListMapNormalization

- (instancetype)initWithIoGithubNovacryptoBip39WordList:(id<IoGithubNovacryptoBip39WordList>)wordList {
  IoGithubNovacryptoBip39WordListMapNormalization_initWithIoGithubNovacryptoBip39WordList_(self, wordList);
  return self;
}

- (NSString *)normalizeWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence {
  NSString *normalized = [((id<JavaUtilMap>) nil_chk(normalizedMap_)) getWithId:charSequence];
  if (normalized != nil) return normalized;
  return JavaTextNormalizer_normalizeWithJavaLangCharSequence_withJavaTextNormalizer_Form_(charSequence, JreLoadEnum(JavaTextNormalizer_Form, NFKD));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIoGithubNovacryptoBip39WordList:);
  methods[1].selector = @selector(normalizeWithJavaLangCharSequence:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "normalizedMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LIoGithubNovacryptoBip39WordList;", "normalize", "LJavaLangCharSequence;", "Ljava/util/Map<Ljava/lang/CharSequence;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _IoGithubNovacryptoBip39WordListMapNormalization = { "WordListMapNormalization", "io.github.novacrypto.bip39", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_IoGithubNovacryptoBip39WordListMapNormalization;
}

@end

void IoGithubNovacryptoBip39WordListMapNormalization_initWithIoGithubNovacryptoBip39WordList_(IoGithubNovacryptoBip39WordListMapNormalization *self, id<IoGithubNovacryptoBip39WordList> wordList) {
  NSObject_init(self);
  self->normalizedMap_ = new_JavaUtilHashMap_init();
  for (jint i = 0; i < JreLShift32(1, 11); i++) {
    NSString *word = [((id<IoGithubNovacryptoBip39WordList>) nil_chk(wordList)) getWordWithInt:i];
    NSString *normalized = JavaTextNormalizer_normalizeWithJavaLangCharSequence_withJavaTextNormalizer_Form_(word, JreLoadEnum(JavaTextNormalizer_Form, NFKD));
    (void) [self->normalizedMap_ putWithId:word withId:normalized];
    (void) [self->normalizedMap_ putWithId:normalized withId:normalized];
    (void) [self->normalizedMap_ putWithId:JavaTextNormalizer_normalizeWithJavaLangCharSequence_withJavaTextNormalizer_Form_(word, JreLoadEnum(JavaTextNormalizer_Form, NFC)) withId:normalized];
  }
}

IoGithubNovacryptoBip39WordListMapNormalization *new_IoGithubNovacryptoBip39WordListMapNormalization_initWithIoGithubNovacryptoBip39WordList_(id<IoGithubNovacryptoBip39WordList> wordList) {
  J2OBJC_NEW_IMPL(IoGithubNovacryptoBip39WordListMapNormalization, initWithIoGithubNovacryptoBip39WordList_, wordList)
}

IoGithubNovacryptoBip39WordListMapNormalization *create_IoGithubNovacryptoBip39WordListMapNormalization_initWithIoGithubNovacryptoBip39WordList_(id<IoGithubNovacryptoBip39WordList> wordList) {
  J2OBJC_CREATE_IMPL(IoGithubNovacryptoBip39WordListMapNormalization, initWithIoGithubNovacryptoBip39WordList_, wordList)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoGithubNovacryptoBip39WordListMapNormalization)
