//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/BIP39/io/github/novacrypto/bip39/CharSequenceSplitter.java
//

#include "J2ObjC_source.h"
#include "io/github/novacrypto/bip39/CharSequenceSplitter.h"
#include "java/lang/CharSequence.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"

@interface IoGithubNovacryptoBip39CharSequenceSplitter () {
 @public
  jchar separator1_;
  jchar separator2_;
}

@end

@implementation IoGithubNovacryptoBip39CharSequenceSplitter

- (instancetype)initWithChar:(jchar)separator1
                    withChar:(jchar)separator2 {
  IoGithubNovacryptoBip39CharSequenceSplitter_initWithChar_withChar_(self, separator1, separator2);
  return self;
}

- (id<JavaUtilList>)splitWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence {
  JavaUtilLinkedList *list = new_JavaUtilLinkedList_init();
  jint start = 0;
  jint length = [((id<JavaLangCharSequence>) nil_chk(charSequence)) java_length];
  for (jint i = 0; i < length; i++) {
    jchar c = [charSequence charAtWithInt:i];
    if (c == separator1_ || c == separator2_) {
      [list addWithId:[charSequence subSequenceFrom:start to:i]];
      start = i + 1;
    }
  }
  [list addWithId:[charSequence subSequenceFrom:start to:length]];
  return list;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithChar:withChar:);
  methods[1].selector = @selector(splitWithJavaLangCharSequence:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "separator1_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "separator2_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "CC", "split", "LJavaLangCharSequence;", "(Ljava/lang/CharSequence;)Ljava/util/List<Ljava/lang/CharSequence;>;" };
  static const J2ObjcClassInfo _IoGithubNovacryptoBip39CharSequenceSplitter = { "CharSequenceSplitter", "io.github.novacrypto.bip39", ptrTable, methods, fields, 7, 0x10, 2, 2, -1, -1, -1, -1, -1 };
  return &_IoGithubNovacryptoBip39CharSequenceSplitter;
}

@end

void IoGithubNovacryptoBip39CharSequenceSplitter_initWithChar_withChar_(IoGithubNovacryptoBip39CharSequenceSplitter *self, jchar separator1, jchar separator2) {
  NSObject_init(self);
  self->separator1_ = separator1;
  self->separator2_ = separator2;
}

IoGithubNovacryptoBip39CharSequenceSplitter *new_IoGithubNovacryptoBip39CharSequenceSplitter_initWithChar_withChar_(jchar separator1, jchar separator2) {
  J2OBJC_NEW_IMPL(IoGithubNovacryptoBip39CharSequenceSplitter, initWithChar_withChar_, separator1, separator2)
}

IoGithubNovacryptoBip39CharSequenceSplitter *create_IoGithubNovacryptoBip39CharSequenceSplitter_initWithChar_withChar_(jchar separator1, jchar separator2) {
  J2OBJC_CREATE_IMPL(IoGithubNovacryptoBip39CharSequenceSplitter, initWithChar_withChar_, separator1, separator2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoGithubNovacryptoBip39CharSequenceSplitter)
