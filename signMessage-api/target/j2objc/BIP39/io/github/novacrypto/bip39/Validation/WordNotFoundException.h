//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/BIP39/io/github/novacrypto/bip39/Validation/WordNotFoundException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoGithubNovacryptoBip39ValidationWordNotFoundException")
#ifdef RESTRICT_IoGithubNovacryptoBip39ValidationWordNotFoundException
#define INCLUDE_ALL_IoGithubNovacryptoBip39ValidationWordNotFoundException 0
#else
#define INCLUDE_ALL_IoGithubNovacryptoBip39ValidationWordNotFoundException 1
#endif
#undef RESTRICT_IoGithubNovacryptoBip39ValidationWordNotFoundException

#if !defined (IoGithubNovacryptoBip39ValidationWordNotFoundException_) && (INCLUDE_ALL_IoGithubNovacryptoBip39ValidationWordNotFoundException || defined(INCLUDE_IoGithubNovacryptoBip39ValidationWordNotFoundException))
#define IoGithubNovacryptoBip39ValidationWordNotFoundException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaLangThrowable;
@protocol JavaLangCharSequence;

@interface IoGithubNovacryptoBip39ValidationWordNotFoundException : JavaLangException

#pragma mark Public

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)word
                    withJavaLangCharSequence:(id<JavaLangCharSequence>)suggestion1
                    withJavaLangCharSequence:(id<JavaLangCharSequence>)suggestion2;

- (id<JavaLangCharSequence>)getSuggestion1;

- (id<JavaLangCharSequence>)getSuggestion2;

- (id<JavaLangCharSequence>)getWord;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoGithubNovacryptoBip39ValidationWordNotFoundException)

FOUNDATION_EXPORT void IoGithubNovacryptoBip39ValidationWordNotFoundException_initWithJavaLangCharSequence_withJavaLangCharSequence_withJavaLangCharSequence_(IoGithubNovacryptoBip39ValidationWordNotFoundException *self, id<JavaLangCharSequence> word, id<JavaLangCharSequence> suggestion1, id<JavaLangCharSequence> suggestion2);

FOUNDATION_EXPORT IoGithubNovacryptoBip39ValidationWordNotFoundException *new_IoGithubNovacryptoBip39ValidationWordNotFoundException_initWithJavaLangCharSequence_withJavaLangCharSequence_withJavaLangCharSequence_(id<JavaLangCharSequence> word, id<JavaLangCharSequence> suggestion1, id<JavaLangCharSequence> suggestion2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoGithubNovacryptoBip39ValidationWordNotFoundException *create_IoGithubNovacryptoBip39ValidationWordNotFoundException_initWithJavaLangCharSequence_withJavaLangCharSequence_withJavaLangCharSequence_(id<JavaLangCharSequence> word, id<JavaLangCharSequence> suggestion1, id<JavaLangCharSequence> suggestion2);

J2OBJC_TYPE_LITERAL_HEADER(IoGithubNovacryptoBip39ValidationWordNotFoundException)

#endif

#pragma pop_macro("INCLUDE_ALL_IoGithubNovacryptoBip39ValidationWordNotFoundException")
