//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/alen/Downloads/signMessage-api/target/classes/BIP39/io/github/novacrypto/bip39/ByteUtils.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "io/github/novacrypto/bip39/ByteUtils.h"

@implementation IoGithubNovacryptoBip39ByteUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoGithubNovacryptoBip39ByteUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)next11BitsWithByteArray:(IOSByteArray *)bytes
                        withInt:(jint)offset {
  return IoGithubNovacryptoBip39ByteUtils_next11BitsWithByteArray_withInt_(bytes, offset);
}

+ (void)writeNext11WithByteArray:(IOSByteArray *)bytes
                         withInt:(jint)value
                         withInt:(jint)offset {
  IoGithubNovacryptoBip39ByteUtils_writeNext11WithByteArray_withInt_withInt_(bytes, value, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(next11BitsWithByteArray:withInt:);
  methods[2].selector = @selector(writeNext11WithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "next11Bits", "[BI", "writeNext11", "[BII" };
  static const J2ObjcClassInfo _IoGithubNovacryptoBip39ByteUtils = { "ByteUtils", "io.github.novacrypto.bip39", ptrTable, methods, NULL, 7, 0x10, 3, 0, -1, -1, -1, -1, -1 };
  return &_IoGithubNovacryptoBip39ByteUtils;
}

@end

void IoGithubNovacryptoBip39ByteUtils_init(IoGithubNovacryptoBip39ByteUtils *self) {
  NSObject_init(self);
}

IoGithubNovacryptoBip39ByteUtils *new_IoGithubNovacryptoBip39ByteUtils_init() {
  J2OBJC_NEW_IMPL(IoGithubNovacryptoBip39ByteUtils, init)
}

IoGithubNovacryptoBip39ByteUtils *create_IoGithubNovacryptoBip39ByteUtils_init() {
  J2OBJC_CREATE_IMPL(IoGithubNovacryptoBip39ByteUtils, init)
}

jint IoGithubNovacryptoBip39ByteUtils_next11BitsWithByteArray_withInt_(IOSByteArray *bytes, jint offset) {
  IoGithubNovacryptoBip39ByteUtils_initialize();
  jint skip = offset / 8;
  jint lowerBitsToRemove = (3 * 8 - 11) - (offset % 8);
  return (JreRShift32(((JreLShift32(((jint) IOSByteArray_Get(nil_chk(bytes), skip) & (jint) 0xff), 16)) | (JreLShift32(((jint) IOSByteArray_Get(bytes, skip + 1) & (jint) 0xff), 8)) | (lowerBitsToRemove < 8 ? ((jint) IOSByteArray_Get(bytes, skip + 2) & (jint) 0xff) : 0)), lowerBitsToRemove)) & ((JreLShift32(1, 11)) - 1);
}

void IoGithubNovacryptoBip39ByteUtils_writeNext11WithByteArray_withInt_withInt_(IOSByteArray *bytes, jint value, jint offset) {
  IoGithubNovacryptoBip39ByteUtils_initialize();
  jint skip = offset / 8;
  jint bitSkip = offset % 8;
  {
    jbyte firstValue = IOSByteArray_Get(nil_chk(bytes), skip);
    jbyte toWrite = (jbyte) (JreRShift32(value, (3 + bitSkip)));
    *IOSByteArray_GetRef(bytes, skip) = (jbyte) (firstValue | toWrite);
  }
  {
    jbyte valueInByte = IOSByteArray_Get(bytes, skip + 1);
    jint i = 5 - bitSkip;
    jbyte toWrite = (jbyte) (i > 0 ? (JreLShift32(value, i)) : (JreRShift32(value, -i)));
    *IOSByteArray_GetRef(bytes, skip + 1) = (jbyte) (valueInByte | toWrite);
  }
  if (bitSkip >= 6) {
    jbyte valueInByte = IOSByteArray_Get(bytes, skip + 2);
    jbyte toWrite = (jbyte) (JreLShift32(value, 13 - bitSkip));
    *IOSByteArray_GetRef(bytes, skip + 2) = (jbyte) (valueInByte | toWrite);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoGithubNovacryptoBip39ByteUtils)
